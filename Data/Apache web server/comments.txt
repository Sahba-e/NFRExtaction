c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:1 - 27

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_expires.c
 * version 0.0.11
 * status beta
 *
 * Andrew Wilson <Andrew.Wilson@cm.cf.ac.uk> 26.Jan.96
 *
 * This module allows you to control the form of the Expires: header
 * that Apache issues for each access. Directives can appear in
 * configuration files or in .htaccess files so expiry semantics can
 * be defined on a per-directory basis.
 *
 * DIRECTIVE SYNTAX
 *
 * Valid directives are:
 *
 * ExpiresActive on | off
 * ExpiresDefault <code><seconds>
 * ExpiresByType type/encoding <code><seconds>
 *
 * Valid values for <code> are:
 *
 * 'M' expires header shows file modification date + <seconds>
 * 'A' expires header shows access time + <seconds>
 *
 * [I'm not sure which of these is best under different
 * circumstances, I guess it's for other people to explore.
 * The effects may be indistinguishable for a number of cases]
 *
 * <seconds> should be an integer value [acceptable to atoi()]
 *
 * There is NO space between the <code> and <seconds>.
 *
 * For example, a directory which contains information which changes
 * frequently might contain:
 *
 * # reports generated by cron every hour. don't let caches
 * # hold onto stale information
 * ExpiresDefault M3600
 *
 * Another example, our html pages can change all the time, the gifs
 * tend not to change often:
 *
 * # pages are hot (1 week), images are cold (1 month)
 * ExpiresByType text/html A604800
 * ExpiresByType image/gif A2592000
 *
 * Expires can be turned on for all URLs on the server by placing the
 * following directive in a conf file:
 *
 * ExpiresActive on
 *
 * ExpiresActive can also appear in .htaccess files, enabling the
 * behaviour to be turned on or off for each chosen directory.
 *
 * # turn off Expires behaviour in this directory
 * # and subdirectories
 * ExpiresActive off
 *
 * Directives defined for a directory are valid in subdirectories
 * unless explicitly overridden by new directives in the subdirectory
 * .htaccess files.
 *
 * ALTERNATIVE DIRECTIVE SYNTAX
 *
 * Directives can also be defined in a more readable syntax of the form:
 *
 * ExpiresDefault "e;<base> [plus] {<num> <type>}*"e;
 * ExpiresByType type/encoding "e;<base> [plus] {<num> <type>}*"e;
 *
 * where <base> is one of:
 * access
 * now equivalent to 'access'
 * modification
 *
 * where the 'plus' keyword is optional
 *
 * where <num> should be an integer value [acceptable to atoi()]
 *
 * where <type> is one of:
 * years
 * months
 * weeks
 * days
 * hours
 * minutes
 * seconds
 *
 * For example, any of the following directives can be used to make
 * documents expire 1 month after being accessed, by default:
 *
 * ExpiresDefault "e;access plus 1 month"e;
 * ExpiresDefault "e;access plus 4 weeks"e;
 * ExpiresDefault "e;access plus 30 days"e;
 *
 * The expiry time can be fine-tuned by adding several '<num> <type>'
 * clauses:
 *
 * ExpiresByType text/html "e;access plus 1 month 15 days 2 hours"e;
 * ExpiresByType image/gif "e;modification plus 5 hours 3 minutes"e;
 *
 * ---
 *
 * Change-log:
 * 29.Jan.96 Hardened the add_* functions. Server will now bail out
 * if bad directives are given in the conf files.
 * 02.Feb.96 Returns DECLINED if not 'ExpiresActive on', giving other
 * expires-aware modules a chance to play with the same
 * directives. [Michael Rutman]
 * 03.Feb.96 Call tzset() before localtime(). Trying to get the module
 * to work properly in non GMT timezones.
 * 12.Feb.96 Modified directive syntax to allow more readable commands:
 * ExpiresDefault "e;now plus 10 days 20 seconds"e;
 * ExpiresDefault "e;access plus 30 days"e;
 * ExpiresDefault "e;modification plus 1 year 10 months 30 days"e;
 * 13.Feb.96 Fix call to table_get() with NULL 2nd parameter [Rob Hartill]
 * 19.Feb.96 Call gm_timestr_822() to get time formatted correctly, can't
 * rely on presence of HTTP_TIME_FORMAT in Apache 1.1+.
 * 21.Feb.96 This version (0.0.9) reverses assumptions made in 0.0.8
 * about star/star handlers. Reverting to 0.0.7 behaviour.
 * 08.Jun.96 allows ExpiresDefault to be used with responses that use
 * the DefaultType by not DECLINING, but instead skipping
 * the table_get check and then looking for an ExpiresDefault.
 * [Rob Hartill]
 * 04.Nov.96 'const' definitions added.
 *
 * TODO
 * add support for Cache-Control: max-age=20 from the HTTP/1.1
 * proposal (in this case, a ttl of 20 seconds) [ask roy]
 * add per-file expiry and explicit expiry times - duplicates some
 * of the mod_cern_meta.c functionality. eg:
 * ExpiresExplicit index.html "e;modification plus 30 days"e;
 *
 * BUGS
 * Hi, welcome to the internet.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1 - 27

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 ** This program is based on ZeusBench V1.0 written by Adam Twiss
 ** which is Copyright (c) 1996 by Zeus Technology Ltd. http://www.zeustech.net/
 **
 ** This software is provided "e;as is"e; and any express or implied waranties,
 ** including but not limited to, the implied warranties of merchantability and
 ** fitness for a particular purpose are disclaimed. In no event shall
 ** Zeus Technology Ltd. be liable for any direct, indirect, incidental, special,
 ** exemplary, or consequential damaged (including, but not limited to,
 ** procurement of substitute good or services; loss of use, data, or profits;
 ** or business interruption) however caused and on theory of liability. Whether
 ** in contract, strict liability or tort (including negligence or otherwise)
 ** arising in any way out of the use of this software, even if advised of the
 ** possibility of such damage.
 **
 */

/*
 ** HISTORY:
 ** - Originally written by Adam Twiss <adam@zeus.co.uk>, March 1996
 ** with input from Mike Belshe <mbelshe@netscape.com> and
 ** Michael Campanella <campanella@stevms.enet.dec.com>
 ** - Enhanced by Dean Gaudet <dgaudet@apache.org>, November 1997
 ** - Cleaned up by Ralf S. Engelschall <rse@apache.org>, March 1998
 ** - POST and verbosity by Kurt Sussman <kls@merlot.com>, August 1998
 ** - HTML table output added by David N. Welton <davidw@prosa.it>, January 1999
 ** - Added Cookie, Arbitrary header and auth support. <dirkx@webweaving.org>, April 1999
 ** Version 1.3d
 ** - Increased version number - as some of the socket/error handling has
 ** fundamentally changed - and will give fundamentally different results
 ** in situations where a server is dropping requests. Therefore you can
 ** no longer compare results of AB as easily. Hence the inc of the version.
 ** They should be closer to the truth though. Sander & <dirkx@covalent.net>, End 2000.
 ** - Fixed proxy functionality, added median/mean statistics, added gnuplot
 ** output option, added _experimental/rudimentary_ SSL support. Added
 ** confidence guestimators and warnings. Sander & <dirkx@covalent.net>, End 2000
 ** - Fixed serious int overflow issues which would cause realistic (longer
 ** than a few minutes) run's to have wrong (but believable) results. Added
 ** trapping of connection errors which influenced measurements.
 ** Contributed by Sander Temme, Early 2001
 ** Version 1.3e
 ** - Changed timeout behavour during write to work whilst the sockets
 ** are filling up and apr_write() does writes a few - but not all.
 ** This will potentially change results. <dirkx@webweaving.org>, April 2001
 ** Version 2.0.36-dev
 ** Improvements to concurrent processing:
 ** - Enabled non-blocking connect()s.
 ** - Prevent blocking calls to apr_socket_recv() (thereby allowing AB to
 ** manage its entire set of socket descriptors).
 ** - Any error returned from apr_socket_recv() that is not EAGAIN or EOF
 ** is now treated as fatal.
 ** Contributed by Aaron Bannert, April 24, 2002
 **
 ** Version 2.0.36-2
 ** Internalized the version string - this string is part
 ** of the Agent: header and the result output.
 **
 ** Version 2.0.37-dev
 ** Adopted SSL code by Madhu Mathihalli <madhusudan_mathihalli@hp.com>
 ** [PATCH] ab with SSL support Posted Wed, 15 Aug 2001 20:55:06 GMT
 ** Introduces four 'if (int == value)' tests per non-ssl request.
 **
 ** Version 2.0.40-dev
 ** Switched to the new abstract pollset API, allowing ab to
 ** take advantage of future apr_pollset_t scalability improvements.
 ** Contributed by Brian Pane, August 31, 2002
 **
 ** Version 2.3
 ** SIGINT now triggers output_results().
 ** Contributed by colm, March 30, 2006
 **/

/* Note: this version string should start with \d+[\d\.]* and be a valid
 * string for an HTTP Agent: header when prefixed with 'ApacheBench/'.
 * It should reflect the version of AB - and not that of the apache server
 * it happens to accompany. And it should be updated or changed whenever
 * the results are no longer fundamentally comparable to the results of
 * a previous version of ab. Either due to a change in the logic of
 * ab - or to due to a change in the distribution it is compiled with
 * (such as an APR change in for example blocking).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2912 - 24

/* Make sure caching works - Vary should handle HTTP/1.1, but for
 * HTTP/1.0, we can't allow caching at all.
 */

 /* XXX: Note that we only set r->no_cache to 1, which causes
 * Expires: <now> to be added, when responding to a HTTP/1.0
 * client. If we return the response to a 1.1 client, we do not
 * add Expires <now>, because doing so would degrade 1.1 cache
 * performance by preventing re-use of the response without prior
 * revalidation. On the other hand, if the 1.1 client is a proxy
 * which was itself contacted by a 1.0 client, or a proxy cache
 * which can be contacted later by 1.0 clients, then we currently
 * rely on this 1.1 proxy to add the Expires: <now> when it
 * forwards the response.
 *
 * XXX: TODO: Find out if the 1.1 spec requires proxies and
 * tunnels to add Expires: <now> when forwarding the response to
 * 1.0 clients. I (kh) recall it is rather vague on this point.
 * Testing actual 1.1 proxy implementations would also be nice. If
 * Expires: <now> is not added by proxies then we need to always
 * include Expires: <now> ourselves to ensure correct caching, but
 * this would degrade HTTP/1.1 cache efficiency unless we also add
 * Cache-Control: max-age=N, which we currently don't.
 *
 * Roy: No, we are not going to screw over HTTP future just to
 * ensure that people who can't be bothered to upgrade their
 * clients will always receive perfect server-side negotiation.
 * Hell, those clients are sending bogus accept headers anyway.
 *
 * Manual setting of cache-control/expires always overrides this
 * automated kluge, on purpose.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:1 - 23

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Author: mod_file_cache by Bill Stoddard <stoddard apache.org>
 * Based on mod_mmap_static by Dean Gaudet <dgaudet arctic.org>
 *
 * v0.01: initial implementation
 */

/*
 Documentation:

 Some sites have a set of static files that are really busy, and
 change infrequently (or even on a regular schedule). Save time
 by caching open handles to these files. This module, unlike
 mod_mmap_static, caches open file handles, not file content.
 On systems (like Windows) with heavy system call overhead and
 that have an efficient sendfile implementation, caching file handles
 offers several advantages over caching content. First, the file system
 can manage the memory, allowing infrequently hit cached files to
 be paged out. Second, since caching open handles does not consume
 significant resources, it will be possible to enable an AutoLoadCache
 feature where static files are dynamically loaded in the cache
 as the server runs. On systems that have file change notification,
 this module can be enhanced to automatically garbage collect
cached files that change on disk.

 This module should work on Unix systems that have sendfile. Place
 cachefile directives into your configuration to direct files to
 be cached.

 cachefile /path/to/file1
 cachefile /path/to/file2
 ...

 These files are only cached when the server is restarted, so if you
 change the list, or if the files are changed, then you'll need to
 restart the server.

 To reiterate that point: if the files are modified *in place*
 without restarting the server you may end up serving requests that
 are completely bogus. You should update files by unlinking the old
 copy and putting a new copy in place.

 There's no such thing as inheriting these files across vhosts or
 whatever... place the directives in the main server only.

 Known problems:

 Don't use Alias or RewriteRule to move these files around... unless
 you feel like paying for an extra stat() on each request. This is
 a deficiency in the Apache API that will hopefully be solved some day.
 The file will be served out of the file handle cache, but there will be
 an extra stat() that's a waste.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:43 - 23

/* We are using thread_index (the index into the scoreboard), because we
 * cannot guarantee the thread_id will be an integer.
 *
 * This code looks like it won't give a unique ID with the new thread logic.
 * It will. The reason is, we don't increment the counter in a thread_safe
 * manner. Because the thread_index is also in the unique ID now, this does
 * not matter. In order for the id to not be unique, the same thread would
 * have to get the same counter twice in the same second.
 */

/* Comments:
 *
 * We want an identifier which is unique across all hits, everywhere.
 * "e;everywhere"e; includes multiple httpd instances on the same machine, or on
 * multiple machines. Essentially "e;everywhere"e; should include all possible
 * httpds across all servers at a particular "e;site"e;. We make some assumptions
 * that if the site has a cluster of machines then their time is relatively
 * synchronized. We also assume that the first address returned by a
 * gethostbyname (gethostname()) is unique across all the machines at the
 * "e;site"e;.
 *
 * The root is assumed to absolutely uniquely identify this one child
 * from all other currently running children on all servers (including
 * this physical server if it is running multiple httpds) from each
 * other.
 *
 * The stamp and counter are used to distinguish all hits for a
 * particular root. The stamp is updated using r->request_time,
 * saving cpu cycles. The counter is never reset, and is used to
 * permit up to 64k requests in a single second by a single child.
 *
 * The 144-bits of unique_id_rec are encoded using the alphabet
 * [A-Za-z0-9@-], resulting in 24 bytes of printable characters. That is then
 * stuffed into the environment variable UNIQUE_ID so that it is available to
 * other modules. The alphabet choice differs from normal base64 encoding
 * [A-Za-z0-9+/] because + and / are special characters in URLs and we want to
 * make it easy to use UNIQUE_ID in URLs.
 *
 * Note that UNIQUE_ID should be considered an opaque token by other
 * applications. No attempt should be made to dissect its internal components.
 * It is an abstraction that may change in the future as the needs of this
 * module change.
 *
 * It is highly desirable that identifiers exist for "e;eternity"e;. But future
 * needs (such as much faster webservers, or moving to a
 * multithreaded server) may dictate a need to change the contents of
 * unique_id_rec. Such a future implementation should ensure that the first
 * field is still a time_t stamp. By doing that, it is possible for a site to
 * have a "e;flag second"e; in which they stop all of their old-format servers,
 * wait one entire second, and then start all of their new-servers. This
 * procedure will ensure that the new space of identifiers is completely unique
 * from the old space. (Since the first four unencoded bytes always differ.)
 *
 * Note: previous implementations used 32-bits of IP address plus pid
 * in place of the PRNG output in the "e;root"e; field. This was
 * insufficient for IPv6-only hosts, required working DNS to determine
 * a unique IP address (fragile), and needed a [0, 1) second sleep
 * call at startup to avoid pid reuse. Use of the PRNG avoids all
 * these issues.
 */

/*
 * Sun Jun 7 05:43:49 CEST 1998 -- Alvaro
 * More comments:
 * 1) The UUencoding prodecure is now done in a general way, avoiding the problems
 * with sizes and paddings that can arise depending on the architecture. Now the
 * offsets and sizes of the elements of the unique_id_rec structure are calculated
 * in unique_id_global_init; and then used to duplicate the structure without the
 * paddings that might exist. The multithreaded server fix should be now very easy:
 * just add a new "e;tid"e; field to the unique_id_rec structure, and increase by one
 * UNIQUE_ID_REC_MAX.
 * 2) unique_id_rec.stamp has been changed from "e;time_t"e; to "e;unsigned int"e;, because
 * its size is 64bits on some platforms (linux/alpha), and this caused problems with
 * htonl/ntohl. Well, this shouldn't be a problem till year 2106.
 */

/*
 * XXX: We should have a per-thread counter and not use cur_unique_id.counter
 * XXX: in all threads, because this is bad for performance on multi-processor
 * XXX: systems: Writing to the same address from several CPUs causes cache
 * XXX: thrashing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:134 - 21

/*--------------------------------------------------------------------------*/
/* */
/* The following pseudo-prototype declarations illustrate the parameters */
/* passed to command handlers for the different types of directive */
/* syntax. If an argument was specified in the directive definition */
/* (look for "e;command_rec"e; below), it's available to the command handler */
/* via the (void *) info field in the cmd_parms argument passed to the */
/* handler (cmd->info for the examples below). */
/* */
/*--------------------------------------------------------------------------*/

/*
 * Command handler for a NO_ARGS directive. Declared in the command_rec
 * list with
 * AP_INIT_NO_ARGS("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_NO_ARGS(cmd_parms *cmd, void *mconfig);
 */

/*
 * Command handler for a RAW_ARGS directive. The "e;args"e; argument is the text
 * of the commandline following the directive itself. Declared in the
 * command_rec list with
 * AP_INIT_RAW_ARGS("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_RAW_ARGS(cmd_parms *cmd, void *mconfig,
 * const char *args);
 */

/*
 * Command handler for a FLAG directive. The single parameter is passed in
 * "e;bool"e;, which is either zero or not for Off or On respectively.
 * Declared in the command_rec list with
 * AP_INIT_FLAG("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_FLAG(cmd_parms *cmd, void *mconfig, int bool);
 */

/*
 * Command handler for a TAKE1 directive. The single parameter is passed in
 * "e;word1"e;. Declared in the command_rec list with
 * AP_INIT_TAKE1("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE1(cmd_parms *cmd, void *mconfig,
 * char *word1);
 */

/*
 * Command handler for a TAKE2 directive. TAKE2 commands must always have
 * exactly two arguments. Declared in the command_rec list with
 * AP_INIT_TAKE2("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE2(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2);
 */

/*
 * Command handler for a TAKE3 directive. Like TAKE2, these must have exactly
 * three arguments, or the parser complains and doesn't bother calling us.
 * Declared in the command_rec list with
 * AP_INIT_TAKE3("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE3(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2, char *word3);
 */

/*
 * Command handler for a TAKE12 directive. These can take either one or two
 * arguments.
 * - word2 is a NULL pointer if no second argument was specified.
 * Declared in the command_rec list with
 * AP_INIT_TAKE12("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE12(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2);
 */

/*
 * Command handler for a TAKE123 directive. A TAKE123 directive can be given,
 * as might be expected, one, two, or three arguments.
 * - word2 is a NULL pointer if no second argument was specified.
 * - word3 is a NULL pointer if no third argument was specified.
 * Declared in the command_rec list with
 * AP_INIT_TAKE123("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE123(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2, char *word3);
 */

/*
 * Command handler for a TAKE13 directive. Either one or three arguments are
 * permitted - no two-parameters-only syntax is allowed.
 * - word2 and word3 are NULL pointers if only one argument was specified.
 * Declared in the command_rec list with
 * AP_INIT_TAKE13("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE13(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2, char *word3);
 */

/*
 * Command handler for a TAKE23 directive. At least two and as many as three
 * arguments must be specified.
 * - word3 is a NULL pointer if no third argument was specified.
 * Declared in the command_rec list with
 * AP_INIT_TAKE23("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_TAKE23(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2, char *word3);
 */

/*
 * Command handler for a ITERATE directive.
 * - Handler is called once for each of n arguments given to the directive.
 * - word1 points to each argument in turn.
 * Declared in the command_rec list with
 * AP_INIT_ITERATE("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_ITERATE(cmd_parms *cmd, void *mconfig,
 * char *word1);
 */

/*
 * Command handler for a ITERATE2 directive.
 * - Handler is called once for each of the second and subsequent arguments
 * given to the directive.
 * - word1 is the same for each call for a particular directive instance (the
 * first argument).
 * - word2 points to each of the second and subsequent arguments in turn.
 * Declared in the command_rec list with
 * AP_INIT_ITERATE2("e;directive"e;, function, mconfig, where, help)
 *
 * static const char *handle_ITERATE2(cmd_parms *cmd, void *mconfig,
 * char *word1, char *word2);
 */

/*--------------------------------------------------------------------------*/
/* */
/* These routines are strictly internal to this module, and support its */
/* operation. They are not referenced by any external portion of the */
/* server. */
/* */
/*--------------------------------------------------------------------------*/

/*
 * Locate our directory configuration record for the current request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:55 - 20

/*
 * CACHE handler
 * -------------
 *
 * Can we deliver this request from the cache?
 * If yes:
 * deliver the content by installing the CACHE_OUT filter.
 * If no:
 * check whether we're allowed to try cache it
 * If yes:
 * add CACHE_SAVE filter
 * If No:
 * oh well.
 *
 * By default, the cache handler runs in the quick handler, bypassing
 * virtually all server processing and offering the cache its optimal
 * performance. In this mode, the cache bolts onto the front of the
 * server, and behaves as a discrete RFC2616 caching proxy
 * implementation.
 *
 * Under certain circumstances, an admin might want to run the cache as
 * a normal handler instead of a quick handler, allowing the cache to
 * run after the authorisation hooks, or by allowing fine control over
 * the placement of the cache in the filter chain. This option comes at
 * a performance penalty, and should only be used to achieve specific
 * caching goals where the admin understands what they are doing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1363 - 20

/*
 * Does a recursive lookup operation to try to find a user within (cached)
 * nested groups. It accepts a cache that it will use to lookup previous
 * compare attempts. We cache two kinds of compares (require group compares)
 * and (require user compares). Each compare has a different cache node:
 * require group includes the DN; require user does not because the require
 * user cache is owned by the
 *
 * DON'T CALL THIS UNLESS YOU CALLED uldap_cache_compare FIRST!!!!!
 *
 *
 * 1. Call uldap_cache_compare for each subgroupclass value to check the
 * generic, user-agnostic, cached group entry. This will create a new generic
 * cache entry if there
 * wasn't one. If nothing returns LDAP_COMPARE_TRUE skip to step 5 since we
 * have no groups.
 * 2. Lock The cache and get the generic cache entry.
 * 3. Check if there is already a subgrouplist in this generic group's cache
 * entry.
 * A. If there is, go to step 4.
 * B. If there isn't:
 * i) Use ldap_search to get the full list
 * of subgroup "e;members"e; (which may include non-group "e;members"e;).
 * ii) Use uldap_cache_compare to strip the list down to just groups.
 * iii) Lock and add this stripped down list to the cache of the generic
 * group.
 * 4. Loop through the sgl and call uldap_cache_compare (using the user info)
 * for each
 * subgroup to see if the subgroup contains the user and to get the subgroups
 * added to the
 * cache (with user-afinity, if they aren't already there).
 * A. If the user is in the subgroup, then we'll be returning
 * LDAP_COMPARE_TRUE.
 * B. if the user isn't in the subgroup (LDAP_COMPARE_FALSE via
 * uldap_cache_compare) then recursively call this function to get the
 * sub-subgroups added...
 * 5. Cleanup local allocations.
 * 6. Return the final result.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:530 - 19

/*
 * We now want to check if our cached data is still fresh. This depends
 * on a few things, in this order:
 *
 * - RFC2616 14.9.4 End to end reload, Cache-Control: no-cache. no-cache
 * in either the request or the cached response means that we must
 * perform the request unconditionally, and ignore cached content. We
 * should never reach here, but if we do, mark the content as stale,
 * as this is the best we can do.
 *
 * - RFC2616 14.32 Pragma: no-cache This is treated the same as
 * Cache-Control: no-cache.
 *
 * - RFC2616 14.9.3 Cache-Control: max-stale, must-revalidate,
 * proxy-revalidate if the max-stale request header exists, modify the
 * stale calculations below so that an object can be at most <max-stale>
 * seconds stale before we request a revalidation, _UNLESS_ a
 * must-revalidate or proxy-revalidate cached response header exists to
 * stop us doing this.
 *
 * - RFC2616 14.9.3 Cache-Control: s-maxage the origin server specifies the
 * maximum age an object can be before it is considered stale. This
 * directive has the effect of proxy|must revalidate, which in turn means
 * simple ignore any max-stale setting.
 *
 * - RFC2616 14.9.4 Cache-Control: max-age this header can appear in both
 * requests and responses. If both are specified, the smaller of the two
 * takes priority.
 *
 * - RFC2616 14.21 Expires: if this request header exists in the cached
 * entity, and it's value is in the past, it has expired.
 *
 */

 /* This value comes from the client's initial request. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1 - 19

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Modified by djm@va.pubnix.com:
 * If no TransferLog is given explicitly, decline to log.
 *
 * This is module implements the TransferLog directive (same as the
 * common log module), and additional directives, LogFormat and CustomLog.
 *
 *
 * Syntax:
 *
 * TransferLog fn Logs transfers to fn in standard log format, unless
 * a custom format is set with LogFormat
 * LogFormat format Set a log format from TransferLog files
 * CustomLog fn format
 * Log to file fn with format given by the format
 * argument
 *
 * There can be any number of TransferLog and CustomLog
 * commands. Each request will be logged to _ALL_ the
 * named files, in the appropriate format.
 *
 * If no TransferLog or CustomLog directive appears in a VirtualHost,
 * the request will be logged to the log file(s) defined outside
 * the virtual host section. If a TransferLog or CustomLog directive
 * appears in the VirtualHost section, the log files defined outside
 * the VirtualHost will _not_ be used. This makes this module compatable
 * with the CLF and config log modules, where the use of TransferLog
 * inside the VirtualHost section overrides its use outside.
 *
 * Examples:
 *
 * TransferLog logs/access_log
 * <VirtualHost>
 * LogFormat "e;... custom format ..."e;
 * TransferLog log/virtual_only
 * CustomLog log/virtual_useragents "e;%t %{user-agent}i"e;
 * </VirtualHost>
 *
 * This will log using CLF to access_log any requests handled by the
 * main server, while any requests to the virtual host will be logged
 * with the "e;... custom format..."e; to virtual_only _AND_ using
 * the custom user-agent log to virtual_useragents.
 *
 * Note that the NCSA referer and user-agent logs are easily added with
 * CustomLog:
 * CustomLog logs/referer "e;%{referer}i -> %U"e;
 * CustomLog logs/agent "e;%{user-agent}i"e;
 *
 * RefererIgnore functionality can be obtained with conditional
 * logging (SetEnvIf and CustomLog ... env=!VAR).
 *
 * But using this method allows much easier modification of the
 * log format, e.g. to log hosts along with UA:
 * CustomLog logs/referer "e;%{referer}i %U %h"e;
 *
 * The argument to LogFormat and CustomLog is a string, which can include
 * literal characters copied into the log files, and '%' directives as
 * follows:
 *
 * %...B: bytes sent, excluding HTTP headers.
 * %...b: bytes sent, excluding HTTP headers in CLF format, i.e. a '-'
 * when no bytes where sent (rather than a '0'.
 * %...{FOOBAR}C: The contents of the HTTP cookie FOOBAR
 * %...{FOOBAR}e: The contents of the environment variable FOOBAR
 * %...f: filename
 * %...h: remote host
 * %...a: remote IP-address
 * %...A: local IP-address
 * %...{Foobar}i: The contents of Foobar: header line(s) in the request
 * sent to the client.
 * %...k: number of keepalive requests served over this connection
 * %...l: remote logname (from identd, if supplied)
 * %...{Foobar}n: The contents of note "e;Foobar"e; from another module.
 * %...{Foobar}o: The contents of Foobar: header line(s) in the reply.
 * %...p: the canonical port for the server
 * %...{format}p: the canonical port for the server, or the actual local
 * or remote port
 * %...P: the process ID of the child that serviced the request.
 * %...{format}P: the process ID or thread ID of the child/thread that
 * serviced the request
 * %...r: first line of request
 * %...s: status. For requests that got internally redirected, this
 * is status of the *original* request --- %...>s for the last.
 * %...t: time, in common log format time format
 * %...{format}t: The time, in the form given by format, which should
 * be in strftime(3) format.
 * %...T: the time taken to serve the request, in seconds.
 * %...{s}T: the time taken to serve the request, in seconds, same as %T.
 * %...{us}T: the time taken to serve the request, in micro seconds, same as %D.
 * %...{ms}T: the time taken to serve the request, in milliseconds.
 * %...D: the time taken to serve the request, in micro seconds.
 * %...u: remote user (from auth; may be bogus if return status (%s) is 401)
 * %...U: the URL path requested.
 * %...v: the configured name of the server (i.e. which virtual host?)
 * %...V: the server name according to the UseCanonicalName setting
 * %...m: the request method
 * %...H: the request protocol
 * %...q: the query string prepended by "e;?"e;, or empty if no query string
 * %...X: Status of the connection.
 * 'X' = connection aborted before the response completed.
 * '+' = connection may be kept alive after the response is sent.
 * '-' = connection will be closed after the response is sent.
 * (This directive was %...c in late versions of Apache 1.3, but
 * this conflicted with the historical ssl %...{var}c syntax.)
 * %...L: Log-Id of the Request (or '-' if none)
 * %...{c}L: Log-Id of the Connection (or '-' if none)
 *
 * The '...' can be nothing at all (e.g. "e;%h %u %r %s %b"e;), or it can
 * indicate conditions for inclusion of the item (which will cause it
 * to be replaced with '-' if the condition is not met). Note that
 * there is no escaping performed on the strings from %r, %...i and
 * %...o; some with long memories may remember that I thought this was
 * a bad idea, once upon a time, and I'm still not comfortable with
 * it, but it is difficult to see how to "e;do the right thing"e; with all
 * of '%..i', unless we URL-escape everything and break with CLF.
 *
 * The forms of condition are a list of HTTP status codes, which may
 * or may not be preceded by '!'. Thus, '%400,501{User-agent}i' logs
 * User-agent: on 400 errors and 501 errors (Bad Request, Not
 * Implemented) only; '%!200,304,302{Referer}i' logs Referer: on all
 * requests which did *not* return some sort of normal status.
 *
 * The default LogFormat reproduces CLF; see below.
 *
 * The way this is supposed to work with virtual hosts is as follows:
 * a virtual host can have its own LogFormat, or its own TransferLog.
 * If it doesn't have its own LogFormat, it inherits from the main
 * server. If it doesn't have its own TransferLog, it writes to the
 * same descriptor (meaning the same process for "e;| ..."e;).
 *
 * --- rst */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:1 - 18

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_cern_meta.c
 * version 0.1.0
 * status beta
 *
 * Andrew Wilson <Andrew.Wilson@cm.cf.ac.uk> 25.Jan.96
 *
 * *** IMPORTANT ***
 * This version of mod_cern_meta.c controls Meta File behaviour on a
 * per-directory basis. Previous versions of the module defined behaviour
 * on a per-server basis. The upshot is that you'll need to revisit your
 * configuration files in order to make use of the new module.
 * ***
 *
 * Emulate the CERN HTTPD Meta file semantics. Meta files are HTTP
 * headers that can be output in addition to the normal range of
 * headers for each file accessed. They appear rather like the Apache
 * .asis files, and are able to provide a crude way of influencing
 * the Expires: header, as well as providing other curiosities.
 * There are many ways to manage meta information, this one was
 * chosen because there is already a large number of CERN users
 * who can exploit this module. It should be noted that there are probably
 * more sensitive ways of managing the Expires: header specifically.
 *
 * The module obeys the following directives, which can appear
 * in the server's .conf files and in .htaccess files.
 *
 * MetaFiles <on|off>
 *
 * turns on|off meta file processing for any directory.
 * Default value is off
 *
 * # turn on MetaFiles in this directory
 * MetaFiles on
 *
 * MetaDir <directory name>
 *
 * specifies the name of the directory in which Apache can find
 * meta information files. The directory is usually a 'hidden'
 * subdirectory of the directory that contains the file being
 * accessed. eg:
 *
 * # .meta files are in the *same* directory as the
 * # file being accessed
 * MetaDir .
 *
 * the default is to look in a '.web' subdirectory. This is the
 * same as for CERN 3.+ webservers and behaviour is the same as
 * for the directive:
 *
 * MetaDir .web
 *
 * MetaSuffix <meta file suffix>
 *
 * specifies the file name suffix for the file containing the
 * meta information. eg:
 *
 * # our meta files are suffixed with '.cern_meta'
 * MetaSuffix .cern_meta
 *
 * the default is to look for files with the suffix '.meta'. This
 * behaviour is the same as for the directive:
 *
 * MetaSuffix .meta
 *
 * When accessing the file
 *
 * DOCUMENT_ROOT/somedir/index.html
 *
 * this module will look for the file
 *
 * DOCUMENT_ROOT/somedir/.web/index.html.meta
 *
 * and will use its contents to generate additional MIME header
 * information.
 *
 * For more information on the CERN Meta file semantics see:
 *
 * http://www.w3.org/hypertext/WWW/Daemon/User/Config/General.html#MetaDir
 *
 * Change-log:
 * 29.Jan.96 pfopen/pfclose instead of fopen/fclose
 * DECLINE when real file not found, we may be checking each
 * of the index.html/index.shtml/index.htm variants and don't
 * need to report missing ones as spurious errors.
 * 31.Jan.96 log_error reports about a malformed .meta file, rather
 * than a script error.
 * 20.Jun.96 MetaFiles <on|off> default off, added, so that module
 * can be configured per-directory. Prior to this the module
 * was running for each request anywhere on the server, naughty..
 * 29.Jun.96 All directives made per-directory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1 - 18

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_mime_magic: MIME type lookup via file magic numbers
 * Copyright (c) 1996-1997 Cisco Systems, Inc.
 *
 * This software was submitted by Cisco Systems to the Apache Software Foundation in July
 * 1997. Future revisions and derivatives of this source code must
 * acknowledge Cisco Systems as the original contributor of this module.
 * All other licensing and usage conditions are those of the Apache Software Foundation.
 *
 * Some of this code is derived from the free version of the file command
 * originally posted to comp.sources.unix. Copyright info for that program
 * is included below as required.
 * ---------------------------------------------------------------------------
 * - Copyright (c) Ian F. Darwin, 1987. Written by Ian F. Darwin.
 *
 * This software is not subject to any license of the American Telephone and
 * Telegraph Company or of the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on any
 * computer system, and to alter it and redistribute it freely, subject to
 * the following restrictions:
 *
 * 1. The author is not responsible for the consequences of use of this
 * software, no matter how awful, even if they arise from flaws in it.
 *
 * 2. The origin of this software must not be misrepresented, either by
 * explicit claim or by omission. Since few users ever read sources, credits
 * must appear in the documentation.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 * misrepresented as being the original software. Since few users ever read
 * sources, credits must appear in the documentation.
 *
 * 4. This notice may not be removed or altered.
 * -------------------------------------------------------------------------
 *
 * For compliance with Mr Darwin's terms: this has been very significantly
 * modified from the free "e;file"e; command.
 * - all-in-one file for compilation convenience when moving from one
 * version of Apache to the next.
 * - Memory allocation is done through the Apache API's apr_pool_t structure.
 * - All functions have had necessary Apache API request or server
 * structures passed to them where necessary to call other Apache API
 * routines. (i.e. usually for logging, files, or memory allocation in
 * itself or a called function.)
 * - struct magic has been converted from an array to a single-ended linked
 * list because it only grows one record at a time, it's only accessed
 * sequentially, and the Apache API has no equivalent of realloc().
 * - Functions have been changed to get their parameters from the server
 * configuration instead of globals. (It should be reentrant now but has
 * not been tested in a threaded environment.)
 * - Places where it used to print results to stdout now saves them in a
 * list where they're used to set the MIME type in the Apache request
 * record.
 * - Command-line flags have been removed since they will never be used here.
 *
 * Ian Kluft <ikluft@cisco.com>
 * Engineering Information Framework
 * Central Engineering
 * Cisco Systems, Inc.
 * San Jose, CA, USA
 *
 * Initial installation July/August 1996
 * Misc bug fixes May 1997
 * Submission to Apache Software Foundation July 1997
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2599 - 17

/* cache filters
 * XXX The cache filters need to run right after the handlers and before
 * any other filters. Consider creating AP_FTYPE_CACHE for this purpose.
 *
 * Depending on the type of request (subrequest / main request) they
 * need to be run before AP_FTYPE_CONTENT_SET / after AP_FTYPE_CONTENT_SET
 * filters. Thus create two filter handles for each type:
 * cache_save_filter_handle / cache_out_filter_handle to be used by
 * main requests and
 * cache_save_subreq_filter_handle / cache_out_subreq_filter_handle
 * to be run by subrequest
 */
 /*
 * CACHE is placed into the filter chain at an admin specified location,
 * and when the cache_handler is run, the CACHE filter is swapped with
 * the CACHE_OUT filter, or CACHE_SAVE filter as appropriate. This has
 * the effect of offering optional fine control of where the cache is
 * inserted into the filter chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1 - 16

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
** DAV extension module for Apache 2.0.*
** - Property database handling (repository-independent)
**
** NOTES:
**
** PROPERTY DATABASE
**
** This version assumes that there is a per-resource database provider
** to record properties. The database provider decides how and where to
** store these databases.
**
** The DBM keys for the properties have the following form:
**
** namespace "e;:"e; propname
**
** For example: 5:author
**
** The namespace provides an integer index into the namespace table
** (see below). propname is simply the property name, without a namespace
** prefix.
**
** A special case exists for properties that had a prefix starting with
** "e;xml"e;. The XML Specification reserves these for future use. mod_dav
** stores and retrieves them unchanged. The keys for these properties
** have the form:
**
** "e;:"e; propname
**
** The propname will contain the prefix and the property name. For
** example, a key might be "e;:xmlfoo:name"e;
**
** The "e;:name"e; style will also be used for properties that do not
** exist within a namespace.
**
** The DBM values consist of two null-terminated strings, appended
** together (the null-terms are retained and stored in the database).
** The first string is the xml:lang value for the property. An empty
** string signifies that a lang value was not in context for the value.
** The second string is the property value itself.
**
**
** NAMESPACE TABLE
**
** The namespace table is an array that lists each of the namespaces
** that are in use by the properties in the given propdb. Each entry
** in the array is a simple URI.
**
** For example: http://www.foo.bar/standards/props/
**
** The prefix used for the property is stripped and the URI for it
** is entered into the namespace table. Also, any namespaces used
** within the property value will be entered into the table (and
** stripped from the child elements).
**
** The namespaces are stored in the DBM database under the "e;METADATA"e; key.
**
**
** STRIPPING NAMESPACES
**
** Within the property values, the namespace declarations (xmlns...)
** are stripped. Each element and attribute will have its prefix removed
** and a new prefix inserted.
**
** This must be done so that we can return multiple properties in a
** PROPFIND which may have (originally) used conflicting prefixes. For
** that case, we must bind all property value elements to new namespace
** values.
**
** This implies that clients must NOT be sensitive to the namespace
** prefix used for their properties. It WILL change when the properties
** are returned (we return them as "e;ns<index>"e;, e.g. "e;ns5"e;). Also, the
** property value can contain ONLY XML elements and CDATA. PI and comment
** elements will be stripped. CDATA whitespace will be preserved, but
** whitespace within element tags will be altered. Attribute ordering
** may be altered. Element and CDATA ordering will be preserved.
**
**
** ATTRIBUTES ON PROPERTY NAME ELEMENTS
**
** When getting/setting properties, the XML used looks like:
**
** <prop>
** <propname1>value</propname1>
** <propname2>value</propname1>
** </prop>
**
** This implementation (mod_dav) DOES NOT save any attributes that are
** associated with the <propname1> element. The property value is deemed
** to be only the contents ("e;value"e; in the above example).
**
** We do store the xml:lang value (if any) that applies to the context
** of the <propname1> element. Whether the xml:lang attribute is on
** <propname1> itself, or from a higher level element, we will store it
** with the property value.
**
**
** VERSIONING
**
** The DBM db contains a key named "e;METADATA"e; that holds database-level
** information, such as the namespace table. The record also contains the
** db's version number as the very first 16-bit value. This first number
** is actually stored as two single bytes: the first byte is a "e;major"e;
** version number. The second byte is a "e;minor"e; number.
**
** If the major number is not what mod_dav expects, then the db is closed
** immediately and an error is returned. A minor number change is
** acceptable -- it is presumed that old/new dav_props.c can deal with
** the database format. For example, a newer dav_props might update the
** minor value and append information to the end of the metadata record
** (which would be ignored by previous versions).
**
**
** ISSUES:
**
** At the moment, for the dav_get_allprops() and dav_get_props() functions,
** we must return a set of xmlns: declarations for ALL known namespaces
** in the file. There isn't a way to filter this because we don't know
** which are going to be used or not. Examining property names is not
** sufficient because the property values could use entirely different
** namespaces.
**
** ==> we must devise a scheme where we can "e;garbage collect"e; the namespace
** entries from the property database.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:683 - 15

/*
 * client list code
 *
 * Each client is assigned a number, which is transferred in the opaque
 * field of the WWW-Authenticate and Authorization headers. The number
 * is just a simple counter which is incremented for each new client.
 * Clients can't forge this number because it is hashed up into the
 * server nonce, and that is checked.
 *
 * The clients are kept in a simple hash table, which consists of an
 * array of client_entry's, each with a linked list of entries hanging
 * off it. The client's number modulo the size of the array gives the
 * bucket number.
 *
 * The clients are garbage collected whenever a new client is allocated
 * but there is not enough space left in the shared memory segment. A
 * simple semi-LRU is used for this: whenever a client entry is accessed
 * it is moved to the beginning of the linked list in its bucket (this
 * also makes for faster lookups for current clients). The garbage
 * collecter then just removes the oldest entry (i.e. the one at the
 * end of the list) in each bucket.
 *
 * The main advantages of the above scheme are that it's easy to implement
 * and it keeps the hash table evenly balanced (i.e. same number of entries
 * in each bucket). The major disadvantage is that you may be throwing
 * entries out which are in active use. This is not tragic, as these
 * clients will just be sent a new client id (opaque field) and nonce
 * with a stale=true (i.e. it will just look like the nonce expired,
 * thereby forcing an extra round trip). If the shared memory segment
 * has enough headroom over the current client set size then this should
 * not occur too often.
 *
 * To help tune the size of the shared memory segment (and see if the
 * above algorithm is really sufficient) a set of counters is kept
 * indicating the number of clients held, the number of garbage collected
 * clients, and the number of erroneously purged clients. These are printed
 * out at each garbage collection run. Note that access to the counters is
 * not synchronized because they are just indicaters, and whether they are
 * off by a few doesn't matter; and for the same reason no attempt is made
 * to guarantee the num_renewed is correct in the face of clients spoofing
 * the opaque field.
 */

/*
 * Get the client given its client number (the key). Returns the entry,
 * or NULL if it's not found.
 *
 * Access to the list itself is synchronized via locks. However, access
 * to the entry returned by get_client() is NOT synchronized. This means
 * that there are potentially problems if a client uses multiple,
 * simultaneous connections to access url's within the same protection
 * space. However, these problems are not new: when using multiple
 * connections you have no guarantee of the order the requests are
 * processed anyway, so you have problems with the nonce-count and
 * one-time nonces anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1591 - 15

/*
 * CACHE_REMOVE_URL filter
 * -----------------------
 *
 * This filter gets added in the quick handler every time the CACHE_SAVE filter
 * gets inserted. Its purpose is to remove a confirmed stale cache entry from
 * the cache.
 *
 * CACHE_REMOVE_URL has to be a protocol filter to ensure that is run even if
 * the response is a canned error message, which removes the content filters
 * and thus the CACHE_SAVE filter from the chain.
 *
 * CACHE_REMOVE_URL expects cache request rec within its context because the
 * request this filter runs on can be different from the one whose cache entry
 * should be removed, due to internal redirects.
 *
 * Note that CACHE_SAVE_URL (as a content-set filter, hence run before the
 * protocol filters) will remove this filter if it decides to cache the file.
 * Therefore, if this filter is left in, it must mean we need to toss any
 * existing files.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1705 - 14

/*
 * CACHE filter
 * ------------
 *
 * This filter can be optionally inserted into the filter chain by the admin as
 * a marker representing the precise location within the filter chain where
 * caching is to be performed.
 *
 * When the filter chain is set up in the non-quick version of the URL handler,
 * the CACHE filter is replaced by the CACHE_OUT or CACHE_SAVE filter,
 * effectively inserting the caching filters at the point indicated by the
 * admin. The CACHE filter is then removed.
 *
 * This allows caching to be performed before the content is passed to the
 * INCLUDES filter, or to a filter that might perform transformations unique
 * to the specific request and that would otherwise be non-cacheable.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1 - 14

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Apache example_hooks module. Provide demonstrations of how modules do things.
 * It is not meant to be used in a production server. Since it participates
 * in all of the processing phases, it could conceivable interfere with
 * the proper operation of other modules -- particularly the ones related
 * to security.
 *
 * In the interest of brevity, all functions and structures internal to
 * this module, but which may have counterparts in *real* modules, are
 * prefixed with 'x_' instead of 'example_'.
 *
 * To use mod_example_hooks, configure the Apache build with
 * --enable-example-hooks and compile. Set up a <Location> block in your
 * configuration file like so:
 *
 * <Location /example>
 * SetHandler example-hooks-handler
 * </Location>
 *
 * When you look at that location on your server, you will see a backtrace of
 * the callbacks that have been invoked up to that point. See the ErrorLog for
 * more information on code paths that touch mod_example_hooks.
 *
 * IMPORTANT NOTES
 * ===============
 *
 * Do NOT use this module on a production server. It attaches itself to every
 * phase of the server runtime operations including startup, shutdown and
 * request processing, and produces copious amounts of logging data. This will
 * negatively affect server performance.
 *
 * Do NOT use mod_example_hooks as the basis for your own code. This module
 * implements every callback hook offered by the Apache core, and your
 * module will almost certainly not have to implement this much. If you
 * want a simple module skeleton to start development, use apxs -g.
 *
 * XXX TO DO XXX
 * =============
 *
 * * Enable HTML backtrace entries for more callbacks that are not directly
 * associated with a request
 * * Make sure every callback that posts an HTML backtrace entry does so in the * right category, so nothing gets overwritten
 * * Implement some logic to show what happens in the parent, and what in the
 * child(ren)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:206 - 14

/* The following convoluted conditional determines whether or not
 * the current connection should remain persistent after this response
 * (a.k.a. HTTP Keep-Alive) and whether or not the output message
 * body should use the HTTP/1.1 chunked transfer-coding. In English,
 *
 * IF we have not marked this connection as errored;
 * and the client isn't expecting 100-continue (PR47087 - more
 * input here could be the client continuing when we're
 * closing the request).
 * and the response body has a defined length due to the status code
 * being 304 or 204, the request method being HEAD, already
 * having defined Content-Length or Transfer-Encoding: chunked, or
 * the request version being HTTP/1.1 and thus capable of being set
 * as chunked [we know the (r->chunked = 1) side-effect is ugly];
 * and the server configuration enables keep-alive;
 * and the server configuration has a reasonable inter-request timeout;
 * and there is no maximum # requests or the max hasn't been reached;
 * and the response status does not require a close;
 * and the response generator has not already indicated close;
 * and the client did not request non-persistence (Connection: close);
 * and we haven't been configured to ignore the buggy twit
 * or they're a buggy twit coming through a HTTP/1.1 proxy
 * and the client is requesting an HTTP/1.0-style keep-alive
 * or the client claims to be HTTP/1.1 compliant (perhaps a proxy);
 * and this MPM process is not already exiting
 * THEN we can be persistent, which requires more headers be output.
 *
 * Note that the condition evaluation order is extremely important.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:510 - 14

/*
 * Support for per-directory reconfigured SSL connection parameters.
 *
 * This is implemented by forcing an SSL renegotiation with the
 * reconfigured parameter suite. But Apache's internal API processing
 * makes our life very hard here, because when internal sub-requests occur
 * we nevertheless should avoid multiple unnecessary SSL handshakes (they
 * require extra network I/O and especially time to perform).
 *
 * But the optimization for filtering out the unnecessary handshakes isn't
 * obvious and trivial. Especially because while Apache is in its
 * sub-request processing the client could force additional handshakes,
 * too. And these take place perhaps without our notice. So the only
 * possibility is to explicitly _ask_ OpenSSL whether the renegotiation
 * has to be performed or not. It has to performed when some parameters
 * which were previously known (by us) are not those we've now
 * reconfigured (as known by OpenSSL) or (in optimized way) at least when
 * the reconfigured parameter suite is stronger (more restrictions) than
 * the currently active one.
 */

 /*
 * Override of SSLCipherSuite
 *
 * We provide two options here:
 *
 * o The paranoid and default approach where we force a renegotiation when
 * the cipher suite changed in _any_ way (which is straight-forward but
 * often forces renegotiations too often and is perhaps not what the
 * user actually wanted).
 *
 * o The optimized and still secure way where we force a renegotiation
 * only if the currently active cipher is no longer contained in the
 * reconfigured/new cipher suite. Any other changes are not important
 * because it's the servers choice to select a cipher from the ones the
 * client supports. So as long as the current cipher is still in the new
 * cipher suite we're happy. Because we can assume we would have
 * selected it again even when other (better) ciphers exists now in the
 * new cipher suite. This approach is fine because the user explicitly
 * has to enable this via ``SSLOptions +OptRenegotiate''. So we do no
 * implicit optimizations.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:79 - 14

/* There is an intentional race condition in this design:
 * in a multithreaded app, one thread might be reading
 * from this cache_element to resolve a timestamp from
 * TIME_CACHE_SIZE seconds ago at the same time that
 * another thread is copying the exploded form of the
 * current time into the same cache_element. (I.e., the
 * first thread might hit this element of the ring buffer
 * just as the element is being recycled.) This can
 * also happen at the start of a new second, if a
 * reader accesses the cache_element after a writer
 * has updated cache_element.t but before the writer
 * has finished updating the whole cache_element.
 *
 * Rather than trying to prevent this race condition
 * with locks, we allow it to happen and then detect
 * and correct it. The detection works like this:
 * Step 1: Take a "e;snapshot"e; of the cache element by
 * copying it into a temporary buffer.
 * Step 2: Check whether the snapshot contains consistent
 * data: the timestamps at the start and end of
 * the cache_element should both match the 'seconds'
 * value that we computed from the input time.
 * If these three don't match, then the snapshot
 * shows the cache_element in the middle of an
 * update, and its contents are invalid.
 * Step 3: If the snapshot is valid, use it. Otherwise,
 * just give up on the cache and explode the
 * input time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1 - 13

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_auth_digest: MD5 digest authentication
 *
 * Originally by Alexei Kosut <akosut@nueva.pvt.k12.ca.us>
 * Updated to RFC-2617 by Ronald Tschalär <ronald@innovation.ch>
 * based on mod_auth, by Rob McCool and Robert S. Thau
 *
 * This module an updated version of modules/standard/mod_digest.c
 * It is still fairly new and problems may turn up - submit problem
 * reports to the Apache bug-database, or send them directly to me
 * at ronald@innovation.ch.
 *
 * Open Issues:
 * - qop=auth-int (when streams and trailer support available)
 * - nonce-format configurability
 * - Proxy-Authorization-Info header is set by this module, but is
 * currently ignored by mod_proxy (needs patch to mod_proxy)
 * - The source of the secret should be run-time directive (with server
 * scope: RSRC_CONF)
 * - shared-mem not completely tested yet. Seems to work ok for me,
 * but... (definitely won't work on Windoze)
 * - Sharing a realm among multiple servers has following problems:
 * o Server name and port can't be included in nonce-hash
 * (we need two nonce formats, which must be configured explicitly)
 * o Nonce-count check can't be for equal, or then nonce-count checking
 * must be disabled. What we could do is the following:
 * (expected < received) ? set expected = received : issue error
 * The only problem is that it allows replay attacks when somebody
 * captures a packet sent to one server and sends it to another
 * one. Should we add "e;AuthDigestNcCheck Strict"e;?
 * - expired nonces give amaya fits.
 * - MD5-sess and auth-int are not yet implemented. An incomplete
 * implementation has been removed and can be retrieved from svn history.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:1 - 13

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This module is used to load Apache modules at runtime. This means that the
 * server functionality can be extended without recompiling and even without
 * taking the server down at all. Only a HUP or AP_SIG_GRACEFUL signal
 * needs to be sent to the server to reload the dynamically loaded modules.
 *
 * To use, you'll first need to build your module as a shared library, then
 * update your configuration (httpd.conf) to get the Apache core to load the
 * module at start-up.
 *
 * The easiest way to build a module as a shared library is to use the
 * `SharedModule' command in the Configuration file, instead of `AddModule'.
 * You should also change the file extension from `.o' to `.so'. So, for
 * example, to build the status module as a shared library edit Configuration
 * and change
 * AddModule modules/standard/mod_status.o
 * to
 * SharedModule modules/standard/mod_status.so
 *
 * Run Configure and make. Now Apache's httpd binary will _not_ include
 * mod_status. Instead a shared object called mod_status.so will be build, in
 * the modules/standard directory. You can build most of the modules as shared
 * libraries like this.
 *
 * To use the shared module, move the .so file(s) into an appropriate
 * directory. You might like to create a directory called "e;modules"e; under you
 * server root for this (e.g. /usr/local/httpd/modules).
 *
 * Then edit your conf/httpd.conf file, and add LoadModule lines. For
 * example
 * LoadModule status_module modules/mod_status.so
 *
 * The first argument is the module's structure name (look at the end of the
 * module source to find this). The second option is the path to the module
 * file, relative to the server root. Put these directives right at the top
 * of your httpd.conf file.
 *
 * Now you can start Apache. A message will be logged at "e;debug"e; level to your
 * error_log to confirm that the module(s) are loaded (use "e;LogLevel debug"e;
 * directive to get these log messages).
 *
 * If you edit the LoadModule directives while the server is live you can get
 * Apache to re-load the modules by sending it a HUP or AP_SIG_GRACEFUL
 * signal as normal. You can use this to dynamically change the capability
 * of your server without bringing it down.
 *
 * Because currently there is only limited builtin support in the Configure
 * script for creating the shared library files (`.so'), please consult your
 * vendors cc(1), ld(1) and dlopen(3) manpages to find out the appropriate
 * compiler and linker flags and insert them manually into the Configuration
 * file under CFLAGS_SHLIB, LDFLAGS_SHLIB and LDFLAGS_SHLIB_EXPORT.
 *
 * If you still have problems figuring out the flags both try the paper
 * http://developer.netscape.com/library/documentation/enterprise
 * /unix/svrplug.htm#1013807
 * or install a Perl 5 interpreter on your platform and then run the command
 *
 * $ perl -V:usedl -V:ccdlflags -V:cccdlflags -V:lddlflags
 *
 * This gives you what type of dynamic loading Perl 5 uses on your platform
 * and which compiler and linker flags Perl 5 uses to create the shared object
 * files.
 *
 * Another location where you can find useful hints is the `ltconfig' script
 * of the GNU libtool 1.2 package. Search for your platform name inside the
 * various "e;case"e; constructs.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:168 - 13

/*
 makeintegerfield(L, HTTP_CONTINUE);
 makeintegerfield(L, HTTP_SWITCHING_PROTOCOLS);
 makeintegerfield(L, HTTP_PROCESSING);
 makeintegerfield(L, HTTP_OK);
 makeintegerfield(L, HTTP_CREATED);
 makeintegerfield(L, HTTP_ACCEPTED);
 makeintegerfield(L, HTTP_NON_AUTHORITATIVE);
 makeintegerfield(L, HTTP_NO_CONTENT);
 makeintegerfield(L, HTTP_RESET_CONTENT);
 makeintegerfield(L, HTTP_PARTIAL_CONTENT);
 makeintegerfield(L, HTTP_MULTI_STATUS);
 makeintegerfield(L, HTTP_ALREADY_REPORTED);
 makeintegerfield(L, HTTP_IM_USED);
 makeintegerfield(L, HTTP_MULTIPLE_CHOICES);
 makeintegerfield(L, HTTP_MOVED_PERMANENTLY);
 makeintegerfield(L, HTTP_MOVED_TEMPORARILY);
 makeintegerfield(L, HTTP_SEE_OTHER);
 makeintegerfield(L, HTTP_NOT_MODIFIED);
 makeintegerfield(L, HTTP_USE_PROXY);
 makeintegerfield(L, HTTP_TEMPORARY_REDIRECT);
 makeintegerfield(L, HTTP_PERMANENT_REDIRECT);
 makeintegerfield(L, HTTP_BAD_REQUEST);
 makeintegerfield(L, HTTP_UNAUTHORIZED);
 makeintegerfield(L, HTTP_PAYMENT_REQUIRED);
 makeintegerfield(L, HTTP_FORBIDDEN);
 makeintegerfield(L, HTTP_NOT_FOUND);
 makeintegerfield(L, HTTP_METHOD_NOT_ALLOWED);
 makeintegerfield(L, HTTP_NOT_ACCEPTABLE);
 makeintegerfield(L, HTTP_PROXY_AUTHENTICATION_REQUIRED);
 makeintegerfield(L, HTTP_REQUEST_TIME_OUT);
 makeintegerfield(L, HTTP_CONFLICT);
 makeintegerfield(L, HTTP_GONE);
 makeintegerfield(L, HTTP_LENGTH_REQUIRED);
 makeintegerfield(L, HTTP_PRECONDITION_FAILED);
 makeintegerfield(L, HTTP_REQUEST_ENTITY_TOO_LARGE);
 makeintegerfield(L, HTTP_REQUEST_URI_TOO_LARGE);
 makeintegerfield(L, HTTP_UNSUPPORTED_MEDIA_TYPE);
 makeintegerfield(L, HTTP_RANGE_NOT_SATISFIABLE);
 makeintegerfield(L, HTTP_EXPECTATION_FAILED);
 makeintegerfield(L, HTTP_UNPROCESSABLE_ENTITY);
 makeintegerfield(L, HTTP_LOCKED);
 makeintegerfield(L, HTTP_FAILED_DEPENDENCY);
 makeintegerfield(L, HTTP_UPGRADE_REQUIRED);
 makeintegerfield(L, HTTP_PRECONDITION_REQUIRED);
 makeintegerfield(L, HTTP_TOO_MANY_REQUESTS);
 makeintegerfield(L, HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE);
 makeintegerfield(L, HTTP_INTERNAL_SERVER_ERROR);
 makeintegerfield(L, HTTP_NOT_IMPLEMENTED);
 makeintegerfield(L, HTTP_BAD_GATEWAY);
 makeintegerfield(L, HTTP_SERVICE_UNAVAILABLE);
 makeintegerfield(L, HTTP_GATEWAY_TIME_OUT);
 makeintegerfield(L, HTTP_VERSION_NOT_SUPPORTED);
 makeintegerfield(L, HTTP_VARIANT_ALSO_VARIES);
 makeintegerfield(L, HTTP_INSUFFICIENT_STORAGE);
 makeintegerfield(L, HTTP_LOOP_DETECTED);
 makeintegerfield(L, HTTP_NOT_EXTENDED);
 makeintegerfield(L, HTTP_NETWORK_AUTHENTICATION_REQUIRED);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2743 - 13

/* This catches the error that a transparent type map recursively
 * selects, as the best variant, another type map which itself
 * causes transparent negotiation to be done.
 *
 * XXX: Actually, we catch this error by catching all cases of
 * type map recursion. There are some borderline recursive type
 * map arrangements which would not produce transparent
 * negotiation protocol errors or lack of cache propagation
 * problems, but such arrangements are very hard to detect at this
 * point in the control flow, so we do not bother to single them
 * out.
 *
 * Recursive type maps imply a recursive arrangement of negotiated
 * resources which is visible to outside clients, and this is not
 * supported by the transparent negotiation caching protocols, so
 * if we are to have generic support for recursive type maps, we
 * have to create some configuration setting which makes all type
 * maps non-transparent when recursion is enabled. Also, if we
 * want recursive type map support which ensures propagation of
 * type map changes into HTTP/1.1 caches that handle Vary, we
 * would have to extend the current mechanism for generating
 * variant list validators.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:1 - 13

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_userdir... implement the UserDir command. Broken away from the
 * Alias stuff for a couple of good and not-so-good reasons:
 *
 * 1) It shows a real minimal working example of how to do something like
 * this.
 * 2) I know people who are actually interested in changing this *particular*
 * aspect of server functionality without changing the rest of it. That's
 * what this whole modular arrangement is supposed to be good at...
 *
 * Modified by Alexei Kosut to support the following constructs
 * (server running at www.foo.com, request for /~bar/one/two.html)
 *
 * UserDir public_html -> ~bar/public_html/one/two.html
 * UserDir /usr/web -> /usr/web/bar/one/two.html
 * UserDir /home/ * /www -> /home/bar/www/one/two.html
 * NOTE: theses ^ ^ space only added allow it to work in a comment, ignore
 * UserDir http://x/users -> (302) http://x/users/bar/one/two.html
 * UserDir http://x/ * /y -> (302) http://x/bar/y/one/two.html
 * NOTE: here also ^ ^
 *
 * In addition, you can use multiple entries, to specify alternate
 * user directories (a la Directory Index). For example:
 *
 * UserDir public_html /usr/web http://www.xyz.com/users
 *
 * Modified by Ken Coar to provide for the following:
 *
 * UserDir disable[d] username ...
 * UserDir enable[d] username ...
 *
 * If "e;disabled"e; has no other arguments, *all* ~<username> references are
 * disabled, except those explicitly turned on with the "e;enabled"e; keyword.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1070 - 13

/* There are many possibilities here to consider:
 - Assume YYFAIL is not used. It's too flawed to consider. See
 <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
 for details. YYERROR is fine as it does not invoke this
 function.
 - If this state is a consistent state with a default action, then
 the only way this function was invoked is if the default action
 is an error action. In that case, don't check for expected
 tokens because there are none.
 - The only way there can be no lookahead present (in yychar) is if
 this state is a consistent state with a default action. Thus,
 detecting the absence of a lookahead is sufficient to determine
 that there is no unexpected or expected token to report. In that
 case, just report a simple "e;syntax error"e;.
 - Don't assume there isn't a lookahead just because this state is a
 consistent state with a default action. There might have been a
 previous inconsistent state, consistent state with a non-default
 action, or user semantic action that manipulated yychar.
 - Of course, the expected token list depends on states to have
 correct lookahead information, and it depends on the parser not
 to perform extra reductions after fetching a lookahead from the
 scanner and before detecting a syntax error. Thus, state merging
 (from LALR or IELR) and default reductions corrupt the expected
 token list. However, the list is correct for canonical LR with
 one exception: it will still contain any token that will not be
 accepted due to an error action in a later state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1 - 12

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * based on mod_tls.c - Apache SSL/TLS module for NetWare by Mike Gardiner.
 *
 * This module gives Apache the ability to do SSL/TLS with a minimum amount
 * of effort. All of the SSL/TLS logic is already on NetWare versions 5 and
 * above and is interfaced through WinSock on NetWare. As you can see in
 * the code below SSL/TLS sockets can be created with three WinSock calls.
 *
 * To load, simply place the module in the modules directory under the main
 * apache tree. Then add a "e;SecureListen"e; with two arguments. The first
 * argument is an address and/or port. The second argument is the key pair
 * name as created in ConsoleOne.
 *
 * Examples:
 *
 * SecureListen 443 "e;SSL CertificateIP"e;
 * SecureListen 123.45.67.89:443 mycert
 *
 * The module also supports RFC 2817 / TLS Upgrade for HTTP 1.1.
 * For this add a "e;NWSSLUpgradeable"e; with two arguments. The first
 * argument is an address and/or port. The second argument is the key pair
 * name as created in ConsoleOne.
 *
 * Examples:
 *
 * NWSSLUpgradeable 8080 "e;SSL CertificateIP"e;
 * NWSSLUpgradeable 123.45.67.89:8080 mycert
 * 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:949 - 12

/*
 * ret could be HTTP_NOT_MODIFIED in the case that the CGI script
 * does not set an explicit status and ap_meets_conditions, which
 * is called by ap_scan_script_header_err_brigade, detects that
 * the conditions of the requests are met and the response is
 * not modified.
 * In this case set r->status and return OK in order to prevent
 * running through the error processing stack as this would
 * break with mod_cache, if the conditions had been set by
 * mod_cache itself to validate a stale entity.
 * BTW: We circumvent the error processing stack anyway if the
 * CGI script set an explicit status code (whatever it is) and
 * the only possible values for ret here are:
 *
 * HTTP_NOT_MODIFIED (set by ap_meets_conditions)
 * HTTP_PRECONDITION_FAILED (set by ap_meets_conditions)
 * HTTP_INTERNAL_SERVER_ERROR (if something went wrong during the
 * processing of the response of the CGI script, e.g broken headers
 * or a crashed CGI process).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1615 - 12

/*
 * ret could be HTTP_NOT_MODIFIED in the case that the CGI script
 * does not set an explicit status and ap_meets_conditions, which
 * is called by ap_scan_script_header_err_brigade, detects that
 * the conditions of the requests are met and the response is
 * not modified.
 * In this case set r->status and return OK in order to prevent
 * running through the error processing stack as this would
 * break with mod_cache, if the conditions had been set by
 * mod_cache itself to validate a stale entity.
 * BTW: We circumvent the error processing stack anyway if the
 * CGI script set an explicit status code (whatever it is) and
 * the only possible values for ret here are:
 *
 * HTTP_NOT_MODIFIED (set by ap_meets_conditions)
 * HTTP_PRECONDITION_FAILED (set by ap_meets_conditions)
 * HTTP_INTERNAL_SERVER_ERROR (if something went wrong during the
 * processing of the response of the CGI script, e.g broken headers
 * or a crashed CGI process).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:1 - 11

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This module is triggered by an
 *
 * AuthGroupFile standard /path/to/file
 *
 * and the presense of a
 *
 * require group <list-of-groups>
 *
 * In an applicable limit/directory block for that method.
 *
 * If there are no AuthGroupFile directives valid for
 * the request; we DECLINED.
 *
 * If the AuthGroupFile is defined; but somehow not
 * accessible: we SERVER_ERROR (was DECLINED).
 *
 * If there are no 'require ' directives defined for
 * this request then we DECLINED (was OK).
 *
 * If there are no 'require ' directives valid for
 * this request method then we DECLINED. (was OK)
 *
 * If there are any 'require group' blocks and we
 * are not in any group - we HTTP_UNAUTHORIZE
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2514 - 11

/* XXX
 * Consider a new config directive that enables loading specific cache
 * implememtations (like mod_cache_mem, mod_cache_file, etc.).
 * Rather than using a LoadModule directive, admin would use something
 * like CacheModule mem_cache_module | file_cache_module, etc,
 * which would cause the approprpriate cache module to be loaded.
 * This is more intuitive that requiring a LoadModule directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1 - 11

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This MPM tries to fix the 'keep alive problem' in HTTP.
 *
 * After a client completes the first request, the client can keep the
 * connection open to send more requests with the same socket. This can save
 * significant overhead in creating TCP connections. However, the major
 * disadvantage is that Apache traditionally keeps an entire child
 * process/thread waiting for data from the client. To solve this problem,
 * this MPM has a dedicated thread for handling both the Listening sockets,
 * and all sockets that are in a Keep Alive status.
 *
 * The MPM assumes the underlying apr_pollset implementation is somewhat
 * threadsafe. This currently is only compatible with KQueue and EPoll. This
 * enables the MPM to avoid extra high level locking or having to wake up the
 * listener thread when a keep-alive socket needs to be sent to it.
 *
 * This MPM does not perform well on older platforms that do not have very good
 * threading, like Linux with a 2.4 kernel, but this does not matter, since we
 * require EPoll or KQueue.
 *
 * For FreeBSD, use 5.3. It is possible to run this MPM on FreeBSD 5.2.1, if
 * you use libkse (see `man libmap.conf`).
 *
 * For NetBSD, use at least 2.0.
 *
 * For Linux, you should use a 2.6 kernel, and make sure your glibc has epoll
 * support compiled in.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2595 - 11

/**
 * Read the body and parse any form found, which must be of the
 * type application/x-www-form-urlencoded.
 *
 * Name/value pairs are returned in an array, with the names as
 * strings with a maximum length of HUGE_STRING_LEN, and the
 * values as bucket brigades. This allows values to be arbitrarily
 * large.
 *
 * All url-encoding is removed from both the names and the values
 * on the fly. The names are interpreted as strings, while the
 * values are interpreted as blocks of binary data, that may
 * contain the 0 character.
 *
 * In order to ensure that resource limits are not exceeded, a
 * maximum size must be provided. If the sum of the lengths of
 * the names and the values exceed this size, this function
 * will return HTTP_REQUEST_ENTITY_TOO_LARGE.
 *
 * An optional number of parameters can be provided, if the number
 * of parameters provided exceeds this amount, this function will
 * return HTTP_REQUEST_ENTITY_TOO_LARGE. If this value is negative,
 * no limit is imposed, and the number of parameters is in turn
 * constrained by the size parameter above.
 *
 * This function honours any kept_body configuration, and the
 * original raw request body will be saved to the kept_body brigade
 * if so configured, just as ap_discard_request_body does.
 *
 * NOTE: File upload is not yet supported, but can be without change
 * to the function call.
 */

/* form parsing stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:722 - 10

/*
 * At this point we are stale, but: if we are under load, we may let
 * a significant number of stale requests through before the first
 * stale request successfully revalidates itself, causing a sudden
 * unexpected thundering herd which in turn brings angst and drama.
 *
 * So.
 *
 * We want the first stale request to go through as normal. But the
 * second and subsequent request, we must pretend to be fresh until
 * the first request comes back with either new content or confirmation
 * that the stale content is still fresh.
 *
 * To achieve this, we create a very simple file based lock based on
 * the key of the cached object. We attempt to open the lock file with
 * exclusive write access. If we succeed, woohoo! we're first, and we
 * follow the stale path to the backend server. If we fail, oh well,
 * we follow the fresh path, and avoid being a thundering herd.
 *
 * The lock lives only as long as the stale request that went on ahead.
 * If the request succeeds, the lock is deleted. If the request fails,
 * the lock is deleted, and another request gets to make a new lock
 * and try again.
 *
 * At any time, a request marked "e;no-cache"e; will force a refresh,
 * ignoring the lock, ensuring an extended lockout is impossible.
 *
 * A lock that exceeds a maximum age will be deleted, and another
 * request gets to make a new lock and try again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1697 - 10

/*
 ** To prevent a PROPFIND showing an expired locknull
 ** resource, query the lock database to force removal
 ** of both the lock entry and .locknull, if necessary..
 ** Sure, the query in PROPFIND would do this.. after
 ** the locknull resource was already included in the
 ** return.
 **
 ** NOTE: we assume the caller has opened the lock database
 ** if they have provided DAV_WALKTYPE_LOCKNULL.
 */
 /* ### we should also look into opening it read-only and
 ### eliding timed-out items from the walk, yet leaving
 ### them in the locknull database until somebody opens
 ### the thing writable.
 */
 /* ### probably ought to use has_locks. note the problem
 ### mentioned above, though... we would traverse this as
 ### a locknull, but then a PROPFIND would load the lock
 ### info, causing a timeout and the locks would not be
 ### reported. Therefore, a null resource would be returned
 ### in the PROPFIND.
 ###
 ### alternative: just load unresolved locks. any direct
 ### locks will be timed out (correct). any indirect will
 ### not (correct; consider if a parent timed out -- the
 ### timeout routines do not walk and remove indirects;
 ### even the resolve func would probably fail when it
 ### tried to find a timed-out direct lock).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1499 - 10

/* Here we deal with getting the request message body from the client.
 * Whether or not the request contains a body is signaled by the presence
 * of a non-zero Content-Length or by a Transfer-Encoding: chunked.
 *
 * Note that this is more complicated than it was in Apache 1.1 and prior
 * versions, because chunked support means that the module does less.
 *
 * The proper procedure is this:
 *
 * 1. Call ap_setup_client_block() near the beginning of the request
 * handler. This will set up all the necessary properties, and will
 * return either OK, or an error code. If the latter, the module should
 * return that error code. The second parameter selects the policy to
 * apply if the request message indicates a body, and how a chunked
 * transfer-coding should be interpreted. Choose one of
 *
 * REQUEST_NO_BODY Send 413 error if message has any body
 * REQUEST_CHUNKED_ERROR Send 411 error if body without Content-Length
 * REQUEST_CHUNKED_DECHUNK If chunked, remove the chunks for me.
 * REQUEST_CHUNKED_PASS If chunked, pass the chunk headers with body.
 *
 * In order to use the last two options, the caller MUST provide a buffer
 * large enough to hold a chunk-size line, including any extensions.
 *
 * 2. When you are ready to read a body (if any), call ap_should_client_block().
 * This will tell the module whether or not to read input. If it is 0,
 * the module should assume that there is no message body to read.
 *
 * 3. Finally, call ap_get_client_block in a loop. Pass it a buffer and its size.
 * It will put data into the buffer (not necessarily a full buffer), and
 * return the length of the input block. When it is done reading, it will
 * return 0 if EOF, or -1 if there was an error.
 * If an error occurs on input, we force an end to keepalive.
 *
 * This step also sends a 100 Continue response to HTTP/1.1 clients if appropriate.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2010 - 10

/* Below is the 'best_match' function. It returns an int, which has
 * one of the two values alg_choice or alg_list, which give the result
 * of the variant selection algorithm. alg_list means that no best
 * variant was found by the algorithm, alg_choice means that a best
 * variant was found and should be returned. The list/choice
 * terminology comes from TCN (rfc2295), but is used in a more generic
 * way here. The best variant is returned in *pbest. best_match has
 * two possible algorithms for determining the best variant: the
 * RVSA/1.0 algorithm (from RFC2296), and the standard Apache
 * algorithm. These are split out into separate functions
 * (is_variant_better_rvsa() and is_variant_better()). Selection of
 * one is through the neg->use_rvsa flag.
 *
 * The call to best_match also creates full information, including
 * language, charset, etc quality for _every_ variant. This is needed
 * for generating a correct Vary header, and can be used for the
 * Alternates header, the human-readable list responses and 406 errors.
 */

/* Firstly, the RVSA/1.0 (HTTP Remote Variant Selection Algorithm
 * v1.0) from rfc2296. This is the algorithm that goes together with
 * transparent content negotiation (TCN).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:604 - 10

/**
 * Policy for Maxage.
 *
 * If the effective maxage of the request is less than the parameter provided,
 * the request will be rejected.
 *
 * - If Cache-Control: s-maxage is less than the limit
 * - If Cache-Control: maxage is less than the limit
 * - If Expires - Date is less than the limit
 * - If none of the above, reject the request, as maxage is heuristic
 *
 * As soon as a test passes, we stop, as HTTP maxage handling follows a given
 * set of priorities (s-maxage beats maxage, maxage beats Expires).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:1 - 9

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Adapted to allow anonymous logins, just like with Anon-FTP, when
 * one gives the magic user name 'anonymous' and ones email address
 * as the password.
 *
 * Just add the following tokes to your <directory> setup:
 *
 * Anonymous magic-userid [magic-userid]...
 *
 * Anonymous_MustGiveEmail [ on | off ] default = on
 * Anonymous_LogEmail [ on | off ] default = on
 * Anonymous_VerifyEmail [ on | off ] default = off
 * Anonymous_NoUserId [ on | off ] default = off
 *
 * The magic user id is something like 'anonymous', it is NOT case sensitive.
 *
 * The MustGiveEmail flag can be used to force users to enter something
 * in the password field (like an email address). Default is on.
 *
 * Furthermore the 'NoUserID' flag can be set to allow completely empty
 * usernames in as well; this can be is convenient as a single return
 * in broken GUIs like W95 is often given by the user. The Default is off.
 *
 * Dirk.vanGulik@jrc.it; http://ewse.ceo.org; http://me-www.jrc.it/~dirkx
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:513 - 9

/*
 * Did the user indicate the precise location of the
 * CACHE_SAVE filter by inserting the CACHE filter as a
 * marker?
 *
 * If so, we get cunning and replace CACHE with the
 * CACHE_SAVE filter. This has the effect of inserting
 * the CACHE_SAVE filter at the precise location where
 * the admin wants to cache the content. All filters that
 * lie before and after the original location of the CACHE
 * filter will remain in place.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:873 - 9

/* RFC2616 13.8 Errors or Incomplete Response Cache Behavior:
 * If a cache receives a 5xx response while attempting to revalidate an
 * entry, it MAY either forward this response to the requesting client,
 * or act as if the server failed to respond. In the latter case, it MAY
 * return a previously received response unless the cached entry
 * includes the "e;must-revalidate"e; cache-control directive (see section
 * 14.9).
 *
 * This covers the case where an error was generated behind us, for example
 * by a backend server via mod_proxy.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1749 - 9

/**
 * If configured, add the status of the caching attempt to the subprocess
 * environment, and if configured, to headers in the response.
 *
 * The status is saved below the broad category of the status (hit, miss,
 * revalidate), as well as a single cache-status key. This can be used for
 * conditional logging.
 *
 * The status is optionally saved to an X-Cache header, and the detail of
 * why a particular cache entry was cached (or not cached) is optionally
 * saved to an X-Cache-Detail header. This extra detail is useful for
 * service developers who may need to know whether their Cache-Control headers
 * are working correctly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:273 - 9

/* TODO:
 * - Handle multiple-value headers better. (sort them?)
 * - Handle Case in-sensitive Values better.
 * This isn't the end of the world, since it just lowers the cache
 * hit rate, but it would be nice to fix.
 *
 * The majority are case insenstive if they are values (encoding etc).
 * Most of rfc2616 is case insensitive on header contents.
 *
 * So the better solution may be to identify headers which should be
 * treated case-sensitive?
 * HTTP URI's (3.2.3) [host and scheme are insensitive]
 * HTTP method (5.1.1)
 * HTTP-date values (3.3.1)
 * 3.7 Media Types [exerpt]
 * The type, subtype, and parameter attribute names are case-
 * insensitive. Parameter values might or might not be case-sensitive,
 * depending on the semantics of the parameter name.
 * 4.20 Except [exerpt]
 * Comparison of expectation values is case-insensitive for unquoted
 * tokens (including the 100-continue token), and is case-sensitive for
 * quoted-string expectation-extensions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:285 - 9

/* TODO:
 * - Handle multiple-value headers better. (sort them?)
 * - Handle Case in-sensitive Values better.
 * This isn't the end of the world, since it just lowers the cache
 * hit rate, but it would be nice to fix.
 *
 * The majority are case insenstive if they are values (encoding etc).
 * Most of rfc2616 is case insensitive on header contents.
 *
 * So the better solution may be to identify headers which should be
 * treated case-sensitive?
 * HTTP URI's (3.2.3) [host and scheme are insensitive]
 * HTTP method (5.1.1)
 * HTTP-date values (3.3.1)
 * 3.7 Media Types [exerpt]
 * The type, subtype, and parameter attribute names are case-
 * insensitive. Parameter values might or might not be case-sensitive,
 * depending on the semantics of the parameter name.
 * 4.20 Except [exerpt]
 * Comparison of expectation values is case-insensitive for unquoted
 * tokens (including the 100-continue token), and is case-sensitive for
 * quoted-string expectation-extensions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1362 - 9

/* This code implements a piece of the tie-breaking algorithm between
 * variants of equal quality. This piece is the treatment of variants
 * of the same base media type, but different levels. What we want to
 * return is the variant at the highest level that the client explicitly
 * claimed to accept.
 *
 * If all the variants available are at a higher level than that, or if
 * the client didn't say anything specific about this media type at all
 * and these variants just got in on a wildcard, we prefer the lowest
 * level, on grounds that that's the one that the client is least likely
 * to choke on.
 *
 * (This is all motivated by treatment of levels in HTML --- we only
 * want to give level 3 to browsers that explicitly ask for it; browsers
 * that don't, including HTTP/0.9 browsers that only get the implicit
 * "e;Accept: * / *"e; [space added to avoid confusing cpp --- no, that
 * syntax doesn't really work] should get HTML2 if available).
 *
 * (Note that this code only comes into play when we are choosing among
 * variants of equal quality, where the draft standard gives us a fair
 * bit of leeway about what to do. It ain't specified by the standard;
 * rather, it is a choice made by this server about what to do in cases
 * where the standard does not specify a unique course of action).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1861 - 9

/* rc is an intermediate response for the LIST or RETR commands */

 /*
 * RETR: 110, 125, 150, 226, 250, 421, 425, 426, 450, 451, 500, 501, 530,
 * 550 NLST: 125, 150, 226, 250, 421, 425, 426, 450, 451, 500, 501, 502,
 * 530
 */
 /* 110 Restart marker reply. */
 /* 125 Data connection already open; transfer starting. */
 /* 150 File status okay; about to open data connection. */
 /* 226 Closing data connection. */
 /* 250 Requested file action okay, completed. */
 /* 421 Service not available, closing control connection. */
 /* 425 Can't open data connection. */
 /* 426 Connection closed; transfer aborted. */
 /* 450 Requested file action not taken. */
 /* 451 Requested action aborted. Local error in processing. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 530 Not logged in. */
 /* 550 Requested action not taken. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:993 - 9

/*
 * Now close the SSL layer of the connection. We've to take
 * the TLSv1 standard into account here:
 *
 * | 7.2.1. Closure alerts
 * |
 * | The client and the server must share knowledge that the connection is
 * | ending in order to avoid a truncation attack. Either party may
 * | initiate the exchange of closing messages.
 * |
 * | close_notify
 * | This message notifies the recipient that the sender will not send
 * | any more messages on this connection. The session becomes
 * | unresumable if any connection is terminated without proper
 * | close_notify messages with level equal to warning.
 * |
 * | Either party may initiate a close by sending a close_notify alert.
 * | Any data received after a closure alert is ignored.
 * |
 * | Each party is required to send a close_notify alert before closing
 * | the write side of the connection. It is required that the other party
 * | respond with a close_notify alert of its own and close down the
 * | connection immediately, discarding any pending writes. It is not
 * | required for the initiator of the close to wait for the responding
 * | close_notify alert before closing the read side of the connection.
 *
 * This means we've to send a close notify message, but haven't to wait
 * for the close notify of the client. Actually we cannot wait for the
 * close notify of the client because some clients (including Netscape
 * 4.x) don't send one, so we would hang.
 */

 /*
 * exchange close notify messages, but allow the user
 * to force the type of handshake via SetEnvIf directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1851 - 9

/* User semantic actions sometimes alter yychar, and that requires
 that yytoken be updated with the new translation. We take the
 approach of translating immediately before every use of yytoken.
 One alternative is translating here after every semantic action,
 but that translation would be missed if the semantic action invokes
 YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
 if it invokes YYBACKUP. In the case of YYABORT or YYACCEPT, an
incorrect destructor might then be invoked immediately. In the
 case of YYERROR or YYBACKUP, subsequent parser actions might lead
 to an incorrect destructor call or verbose syntax error message
before the lookahead is translated. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:1 - 9

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * logresolve 2.0
 *
 * Tom Rathborne - tomr uunet.ca - http://www.uunet.ca/~tomr/
 * UUNET Canada, April 16, 1995
 *
 * Rewritten by David Robinson. (drtr ast.cam.ac.uk)
 * Rewritten again, and ported to APR by Colm MacCarthaigh
 *
 * Usage: logresolve [-s filename] [-c] < access_log > new_log
 *
 * Arguments:
 * -s filename name of a file to record statistics
 * -c check the DNS for a matching A record for the host.
 *
 * Notes: (For historical interest)
 *
 * To generate meaningful statistics from an HTTPD log file, it's good
 * to have the domain name of each machine that accessed your site, but
 * doing this on the fly can slow HTTPD down.
 *
 * Compiling NCSA HTTPD with the -DMINIMAL_DNS flag turns IP#->hostname
 * resolution off. Before running your stats program, just run your log
 * file through this program (logresolve) and all of your IP numbers will
 * be resolved into hostnames (where possible).
 *
 * logresolve takes an HTTPD access log (in the COMMON log file format,
 * or any other format that has the IP number/domain name as the first
 * field for that matter), and outputs the same file with all of the
 * domain names looked up. Where no domain name can be found, the IP
 * number is left in.
 *
 * To minimize impact on your nameserver, logresolve has its very own
 * internal hash-table cache. This means that each IP number will only
 * be looked up the first time it is found in the log file.
 *
 * The -c option causes logresolve to apply the same check as httpd
 * compiled with -DMAXIMUM_DNS; after finding the hostname from the IP
 * address, it looks up the IP addresses for the hostname and checks
 * that one of these matches the original address.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_limits.c:1 - 9

/**************************************************************
 * test_limits.c
 *
 * A simple program for sending abusive requests to a server, based
 * on the sioux.c exploit code that this nimrod posted (see below).
 * Roy added options for testing long header fieldsize (-t h), long
 * request-lines (-t r), and a long request body (-t b).
 *
 * FreeBSD 2.2.x, FreeBSD 3.0, IRIX 5.3, IRIX 6.2:
 * gcc -o test_limits test_limits.c
 *
 * Solaris 2.5.1:
 * gcc -o test_limits test_limits.c -lsocket -lnsl
 *
 *
 * Message-ID: <861zqspvtw.fsf@niobe.ewox.org>
 * Date: Fri, 7 Aug 1998 19:04:27 +0200
 * Sender: Bugtraq List <BUGTRAQ@netspace.org>
 * From: Dag-Erling Coidan =?ISO-8859-1?Q?Sm=F8rgrav?= <finrod@EWOX.ORG>
 * Subject: YA Apache DoS attack
 *
 * Copyright (c) 1998 Dag-Erling Codan Smrgrav
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer
 * in this position and unchanged.
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 * derived from this software withough specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 * Kudos to Mark Huizer who originally suggested this on freebsd-current
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:1 - 9

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
time-sem.c has the basics of the semaphores we use in http_main.c. It's
intended for timing differences between various methods on an
architecture. In practice we've found many things affect which semaphore
to be used:

 - NFS filesystems absolutely suck for fcntl() and flock()

 - uslock absolutely sucks on single-processor IRIX boxes, but
 absolutely rocks on multi-processor boxes. The converse
 is true for fcntl. sysvsem seems a moderate balance.

 - Under Solaris you can't have too many processes use SEM_UNDO, there
 might be a tuneable somewhere that increases the limit from 29.
 We're not sure what the tunable is, so there's a define
 NO_SEM_UNDO which can be used to simulate us trapping/blocking
 signals to be able to properly release the semaphore on a clean
 child death. You'll also need to define NEED_UNION_SEMUN
 under solaris.

You'll need to define USE_SHMGET_SCOREBOARD if anonymous shared mmap()
doesn't work on your system (i.e. linux).

argv[1] is the #children, argv[2] is the #iterations per child

You should run each over many different #children inputs, and choose
#iter such that the program runs for at least a second or so... or even
longer depending on your patience.

compile with:

gcc -o time-FCNTL -Wall -O time-sem.c -DUSE_FCNTL_SERIALIZED_ACCEPT
gcc -o time-FLOCK -Wall -O time-sem.c -DUSE_FLOCK_SERIALIZED_ACCEPT
gcc -o time-SYSVSEM -Wall -O time-sem.c -DUSE_SYSVSEM_SERIALIZED_ACCEPT
gcc -o time-SYSVSEM2 -Wall -O time-sem.c -DUSE_SYSVSEM_SERIALIZED_ACCEPT -DNO_SEM_UNDO
gcc -o time-PTHREAD -Wall -O time-sem.c -DUSE_PTHREAD_SERIALIZED_ACCEPT -lpthread
gcc -o time-USLOCK -Wall -O time-sem.c -DUSE_USLOCK_SERIALIZED_ACCEPT

not all versions work on all systems.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:453 - 8

/*
 * Use the canonical name to improve cache hit rate, but only if this is
 * not a proxy request or if this is a reverse proxy request.
 * We need to handle both cases in the same manner as for the reverse proxy
 * case we have the following situation:
 *
 * If a cached entry is looked up by mod_cache's quick handler r->proxyreq
 * is still unset in the reverse proxy case as it only gets set in the
 * translate name hook (either by ProxyPass or mod_rewrite) which is run
 * after the quick handler hook. This is different to the forward proxy
 * case where it gets set before the quick handler is run (in the
 * post_read_request hook).
 * If a cache entry is created by the CACHE_SAVE filter we always have
 * r->proxyreq set correctly.
 * So we must ensure that in the reverse proxy case we use the same code
 * path and using the canonical name seems to be the right thing to do
 * in the reverse proxy case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:239 - 8

/**
 * Try obtain a cache wide lock on the given cache key.
 *
 * If we return APR_SUCCESS, we obtained the lock, and we are clear to
 * proceed to the backend. If we return APR_EEXIST, then the lock is
 * already locked, someone else has gone to refresh the backend data
 * already, so we must return stale data with a warning in the mean
 * time. If we return anything else, then something has gone pear
 * shaped, and we allow the request through to the backend regardless.
 *
 * This lock is created from the request pool, meaning that should
 * something go wrong and the lock isn't deleted on return of the
 * request headers from the backend for whatever reason, at worst the
 * lock will be cleaned up when the request dies or finishes.
 *
 * If something goes truly bananas and the lock isn't deleted when the
 * request dies, the lock will be trashed when its max-age is reached,
 * or when a request arrives containing a Cache-Control: no-cache. At
 * no point is it possible for this lock to permanently deny access to
 * the backend.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:313 - 8

/*
 * Remove all filters that are before the cache_out filter. This ensures
 * that we kick off the filter stack with our cache_out filter being the
 * first in the chain. This make sense because we want to restore things
 * in the same manner as we saved them.
 * There may be filters before our cache_out filter, because
 *
 * 1. We call ap_set_content_type during cache_select. This causes
 * Content-Type specific filters to be added.
 * 2. We call the insert_filter hook. This causes filters e.g. like
 * the ones set with SetOutputFilter to be added.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:592 - 8

/*
 * Did the user indicate the precise location of the CACHE_OUT filter by
 * inserting the CACHE filter as a marker?
 *
 * If so, we get cunning and replace CACHE with the CACHE_OUT filters.
 * This has the effect of inserting the CACHE_OUT filter at the precise
 * location where the admin wants to cache the content. All filters that
 * lie *after* the original location of the CACHE filter will remain in
 * place.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:609 - 8

/*
 * Remove all filters that are before the cache_out filter. This ensures
 * that we kick off the filter stack with our cache_out filter being the
 * first in the chain. This make sense because we want to restore things
 * in the same manner as we saved them.
 * There may be filters before our cache_out filter, because
 *
 * 1. We call ap_set_content_type during cache_select. This causes
 * Content-Type specific filters to be added.
 * 2. We call the insert_filter hook. This causes filters e.g. like
 * the ones set with SetOutputFilter to be added.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1447 - 8

/* RFC 2616 10.3.5 states that entity headers are not supposed
 * to be in the 304 response. Therefore, we need to combine the
 * response headers with the cached headers *before* we update
 * the cached headers.
 *
 * However, before doing that, we need to first merge in
 * err_headers_out (note that store_headers() below already selects
 * the cacheable only headers using ap_cache_cacheable_headers_out(),
 * here we want to keep the original headers in r->headers_out and
 * forward all of them to the client, including non-cacheable ones).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1641 - 8

/*
 * CACHE_INVALIDATE filter
 * -----------------------
 *
 * This filter gets added in the quick handler should a PUT, POST or DELETE
 * method be detected. If the response is successful, we must invalidate any
 * cached entity as per RFC2616 section 13.10.
 *
 * CACHE_INVALIDATE has to be a protocol filter to ensure that is run even if
 * the response is a canned error message, which removes the content filters
 * from the chain.
 *
 * CACHE_INVALIDATE expects cache request rec within its context because the
 * request this filter runs on can be different from the one whose cache entry
 * should be removed, due to internal redirects.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1844 - 8

/* RFC2616 13.8 Errors or Incomplete Response Cache Behavior:
 * If a cache receives a 5xx response while attempting to revalidate an
 * entry, it MAY either forward this response to the requesting client,
 * or act as if the server failed to respond. In the latter case, it MAY
 * return a previously received response unless the cached entry
 * includes the "e;must-revalidate"e; cache-control directive (see section
 * 14.9).
 *
 * This covers the case where the error was generated by our server via
 * ap_die().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:373 - 8

/*
 * We have a chicken and egg problem. We don't know until we
 * attempt to store_headers just how big the response will be
 * and whether it will fit in the cache limits set. But we
 * need to make a decision now as to whether we plan to try.
 * If we make the wrong decision, we could prevent another
 * cache implementation, such as cache_disk, from getting the
 * opportunity to cache, and that would be unfortunate.
 *
 * In a series of tests, from cheapest to most expensive,
 * decide whether or not to ignore this attempt to cache,
 * with a small margin just to be sure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1 - 8

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * DAV extension module for Apache 2.0.*
 *
 * This module is repository-independent. It depends on hooks provided by a
 * repository implementation.
 *
 * APACHE ISSUES:
 * - within a DAV hierarchy, if an unknown method is used and we default
 * to Apache's implementation, it sends back an OPTIONS with the wrong
 * set of methods -- there is NO HOOK for us.
 * therefore: we need to manually handle the HTTP_METHOD_NOT_ALLOWED
 * and HTTP_NOT_IMPLEMENTED responses (not ap_send_error_response).
 * - process_mkcol_body() had to dup code from ap_setup_client_block().
 * - it would be nice to get status lines from Apache for arbitrary
 * status codes
 * - it would be nice to be able to extend Apache's set of response
 * codes so that it doesn't return 500 when an unknown code is placed
 * into r->status.
 * - http_vhost functions should apply "e;const"e; to their params
 *
 * DESIGN NOTES:
 * - For PROPFIND, we batch up the entire response in memory before
 * sending it. We may want to reorganize around sending the information
 * as we suck it in from the propdb. Alternatively, we should at least
 * generate a total Content-Length if we're going to buffer in memory
 * so that we can keep the connection open.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:1 - 8

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Status Module. Display lots of internal data about how Apache is
 * performing and the state of all children processes.
 *
 * To enable this, add the following lines into any config file:
 *
 * <Location /server-status>
 * SetHandler server-status
 * </Location>
 *
 * You may want to protect this location by password or domain so no one
 * else can look at it. Then you can access the statistics with a URL like:
 *
 * http://your_server_name/server-status
 *
 * /server-status - Returns page using tables
 * /server-status?notable - Returns page for browsers without table support
 * /server-status?refresh - Returns page with 1 second refresh
 * /server-status?refresh=6 - Returns page with refresh every 6 seconds
 * /server-status?auto - Returns page with data for automatic parsing
 *
 * Mark Cox, mark@ukweb.com, November 1995
 *
 * 12.11.95 Initial version for www.telescope.org
 * 13.3.96 Updated to remove rprintf's [Mark]
 * 18.3.96 Added CPU usage, process information, and tidied [Ben Laurie]
 * 18.3.96 Make extra Scoreboard variables #definable
 * 25.3.96 Make short report have full precision [Ben Laurie suggested]
 * 25.3.96 Show uptime better [Mark/Ben Laurie]
 * 29.3.96 Better HTML and explanation [Mark/Rob Hartill suggested]
 * 09.4.96 Added message for non-STATUS compiled version
 * 18.4.96 Added per child and per slot counters [Jim Jagielski]
 * 01.5.96 Table format, cleanup, even more spiffy data [Chuck Murcko/Jim J.]
 * 18.5.96 Adapted to use new rprintf() routine, incidentally fixing a missing
 * piece in short reports [Ben Laurie]
 * 21.5.96 Additional Status codes (DNS and LOGGING only enabled if
 * extended STATUS is enabled) [George Burgyan/Jim J.]
 * 10.8.98 Allow for extended status info at runtime (no more STATUS)
 * [Jim J.]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:85 - 8

/**
 * Parse a chunk line with optional extension, detect overflow.
 * There are two error cases:
 * 1) If the conversion would require too many bits, APR_EGENERAL is returned.
 * 2) If the conversion used the correct number of bits, but an overflow
 * caused only the sign bit to flip, then APR_ENOSPC is returned.
 * In general, any negative number can be considered an overflow error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2106 - 8

/* For non-transparent negotiation, server can choose how
 * to handle the negotiation. We'll use the following in
 * order: content-type, language, content-type level, charset,
 * content encoding, content length.
 *
 * For each check, we have three possible outcomes:
 * This variant is worse than current best: return 0
 * This variant is better than the current best:
 * assign this variant's q to *p_bestq, and return 1
 * This variant is just as desirable as the current best:
 * drop through to the next test.
 *
 * This code is written in this long-winded way to allow future
 * customisation, either by the addition of additional
 * checks, or to allow the order of the checks to be determined
 * by configuration options (e.g. we might prefer to check
 * language quality _before_ content type).
 */

 /* First though, eliminate this variant if it is not
 * acceptable by type, charset, encoding or language.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2716 - 8

/* The variant selection algorithm told us to return a "e;Choice"e;
 * response. This is the normal variant response, with
 * some extra headers. First, ensure that the chosen
 * variant did or will not itself engage in transparent negotiation.
 * If not, set the appropriate headers, and fall through to
 * the normal variant handling
 */

 /* This catches the error that a transparent type map selects a
 * transparent multiviews resource as the best variant.
 *
 * XXX: We do not signal an error if a transparent type map
 * selects a _non_transparent multiviews resource as the best
 * variant, because we can generate a legal negotiation response
 * in this case. In this case, the vlist_validator of the
 * nontransparent subrequest will be lost however. This could
 * lead to cases in which a change in the set of variants or the
 * negotiation algorithm of the nontransparent resource is never
 * propagated up to a HTTP/1.1 cache which interprets Vary. To be
 * completely on the safe side we should return HTTP_VARIANT_ALSO_VARIES
 * for this type of recursive negotiation too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2876 - 8

/* XXX todo: expires? cachability? */

 /* Some HTTP/1.0 clients are known to choke when they get
 * a 300 (multiple choices) response without a Location
 * header. However the 300 code response we are about
 * to generate will only reach 1.0 clients which support
 * transparent negotiation, and they should be OK. The
 * response should never reach older 1.0 clients, even if
 * we have CacheNegotiatedDocs enabled, because no 1.0
 * proxy cache (we know of) will cache and return 300
 * responses (they certainly won't if they conform to the
 * HTTP/1.0 specification).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1 - 8

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_headers.c: Add/append/remove HTTP response headers
 * Written by Paul Sutton, paul@ukweb.com, 1 Oct 1996
 *
 * The Header directive can be used to add/replace/remove HTTP headers
 * within the response message. The RequestHeader directive can be used
 * to add/replace/remove HTTP headers before a request message is processed.
 * Valid in both per-server and per-dir configurations.
 *
 * Syntax is:
 *
 * Header action header value
 * RequestHeader action header value
 *
 * Where action is one of:
 * set - set this header, replacing any old value
 * add - add this header, possible resulting in two or more
 * headers with the same name
 * append - append this text onto any existing header of this same
 * merge - merge this text onto any existing header of this same,
 * avoiding duplicate values
 * unset - remove this header
 * edit - transform the header value according to a regexp
 *
 * Where action is unset, the third argument (value) should not be given.
 * The header name can include the colon, or not.
 *
 * The Header and RequestHeader directives can only be used where allowed
 * by the FileInfo override.
 *
 * When the request is processed, the header directives are processed in
 * this order: firstly, the main server, then the virtual server handling
 * this request (if any), then any <Directory> sections (working downwards
 * from the root dir), then an <Location> sections (working down from
 * shortest URL component), the any <File> sections. This order is
 * important if any 'set' or 'unset' actions are used. For example,
 * the following two directives have different effect if applied in
 * the reverse order:
 *
 * Header append Author "e;John P. Doe"e;
 * Header unset Author
 *
 * Examples:
 *
 * To set the "e;Author"e; header, use
 * Header add Author "e;John P. Doe"e;
 *
 * To remove a header:
 * Header unset Author
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:1 - 8

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_setenvif.c
 * Set environment variables based on matching request headers or
 * attributes against regex strings
 *
 * Paul Sutton <paul@ukweb.com> 27 Oct 1996
 * Based on mod_browser by Alexei Kosut <akosut@organic.com>
 */

/*
 * Used to set environment variables based on the incoming request headers,
 * or some selected other attributes of the request (e.g., the remote host
 * name).
 *
 * Usage:
 *
 * SetEnvIf name regex var ...
 *
 * where name is either a HTTP request header name, or one of the
 * special values (see below). 'name' may be a regex when it is used
 * to specify an HTTP request header name. The 'value' of the header
 & (or the value of the special value from below) are compared against
 * the regex argument. If this is a simple string, a simple sub-string
 * match is performed. Otherwise, a request expression match is
 * done. If the value matches the string or regular expression, the
 * environment variables listed as var ... are set. Each var can
 * be in one of three formats: var, which sets the named variable
 * (the value "e;1"e;); var=value, which sets the variable to
 * the given value; or !var, which unsets the variable is it has
 * been previously set.
 *
 * Normally the strings are compared with regard to case. To ignore
 * case, use the directive SetEnvIfNoCase instead.
 *
 * Special values for 'name' are:
 *
 * server_addr IP address of interface on which request arrived
 * (analogous to SERVER_ADDR set in ap_add_common_vars())
 * remote_host Remote host name (if available)
 * remote_addr Remote IP address
 * request_method Request method (GET, POST, etc)
 * request_uri Requested URI
 *
 * Examples:
 *
 * To set the environment variable LOCALHOST if the client is the local
 * machine:
 *
 * SetEnvIf remote_addr 127.0.0.1 LOCALHOST
 *
 * To set LOCAL if the client is the local host, or within our company's
 * domain (192.168.10):
 *
 * SetEnvIf remote_addr 192.168.10. LOCAL
 * SetEnvIf remote_addr 127.0.0.1 LOCALHOST
 *
 * This could be written as:
 *
 * SetEnvIf remote_addr (127.0.0.1|192.168.10.) LOCAL
 *
 * To set HAVE_TS if the client request contains any header beginning
 * with "e;TS"e; with a value beginning with a lower case alphabet:
 *
 * SetEnvIf ^TS* ^[a-z].* HAVE_TS
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:872 - 8

/* Use chunked request body encoding or send a content-length body?
 *
 * Prefer C-L when:
 *
 * We have no request body (handled by RB_STREAM_CL)
 *
 * We have a request body length <= MAX_MEM_SPOOL
 *
 * The administrator has setenv force-proxy-request-1.0
 *
 * The client sent a C-L body, and the administrator has
 * not setenv proxy-sendchunked or has set setenv proxy-sendcl
 *
 * The client sent a T-E body, and the administrator has
 * setenv proxy-sendcl, and not setenv proxy-sendchunked
 *
 * If both proxy-sendcl and proxy-sendchunked are set, the
 * behavior is the same as if neither were set, large bodies
 * that can't be read will be forwarded in their original
 * form of C-L, or T-E.
 *
 * To ensure maximum compatibility, setenv proxy-sendcl
 * To reduce server resource use, setenv proxy-sendchunked
 *
 * Then address specific servers with conditional setenv
 * options to restore the default behavior where desireable.
 *
 * We have to compute content length by reading the entire request
 * body; if request body is not small, we'll spool the remaining
 * input to a temporary file. Chunked is always preferable.
 *
 * We can only trust the client-provided C-L if the T-E header
 * is absent, and the filters are unchanged (the body won't
 * be resized by another content filter).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1620 - 8

/* RFC2616 tells us to forward this.
 *
 * OTOH, an interim response here may mean the backend
 * is playing sillybuggers. The Client didn't ask for
 * it within the defined HTTP/1.1 mechanisms, and if
 * it's an extension, it may also be unsupported by us.
 *
 * There's also the possibility that changing existing
 * behaviour here might break something.
 *
 * So let's make it configurable.
 *
 * We need to set "e;r->expecting_100 = 1"e; otherwise origin
 * server behaviour will apply.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1099 - 8

/* The OpenSSL session cache mode must have both the flags
 * SSL_SESS_CACHE_SERVER and SSL_SESS_CACHE_NO_INTERNAL set if a
 * session cache is configured; NO_INTERNAL prevents the
 * OpenSSL-internal session cache being used in addition to the
 * "e;external"e; (mod_ssl-provided) cache, which otherwise causes
 * additional memory consumption. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1615 - 8

/*
 * Expired certificates vs. "e;expired"e; CRLs: by default, OpenSSL
 * turns X509_V_ERR_CRL_HAS_EXPIRED into a "e;certificate_expired(45)"e;
 * SSL alert, but that's not really the message we should convey to the
 * peer (at the very least, it's confusing, and in many cases, it's also
 * inaccurate, as the certificate itself may very well not have expired
 * yet). We set the X509_STORE_CTX error to something which OpenSSL's
 * s3_both.c:ssl_verify_alarm_type() maps to SSL_AD_CERTIFICATE_UNKNOWN,
 * i.e. the peer will receive a "e;certificate_unknown(46)"e; alert.
 * We do not touch errnum, though, so that later on we will still log
 * the "e;real"e; error, as returned by OpenSSL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:322 - 8

/* Our old behaviour here was to continue after accept()
 * errors. But this leads us into lots of troubles
 * because most of the errors are quite fatal. For
 * example, EMFILE can be caused by slow descriptor
 * leaks (say in a 3rd party module, or libc). It's
 * foolish for us to continue after an EMFILE. We also
 * seem to tickle kernel bugs on some platforms which
 * lead to never-ending loops here. So it seems best
 * to just exit in most cases.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:268 - 8

/*
 * Sleep for TASK_SWITCH_SLEEP micro seconds to cause a task switch on
 * OS layer and thus give possibly started piped loggers a chance to
 * process their input. Otherwise it is possible that they get killed
 * by us before they can do so. In this case maybe valueable log messages
 * might get lost.
 */

 /* If we are to print an error, we need the name before we destroy pool.
 * short_name is a pointer into argv, so remains valid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:1 - 8

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Multi-process, multi-threaded MPM for OS/2
 *
 * Server consists of
 * - a main, parent process
 * - a small, static number of child processes
 *
 * The parent process's job is to manage the child processes. This involves
 * spawning children as required to ensure there are always ap_daemons_to_start
 * processes accepting connections.
 *
 * Each child process consists of a pool of worker threads and a
 * main thread that accepts connections & passes them to the workers via
 * a work queue. The worker thread pool is dynamic, managed by a maintanence
 * thread so that the number of idle threads is kept between
 * min_spare_threads & max_spare_threads.
 *
 */

/*
 Todo list
 - Enforce MaxRequestWorkers somehow
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1 - 8

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * httpd.c: simple http daemon for answering WWW file requests
 *
 *
 * 03-21-93 Rob McCool wrote original code (up to NCSA HTTPd 1.3)
 *
 * 03-06-95 blong
 * changed server number for child-alone processes to 0 and changed name
 * of processes
 *
 * 03-10-95 blong
 * Added numerous speed hacks proposed by Robert S. Thau (rst@ai.mit.edu)
 * including set group before fork, and call gettime before to fork
 * to set up libraries.
 *
 * 04-14-95 rst / rh
 * Brandon's code snarfed from NCSA 1.4, but tinkered to work with the
 * Apache server, and also to have child processes do accept() directly.
 *
 * April-July '95 rst
 * Extensive rework for Apache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:191 - 8

/* Get a line of protocol input, including any continuation lines
 * caused by MIME folding (or broken clients) if fold != 0, and place it
 * in the buffer s, of size n bytes, without the ending newline.
 * 
 * Pulls from r->proto_input_filters instead of r->input_filters for
 * stricter protocol adherence and better input filter behavior during
 * chunked trailer processing (for http).
 *
 * If s is NULL, ap_rgetline_core will allocate necessary memory from r->pool.
 *
 * Returns APR_SUCCESS if there are no problems and sets *read to be
 * the full length of s.
 *
 * APR_ENOSPC is returned if there is not enough buffer space.
 * Other errors may be returned on other errors.
 *
 * The LF is *not* returned in the buffer. Therefore, a *read of 0
 * indicates that an empty line was read.
 *
 * Notes: Because the buffer uses 1 char for NUL, the most we can return is
 * (n - 1) actual characters.
 *
 * If no LF is detected on the last line due to a dropped connection
 * or a full buffer, that's considered an error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_md5.c:80 - 8

/* these portions extracted from mpack, John G. Myers - jgm+@cmu.edu */

/* (C) Copyright 1993,1994 by Carnegie Mellon University
 * All Rights Reserved.
 *
 * Permission to use, copy, modify, distribute, and sell this software
 * and its documentation for any purpose is hereby granted without
 * fee, provided that the above copyright notice appear in all copies
 * and that both that copyright notice and this permission notice
 * appear in supporting documentation, and that the name of Carnegie
 * Mellon University not be used in advertising or publicity
 * pertaining to distribution of the software without specific,
 * written prior permission. Carnegie Mellon University makes no
 * representations about the suitability of this software for any
 * purpose. It is provided "e;as is"e; without express or implied
 * warranty.
 *
 * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
 * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 */

/*
 * Copyright (c) 1991 Bell Communications Research, Inc. (Bellcore)
 *
 * Permission to use, copy, modify, and distribute this material
 * for any purpose and without fee is hereby granted, provided
 * that the above copyright notice and this permission notice
 * appear in all copies, and that the name of Bellcore not be
 * used in advertising or publicity pertaining to this
 * material without the specific, prior written permission
 * of an authorized representative of Bellcore. BELLCORE
 * MAKES NO REPRESENTATIONS ABOUT THE ACCURACY OR SUITABILITY
 * OF THIS MATERIAL FOR ANY PURPOSE. IT IS PROVIDED "e;AS IS"e;,
 * WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:1 - 8

/*************************************************
 * Perl-Compatible Regular Expressions *
 *************************************************/

/*
This is a library of functions to support regular expressions whose syntax
and semantics are as close as possible to those of the Perl 5 language. See
the file Tech.Notes for some information on the internals.

This module is a wrapper that provides a POSIX API to the underlying PCRE
functions.

Written by: Philip Hazel <ph10@cam.ac.uk>

 Copyright (c) 1997-2004 University of Cambridge

-----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice,
 this list of conditions and the following disclaimer.

 * Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.

 * Neither the name of the University of Cambridge nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "e;AS IS"e;
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-----------------------------------------------------------------------------
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:368 - 8

/**
 * Parse a chunk extension, detect overflow.
 * There are two error cases:
 * 1) If the conversion would require too many bits, a -1 is returned.
 * 2) If the conversion used the correct number of bits, but an overflow
 * caused only the sign bit to flip, then that negative number is
 * returned.
 * In general, any negative number can be considered an overflow error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:998 - 7

/* Because the browser may preemptively send auth info, incrementing the
 * nonce-count when it does, and because the client does not get notified
 * if the URI didn't need authentication after all, we need to be sure to
 * update the nonce-count each time we receive an Authorization header no
 * matter what the final outcome of the request. Furthermore this is a
 * convenient place to get the request-uri (before any subrequests etc
 * are initiated) and to initialize the request_config.
 *
 * Note that this must be called after mod_proxy had its go so that
 * r->proxyreq is set correctly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:711 - 7

/* These functions return 0 if client is OK, and proper error status
 * if not... either HTTP_UNAUTHORIZED, if we made a check, and it failed, or
 * HTTP_INTERNAL_SERVER_ERROR, if things are so totally confused that we
 * couldn't figure out how to tell if the client is authorized or not.
 *
 * If they return DECLINED, and all other modules also decline, that's
 * treated by the server core as a configuration error, logged and
 * reported as such.
 */


/**
 * Given a username and site passphrase hash from the session, determine
 * whether the site passphrase is valid for this session.
 *
 * If the site passphrase is NULL, or if the sent_hash is NULL, this
 * function returns DECLINED.
 *
 * If the site passphrase hash does not match the sent hash, this function
 * returns AUTH_USER_NOT_FOUND.
 *
 * On success, returns OK.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_isapi.c - Internet Server Application (ISA) module for Apache
 * by Alexei Kosut <akosut@apache.org>, significant overhauls and
 * redesign by William Rowe <wrowe@covalent.net>, and hints from many
 * other developer/users who have hit on specific flaws.
 *
 * This module implements the ISAPI Handler architecture, allowing
 * Apache to load Internet Server Applications (ISAPI extensions),
 * similar to the support in IIS, Zope, O'Reilly's WebSite and others.
 *
 * It is a complete implementation of the ISAPI 2.0 specification,
 * except for "e;Microsoft extensions"e; to the API which provide
 * asynchronous I/O. It is further extended to include additional
 * "e;Microsoft extentions"e; through IIS 5.0, with some deficiencies
 * where one-to-one mappings don't exist.
 *
 * Refer to /manual/mod/mod_isapi.html for additional details on
 * configuration and use, but check this source for specific support
 * of the API,
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:169 - 7

/*
 * Try to serve this request from the cache.
 *
 * If no existing cache file (DECLINED)
 * add cache_save filter
 * If cached file (OK)
 * clear filter stack
 * add cache_out filter
 * return OK
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:469 - 7

/*
 * Try to serve this request from the cache.
 *
 * If no existing cache file (DECLINED)
 * add cache_save filter
 * If cached file (OK)
 * clear filter stack
 * add cache_out filter
 * return OK
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1100 - 7

/* RFC2616 14.8 Authorisation:
 * if authorisation is included in the request, we don't cache,
 * but we can cache if the following exceptions are true:
 * 1) If Cache-Control: s-maxage is included
 * 2) If Cache-Control: must-revalidate is included
 * 3) If Cache-Control: public is included
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1160 - 7

/**
 * Enforce RFC2616 Section 10.3.5, just in case. We caught any
 * inconsistencies above.
 *
 * If the conditional GET used a strong cache validator (see section
 * 13.3.3), the response SHOULD NOT include other entity-headers.
 * Otherwise (i.e., the conditional GET used a weak validator), the
 * response MUST NOT include other entity-headers; this prevents
 * inconsistencies between cached entity-bodies and updated headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1176 - 7

/* Hold the phone. Some servers might allow us to cache a 2xx, but
 * then make their 304 responses non cacheable. RFC2616 says this:
 *
 * If a 304 response indicates an entity not currently cached, then
 * the cache MUST disregard the response and repeat the request
 * without the conditional.
 *
 * A 304 response with contradictory headers is technically a
 * different entity, to be safe, we remove the entity from the cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1288 - 7

/* It's safe to cache the response.
 *
 * There are two possiblities at this point:
 * - cache->handle == NULL. In this case there is no previously
 * cached entity anywhere on the system. We must create a brand
 * new entity and store the response in it.
 * - cache->stale_handle != NULL. In this case there is a stale
 * entity in the system which needs to be replaced by new
 * content (unless the result was 304 Not Modified, which means
 * the cached entity is actually fresh, and we should update
 * the headers).
 */

 /* Did we have a stale cache entry that really is stale?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:227 - 7

/*
 generates an error on macro with two arguments of the same name.
 generates an error if a macro argument name is empty.
 generates a warning if arguments name prefixes conflict.
 generates a warning if the first char of an argument is not in ARG_PREFIX
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1481 - 7

/*
** dav_validate_request: Validate if-headers (and check for locks) on:
** (1) r->filename @ depth;
** (2) Parent of r->filename if check_parent == 1
**
** The check of parent should be done when it is necessary to verify that
** the parent collection will accept a new member (ie current resource
** state is null).
**
** Return OK on successful validation.
** On error, return appropriate HTTP_* code, and log error. If a multi-stat
** error is necessary, response will point to it, else NULL.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:487 - 7

/*
** dav_unlock: Removes all direct and indirect locks for r->filename,
** with given locktoken. If locktoken == null_locktoken, all locks
** are removed. If r->filename represents an indirect lock,
** we must unlock the appropriate direct lock.
** Returns OK or appropriate HTTP_* response and logs any errors.
**
** ### We've already crawled the tree to ensure everything was locked
** by us; there should be no need to incorporate a rollback.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Originally written @ Covalent by Jim Jagielski
 */

/*
 * mod_dumpio.c:
 * Think of this as a filter sniffer for Apache 2.x. It logs
 * all filter data right before and after it goes out on the
 * wire (BUT right before SSL encoded or after SSL decoded).
 * It can produce a *huge* amount of data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Originally written @ Covalent by Jim Jagielski
 * Modified to support writing to non blocking pipes @ BBC by Graham Leggett
 * Modifications (C) 2011 British Broadcasting Corporation
 */

/*
 * mod_firehose.c:
 * A request and response sniffer for Apache v2.x. It logs
 * all filter data right before and after it goes out on the
 * wire (BUT right before SSL encoded or after SSL decoded).
 * It can produce a *huge* amount of data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_example_ipc -- Apache sample module
 *
 * This module illustrates the use in an Apache 2.x module of the Interprocess
 * Communications routines that come with APR. It is example code, and not meant
 * to be used in a production server.
 *
 * To play with this sample module first compile it into a DSO file and install
 * it into Apache's modules directory by running:
 *
 * $ /path/to/apache2/bin/apxs -c -i mod_example_ipc.c
 *
 * Then activate it in Apache's httpd.conf file for instance for the URL
 * /example_ipc in as follows:
 *
 * # httpd.conf
 * LoadModule example_ipc_module modules/mod_example_ipc.so
 * <Location /example_ipc>
 * SetHandler example_ipc
 * </Location>
 *
 * Then restart Apache via
 *
 * $ /path/to/apache2/bin/apachectl restart
 *
 * The module allocates a counter in shared memory, which is incremented by the
 * request handler under a mutex. After installation, activate the handler by
 * hitting the URL configured above with ab at various concurrency levels to see
 * how mutex contention affects server performance.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1930 - 7

/* Init log_hash before we register the optional function. It is
 * possible for the optional function, ap_register_log_handler,
 * to be called before any other mod_log_config hooks are called.
 * As a policy, we should init everything required by an optional function
 * before calling APR_REGISTER_OPTIONAL_FN.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1587 - 7

/* now find the best (i.e. longest) matching
 * Accept-Language header language. We put the best match
 * for this tag in bestthistag. We cannot update the
 * overall best (based on q value) because the best match
 * for this tag is the longest language item on the accept
 * header, not necessarily the highest q.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2770 - 7

/* This adds an appropriate Variant-Vary header if the subrequest
 * is a multiviews resource.
 *
 * XXX: TODO: Note that this does _not_ handle any Vary header
 * returned by a CGI if sub_req is a CGI script, because we don't
 * see that Vary header yet at this point in the control flow.
 * This won't cause any cache consistency problems _unless_ the
 * CGI script also returns a Cache-Control header marking the
 * response as cachable. This needs to be fixed, also there are
 * problems if a CGI returns an Etag header which also need to be
 * fixed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:31 - 7

/* mod_speling.c - by Alexei Kosut <akosut@organic.com> June, 1996
 *
 * This module is transparent, and simple. It attempts to correct
 * misspellings of URLs that users might have entered, namely by checking
 * capitalizations. If it finds a match, it sends a redirect.
 *
 * Sep-1999 Hugo Haas <hugo@w3.org>
 * o Added a CheckCaseOnly option to check only miscapitalized words.
 *
 * 08-Aug-1997 <Martin.Kraemer@Mch.SNI.De>
 * o Upgraded module interface to apache_1.3a2-dev API (more NULL's in
 * speling_module).
 * o Integrated tcsh's "e;spelling correction"e; routine which allows one
 * misspelling (character insertion/omission/typo/transposition).
 * Rewrote it to ignore case as well. This ought to catch the majority
 * of misspelled requests.
 * o Commented out the second pass where files' suffixes are stripped.
 * Given the better hit rate of the first pass, this rather ugly
 * (request index.html, receive index.db ?!?!) solution can be
 * omitted.
 * o wrote a "e;kind of"e; html page for mod_speling
 *
 * Activate it with "e;CheckSpelling On"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:140 - 7

/*
 * XXX: AJP Auto Flushing
 *
 * When processing CMD_AJP13_SEND_BODY_CHUNK AJP messages we will do a poll
 * with FLUSH_WAIT miliseconds timeout to determine if more data is currently
 * available at the backend. If there is no more data available, we flush
 * the data to the client by adding a flush bucket to the brigade we pass
 * up the filter chain.
 * This is only a bandaid to fix the AJP/1.3 protocol shortcoming of not
 * sending (actually not having defined) a flush message, when the data
 * should be flushed to the client. As soon as this protocol shortcoming is
 * fixed this code should be removed.
 *
 * For further discussion see PR37100.
 * http://issues.apache.org/bugzilla/show_bug.cgi?id=37100
 */

/*
 * process the request and write the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1260 - 7

/* possible results; 230, 331, 332, 421, 500, 501, 530 */
 /* states: 1 - error, 2 - success; 3 - send password, 4,5 fail */
 /* 230 User logged in, proceed. */
 /* 331 User name okay, need password. */
 /* 332 Need account for login. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* (This may include errors such as command line too long.) */
 /* 501 Syntax error in parameters or arguments. */
 /* 530 Not logged in. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Issues
 *
 * + Known low-level code kludges/problems
 * . proxy: an httpd child process validates SCTs from a server only on the
 * first time the data is received; but it could fail once due to invalid
 * timestamp, and not be rechecked later after (potentially) time elapses
 * and the timestamp is now in a valid range
 * . server: shouldn't have to read file of server SCTs on every handshake
 * (shared memory or cached file?)
 * . split mod_ssl_ct.c into more pieces
 * . research: Is it possible to send an SCT that is outside of the known
 * valid interval for the log?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:218 - 7

/* In theory, OpenSSL should flush as necessary, but it is known
 * not to do so correctly in some cases (< 0.9.8m; see PR 46952),
 * or on the proxy/client side (after ssl23_client_hello(), e.g.
 * ssl/proxy.t test suite).
 *
 * Historically, this flush call was performed only for an SSLv2
 * connection or for a proxy connection. Calling _out_flush can
 * be expensive in cases where requests/reponses are pipelined,
 * so limit the performance impact to handshake time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_log.c
 * Logging Facility
 */
 /* ``The difference between a computer
 industry job and open-source software
hacking is about 30 hours a week.''
 -- Ralf S. Engelschall */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_scache.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_scache.c
 * Session Cache Abstraction
 */
 /* ``Open-Source Software: generous
 programmers from around the world all
 join forces to help you shoot
 yourself in the foot for free.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2215 - 7

/* We get APR_EINTR whenever ap_queue_pop() has been interrupted
 * from an explicit call to ap_queue_interrupt_all(). This allows
 * us to unblock threads stuck in ap_queue_pop() when a shutdown
 * is pending.
 *
 * If workers_may_exit is set and this is ungraceful termination/
 * restart, we are bound to get an error on some systems (e.g.,
 * AIX, which sanity-checks mutex operations) since the queue
 * may have already been cleaned up. Don't log the "e;error"e; if
 * workers_may_exit is set.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* The purpose of this MPM is to fix the design flaws in the threaded
 * model. Because of the way that pthreads and mutex locks interact,
 * it is basically impossible to cleanly gracefully shutdown a child
 * process if multiple threads are all blocked in accept. This model
 * fixes those problems.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:968 - 7

/* We get APR_EINTR whenever ap_queue_pop() has been interrupted
 * from an explicit call to ap_queue_interrupt_all(). This allows
 * us to unblock threads stuck in ap_queue_pop() when a shutdown
 * is pending.
 *
 * If workers_may_exit is set and this is ungraceful termination/
 * restart, we are bound to get an error on some systems (e.g.,
 * AIX, which sanity-checks mutex operations) since the queue
 * may have already been cleaned up. Don't log the "e;error"e; if
 * workers_may_exit is set.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1553 - 7

/* This is a hack, but I can't find anyway around it. The idea is that
 * we don't want to send out 0 Content-Lengths if it is a HEAD request.
 * [Unless the corresponding body (for a GET) would really be empty!]
 * This happens when modules try to outsmart the server, and return
 * if they see a HEAD request. Apache 1.3 handlers were supposed to
 * just return in that situation, and the core handled the HEAD. From
 * 2.0, if a handler returns, then the core sends an EOS bucket down
 * the filter stack, and this content-length filter computes a length
 * of zero and we would end up sending a zero C-L to the client.
 * We can't just remove the this C-L filter, because well behaved 2.0+
 * handlers will send their data down the stack, and we will compute
 * a real C-L for the head request. RBB
 *
 * Allow modification of this behavior through the
 * HttpContentLengthHeadZero directive.
 *
 * The default (unset) behavior is to squelch the C-L in this case.
 */

 /* don't whack the C-L if it has already been set for a HEAD
 * by something like proxy. the brigade only has an EOS bucket
 * in this case, making r->bytes_sent zero, and either there is
 * an existing C-L we want to preserve, or r->sent_bodyct is not
 * zero (the empty body is being sent) thus we don't want to add
 * a C-L of zero (the backend did not provide it, neither do we).
 *
 * if r->bytes_sent > 0 we have a (temporary) body whose length may
 * have been changed by a filter. the C-L header might not have been
 * updated so we do it here. long term it would be cleaner to have
 * such filters update or remove the C-L header, and just use it
 * if present.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:361 - 7

/* Useful caching structures to repeat _walk/merge sequences as required
 * when a subrequest or redirect reuses substantially the same config.
 *
 * Directive order in the httpd.conf file and its Includes significantly
 * impact this optimization. Grouping common blocks at the front of the
 * config that are less likely to change between a request and
 * its subrequests, or between a request and its redirects reduced
 * the work of these functions significantly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1325 - 7

/* It seems this shouldn't be needed anymore. We translated the
 x symlink above into a real resource, and should have died up there.
 x Even if we keep this, it needs more thought (maybe an r->file_is_symlink)
 x perhaps it should actually happen in file_walk, so we catch more
 x obscure cases in autoindex subrequests, etc.
 x
 x * Symlink permissions are determined by the parent. If the request is
 x * for a directory then applying the symlink test here would use the
 x * permissions of the directory as opposed to its parent. Consider a
 x * symlink pointing to a dir with a .htaccess disallowing symlinks. If
 x * you access /symlink (or /symlink/) you would get a 403 without this
 x * APR_DIR test. But if you accessed /symlink/index.html, for example,
 x * you would *not* get the 403.
 x
 x if (r->finfo.filetype != APR_DIR
 x && (res = resolve_symlink(r->filename, r->info, ap_allow_options(r),
 x r->pool))) {
 x ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
 x "e;Symbolic link not allowed: %s"e;, r->filename);
 x return res;
 x }
 */

 /* Save future sub-requestors much angst in processing
 * this subrequest. If dir_walk couldn't canonicalize
 * the file path, nothing can.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1914 - 7

/*****************************************************************
 *
 * The sub_request mechanism.
 *
 * Fns to look up a relative URI from, e.g., a map file or SSI document.
 * These do all access checks, etc., but don't actually run the transaction
 * ... use run_sub_req below for that. Also, be sure to use destroy_sub_req
 * as appropriate if you're likely to be creating more than a few of these.
 * (An early Apache version didn't destroy the sub_reqs used in directory
 * indexing. The result, when indexing a directory with 800-odd files in
 * it, was massively excessive storage allocation).
 *
 * Note more manipulation of protocol-specific vars in the request
 * structure...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:64 - 7

/* The cache is implemented as a ring buffer. Each second,
 * it uses a different element in the buffer. The timestamp
 * in the element indicates whether the element contains the
 * exploded time for the current second (vs the time
 * 'now - AP_TIME_RECENT_THRESHOLD' seconds ago). If the
 * cached value is for the current time, we use it. Otherwise,
 * we compute the apr_time_exp_t and store it in this
 * cache element. Note that the timestamp in the cache
 * element is updated only after the exploded time. Thus
 * if two threads hit this cache element simultaneously
 * at the start of a new second, they'll both explode the
 * time and store it. I.e., the writers will collide, but
 * they'll be writing the same value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/******************************************************************************
 ******************************************************************************
 * NOTE! This program is not safe as a setuid executable! Do not make it
 * setuid!
 ******************************************************************************
 *****************************************************************************/
/*
 * htpasswd.c: simple program for manipulating password file for
 * the Apache HTTP server
 *
 * Originally by Rob McCool
 *
 * Exit values:
 * 0: Success
 * 1: Failure; file access/permission problem
 * 2: Failure; command line syntax problem (usage message issued)
 * 3: Failure; password verification failure
 * 4: Failure; operation interrupted (such as with CTRL/C)
 * 5: Failure; buffer would overflow (username, filename, or computed
 * record too long)
 * 6: Failure; username contains illegal or reserved characters
 * 7: Failure; file is not a valid htpasswd file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/wintty.c:1 - 7

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* --------------------------------------------------------------------
 *
 * wintty : a Apache/WinNT support utility for monitoring and
 * reflecting user feedback from the Apache process via
 * stdin/stdout, even as running within the service context.
 *
 * Originally contributed by William Rowe <wrowe covalent.net>
 *
 * Note: this implementation is _very_ experimental, and error handling
 * is far from complete. Using it as a cgi or pipe process allows the
 * programmer to discover if facilities such as reliable piped logs
 * are working as expected, or answer operator prompts that would
 * otherwise be discarded by the service process.
 *
 * Also note the isservice detection semantics, which far exceed any
 * mechanism we have discovered thus far.
 *
 * --------------------------------------------------------------------
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:220 - 6

/* These functions return 0 if client is OK, and proper error status
 * if not... either HTTP_UNAUTHORIZED, if we made a check, and it failed, or
 * HTTP_INTERNAL_SERVER_ERROR, if things are so totally confused that we
 * couldn't figure out how to tell if the client is authorized or not.
 *
 * If they return DECLINED, and all other modules also decline, that's
 * treated by the server core as a configuration error, logged and
 * reported as such.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:378 - 6

/* Note: this stuff is currently fixed for the lifetime of the server,
 * i.e. even across restarts. This means that A) any shmem-size
 * configuration changes are ignored, and B) certain optimizations,
 * such as only allocating the smallest necessary entry for each
 * client, can't be done. However, the alternative is a nightmare:
 * we can't call apr_shm_destroy on a graceful restart because there
 * will be children using the tables, and we also don't know when the
 * last child dies. Therefore we can never clean up the old stuff,
 * creating a creeping memory leak.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1527 - 6

/* These functions return 0 if client is OK, and proper error status
 * if not... either HTTP_UNAUTHORIZED, if we made a check, and it failed, or
 * HTTP_INTERNAL_SERVER_ERROR, if things are so totally confused that we
 * couldn't figure out how to tell if the client is authorized or not.
 *
 * If they return DECLINED, and all other modules also decline, that's
 * treated by the server core as a configuration error, logged and
 * reported as such.
 */

/* Determine user ID, and check if the attributes are correct, if it
 * really is that user, if the nonce is correct, etc.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1099 - 6

/**
 * Handle a login attempt.
 *
 * If the login session is either missing or form authnz is unsuccessful, a
 * 401 Not Authorized will be returned to the browser. The webmaster
 * is expected to insert a login form into the 401 Not Authorized
 * error screen.
 *
 * If the webmaster wishes, they can point the form submission at this
 * handler, which will redirect the user to the correct page on success.
 * On failure, the 401 Not Authorized error screen will be redisplayed,
 * where the login attempt can be repeated.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:184 - 6

/* try to obtain a cache lock at this point. if we succeed,
 * we are the first to try and cache this url. if we fail,
 * it means someone else is already trying to cache this
 * url, and we should just let the request through to the
 * backend without any attempt to cache. this stops
 * duplicated simultaneous attempts to cache an entity.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:483 - 6

/* try to obtain a cache lock at this point. if we succeed,
 * we are the first to try and cache this url. if we fail,
 * it means someone else is already trying to cache this
 * url, and we should just let the request through to the
 * backend without any attempt to cache. this stops
 * duplicated simultaneous attempts to cache an entity.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:789 - 6

/*
 * CACHE_SAVE filter
 * ---------------
 *
 * Decide whether or not this content should be cached.
 * If we decide no it should not:
 * remove the filter from the chain
 * If we decide yes it should:
 * Have we already started saving the response?
 * If we have started, pass the data to the storage manager via store_body
 * Otherwise:
 * Check to see if we *can* save this particular response.
 * If we can, call cache_create_entity() and save the headers and body
 * Finally, pass the data to the next filter (the network or whatever)
 *
 * After the various failure cases, the cache lock is proactively removed, so
 * that another request is given the opportunity to attempt to cache without
 * waiting for a potentially slow client to acknowledge the failure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:863 - 6

/*
 * Setup Data in Cache
 * -------------------
 * This section opens the cache entity and sets various caching
 * parameters, and decides whether this URL should be cached at
 * all. This section is* run before the above section.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1016 - 6

/* We are also allowed to cache any response given that it has a
 * valid Expires or Cache Control header. If we find a either of
 * those here, we pass request through the rest of the tests. From
 * the RFC:
 *
 * A response received with any other status code (e.g. status
 * codes 302 and 307) MUST NOT be returned in a reply to a
 * subsequent request unless there are cache-control directives or
 * another header(s) that explicitly allow it. For example, these
 * include the following: an Expires header (section 14.21); a
 * "e;max-age"e;, "e;s-maxage"e;, "e;must-revalidate"e;, "e;proxy-revalidate"e;,
 * "e;public"e; or "e;private"e; cache-control directive (section 14.9).
 *
 * FIXME: Wrong if cc_out has just an extension we don't know about 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:989 - 6

/* the If: header is present */

 /*
 ** If a dummy header is present (because of a Lock-Token: header), then
 ** we are required to find that token in this resource's set of locks.
 ** If we have no locks, then we immediately fail.
 **
 ** This is a 400 (Bad Request) since they should only submit a locktoken
 ** that actually exists.
 **
 ** Don't issue this response if we're talking about the parent resource.
 ** It is okay for that resource to NOT have this locktoken.
 ** (in fact, it certainly will not: a dummy_header only occurs for the
 ** UNLOCK method, the parent is checked only for locknull resources,
 ** and the parent certainly does not have the (locknull's) locktoken)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1083 - 6

/*
 * The quick_handler hook presents modules with a very powerful opportunity to
 * serve their content in a very early request phase. Note that this handler
 * can not serve any requests from the file system because hooks like
 * map_to_storage have not run. The quick_handler hook also runs before any
 * authentication and access control.
 *
 * This hook is used by mod_cache to serve cached content.
 *
 * This is a RUN_FIRST hook. Return OK if you have served the request,
 * DECLINED if you want processing to continue, or a HTTP_* error code to stop
 * processing the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/* The use of the scoreboard in this module is based on a similar
 * but simpler module, mod_antiloris by Kees Monshouwer, from
 * ftp://ftp.monshouwer.eu/pub/linux/mod_antiloris/
 * Note the FIXME that affects both modules.
 *
 * The major difference is that mod_antiloris checks the scoreboard
 * on every request. This implies a per-request overhead that grows
 * with the scoreboard, and gets very expensive on a big server.
 * On the other hand, this module (mod_noloris) may be slower to
 * react to a DoS attack, and in the case of a very small server
 * it might be too late.
 *
 * Author's untested instinct: mod_antiloris will suit servers with
 * Prefork MPM and low traffic. A server with a threaded MPM
 * (or possibly a big prefork server with lots of memory) should
 * raise MaxClients and use mod_noloris.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * simple hokey charset recoding configuration module
 *
 * See mod_ebcdic and mod_charset for more thought-out examples. This
 * one is just so Jeff can learn how a module works and experiment with
 * basic character set recoding configuration.
 *
 * !!!This is an extremely cheap ripoff of mod_charset.c from Russian Apache!!!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1022 - 6

/* A Content-Length header is present, but it won't be valid after
 * conversion because we're not converting between two single-byte
 * charsets. This will affect most CGI scripts and may affect
 * some modules.
 * Content-Length can't be unset here because that would break
 * being able to read the request body.
 * Processing of chunked request bodies is not impacted by this
 * filter since the length was not declared anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3415 - 6

/* Hit end of stream, time for cleanup ... But wait!
 * Perhaps we're not ready yet. We may have to loop one or
 * two times again to finish our work. In that case, we
 * just re-insert the EOS bucket to allow for an extra loop.
 *
 * PARSE_EXECUTE means, we've hit a directive just before the
 * EOS, which is now waiting for execution.
 *
 * PARSE_DIRECTIVE_POSTTAIL means, we've hit a directive with
 * no argument and no space between directive and end_seq
 * just before the EOS. (consider <!--#printenv--> as last
 * or only string within the stream). This state, however,
 * just cleans up and turns itself to PARSE_EXECUTE, which
 * will be passed through within the next (and actually
 * last) round.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1386 - 6

/*
 * Map specific APR codes returned by the filter stack to HTTP error
 * codes, or the default status code provided. Use it as follows:
 *
 * return ap_map_http_request_error(rv, HTTP_BAD_REQUEST);
 *
 * If the filter has already handled the error, AP_FILTER_ERROR will
 * be returned, which is cleanly passed through.
 *
 * These mappings imply that the filter stack is reading from the
 * downstream client, the proxy will map these codes differently.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1349 - 6

/*
 * It would be nice to give the user the information they need to
 * fix the problem directly since many users don't have access to
 * the error_log (think University sites) even though they can easily
 * get this error by misconfiguring an htaccess file. However, the
 * e error notes tend to include the real file pathname in this case,
 * which some people consider to be a breach of privacy. Until we
 * can figure out a way to remove the pathname, leave this commented.
 *
 * if ((error_notes = apr_table_get(r->notes,
 * "e;error-notes"e;)) != NULL) {
 * return(apr_pstrcat(p, error_notes, "e;<p />\n"e;, NULL);
 * }
 * else {
 * return "e;"e;;
 * }
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1467 - 6

/*
 * We have a custom response output. This should only be
 * a text-string to write back. But if the ErrorDocument
 * was a local redirect and the requested resource failed
 * for any reason, the custom_response will still hold the
 * redirect URL. We don't really want to output this URL
 * as a text message, so first check the custom response
 * string to ensure that it is a text-string (using the
 * same test used in ap_die(), i.e. does it start with a "e;).
 *
 * If it's not a text string, we've got a recursive error or
 * an external redirect. If it's a recursive error, ap_die passes
 * us the second error code so we can write both, and has already
 * backed up to the original error. If it's an external redirect,
 * it hasn't happened yet; we may never know if it fails.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * util_ldap_cache.c: LDAP cache things
 *
 * Original code from auth_ldap module for Apache v1.3:
 * Copyright 1998, 1999 Enbridge Pipelines Inc.
 * Copyright 1999-2001 Dave Carrigan
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * util_ldap_cache_mgr.c: LDAP cache manager things
 *
 * Original code from auth_ldap module for Apache v1.3:
 * Copyright 1998, 1999 Enbridge Pipelines Inc.
 * Copyright 1999-2001 Dave Carrigan
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This imagemap module started as a port of the original imagemap.c
 * written by Rob McCool (11/13/93 robm@ncsa.uiuc.edu).
 * This version includes the mapping algorithms found in version 1.3
 * of imagemap.c.
 *
 * Contributors to this code include:
 *
 * Kevin Hughes, kevinh@pulua.hcc.hawaii.edu
 *
 * Eric Haines, erich@eye.com
 * "e;macmartinized"e; polygon code copyright 1992 by Eric Haines, erich@eye.com
 *
 * Randy Terbush, randy@zyzzyva.com
 * port to Apache module format, "e;base_uri"e; and support for relative URLs
 *
 * James H. Cloos, Jr., cloos@jhcloos.com
 * Added point datatype, using code in NCSA's version 1.8 imagemap.c
 * program, as distributed with version 1.4.1 of their server.
 * The point code is originally added by Craig Milo Rogers, Rogers@ISI.Edu
 *
 * Nathan Kurz, nate@tripod.com
 * Rewrite/reorganization. New handling of default, base and relative URLs.
 * New Configuration directives:
 * ImapMenu {none, formatted, semiformatted, unformatted}
 * ImapDefault {error, nocontent, referer, menu, URL}
 * ImapBase {map, referer, URL}
 * Support for creating non-graphical menu added. (backwards compatible):
 * Old: directive URL [x,y ...]
 * New: directive URL "e;Menu text"e; [x,y ...]
 * or: directive URL x,y ... "e;Menu text"e;
 * Map format and menu concept courtesy Joshua Bell, jsbell@acs.ucalgary.ca.
 *
 * Mark Cox, mark@ukweb.com, Allow relative URLs even when no base specified
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1786 - 6

/*
 * Go through each of the ranges on the Accept: header,
 * looking for the 'best' match with this variant's
 * content-type. We use the best match's quality
 * value (from the Accept: header) for this variant's
 * mime_type_quality field.
 *
 * The best match is determined like this:
 * type/type is better than type/ * is better than * / *
 * if match is type/type, use the level mime param if available
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* User Tracking Module (Was mod_cookies.c)
 *
 * *** IMPORTANT NOTE: This module is not designed to generate
 * *** cryptographically secure cookies. This means you should not
 * *** use cookies generated by this module for authentication purposes
 *
 * This Apache module is designed to track users paths through a site.
 * It uses the client-side state ("e;Cookie"e;) protocol developed by Netscape.
 * It is known to work on most browsers.
 *
 * Each time a page is requested we look to see if the browser is sending
 * us a Cookie: header that we previously generated.
 *
 * If we don't find one then the user hasn't been to this site since
 * starting their browser or their browser doesn't support cookies. So
 * we generate a unique Cookie for the transaction and send it back to
 * the browser (via a "e;Set-Cookie"e; header)
 * Future requests from the same browser should keep the same Cookie line.
 *
 * By matching up all the requests with the same cookie you can
 * work out exactly what path a user took through your site. To log
 * the cookie use the "e; %{Cookie}n "e; directive in a custom access log;
 *
 * Example 1 : If you currently use the standard Log file format (CLF)
 * and use the command "e;TransferLog somefilename"e;, add the line
 * LogFormat "e;%h %l %u %t \"e;%r\"e; %s %b %{Cookie}n"e;
 * to your config file.
 *
 * Example 2 : If you used to use the old "e;CookieLog"e; directive, you
 * can emulate it by adding the following command to your config file
 * CustomLog filename "e;%{Cookie}n \"e;%r\"e; %t"e;
 *
 * Mark Cox, mjc@apache.org, 6 July 95
 *
 * This file replaces mod_cookies.c
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_version.c
 * Allow conditional configuration depending on the httpd version
 *
 * André Malo (nd/perlig.de), January 2004
 *
 * Some stuff coded here is heavily based on the core <IfModule>
 * containers.
 *
 * The module makes the following confgurations possible:
 *
 * <IfVersion op major.minor.patch>
 * # conditional config here ...
 *</IfVersion>
 *
 * where "e;op"e; is one of:
 * = / == equal
 * > greater than
 * >= greater or equal
 * < less than
 * <= less or equal
 *
 * If minor version and patch level are omitted they are assumed to be 0.
 *
 * Alternatively you can match the whole version (including some vendor-added
 * string of the CORE version, see ap_release.h) against a regular expression:
 *
 * <IfVersion op regex>
 * # conditional config here ...
 *</IfVersion>
 *
 * where "e;op"e; is one of:
 * = / == match; regex must be surrounded by slashes
 * ~ match; regex MAY NOT be surrounded by slashes
 *
 * Note that all operators may be preceeded by an exclamation mark
 * (without spaces) in order to reverse their meaning.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:28 - 6

/*
 * The idea behind the find_best_byrequests scheduler is the following:
 *
 * lbfactor is "e;how much we expect this worker to work"e;, or "e;the worker's
 * normalized work quota"e;.
 *
 * lbstatus is "e;how urgent this worker has to work to fulfill its quota
 * of work"e;.
 *
 * We distribute each worker's work quota to the worker, and then look
 * which of them needs to work most urgently (biggest lbstatus). This
 * worker is then selected for work, and its lbstatus reduced by the
 * total work quota we distributed to all workers. Thus the sum of all
 * lbstatus does not change.(*)
 *
 * If some workers are disabled, the others will
 * still be scheduled correctly.
 *
 * If a balancer is configured as follows:
 *
 * worker a b c d
 * lbfactor 25 25 25 25
 *
 * And b gets disabled, the following schedule is produced:
 *
 * a c d a c d a c d ...
 *
 * Note that the above lbfactor setting is the *exact* same as:
 *
 * worker a b c d
 * lbfactor 1 1 1 1
 *
 * Asymmetric configurations work as one would expect. For
 * example:
 *
 * worker a b c d
 * lbfactor 1 1 1 2
 *
 * would have a, b and c all handling about the same
 * amount of load with d handling twice what a or b
 * or c handles individually. So we could see:
 *
 * b a d c d a c d b d ...
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Round Robin lbmethod EXAMPLE module for Apache proxy */

/* NOTE: This is designed simply to provide some info on how to create
 extra lbmethods via sub-modules... This code is ugly
 and needs work to actually do round-robin "e;right"e;
 but that is left as an exercise for the reader */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:237 - 6

/*
 * We have a worker that is unusable.
 * It can be in error or disabled, but in case
 * it has a redirection set use that redirection worker.
 * This enables to safely remove the member from the
 * balancer. Of course you will need some kind of
 * session replication between those two remote.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2075 - 6

/* Prefetch (nonlocking) the request body so to increase the chance to get
 * the whole (or enough) body and determine Content-Length vs chunked or
 * spooled. By doing this before connecting or reusing the backend, we want
 * to minimize the delay between this connection is considered alive and
 * the first bytes sent (should the client's link be slow or some input
 * filter retain the data). This is a best effort to prevent the backend
 * from closing (from under us) what it thinks is an idle connection, hence
 * to reduce to the minimum the unavoidable local is_socket_connected() vs
 * remote keepalive race condition.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_config.c
 * Apache Configuration Directives
 */
 /* ``Damned if you do,
damned if you don't.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:39 - 6

/* _________________________________________________________________
**
** I/O Hooks
** _________________________________________________________________
*/

/* This file is designed to be the bridge between OpenSSL and httpd.
 * However, we really don't expect anyone (let alone ourselves) to
 * remember what is in this file. So, first, a quick overview.
 *
 * In this file, you will find:
 * - ssl_io_filter_input (Apache input filter)
 * - ssl_io_filter_output (Apache output filter)
 *
 * - bio_filter_in_* (OpenSSL input filter)
 * - bio_filter_out_* (OpenSSL output filter)
 *
 * The input chain is roughly:
 *
 * ssl_io_filter_input->ssl_io_input_read->SSL_read->...
 * ...->bio_filter_in_read->ap_get_brigade/next-httpd-filter
 *
 * In mortal terminology, we do the following:
 * - Receive a request for data to the SSL input filter
 * - Call a helper function once we know we should perform a read
 * - Call OpenSSL's SSL_read()
 * - SSL_read() will then call bio_filter_in_read
 * - bio_filter_in_read will then try to fetch data from the next httpd filter
 * - bio_filter_in_read will flatten that data and return it to SSL_read
 * - SSL_read will then decrypt the data
 * - ssl_io_input_read will then receive decrypted data as a char* and
 * ensure that there were no read errors
 * - The char* is placed in a brigade and returned
 *
 * Since connection-level input filters in httpd need to be able to
 * handle AP_MODE_GETLINE calls (namely identifying LF-terminated strings),
 * ssl_io_input_getline which will handle this special case.
 *
 * Due to AP_MODE_GETLINE and AP_MODE_SPECULATIVE, we may sometimes have
 * 'leftover' decoded data which must be setaside for the next read. That
 * is currently handled by the char_buffer_{read|write} functions. So,
 * ssl_io_input_read may be able to fulfill reads without invoking
 * SSL_read().
 *
 * Note that the filter context of ssl_io_filter_input and bio_filter_in_*
 * are shared as bio_filter_in_ctx_t.
 *
 * Note that the filter is by choice limited to reading at most
 * AP_IOBUFSIZE (8192 bytes) per call.
 *
 */

/* this custom BIO allows us to hook SSL_write directly into
 * an apr_bucket_brigade and use transient buckets with the SSL
 * malloc-ed buffer, rather than copying into a mem BIO.
 * also allows us to pass the brigade as data is being written
 * rather than buffering up the entire response in the mem BIO.
 *
 * when SSL needs to flush (e.g. SSL_accept()), it will call BIO_flush()
 * which will trigger a call to bio_filter_out_ctrl() -> bio_filter_out_flush().
 * so we only need to flush the output ourselves if we receive an
 * EOS or FLUSH bucket. this was not possible with the mem BIO where we
 * had to flush all over the place not really knowing when it was required
 * to do so.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1249 - 6

/*
 * Fake a password - which one would be immaterial, as, it seems, an empty
 * password in the users file would match ALL incoming passwords, if only
 * we were using the standard crypt library routine. Unfortunately, OpenSSL
 * "e;fixes"e; a "e;bug"e; in crypt and thus prevents blank passwords from
 * working. (IMHO what they really fix is a bug in the users of the code
 * - failing to program correctly for shadow passwords). We need,
 * therefore, to provide a password. This password can be matched by
 * adding the string "e;xxj31ZMTZzkVA"e; as the password in the user file.
 * This is just the crypted variant of the word "e;password"e; ;-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2120 - 6

/*
 * RFC 6066 section 3 says "e;It is NOT RECOMMENDED to send
 * a warning-level unrecognized_name(112) alert, because
 * the client's behavior in response to warning-level alerts
 * is unpredictable."e;
 *
 * To maintain backwards compatibility in mod_ssl, we
 * no longer send any alert (neither warning- nor fatal-level),
 * i.e. we take the second action suggested in RFC 6066:
 * "e;If the server understood the ClientHello extension but
 * does not recognize the server name, the server SHOULD take
 * one of two actions: either abort the handshake by sending
 * a fatal-level unrecognized_name(112) alert or continue
 * the handshake."e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Originally written @ BBC by Graham Leggett
 * (C) 2011 British Broadcasting Corporation
 */

/*
 * mod_policy.c --- Enforce specific policies on outgoing requests, logging
 * or rejecting requests as appropriate.
 *
 * To enable, add the corresponding filters like so:
 *
 * SetOutputFilter POLICY_TYPE,POLICY_LENGTH
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:212 - 6

/*
 * You might ponder why stderr_pool should survive?
 * The trouble is, stderr_pool may have s_main->error_log,
 * so we aren't in a position to destory stderr_pool until
 * the next recycle. There's also an apparent bug which
 * is not; if some folk decided to call this function before
 * the core open error logs hook, this pool won't survive.
 * Neither does the stderr logger, so this isn't a problem.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1477 - 6

/* The following compare function is used by apr_skiplist_insert() to keep the
 * elements (timers) sorted and provide O(log n) complexity (this is also true
 * for apr_skiplist_{find,remove}(), but those are not used in MPM event where
 * inserted timers are not searched nor removed, but with apr_skiplist_pop()
 * which does use any compare function). It is meant to return 0 when a == b,
 * <0 when a < b, and >0 when a > b. However apr_skiplist_insert() will not
 * add duplicates (i.e. a == b), and apr_skiplist_add() is only available in
 * APR 1.6, yet multiple timers could possibly be created in the same micro-
 * second (duplicates with regard to apr_time_t); therefore we implement the
 * compare function to return +1 instead of 0 when compared timers are equal,
 * thus duplicates are still added after each other (in order of insertion).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2463 - 6

/* deal with a rare timing window which affects waking up the
 * listener thread... if the signal sent to the listener thread
 * is delivered between the time it verifies that the
 * listener_may_exit flag is clear and the time it enters a
 * blocking syscall, the signal didn't do any good... work around
 * that by sleeping briefly and sending it again
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:97 - 6

/* exit() for Win32 is macro mapped (horrible, we agree) that allows us
 * to catch the non-zero conditions and inform the console process that
 * the application died, and hang on to the console a bit longer.
 *
 * The macro only maps for http_main.c and other sources that include
 * the service.h header, so we best assume it's an error to exit from
 * _any_ other module.
 *
 * If ap_real_exit_code is reset to 0, it will not be set or trigger this
 * behavior on exit. All service and child processes are expected to
 * reset this flag to zero to avoid undesireable side effects.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1155 - 6

/* deal with a rare timing window which affects waking up the
 * listener thread... if the signal sent to the listener thread
 * is delivered between the time it verifies that the
 * listener_may_exit flag is clear and the time it enters a
 * blocking syscall, the signal didn't do any good... work around
 * that by sleeping briefly and sending it again
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * util.c: string utility things
 *
 * 3/21/93 Rob McCool
 * 1995-96 Many changes by the Apache Software Foundation
 *
 */

/* Debugging aid:
 * #define DEBUG to trace all cfg_open*()/cfg_closefile() calls
 * #define DEBUG_CFG_LINES to trace every line read from the config files
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:504 - 6

/*
 * If we've finished reading the headers, check to make sure any
 * HTTP/1.1 conditions are met. If so, we're done; normal processing
 * will handle the script's output. If not, just return the error.
 * The appropriate thing to do would be to send the script process a
 * SIGPIPE to let it know we're ignoring it, close the channel to the
 * script process, and *then* return the failed-to-meet-condition
 * error. Otherwise we'd be waiting for the script to finish
 * blithering before telling the client the output was no good.
 * However, we don't have the information to do that, so we have to
 * leave it to an upper layer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test-writev.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 test-writev: use this to figure out if your writev() does intelligent
 things on the network. Some writev()s when given multiple buffers
 will break them up into multiple packets, which is a waste.

 Linux prior to 2.0.31 has this problem.

 Solaris 2.5, 2.5.1 doesn't appear to, 2.6 hasn't been tested.

 IRIX 5.3 doesn't have this problem.

 To use this you want to snoop the wire with tcpdump, and then run
 "e;test-writev a.b.c.d port#"e; ... against some TCP service on another
 box. For example you can run it against port 80 on another server.
 You want to look to see how many data packets are sent, you're hoping
 only one of size 300 is sent.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_find.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This program tests the ap_find_list_item routine in ../main/util.c.
 *
 * The defines in this sample compile line are specific to Roy's system.
 * They should match whatever was used to compile Apache first.
 *
 gcc -g -O2 -I../os/unix -I../include -o test_find \
 -DSOLARIS2=250 -Wall -DALLOC_DEBUG -DPOOL_DEBUG \
 ../main/alloc.o ../main/buff.o ../main/util.o \
 ../ap/libap.a -lsocket -lnsl test_find.c
 *
 * Roy Fielding, 1999
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_parser.c:1 - 6

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This program tests the ap_get_list_item routine in ../main/util.c.
 *
 * The defines in this sample compile line are specific to Roy's system.
 * They should match whatever was used to compile Apache first.
 *
 gcc -g -O2 -I../os/unix -I../include -o test_parser \
 -DSOLARIS2=250 -Wall -DALLOC_DEBUG -DPOOL_DEBUG \
 ../main/alloc.o ../main/buff.o ../main/util.o \
 ../ap/libap.a -lsocket -lnsl test_parser.c
 *
 * Roy Fielding, 1999
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_auth: authentication
 *
 * Rob McCool & Brian Behlendorf.
 *
 * Adapted to Apache by rst.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:364 - 5

/* construct key
 * look it up
 * if found, test password
 *
 * mutexing here would be a big performance drag.
 * It's definitely unnecessary with some backends (like ndbm or gdbm)
 * Is there a risk in the general case? I guess the only risk we
 * care about is a race condition that gets us a dangling pointer
 * to no-longer-defined memory. Hmmm ...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:438 - 5

/*
 * At this point, we may have data cached, but the request may have
 * specified that cached data may not be used in a response.
 *
 * This is covered under RFC2616 section 14.9.4 (Cache Revalidation and
 * Reload Controls).
 *
 * - RFC2616 14.9.4 End to end reload, Cache-Control: no-cache, or Pragma:
 * no-cache. The server MUST NOT use a cached copy when responding to such
 * a request.
 */

 /* This value comes from the client's initial request. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:481 - 5

/*
 * At this point, we may have data cached, but the request may have
 * specified that cached data may not be used in a response.
 *
 * - RFC2616 14.9.2 What May be Stored by Caches. If Cache-Control:
 * no-store arrives, do not serve from or store to the cache.
 */

 /* This value comes from the client's initial request. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:693 - 5

/*
 * Having jumped through all the hoops and decided to cache the
 * response, call store_body() for each brigade, handling the
 * case where the provider can't swallow the full brigade. In this
 * case, we write the brigade we were passed out downstream, and
 * loop around to try and cache some more until the in brigade is
 * completely empty. As soon as the out brigade contains eos, call
 * commit_entity() to finalise the cached element.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:996 - 5

/*
 * what responses should we not cache?
 *
 * At this point we decide based on the response headers whether it
 * is appropriate _NOT_ to cache the data from the server. There are
 * a whole lot of conditions that prevent us from caching this data.
 * They are tested here one by one to be clear and unambiguous.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1009 - 5

/* RFC2616 13.4 we are allowed to cache 200, 203, 206, 300, 301 or 410
 * We allow the caching of 206, but a cache implementation might choose
 * to decline to cache a 206 if it doesn't know how to.
 * We include 304 Not Modified here too as this is the origin server
 * telling us to serve the cached copy.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1074 - 5

/* 200 OK response from HTTP/1.0 and up without Last-Modified,
 * Etag, Expires, Cache-Control:max-age, or Cache-Control:s-maxage
 * headers.
 */
 /* Note: mod-include clears last_modified/expires/etags - this
 * is why we have an optional function for a key-gen ;-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1353 - 5

/*
 * We now want to update the cache file header information with
 * the new date, last modified, expire and content length and write
 * it away to our cache file. First, we determine these values from
 * the response, using heuristics if appropriate.
 *
 * In addition, we make HTTP/1.1 age calculations and write them away
 * too.
 */

 /* store away the previously parsed cache control headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1467 - 5

/* Write away header information to cache. It is possible that we are
 * trying to update headers for an entity which has already been cached.
 *
 * This may fail, due to an unwritable cache area. E.g. filesystem full,
 * permissions problems or a read-only (re)mount. This must be handled
 * later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:685 - 5

/*
 * now walk our way back to the cache root, delete everything
 * in the way as far as possible
 *
 * Note: due to the way we constructed the file names in
 * header_file and data_file, we are guaranteed that the
 * cache_root is suffixed by at least one '/' which will be
 * turned into a terminating null by this loop. Therefore,
 * we won't either delete or go above our cache root.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:38 - 5

/*
 * mod_cache_socache: Shared Object Cache Based HTTP 1.1 Cache.
 *
 * Flow to Find the entry:
 * Incoming client requests URI /foo/bar/baz
 * Fetch URI key (may contain Format #1 or Format #2)
 * If format #1 (Contains a list of Vary Headers):
 * Use each header name (from .header) with our request values (headers_in) to
 * regenerate key using HeaderName+HeaderValue+.../foo/bar/baz
 * re-read in key (must be format #2)
 *
 * Format #1:
 * apr_uint32_t format;
 * apr_time_t expire;
 * apr_array_t vary_headers (delimited by CRLF)
 *
 * Format #2:
 * cache_socache_info_t (first sizeof(apr_uint32_t) bytes is the format)
 * entity name (sobj->name) [length is in cache_socache_info_t->name_len]
 * r->headers_out (delimited by CRLF)
 * CRLF
 * r->headers_in (delimited by CRLF)
 * CRLF
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:380 - 5

/*
 * Here we have to be very carefully: Not all DBM libraries are
 * smart enough to allow one to iterate over the elements and at the
 * same time delete expired ones. Some of them get totally crazy
 * while others have no problems. So we have to do it the slower but
 * more safe way: we first iterate over all elements and remember
 * those which have to be expired. Then in a second pass we delete
 * all those expired elements. Additionally we reopen the DBM file
 * to be really safe in state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2763 - 5

/*
 * Check If-Headers and existing locks for each resource in the source.
 * We will return a 424 response with a DAV:multistatus body.
 * The multistatus responses will contain the information about any
 * resource that fails the validation.
 *
 * We check the parent resource, too, if this is a MOVE. Moving the
 * resource effectively removes it from the parent collection, so we
 * must ensure that we have met the appropriate conditions.
 *
 * If a problem occurs with the Request-URI itself, then a plain error
 * (rather than a multistatus) will be returned.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2794 - 5

/*
 * Check If-Headers and existing locks for destination. Note that we
 * use depth==infinity since the target (hierarchy) will be deleted
 * before the move/copy is completed.
 *
 * Note that we are overwriting the target, which implies a DELETE, so
 * we are subject to the error/response rules as a DELETE. Namely, we
 * will return a 424 error if any of the validations fail.
 * (see dav_method_delete() for more information)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4535 - 5

/*
 * Check If-Headers and existing locks for destination. Note that we
 * use depth==infinity since the target (hierarchy) will be deleted
 * before the move/copy is completed.
 *
 * Note that we are overwriting the target, which implies a DELETE, so
 * we are subject to the error/response rules as a DELETE. Namely, we
 * will return a 424 error if any of the validations fail.
 * (see dav_method_delete() for more information)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4645 - 5

/* ### do we need to do anything with r->proxyreq ?? */

 /*
 * ### anything else to do here? could another module and/or
 * ### config option "e;take over"e; the handler here? i.e. how do
 * ### we lock down this hierarchy so that we are the ultimate
 * ### arbiter? (or do we simply depend on the administrator
 * ### to avoid conflicting configurations?)
 */

 /*
 * Set up the methods mask, since that's one of the reasons this handler
 * gets called, and lower-level things may need the info.
 *
 * First, set the mask to the methods we handle directly. Since by
 * definition we own our managed space, we unconditionally set
 * the r->allowed field rather than ORing our values with anything
 * any other module may have put in there.
 *
 * These are the HTTP-defined methods that we handle directly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:220 - 5

/* If the scheme or port was provided, then make sure that it matches
 the scheme/port of this request. If the request must be absolute,
 then require the (explicit/implicit) scheme/port be matching.

 ### hmm. if a port wasn't provided (does the parse return port==0?),
 ### but we're on a non-standard port, then we won't detect that the
 ### URI's port implies the wrong one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:956 - 5

/*
 ** For methods other than LOCK:
 **
 ** If we have no locks or if the resource is not being modified
 ** (per RFC 4918 the lock token is not required on resources
 ** we are not changing), then <seen_locktoken> can be set to true --
 ** pretending that we've already met the requirement of seeing one
 ** of the resource's locks in the If: header.
 **
 ** Otherwise, it must be cleared and we'll look for one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1681 - 5

/*
 ** If we don't have a (serious) error, and we have multistatus responses,
 ** then we need to construct an "e;error"e;. This error will be the overall
 ** status returned, and the multistatus responses will go into its body.
 **
 ** For certain methods, the overall error will be a 424. The default is
 ** to construct a standard 207 response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:633 - 5

/*
 ** (1) Copy all indirect locks from our parent;
 ** (2) Create indirect locks for the depth infinity, direct locks
 ** in our parent.
 **
 ** The append_locks call in the walker callback will do the indirect
 ** conversion, but we need to remove any direct locks that are NOT
 ** depth "e;infinity"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:755 - 5

/*
 ** The resource is no longer a locknull resource. This will remove
 ** the special marker.
 **
 ** Note that a locknull resource has already inherited all of the
 ** locks from the parent. We do not need to call dav_inherit_locks.
 **
 ** NOTE: some lock providers record locks for locknull resources using
 ** a different key than for regular resources. this will shift
 ** the lock information between the two key types.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:317 - 5

/*
 * You *could* change the following if you wanted to see the calling
 * sequence reported in the server's error_log, but beware - almost all of
 * these co-routines are called for every single request, and the impact
 * on the size (and readability) of the error_log is considerable.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:699 - 5

/*--------------------------------------------------------------------------*
 * *
 * Now let's declare routines for each of the callback hooks in order. *
 * (That's the order in which they're listed in the callback list, *not *
 * the order in which the server calls them! See the command_rec *
 * declaration near the bottom of this file.) Note that these may be *
 * called for situations that don't relate primarily to our function - in *
 * other words, the fixup handler shouldn't assume that the request has *
 * to do with "e;example_hooks"e; stuff. *
 * *
 * With the exception of the content handler, all of our routines will be *
 * called for each request, unless an earlier handler from another module *
 * aborted the sequence. *
 * *
 * There are three types of hooks (see include/ap_config.h): *
 * *
 * VOID : No return code, run all handlers declared by any module *
 * RUN_FIRST : Run all handlers until one returns something other *
 * than DECLINED. Hook runner result is result of last callback *
 * RUN_ALL : Run all handlers until one returns something other than OK *
 * or DECLINED. The hook runner returns that other value. If *
 * all hooks run, the hook runner returns OK. *
 * *
 * Handlers that are declared as "e;int"e; can return the following: *
 * *
 * OK Handler accepted the request and did its thing with it. *
 * DECLINED Handler took no action. *
 * HTTP_mumble Handler looked at request and found it wanting. *
 * *
 * See include/httpd.h for a list of HTTP_mumble status codes. Handlers *
 * that are not declared as int return a valid pointer, or NULL if they *
 * DECLINE to handle their phase for that specific request. Exceptions, if *
 * any, are noted with each routine. *
 *--------------------------------------------------------------------------*/

/*
 * This routine is called before the server processes the configuration
 * files. There is no return value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1261 - 5

/*
 * This routine is called to check to see if the resource being requested
 * requires authorisation.
 *
 * This is a RUN_FIRST hook. The return value is OK, DECLINED, or
 * HTTP_mumble. If we return OK, no other modules are called during this
 * phase.
 *
 * If *all* modules return DECLINED, the request is aborted with a server
 * error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_buffer.c --- Buffer the input and output filter stacks, collapse
 * many small buckets into fewer large buckets.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_deflate.c: Perform deflate content-encoding on the fly
 *
 * Written by Ian Holsman, Justin Erenkrantz, and Nick Kew
 */

/*
 * Portions of this software are based upon zlib code by Jean-loup Gailly
 * (zlib functions gz_open and gzwrite, check_header)
 */

/* zlib flags */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1 - 5

/* Copyright (c) 2003-11, WebThing Ltd
 * Copyright (c) 2011-, The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* GO_FASTER
 You can #define GO_FASTER to disable trace logging.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_substitute.c: Perform content rewriting on the fly
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:93 - 5

/* SubstituteInheritBefore wasn't the default behavior until 2.5.x,
 * and may be re-disabled as desired; the original default behavior
 * was to apply inherited subst patterns after locally scoped patterns.
 * In later 2.2 and 2.4 versions, SubstituteInheritBefore may be toggled
 * 'on' to follow the corrected/expected behavior, without violating POLS.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:241 - 5

/*
 * We want the behaviour to be predictable.
 * Therefore we try to always error out if the
 * line length is larger than the limit,
 * regardless of the content of the line. So,
 * let's check if the remaining non-matching
 * string does not exceed the limit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:102 - 5

/* Avoid number of times realloc is called. It could cause huge memory
 * requirement if line size is huge e.g 2 MB */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_autoindex.c: Handles the on-the-fly html index generation
 *
 * Rob McCool
 * 3/23/93
 *
 * Adapted to Apache by rst.
 *
 * Version sort added by Martin Pool <mbp@humbug.org.au>.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:275 - 5

/*
 * Add description text for a filename pattern. If the pattern has
 * wildcards already (or we need to add them), add leading and
 * trailing wildcards to it to ensure substring processing. If the
 * pattern contains a '/' anywhere, force wildcard matching mode,
 * add a slash to the prefix so that "e;bar/bletch"e; won't be matched
 * by "e;foobar/bletch"e;, and make a note that there's a delimiter;
 * the matching routine simplifies to just the actual filename
 * whenever it can. This allows definitions in parent directories
 * to be made for files in subordinate ones using relative paths.
 */

/*
 * Absent a strcasestr() function, we have to force wildcards on
 * systems for which "e;AAA"e; and "e;aaa"e; mean the same file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1044 - 5

/* This is a hack, but I can't find any better way to do this.
 * The problem is that we have already created the sub-request,
 * but we just inserted the OLD_WRITE filter, and the
 * sub-request needs to pass its data through the OLD_WRITE
 * filter, or things go horribly wrong (missing data, data in
 * the wrong order, etc). To fix it, if you create a
 * sub-request and then insert the OLD_WRITE filter before you
 * run the request, you need to make sure that the sub-request
 * data goes through the OLD_WRITE filter. Just steal this
 * code. The long-term solution is to remove the ap_r*
 * functions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_script: keeps all script-related ramblings together.
 *
 * Compliant to CGI/1.1 spec
 *
 * Adapted by rst from original NCSA code by Rob McCool
 *
 * Apache adds some new env vars; REDIRECT_URL and REDIRECT_QUERY_STRING for
 * custom error responses, and DOCUMENT_ROOT because we found it useful.
 * It also adds SERVER_ADMIN - useful for scripts to know who to mail when
 * they fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_script: keeps all script-related ramblings together.
 *
 * Compliant to cgi/1.1 spec
 *
 * Adapted by rst from original NCSA code by Rob McCool
 *
 * Apache adds some new env vars; REDIRECT_URL and REDIRECT_QUERY_STRING for
 * custom error responses, and DOCUMENT_ROOT because we found it useful.
 * It also adds SERVER_ADMIN - useful for scripts to know who to mail when
 * they fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:223 - 5

/* This routine is called to create the argument list to be passed
 * to the CGI script. When suexec is enabled, the suexec path, user, and
 * group are the first three arguments to be passed; if not, all three
 * must be NULL. The query info is split into separate arguments, where
 * "e;+"e; is the separator between keyword arguments.
 *
 * Do not process the args if they containing an '=' assignment.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1422 - 5

/* In HTTP/1.1, any method can have a body. However, most GET handlers
 * wouldn't know what to do with a request body if they received one.
 * This helper routine tests for and reads any message body in the request,
 * simply discarding whatever it receives. We need to do this because
 * failing to read the request body would cause it to be interpreted
 * as the next request on a persistent connection.
 *
 * Since we return an error status if the request is malformed, this
 * routine should be called at the beginning of a no-body handler, e.g.,
 *
 * if ((retval = ap_discard_request_body(r)) != OK) {
 * return retval;
 * }
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:741 - 5

/* Note: the following code was generated by the "e;shilka"e; tool from
 the "e;cocom"e; parsing/compilation toolkit. It is an optimized lookup
 based on analysis of the input keywords. Postprocessing was done
 on the shilka output, but the basic structure and analysis is
 from there. Should new HTTP methods be added, then manual insertion
 into this code is fine, or simply re-running the shilka tool on
 the appropriate input. */

 /* Note: it is also quite reasonable to just use our method_registry,
 but I'm assuming (probably incorrectly) we want more speed here
 (based on the optimizations the previous code was doing). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_request.c: functions to get and process requests
 *
 * Rob McCool 3/21/93
 *
 * Thoroughly revamped by rst for Apache. NB this file reads
 * best from the bottom up.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:131 - 5

/* The recursive error was caused by an ErrorDocument specifying
 * an internal redirect to a bad URI. ap_internal_redirect has
 * changed the filter chains to point to the ErrorDocument's
 * request_rec. Back out those changes so we can safely use the
 * original failing request_rec to send the canned error message.
 *
 * ap_send_error_response gets rid of existing resource filters
 * on the output side, so we can skip those.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:647 - 5

/* We check the memory footprint queued for this stream_id
 * and block if it exceeds our configured limit.
 * We will not split buckets to enforce the limit to the last
 * byte. After all, the bucket is already in memory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:57 - 5

/* The module initialization. Called once as apache hook, before any multi
 * processing (threaded or not) happens. It is typically at least called twice, 
 * see
 * http://wiki.apache.org/httpd/ModuleLife
 * Since the first run is just a "e;practise"e; run, we want to initialize for real
 * only on the second try. This defeats the purpose of the first dry run a bit, 
 * since apache wants to verify that a new configuration actually will work. 
 * So if we have trouble with the configuration, this will only be detected 
 * when the server has already switched.
 * On the other hand, when we initialize lib nghttp2, all possible crazy things 
 * might happen and this might even eat threads. So, better init on the real 
 * invocation, for now at least.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1035 - 5

/*
 * Does an generic ldap_compare operation. It accepts a cache that it will use
 * to lookup the compare in the cache. We cache two kinds of compares
 * (require group compares) and (require user compares). Each compare has a
 * different cache node: require group includes the DN; require user does not
 * because the require user cache is owned by the
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1425 - 5

/*
 * Stop looking at deeper levels of nested groups if we have reached the
 * max. Since we already checked the top-level group in uldap_cache_compare,
 * we don't need to check it again here - so if max_subgroup_depth is set
 * to 0, we won't check it (i.e. that is why we check < rather than <=).
 * We'll be calling uldap_cache_compare from here to check if the user is
 * in the next level before we recurse into that next level looking for
 * more subgroups.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_actions.c: executes scripts based on MIME type or HTTP method
 *
 * by Alexei Kosut; based on mod_cgi.c, mod_mime.c and mod_includes.c,
 * adapted by rst from original NCSA code by Rob McCool
 *
 * Usage instructions:
 *
 * Action mime/type /cgi-bin/script
 *
 * will activate /cgi-bin/script when a file of content type mime/type is
 * requested. It sends the URL and file path of the requested document using
 * the standard CGI PATH_INFO and PATH_TRANSLATED environment variables.
 *
 * Script PUT /cgi-bin/script
 *
 * will activate /cgi-bin/script when a request is received with the
 * HTTP method "e;PUT"e;. The available method names are defined in httpd.h.
 * If the method is GET, the script will only be activated if the requested
 * URI includes query information (stuff after a ?-mark).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_negotiation.c: keeps track of MIME types the client is willing to
 * accept, and contains code to handle type arbitration.
 *
 * rst
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1466 - 5

/* set_default_lang_quality() sets the quality we apply to variants
 * which have no language assigned to them. If none of the variants
 * have a language, we are not negotiating on language, so all are
 * acceptable, and we set the default q value to 1.0. However if
 * some of the variants have languages, we set this default to 0.0001.
 * The value of this default will be applied to all variants with
 * no explicit language -- which will have the effect of making them
 * acceptable, but only if no variants with an explicit language
 * are acceptable. The default q value set here is assigned to variants
 * with no language type in set_language_quality().
 *
 * Note that if using the RVSA/1.0 algorithm, we don't use this
 * fiddle.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1500 - 5

/* Set the language_quality value in the variant record. Also
 * assigns lang_index for ForceLanguagePriority.
 *
 * To find the language_quality value, we look for the 'q' value
 * of the 'best' matching language on the Accept-Language
 * header. The 'best' match is the language on Accept-Language
 * header which matches the language of this variant either fully,
 * or as far as the prefix marker (-). If two or more languages
 * match, use the longest string from the Accept-Language header
 * (see HTTP/1.1 [14.4])
 *
 * When a variant has multiple languages, we find the 'best'
 * match for each variant language tag as above, then select the
 * one with the highest q value. Because both the accept-header
 * and variant can have multiple languages, we now have a hairy
 * loop-within-a-loop here.
 *
 * If the variant has no language and we have no Accept-Language
 * items, leave the quality at 1.0 and return.
 *
 * If the variant has no language, we use the default as set by
 * set_default_lang_quality() (1.0 if we are not negotiating on
 * language, 0.001 if we are).
 *
 * Following the setting of the language quality, we drop through to
 * set the old 'lang_index'. This is set based on either the order
 * of the languages on the Accept-Language header, or the
 * order on the LanguagePriority directive. This is only used
 * in the negotiation if the language qualities tie.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _ _
 * _ __ ___ ___ __| | _ __ _____ ___ __(_) |_ ___
 * | '_ ` _ \ / _ \ / _` | | '__/ _ \ \ /\ / / '__| | __/ _ \
 * | | | | | | (_) | (_| | | | | __/\ V V /| | | | || __/
 * |_| |_| |_|\___/ \__,_|___|_| \___| \_/\_/ |_| |_|\__\___|
 * |_____|
 *
 * URL Rewriting Module
 *
 * This module uses a rule-based rewriting engine (based on a
 * regular-expression parser) to rewrite requested URLs on the fly.
 *
 * It supports an unlimited number of additional rule conditions (which can
 * operate on a lot of variables, even on HTTP headers) for granular
 * matching and even external database lookups (either via plain text
 * tables, DBM hash files or even external processes) for advanced URL
 * substitution.
 *
 * It operates on the full URLs (including the PATH_INFO part) both in
 * per-server context (httpd.conf) and per-dir context (.htaccess) and even
 * can generate QUERY_STRING parts on result. The rewriting result finally
 * can lead to internal subprocessing, external request redirection or even
 * to internal proxy throughput.
 *
 * This module was originally written in April 1996 and
 * gifted exclusively to the The Apache Software Foundation in July 1997 by
 *
 * Ralf S. Engelschall
 * rse engelschall.com
 * www.engelschall.com
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:144 - 5

/*
 * spdist() is taken from Kernighan & Pike,
 * _The_UNIX_Programming_Environment_
 * and adapted somewhat to correspond better to psychological reality.
 * (Note the changes to the return values)
 *
 * According to Pollock and Zamora, CACM April 1984 (V. 27, No. 4),
 * page 363, the correct order for this is:
 * OMISSION = TRANSPOSITION > INSERTION > SUBSTITUTION
 * thus, it was exactly backwards in the old version. -- PWP
 *
 * This routine was taken out of tcsh's spelling correction code
 * (tcsh-6.07.04) and re-converted to apache data types ("e;char"e; type
 * instead of tcsh's NLS'ed "e;Char"e;). Plus it now ignores the case
 * during comparisons, so is a "e;approximate strcasecmp()"e;.
 * NOTE that is still allows only _one_ real "e;typo"e;,
 * it does NOT try to correct multiple errors.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:553 - 5

/* mod_expires needs to run *before* the cache save filter which is
 * AP_FTYPE_CONTENT_SET-1. Otherwise, our expires won't be honored.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_ident: Handle RFC 1413 ident request
 * obtained from rfc1413.c
 *
 * rfc1413() speaks a common subset of the RFC 1413, AUTH, TAP and IDENT
 * protocols. The code queries an RFC 1413 etc. compatible daemon on a remote
 * host to look up the owner of a connection. The information should not be
 * used for authentication purposes. This routine intercepts alarm signals.
 *
 * Author: Wietse Venema, Eindhoven University of Technology,
 * The Netherlands.
 */

/* Some small additions for Apache --- ditch the "e;sccsid"e; var if
 * compiling with gcc (it *has* changed), include ap_config.h for the
 * prototypes it defines on at least one system (SunlOSs) which has
 * them missing from the standard header files, and one minor change
 * below (extra parens around assign "e;if (foo = bar) ..."e; to shut up
 * gcc -Wall).
 */

/* Rewritten by David Robinson */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Load balancer module for Apache proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:281 - 5

/*
 * Step Two: Make the Connection
 *
 * We have determined who to connect to. Now make the connection.
 */

 /*
 * At this point we have a list of one or more IP addresses of
 * the machine to connect to. If configured, reorder this
 * list so that the "e;best candidate"e; is first try. "e;best
 * candidate"e; could mean the least loaded server, the fastest
 * responding server, whatever.
 *
 * For now we do nothing, ie we get DNS round robin.
 * XXX FIXME
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:853 - 5

/* responses: 200, 421, 500, 501, 504, 530 */
 /* 200 Command okay. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 504 Command not implemented for that parameter. */
 /* 530 Not logged in. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:887 - 5

/* responses: 257, 500, 501, 502, 421, 550 */
 /* 257 "e;<directory-name>"e; <commentary> */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 550 Requested action not taken. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1295 - 5

/* possible results 202, 230, 332, 421, 500, 501, 503, 530 */
 /* 230 User logged in, proceed. */
 /* 332 Need account for login. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 503 Bad sequence of commands. */
 /* 530 Not logged in. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1373 - 5

/* responses: 250, 421, 500, 501, 502, 530, 550 */
 /* 250 Requested file action okay, completed. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 530 Not logged in. */
 /* 550 Requested action not taken. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1419 - 5

/* possible results: 227, 421, 500, 501, 502, 530 */
 /* 227 Entering Passive Mode (h1,h2,h3,h4,p1,p2). */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 530 Not logged in. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1514 - 5

/* possible results: 227, 421, 500, 501, 502, 530 */
 /* 227 Entering Passive Mode (h1,h2,h3,h4,p1,p2). */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 530 Not logged in. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1657 - 5

/* possible results: 200, 421, 500, 501, 502, 530 */
 /* 200 Command okay. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 530 Not logged in. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1756 - 5

/* possible results: 250, 421, 500, 501, 502, 530, 550 */
 /* 250 Requested file action okay, completed. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 530 Not logged in. */
 /* 550 Requested action not taken. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1901 - 5

/* possible results: 250, 421, 500, 501, 502, 530, 550 */
 /* 250 Requested file action okay, completed. */
 /* 421 Service not available, closing control connection. */
 /* 500 Syntax error, command unrecognized. */
 /* 501 Syntax error in parameters or arguments. */
 /* 502 Command not implemented. */
 /* 530 Not logged in. */
 /* 550 Requested action not taken. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1132 - 5

/*
 * Note: pread_len is the length of the response that we've mistakenly
 * read (assuming that we don't consider that an error via
 * ProxyBadHeader StartBody). This depends on buffer actually being
 * local storage to the calling code in order for pread_len to make
 * any sense at all, since we depend on buffer still containing
 * what was read by ap_getline() upon return.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1168 - 5

/* Find the colon separator */

 /* We may encounter invalid headers, usually from buggy
 * MS IIS servers, so we need to determine just how to handle
 * them. We can either ignore them, assume that they mark the
 * start-of-body (eg: a missing CRLF) or (the default) mark
 * the headers as totally bogus and return a 500. The sole
 * exception is an extra "e;HTTP/1.0 200, OK"e; line sprinkled
 * in between the usual MIME headers, which is a favorite
 * IIS bug.
 */
 /* XXX: The mask check is buggy if we ever see an HTTP/1.10 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1840 - 5

/* Any error in this function is a file I/O error;
 * if such an error occurs, the audit file will be closed
 * and removed, and this child won't be able to queue
 * anything for audit. (It is likely that other child
 * processes will have the same problem.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:124 - 5

/* read_dir() is remarkably like apr_match_glob(), which could
 * probably use some processing flags to indicate variations on
 * the basic behavior (and implement better error checking).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_io.c
 * I/O Functions
 */
 /* ``MY HACK: This universe.
 Just one little problem:
 core keeps dumping.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1105 - 5

/*
 * The hook is NOT registered with ap_hook_process_connection. Instead, it is
 * called manually from the churn () before it tries to read any data.
 * There is some problem if I accept conn_rec *. Still investigating..
 * Adv. if conn_rec * can be accepted is we can hook this function using the
 * ap_hook_process_connection hook.
 */

/* Perform the SSL handshake (whether in client or server mode), if
 * necessary, for the given connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1324 - 5

/* leaving this log message as an error for the moment,
 * according to the mod_ssl docs:
 * "e;level optional_no_ca is actually against the idea
 * of authentication (but can be used to establish
 * SSL test pages, etc.)"e;
 * optional_no_ca doesn't appear to work as advertised
 * in 1.x
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1155 - 5

/*
 * Authentication Handler:
 * Fake a Basic authentication from the X509 client certificate.
 *
 * This must be run fairly early on to prevent a real authentication from
 * occuring, in particular it must be run before anything else that
 * authenticates a user. This means that the Module statement for this
 * module should be LAST in the Configuration file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_mutex.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_mutex.c
 * Semaphore for Mutual Exclusion
 */
 /* ``Real programmers confuse
 Christmas and Halloween
 because DEC 25 = OCT 31.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_rand.c
 * Random Number Generator Seeding
 */
 /* ``The generation of random
 numbers is too important
 to be left to chance.'' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_vars.c
 * Variable Lookup Facility
 */
 /* ``Those of you who think they
 know everything are very annoying
 to those of us who do.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This file implements an OCSP client including a toy HTTP/1.0
 * client. Once httpd depends on a real HTTP client library, most of
 * this can be thrown away. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_stapling.c
 * OCSP Stapling Support
 */
 /* ``Where's the spoons?
 Where's the spoons?
 Where's the bloody spoons?''
 -- Alexei Sayle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:285 - 5

/**
 * Policy for Content-Length / Chunked Encoding.
 *
 * We follow a subset of the algorithm httpd uses, which is:
 *
 * IF we have not marked this connection as errored;
 * and the client isn't expecting 100-continue (PR47087 - more
 * input here could be the client continuing when we're
 * closing the request).
 * and the response status does not require a close;
 * and the response body has a defined length due to the status code
 * being 304 or 204, the request method being HEAD, already
 * having defined Content-Length or Transfer-Encoding: chunked, or
 * the request version being HTTP/1.1 and thus capable of being set
 * as chunked
 * THEN we support keepalive.
 *
 * Note: The server may choose to turn off keepalive for various reasons,
 * such as an imminent shutdown, or a Connection: close from the client,
 * but for our purposes we only care that keepalive was possible from
 * the application, not that keepalive actually took place.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:517 - 5

/**
 * Policy for No-Cache Requests.
 *
 * If the Cache-Control and/or Pragma header specifies that the content is not
 * cacheable, the request will be rejected.
 *
 * - If Cache-Control: no-cache
 * - If Pragma: no-cache
 * - If Cache-Control: no-store
 * - If Cache-Control: private
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:334 - 5

/* On HPUX 11.x, the 'ENOBUFS, No buffer space available'
 * error occurs because the accept() cannot complete.
 * You will not see ENOBUFS with 10.20 because the kernel
 * hides any occurrence from being returned to user space.
 * ENOBUFS with 11.x's TCP/IP stack is possible, and could
 * occur intermittently. As a work-around, we are going to
 * ignore ENOBUFS.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:346 - 5

/* EPROTO on certain older kernels really means
 * ECONNABORTED, so we need to ignore it for them.
 * See discussion in new-httpd archives nh.9701
 * search for EPROTO.
 *
 * Also see nh.9603, search for EPROTO:
 * There is potentially a bug in Solaris 2.x x<6,
 * and other boxes that implement tcp sockets in
 * userland (i.e. on top of STREAMS). On these
 * systems, EPROTO can actually result in a fatal
 * loop. See PR#981 for example. It's hard to
 * handle both uses of EPROTO.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4678 - 5

/* Deal with the poor soul who is trying to force path_info to be
 * accepted within the core_handler, where they will let the subreq
 * address its contents. This is toggled by the user in the very
 * beginning of the fixup phase (here!), so modules should override the user's
 * discretion in their own module fixup phase. It is tristate, if
 * the user doesn't specify, the result is AP_REQ_DEFAULT_PATH_INFO.
 * (which the module may interpret to its own customary behavior.)
 * It won't be touched if the value is no longer AP_ACCEPT_PATHINFO_UNSET,
 * so any module changing the value prior to the fixup phase
 * OVERRIDES the user's choice.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_log.c: Dealing with the logs and errors
 *
 * Rob McCool
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1297 - 5

/*
 * IF APLOG_TOCLIENT is set,
 * AND the error level is 'warning' or more severe,
 * AND there isn't already error text associated with this request,
 * THEN make the message text available to ErrorDocument and
 * other error processors.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:486 - 5

/* XXX there is an obscure path that this doesn't handle perfectly:
 * right after listener thread is created but before
 * listener_os_thread is set, the first worker thread hits an
 * error and starts graceful termination
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_event.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* #define APR_RING_DEBUG 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:287 - 5

/* pqXXXXXX: unixd.c has _tons_ of custom handling on return values
 * from accept, but it seems really crazy, it either worked, or didn't,
 * but taking this approach of swallowing the error it is possible we have a
 * fatal error on our listening socket, but we don't notice.
 *
 * Need to discuss this on dev@
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* #define APR_RING_DEBUG 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:250 - 5

/* The WORKER_SIGNAL signal will be sent from the main thread to the
 * worker threads during an ungraceful restart or shutdown.
 * This ensures that on systems (i.e., Linux) where closing the worker
 * socket doesn't awake the worker thread when it is polling on the socket
 * (especially in apr_wait_for_io_or_timeout() when handling
 * Keep-Alive connections), close_worker_sockets() and join_workers()
 * still function in timely manner and allow ungraceful shutdowns to
 * proceed to completion. Otherwise join_workers() doesn't return
 * before the main process decides the child process is non-responsive
 * and sends a SIGKILL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:282 - 5

/* XXX there is an obscure path that this doesn't handle perfectly:
 * right after listener thread is created but before
 * listener_os_thread is set, the first worker thread hits an
 * error and starts graceful termination
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1342 - 5

/* helps us terminate a little more
 * quickly than the dispatch of the signal thread
 * beats the Pipe of Death and the browsers
 */
 /* A terminating signal was received. Now join each of the
 * workers to clean them up.
 * If the worker already exited, then the join frees
 * their resources and returns.
 * If the worker hasn't exited, then this blocks until
 * they have (then cleans up).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:223 - 5

/* The Nagle algorithm says that we should delay sending partial
 * packets in hopes of getting more data. We don't want to do
 * this; we are not telnet. There are bad interactions between
 * persistent connections and Nagle's algorithm that have very severe
 * performance penalties. (Failing to disable Nagle is not much of a
 * problem with simple HTTP.)
 *
 * In spite of these problems, failure here is not a shooting offense.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:679 - 5

/* Send a TLS 1.0 close_notify alert. This is perhaps the
 * "e;least wrong"e; way to open and cleanly terminate an SSL
 * connection. It should "e;work"e; without noisy error logs if
 * the server actually expects SSLv3/TLSv1. With
 * SSLv23_server_method() OpenSSL's SSL_accept() fails
 * ungracefully on receipt of this message, since it requires
 * an 11-byte ClientHello message and this is too short. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:964 - 5

/* linuxthreads issue calling getpid() here:
 * This comparison won't match if the crashing thread is
 * some module's thread that runs in the parent process.
 * The fallout, which is limited to linuxthreads:
 * The special log message won't be written when such a
 * thread in the parent causes the parent to crash.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:575 - 5

/* Read past empty lines until we get a real request line,
 * a read error, the connection closes (EOF), or we timeout.
 *
 * We skip empty lines because browsers have to tack a CRLF on to the end
 * of POSTs to support old CERN webservers. But note that we may not
 * have flushed any previous response completely to the client yet.
 * We delay the flush as long as possible so that we can improve
 * performance for clients that are pipelining requests. If a request
 * is pipelined then we won't block during the (implicit) read() below.
 * If the requests aren't pipelined, then the client is still waiting
 * for the final buffer flush from us, and we will block in the implicit
 * read(). B_SAFEREAD ensures that the BUFF layer flushes if it will
 * have to block during a read.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * @file request.c
 * @brief functions to get and process requests
 *
 * @author Rob McCool 3/21/93
 *
 * Thoroughly revamped by rst for Apache. NB this file reads
 * best from the bottom up.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:392 - 5

/* Find the most relevant, recent walk cache to work from and provide
 * a copy the caller is allowed to munge. In the case of a sub-request
 * or internal redirect, this is the cache corresponding to the equivalent
 * invocation of the same function call in the "e;parent"e; request, if such
 * a cache exists. Otherwise it is the walk cache of the previous
 * invocation of the same function call in the current request, if
 * that exists; if not, then create a new walk cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:613 - 5

/* Pass the buckets to the next filter in the filter stack
 * checking return status for filter errors.
 * returns: OK if ap_pass_brigade returns APR_SUCCESS
 * AP_FILTER_ERROR if filter error exists
 * HTTP_INTERNAL_SERVER_ERROR for all other cases
 * logged with optional errmsg
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * util_mutex.c: Useful functions for determining allowable
 * mutexes and mutex settings
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:519 - 5

/* PR#38070: This fails because it gets confused when a
 * CGI Status header overrides ap_meets_conditions.
 *
 * We can fix that by dropping ap_meets_conditions when
 * Status has been set. Since this is the only place
 * cgi_status gets used, let's test it explicitly.
 *
 * The alternative would be to ignore CGI Status when
 * ap_meets_conditions returns anything interesting.
 * That would be safer wrt HTTP, but would break CGI.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Given one or more group identifers on the command line (e.g.,
 * "e;httpd"e; or "e;#-1"e;), figure out whether they'll be valid for
 * the server to use at run-time.
 *
 * If a groupname isn't found, or we can't setgid() to it, return
 * -1. If all groups are valid, return 0.
 *
 * This may need to be run as the superuser for the setgid() to
 * succeed; running it as any other user may result in a false
 * negative.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * htcacheclean.c: simple program for cleaning of
 * the disk cache of the Apache HTTP server
 *
 * Contributed by Andreas Steinmetz <ast domdv.de>
 * 8 Oct 2004
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdbm.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * htdbm.c: simple program for manipulating DBM
 * password databases for the Apache HTTP server
 *
 * Contributed by Mladen Turk <mturk mappingsoft.com>
 * 12 Oct 2001
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/******************************************************************************
 ******************************************************************************
 * NOTE! This program is not safe as a setuid executable! Do not make it
 * setuid!
 ******************************************************************************
 *****************************************************************************/
/*
 * htdigest.c: simple program for manipulating digest passwd file for Apache
 *
 * by Alexei Kosut, based on htpasswd.c, by Rob McCool
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:1 - 5

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * suexec.c -- "e;Wrapper"e; support program for suEXEC behaviour for Apache
 *
 ***********************************************************************
 *
 * NOTE! : DO NOT edit this code!!! Unless you know what you are doing,
 * editing this code might open up your system in unexpected
 * ways to would-be crackers. Every precaution has been taken
 * to make this code as safe as possible; alter it at your own
 * risk.
 *
 ***********************************************************************
 *
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Security options etc.
 *
 * Module derived from code originally written by Rob McCool
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_allowhandlers.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_allowmethods.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:897 - 4

/* From the spec:
 * For Authorizer response status values other than "e;200"e; (OK), the 
 * Web server denies access and sends the response status, headers,
 * and content back to the HTTP client.
 * But:
 * This only makes sense if this authorizer is authoritative.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Security options etc.
 *
 * Module derived from code originally written by Rob McCool
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Security options etc.
 *
 * Module derived from code originally written by Rob McCool
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Security options etc.
 *
 * Module derived from code originally written by Rob McCool
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1726 - 4

/* AUTH_GENERAL_ERROR (or worse)
 * We'll assume that the module has already said what its error
 * was in the logs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:186 - 4

/*
 * Situations to contend with:
 *
 * 1) Often the filter will be added by the content handler itself,
 * so the apreq_filter_init hook will not be run.
 * 2) If an auth handler uses apreq, the apreq_filter will ensure
 * it's part of the protocol filters. apreq_filter_init does NOT need
 * to notify the protocol filter that it must not continue parsing,
 * the apreq filter can perform this check itself. apreq_filter_init
 * just needs to ensure cfg->f does not point at it.
 * 3) If req->proto_input_filters and req->input_filters are apreq
 * filters, and req->input_filters->next == req->proto_input_filters,
 * it is safe for apreq_filter to "e;steal"e; the proto filter's context
 * and subsequently drop it from the chain.
 */


/* Examines the input_filter chain and moves the apreq filter(s) around
 * before the filter chain is stacked by ap_get_brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/handle.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/libprews.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*------------------------------------------------------------------
 These functions are to be called when the shared NLM starts and
 stops. By using these functions instead of defining a main()
 and calling ExitThread(TSR_THREAD, 0), the load time of the
 shared NLM is faster and memory size reduced.

 You may also want to override these in your own Apache module
 to do any cleanup other than the mechanism Apache modules
 provide.
------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_systemd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:708 - 4

/* Seems IIS does not enforce the requirement for \r\n termination
 * on HSE_REQ_SEND_RESPONSE_HEADER, but we won't panic...
 * ap_scan_script_header_err_strs handles this aspect for us.
 *
 * Parse them out, or die trying
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:453 - 4

/* Some twisted character [no pun intended] at MS decided that a
 * zero width joiner as the lead wide character would be ideal for
 * describing Unicode text files. This was further convoluted to
 * another MSism that the same character mapped into utf-8, EF BB BF
 * would signify utf-8 text files.
 *
 * Since MS configuration files are all protecting utf-8 encoded
 * Unicode path, file and resource names, we already have the correct
 * WinNT encoding. But at least eat the stupid three bytes up front.
 *
 * ### A more thorough check would also allow UNICODE text in buf, and
 * convert it to UTF-8 for invoking unicode scripts. Those are few
 * and far between, so leave that code an enterprising soul with a need.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:61 - 4

/*
 * create a new URL entity in the cache
 *
 * It is possible to store more than once entity per URL. This
 * function will always create a new entity, regardless of whether
 * other entities already exist for the same URL.
 *
 * The size of the entity is provided so that a cache module can
 * decide whether or not it wants to cache this particular entity.
 * If the size is unknown, a size of -1 should be set.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:260 - 4

/*
 * Check Content-Negotiation - Vary
 *
 * At this point we need to make sure that the object we found in
 * the cache is the same object that would be delivered to the
 * client, when the effects of content negotiation are taken into
 * effect.
 *
 * In plain english, we want to make sure that a language-negotiated
 * document in one language is not given to a client asking for a
 * language negotiated document in a different language by mistake.
 *
 * This code makes the assumption that the storage manager will
 * cache the req_hdrs if the response contains a Vary
 * header.
 *
 * RFC2616 13.6 and 14.44 describe the Vary mechanism.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:317 - 4

/*
 * RFC2616 13.3.4 Rules for When to Use Entity Tags and Last-Modified
 * Dates: An HTTP/1.1 caching proxy, upon receiving a conditional request
 * that includes both a Last-Modified date and one or more entity tags as
 * cache validators, MUST NOT return a locally cached response to the
 * client unless that cached response is consistent with all of the
 * conditional header fields in the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:675 - 4

/*
 * Invalidate a specific URL entity in all caches
 *
 * All cached entities for this URL are removed, usually in
 * response to a POST/PUT or DELETE.
 *
 * This function returns OK if at least one entity was found and
 * removed, and DECLINED if no cached entities were removed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:587 - 4

/*
 * The cached entity contained Cache-Control: no-cache, or a
 * no-cache with a header present, or a private with a header
 * present, or the cached entity has been invalidated in the
 * past, so treat as stale causing revalidation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:222 - 4

/* Add cache_remove_url filter to this request to remove a
 * stale cache entry if needed. Also put the current cache
 * request rec in the filter context, as the request that
 * is available later during running the filter may be
 * different due to an internal redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:543 - 4

/* Add cache_remove_url filter to this request to remove a
 * stale cache entry if needed. Also put the current cache
 * request rec in the filter context, as the request that
 * is available later during running the filter may be
 * different due to an internal redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1528 - 4

/* Before returning we need to handle the possible case of an
 * unwritable cache. Rather than leaving the entity in the cache
 * and having it constantly re-validated, now that we have recalled
 * the body it is safe to try and remove the url from the cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1823 - 4

/**
 * If an error has occurred, but we have a stale cached entry, restore the
 * filter stack from the save filter onwards. The canned error message will
 * be discarded in the process, and replaced with the cached response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2643 - 4

/*
 * CACHE_OUT must go into the filter chain after a possible DEFLATE
 * filter to ensure that already compressed cache objects do not
 * get compressed again. Incrementing filter type by 1 ensures
 * this happens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:30 - 4

/*
 * mod_cache_disk: Disk Based HTTP 1.1 Cache.
 *
 * Flow to Find the .data file:
 * Incoming client requests URI /foo/bar/baz
 * Generate <hash> off of /foo/bar/baz
 * Open <hash>.header
 * Read in <hash>.header file (may contain Format #1 or Format #2)
 * If format #1 (Contains a list of Vary Headers):
 * Use each header name (from .header) with our request values (headers_in) to
 * regenerate <hash> using HeaderName+HeaderValue+.../foo/bar/baz
 * re-read in <hash>.header (must be format #2)
 * read in <hash>.data
 *
 * Format #1:
 * apr_uint32_t format;
 * apr_time_t expire;
 * apr_array_t vary_headers (delimited by CRLF)
 *
 * Format #2:
 * disk_cache_info_t (first sizeof(apr_uint32_t) bytes is the format)
 * entity name (dobj->name) [length is in disk_cache_info_t->name_len]
 * r->headers_out (delimited by CRLF)
 * CRLF
 * r->headers_in (delimited by CRLF)
 * CRLF
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:69 - 4

/* This mode of operation will open a temporary connection to the 'target'
 * for each cache operation - this makes it safe against fork()
 * automatically. This mode is preferred when running a local proxy (over
 * unix domain sockets) because overhead is negligable and it reduces the
 * performance/stability danger of file-descriptor bloatage. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements. See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the "e;License"e;); you may not use this file except in compliance with
* the License. You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "e;AS IS"e; BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:868 - 4

/* Only consider 'idx' if the id matches, and the "e;removed"e;
 * flag isn't set, and the record is not expired.
 * Check the data length too to avoid a buffer overflow
 * in case of corruption, which should be impossible,
 * but it's cheap to be safe. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartbeat.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:25 - 4

/************************************************ COMPILE TIME DEBUG CONTROL */
/*
debug:
 #define MOD_MACRO_DEBUG 1

 gdb:
 run -f ./test/conf/test??.conf
*/
/* #define MOD_MACRO_DEBUG 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:826 - 4

/* recursion is detected here by looking at the config file name,
 * which may already contains "e;macro 'foo'"e;. Ok, it looks like a hack,
 * but otherwise it is uneasy to keep this data available somewhere...
 * the name has just the needed visibility and liveness.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Watchdog module.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Overview of what this is and does:
 * http://www.apache.org/~niq/dbd.html
 * or
 * http://apache.webthing.com/database/
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:354 - 4

/* dbd_setup in 2.2.3 and under was causing spurious error messages
 * when dbd isn't configured. We can stop that with a quick check here
 * together with a similar check in ap_dbd_open (where being
 * unconfigured is a genuine error that must be reported).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
** DAV extension module for Apache 2.0.*
** - Database support using DBM-style databases,
** part of the filesystem repository implementation
*/

/*
** This implementation uses a SDBM database per file and directory to
** record the properties. These databases are kept in a subdirectory (of
** the directory in question or the directory that holds the file in
** question) named by the macro DAV_FS_STATE_DIR (.DAV). The filename of the
** database is equivalent to the target filename, and is
** DAV_FS_STATE_FILE_FOR_DIR (.state_for_dir) for the directory itself.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
** DAV filesystem lock implementation
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
** DAV filesystem-based repository provider
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:597 - 4

/* ### CRAP. inconsistency. */
 /* ### should perform some cleanup at the target if we still
 ### have the original files */

 /* Change the error to reflect the bad server state. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Generic DAV lock implementation that a DAV provider can use.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2137 - 4

/* If an error occurred during the resource walk, there's
 basically nothing we can do but abort the connection and
 log an error. This is one of the limitations of HTTP; it
 needs to "e;know"e; the entire status of the response before
 generating it, which is just impossible in these streamy
 response situations. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4146 - 4

/* If an error occurred during the report delivery, there's
 basically nothing we can do but abort the connection and
 log an error. This is one of the limitations of HTTP; it
 needs to "e;know"e; the entire status of the response before
 generating it, which is just impossible in these streamy
 response situations. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1047 - 4

/*
 ** Delete the property. Ignore errors -- the property is there, or
 ** we are deleting it for a second time.
 **
 ** http://tools.ietf.org/html/rfc4918#section-14.23 says
 ** "e;Specifying the removal of a property that does not exist is
 ** not an error"e;
 */
 /* ### but what about other errors? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/providers.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
** DAV extension module for Apache 2.0.*
** - various utilities, repository-independent
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:860 - 4

/* DBG1("e;validate: <%s>"e;, resource->uri); */

 /*
 ** The resource will have one of three states:
 **
 ** 1) No locks. We have no special requirements that the user supply
 ** specific locktokens. One of the state lists must match, and
 ** we're done.
 **
 ** 2) One exclusive lock. The locktoken must appear *anywhere* in the
 ** If: header. Of course, asserting the token in a "e;Not"e; term will
 ** quickly fail that state list :-). If the locktoken appears in
 ** one of the state lists *and* one state list matches, then we're
 ** done.
 **
 ** 3) One or more shared locks. One of the locktokens must appear
 ** *anywhere* in the If: header. If one of the locktokens appears,
 ** and we match one state list, then we are done.
 **
 ** The <seen_locktoken> variable determines whether we have seen one
 ** of this resource's locktokens in the If: header.
 */

 /*
 ** If this is a new lock request, <flags> will contain the requested
 ** lock scope. Three rules apply:
 **
 ** 1) Do not require a (shared) locktoken to be seen (when we are
 ** applying another shared lock)
 ** 2) If the scope is exclusive and we see any locks, fail.
 ** 3) If the scope is shared and we see an exclusive lock, fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:929 - 4

/*
 ** There are no locks, so we can pretend that we've already met
 ** any requirement to find the resource's locks in an If: header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1368 - 4

/* assert seen_locktoken == 0 */

 /*
 ** ifhdr_scan != NULL implies we found a matching state_list.
 **
 ** Since we're still here, it also means that we have not yet found
 ** one the resource's locktokens in the If: header.
 **
 ** Scan all the if_headers and states looking for one of this
 ** resource's locktokens. Note that we need to go back and scan them
 ** all -- we may have aborted a scan with a failure before we saw a
 ** matching token.
 **
 ** Note that seen_locktoken == 0 implies lock_list != NULL which implies
 ** locks_hooks != NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
** DAV repository-independent lock functions
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_bucketeer.c: split buckets whenever we find a control-char
 *
 * Written by Ian Holsman
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:92 - 4

/* XXX: Seriously flawed; we do not pay attention to embedded
 * \0's in the request body, these should be escaped; however,
 * the logging function already performs a significant amount
 * of escaping, and so any escaping would be double-escaped.
 * The coding solution is to throw away the current logic
 * within ap_log_error, and introduce new vformatter %-escapes
 * for escaping text, and for binary text (fixed len strings).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_case_filter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_case_filter_in.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * An example input filter - this converts input to upper case. Note that
 * because of the moment it gets inserted it does NOT convert request headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:82 - 4

/*--------------------------------------------------------------------------*/
/* */
/* Data declarations. */
/* */
/* Here are the static cells and structure declarations private to our */
/* module. */
/* */
/*--------------------------------------------------------------------------*/

/*
 * Sample configuration record. Used for both per-directory and per-server
 * configuration data.
 *
 * It's perfectly reasonable to have two different structures for the two
 * different environments. The same command handlers will be called for
 * both, though, so the handlers need to be able to tell them apart. One
 * possibility is for both structures to start with an int which is 0 for
 * one and 1 for the other.
 *
 * Note that while the per-directory and per-server configuration records are
 * available to most of the module handlers, they should be treated as
 * READ-ONLY by all except the command and merge handlers. Sometimes handlers
 * are handed a record that applies to the current location by implication or
 * inheritance, and modifying it will change the rules for other locations.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:150 - 4

/* at this point we are ready to buffer.
 * Buffering takes advantage of an optimisation in the handling of
 * bucket brigades. Heap buckets are always created at a fixed
 * size, regardless of the size of the data placed into them.
 * The apr_brigade_write() call will first try and pack the data
 * into any free space in the most recent heap bucket, before
 * allocating a new bucket if necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:569 - 4

/* incompatible translation
 * if our filter instance is incompatible with an instance
 * already in place, noop our instance
 * Notes:
 * . We are only willing to noop our own instance.
 * . It is possible to noop another instance which has not
 * yet run, but this is not currently implemented.
 * Hopefully it will not be needed.
 * . It is not possible to noop an instance which has
 * already run.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_data.c --- Turn the response into an rfc2397 data URL, suitable for
 * displaying as inline content on a page.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:462 - 4

/*
 * We can ignore Z_BUF_ERROR because:
 * When we call libz_func we can assume that
 *
 * - avail_in is zero (due to the surrounding code that calls
 * flush_libz_buffer)
 * - avail_out is non zero due to our actions some lines above
 *
 * So the only reason for Z_BUF_ERROR is that the internal libz
 * buffers are now empty and thus we called libz_func one time
 * too often. This does not hurt. It simply says that we are done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:585 - 4

/* If we don't have a context, we need to ensure that it is okay to send
 * the deflated content. If we have a context, that means we've done
 * this before and we liked it.
 * This could be not so nice if we always fail. But, if we succeed,
 * we're in better shape.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1547 - 4

/*
 * At this point we have decided to filter the content, so change
 * important content metadata before sending any response out.
 * Content-Encoding was already reset by the check_gzip() call.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_ext_filter allows Unix-style filters to filter http content.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:199 - 4

/* check protocol
 *
 * FIXME:
 * This is a quick hack and almost certainly buggy.
 * The idea is that by putting this in mod_filter, we relieve
 * filter implementations of the burden of fixing up HTTP headers
 * for cases that are routinely affected by filters.
 *
 * Default is ALWAYS to do nothing, so as not to tread on the
 * toes of filters which want to do it themselves.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1757 - 4

/*
 * <!--#include virtual|file="e;..."e; [onerror|virtual|file="e;..."e;] ... -->
 *
 * Output each file/virtual in turn until one of them returns an error.
 * On error, ignore all further file/virtual attributes until we reach
 * an onerror attribute, where we make an attempt to serve the onerror
 * virtual url. If onerror fails, or no onerror is present, the default
 * error string is inserted into the stream.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_request.c --- HTTP routines to set aside or process request bodies.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:382 - 4

/*
 * Here's the concept:
 * Read in the data and look for newlines. Once we
 * find a full "e;line"e;, add it to our working brigade.
 * If we've finished reading the brigade and we have
 * any left over data (not a "e;full"e; line), store that
 * for the next pass.
 *
 * Note: anything stored in ctx->linebb for sure does not have
 * a newline char, so we don't concat that bb with the
 * new bb, since we would spending time searching for the newline
 * in data we know it doesn't exist. So instead, we simply scan
 * our current bb and, if we see a newline, prepend ctx->linebb
 * to the front of it. This makes the code much less straight-
 * forward (otherwise we could APR_BRIGADE_CONCAT(ctx->linebb, bb)
 * and just scan for newlines and not bother with needing to know
 * when ctx->linebb needs to be reset) but also faster. We'll take
 * the speed.
 *
 * Note: apr_brigade_split_line would be nice here, but we
 * really can't use it since we need more control and we want
 * to re-use already read bucket data.
 *
 * See mod_include if still confused :)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:1 - 4

/* Copyright (c) 2007-11, WebThing Ltd
 * Copyright (c) 2011-, The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:53 - 4

/*
 * XXX: Check all those ap_assert()s ans replace those that should not happen
 * XXX: with AP_DEBUG_ASSERT and those that may happen with proper error
 * XXX: handling.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Info Module. Display configuration information for the server and
 * all included modules.
 *
 * <Location /server-info>
 * SetHandler server-info
 * </Location>
 *
 * GET /server-info - Returns full configuration page for server and all modules
 * GET /server-info?server - Returns server configuration only
 * GET /server-info?module_name - Returns configuration for a single module
 * GET /server-info?list - Returns quick list of included modules
 * GET /server-info?config - Returns full configuration
 * GET /server-info?hooks - Returns a listing of the modules active for each hook
 *
 * Original Author:
 * Rasmus Lerdorf <rasmus vex.net>, May 1996
 *
 * Modified By:
 * Lou Langholtz <ldl usi.utah.edu>, July 1997
 *
 * Apache 2.0 Port:
 * Ryan Morgan <rmorgan covalent.net>, August 2000
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * byterange_filter.c --- HTTP byterange filter and friends.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * chunk_filter.c --- HTTP/1.1 chunked transfer encoding filter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_filter.c --- HTTP routines which either filters or deal with filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1643 - 4

/* work around our silent swallowing of error messages by mapping
 * error codes at this point, and sending an error bucket back
 * upstream.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1743 - 4

/*
 * Remove all data buckets that are in a brigade after an EOC bucket
 * was seen, as an EOC bucket tells us that no (further) resource
 * and protocol data should go out to the client. OTOH meta buckets
 * are still welcome as they might trigger needed actions down in
 * the chain (e.g. in network filters like SSL).
 * Remark 1: It is needed to dump ALL data buckets in the brigade
 * since an filter in between might have inserted data
 * buckets BEFORE the EOC bucket sent by the original
 * sender and we do NOT want this data to be sent.
 * Remark 2: Dumping all data buckets here does not necessarily mean
 * that no further data is send to the client as:
 * 1. Network filters like SSL can still be triggered via
 * meta buckets to talk with the client e.g. for a
 * clean shutdown.
 * 2. There could be still data that was buffered before
 * down in the chain that gets flushed by a FLUSH or an
 * EOS bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_protocol.c --- routines which directly communicate with the client.
 *
 * Code originally by Rob McCool; much redone by Robert S. Thau
 * and the Apache Software Foundation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:378 - 4

/* Give quick handlers a shot at serving the request on the fast
 * path, bypassing all of the other Apache hooks.
 *
 * This hook was added to enable serving files out of a URI keyed
 * content cache ( e.g., Mike Abbott's Quick Shortcut Cache,
 * described here: http://oss.sgi.com/projects/apache/mod_qsc.html )
 *
 * It may have other uses as well, such as routing requests directly to
 * content handlers that have the ability to grok HTTP and do their
 * own access checking, etc (e.g. servlet engines).
 *
 * Use this hook with extreme care and only if you know what you are
 * doing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_mime.c: Sends/gets MIME headers for requests
 *
 * Rob McCool
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_bucket_eoc.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_bucket_eos.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:109 - 4

/* How many file handles is it safe to use for transfer
 * to the master connection to be streamed out? 
 * Is there a portable APR rlimit on NOFILES? Have not
 * found it. And if, how many of those would we set aside?
 * This leads all into a process wide handle allocation strategy
 * which ultimately would limit the number of accepted connections
 * with the assumption of implicitly reserving n handles for every 
 * connection and requiring modules with excessive needs to allocate
 * from a central pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:235 - 4

/* The HTTP/1.1 network output buffer/flush behaviour does not
 * give optimal performance in the HTTP/2 case, as the pattern of
 * buckets (data/eor/eos) is different.
 * As long as we have not found out the "e;best"e; way to deal with
 * this, force a flush at least every WRITE_BUFFER_SIZE amount
 * of data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:428 - 4

/*
 * Add the HTTP_IN filter here to ensure that ap_discard_request_body
 * called by ap_die and by ap_send_error_response works correctly on
 * status codes that do not cause the connection to be dropped and
 * in situations where the connection should be kept alive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1225 - 4

/* If this stream is not a pushed one itself,
 * and HTTP/2 server push is enabled here,
 * and the response is in the range 200-299 *),
 * and the remote side has pushing enabled,
 * -> find and perform any pushes on this stream
 * *before* we submit the stream response itself.
 * This helps clients avoid opening new streams on Link
 * headers that get pushed right afterwards.
 * 
 * *) the response code is relevant, as we do not want to 
 * make pushes on 401 or 403 codes, neiterh on 301/302
 * and friends. And if we see a 304, we do not push either
 * as the client, having this resource in its cache, might
 * also have the pushed ones as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * util_ldap.c: LDAP things
 *
 * Original code from auth_ldap module for Apache v1.3:
 * Copyright 1998, 1999 Enbridge Pipelines Inc.
 * Copyright 1999-2001 Dave Carrigan
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:578 - 4

/* loop trying to bind up to st->retries times if LDAP_SERVER_DOWN or LDAP_TIMEOUT
 * are returned. Close the connection before the first retry, and then on every
 * other retry.
 *
 * On Success or any other error, break out of the loop.
 *
 * NOTE: Looping is probably not a great idea. If the server isn't
 * responding the chances it will respond after a few tries are poor.
 * However, the original code looped and it only happens on
 * the error condition.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:226 - 4

/*
 Purges a cache that has gotten full. We keep track of the time that we
 added the entry that made the cache 3/4 full, then delete all entries
 that were added before that time. It's pretty simplistic, but time to
 purge is only O(n), which is more important.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_journald.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Written by Bojan Smojver <bojan rexursive.com>.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:208 - 4

/* POSIX.1 defines PIPE_BUF as the maximum number of bytes that is
 * guaranteed to be atomic when writing a pipe. And PIPE_BUF >= 512
 * is guaranteed. So we'll just guess 512 in the event the system
 * doesn't have this. Now, for file writes there is actually no limit,
 * the entire write is atomic. Whether all systems implement this
 * correctly is another question entirely ... so we'll just use PIPE_BUF
 * because it's probably a good guess as to what is implemented correctly
 * everywhere.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * See also support/check_forensic.
 * Relate the forensic log to the transfer log by including
 * %{forensic-id}n in the custom log format, for example:
 * CustomLog logs/custom "e;%h %l %u %t \"e;%r\"e; %>s %b %{forensic-id}n"e;
 *
 * Credit is due to Tina Bird <tbird precision-guesswork.com>, whose
 * idea this module was.
 *
 * Ben Laurie 29/12/2003
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_syslog.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_apr.c:1 - 4

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:1 - 4

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:1 - 4

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_passwd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1 - 4

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2635 - 4

/* Hack, hack, hack...! TODO: Make this actually work properly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:1 - 4

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1 - 4

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_alias.c: Stuff for dealing with directory aliases
 *
 * Original by Rob McCool, rewritten in succession by David Robinson
 * and rst.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:462 - 4

/* XXX This is as SLOW as can be, next step, we optimize
 * and merge to whatever part of the found path was already
 * canonicalized. After I finish eliminating os canonical.
 * Better fail test for ap_server_root_relative needed here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:585 - 4

/* XXX This is as SLOW as can be, next step, we optimize
 * and merge to whatever part of the found path was already
 * canonicalized. After I finish eliminating os canonical.
 * Better fail test for ap_server_root_relative needed here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_dir.c: handle default index files, and trailing-/ redirects
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:364 - 4

/* If the request returned something other than 404 (or 200),
 * it means the module encountered some sort of problem. To be
 * secure, we should return the error, rather than allow autoindex
 * to create a (possibly unsafe) directory index.
 *
 * So we store the error, and if none of the listed files
 * exist, we return the last error response we got, instead
 * of a directory listing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1554 - 4

/* Variant has one (or more) languages. Look for the best
 * match. We do this by going through each language on the
 * variant description looking for a match on the
 * Accept-Language header. The best match is the longest
 * matching language on the header. The final result is the
 * best q value from all the languages on the variant
 * description.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2416 - 4

/* Sets response headers for a negotiated response.
 * neg->is_transparent determines whether a transparently negotiated
 * response or a plain `server driven negotiation' response is
 * created. Applicable headers are Alternates, Vary, and TCN.
 *
 * The Vary header we create is sometimes longer than is required for
 * the correct caching of negotiated results by HTTP/1.1 caches. For
 * example if we have 3 variants x.html, x.ps.en and x.ps.nl, and if
 * the Accept: header assigns a 0 quality to .ps, then the results of
 * the two server-side negotiation algorithms we currently implement
 * will never depend on Accept-Language so we could return `Vary:
 * negotiate, accept' instead of the longer 'Vary: negotiate, accept,
 * accept-language' which the code below will return. A routine for
 * computing the exact minimal Vary header would be a huge pain to code
 * and maintain though, especially because we need to take all possible
 * twiddles in the server-side negotiation algorithms into account.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:112 - 4

/*
 * in order to improve performance on running production systems, you
 * may strip all rewritelog code entirely from mod_rewrite by using the
 * -DREWRITELOG_DISABLED compiler option.
 *
 * DO NOT USE THIS OPTION FOR PUBLIC BINARY RELEASES. Otherwise YOU are
 * responsible for answering all the mod_rewrite questions out there.
 */
/* If logging is limited to APLOG_DEBUG or lower, disable rewrite log, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4975 - 4

/* I think, that hack needs an explanation:
 * well, here is it:
 * mod_rewrite was written for unix systems, were
 * absolute file-system paths start with a slash.
 * URL-paths _also_ start with slashes, so they
 * can be easily compared with system paths.
 *
 * the following assumes, that the actual url-path
 * may be prefixed by the current directory path and
 * tries to replace the system path with the RewriteBase
 * URL.
 * That assumption is true if we use a RewriteRule like
 *
 * RewriteRule ^foo bar [R]
 *
 * (see apply_rewrite_rule function)
 * However on systems that don't have a / as system
 * root this will never match, so we skip the / after the
 * hostname and compare/substitute only the stuff after it.
 *
 * (note that cp was already increased to the right value)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:331 - 4

/*
 * Okay... we didn't find anything. Now we take out the hard-core
 * power tools. There are several cases here. Someone might have
 * entered a wrong extension (.htm instead of .html or vice
 * versa) or the document could be negotiated. At any rate, now
 * we just compare stuff before the first dot. If it matches, we
 * figure we got us a match. This can result in wrong things if
 * there are files of different content types but the same prefix
 * (e.g. foo.gif and foo.html) This code will pick the first one
 * it finds. Better than a Not Found, though.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:371 - 4

/*
 * Conditions for immediate redirection:
 * a) the first candidate was not found by stripping the suffix
 * AND b) there exists only one candidate OR the best match is not
 * ambiguous
 * then return a redirection right away.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_vhost_alias.c: support for dynamically configured mass virtual hosting
 *
 * Copyright (c) 1998-1999 Demon Internet Ltd.
 *
 * This software was submitted by Demon Internet to the Apache Software Foundation
 * in May 1999. Future revisions and derivatives of this source code
 * must acknowledge Demon Internet as the original contributor of
 * this module. All other licensing and usage conditions are those
 * of the Apache Software Foundation.
 *
 * Originally written by Tony Finch <fanf@demon.net> <dot@dotat.at>.
 *
 * Implementation ideas were taken from mod_alias.c. The overall
 * concept is derived from the OVERRIDE_DOC_ROOT/OVERRIDE_CGIDIR
 * patch to Apache 1.3b3 and a similar feature in Demon's thttpd,
 * both written by James Grinter <jrg@blodwen.demon.co.uk>.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:322 - 4

/* It sucks to require this subrequest to complete, because this
 * means people must leave their meta files accessible to the world.
 * A better solution might be a "e;safe open"e; feature of pfopen to avoid
 * pipes, symlinks, and crap like that.
 *
 * In fact, this doesn't suck. Because <Location > blocks are never run
 * against sub_req_lookup_file, the meta can be somewhat protected by
 * either masking it with a <Location > directive or alias, or stowing
 * the file outside of the web document tree, while providing the
 * appropriate directory blocks to allow access to it as a file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_unique_id.c: generate a unique identifier for each request
 *
 * Original author: Dean Gaudet <dgaudet@arctic.org>
 * UUencoding modified by: Alvaro Martinez Echevarria <alvaro@lander.es>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_link.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_utils.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:664 - 4

/* Note: The strcmp() below catches cases where there
 * was no regex substitution. This is so cases like:
 *
 * ProxyPassMatch \.gif balancer://foo
 *
 * will work "e;as expected"e;. The upshot is that the 2
 * directives below act the exact same way (ie: $1 is implied):
 *
 * ProxyPassMatch ^(/.*\.gif)$ balancer://foo
 * ProxyPassMatch ^(/.*\.gif)$ balancer://foo$1
 *
 * which may be confusing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1200 - 4

/* Unrecoverable server error.
 * We can not failover to another worker.
 * Mark the worker as unusable if member of load balancer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* AJP routines for Apache proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:641 - 4

/* clear r->status for override error, otherwise ErrorDocument
 * thinks that this is a recursive error, and doesn't find the
 * custom error page
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:703 - 4

/*
 * Ensure that we sent an EOS bucket thru the filter chain, if we already
 * have sent some data. Maybe ap_proxy_backend_broke was called and added
 * one to the brigade already (no longer making it empty). So we should
 * not do this in this case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:352 - 4

/* All the workers are in error state or disabled.
 * If the balancer has a timeout sleep for a while
 * and try again to find the worker. The chances are
 * that some other thread will release a connection.
 * By default the timeout is not set, and the server
 * returns SERVER_BUSY.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:467 - 4

/* Step 1: check if the url is for us
 * The url we can handle starts with 'balancer://'
 * If balancer is already provided skip the search
 * for balancer, because this is failover attempt.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* CONNECT method for Apache proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* FTP routines for Apache proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* HTTP routines for Apache proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1694 - 4

/* clear r->status for override error, otherwise ErrorDocument
 * thinks that this is a recursive error, and doesn't find the
 * custom error page
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * mod_proxy_scgi.c
 * Proxy backend module for the SCGI protocol
 * (http://python.ca/scgi/protocol.txt)
 *
 * André Malo (nd/perlig.de), August 2007
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Utility routines for Apache proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2301 - 4

/*
 * Figure out if our passed in proxy_conn_rec has a usable
 * address cached.
 *
 * TODO: Handle this much better... 
 *
 * XXX: If generic workers are ever address-reusable, we need 
 * to check host and port on the conn and be careful about
 * spilling the cached addr from the worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:520 - 4

/* if an error occurs or no session has been configured, we ignore
 * the broken session and allow it to be recreated from scratch on save
 * if necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Memory handler for a plain memory divided in slot.
 * This one uses plain memory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Memory handler for a shared memory divided in slot.
 * This one uses shared memory.
 *
 * Shared memory is cleaned-up for each restart, graceful or
 * otherwise.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * mod_ssl.c
 * Apache API interface structures
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:331 - 4

/* Also don't call CRYPTO_cleanup_all_ex_data here; any registered
 * ex_data indices may have been cached in static variables in
 * OpenSSL; removing them may cause havoc. Notably, with OpenSSL
 * versions >= 0.9.8f, COMP_CTX cleanups would not be run, which
 * could result in a per-connection memory leak (!). */

 /*
 * TODO: determine somewhere we can safely shove out diagnostics
 * (when enabled) at this late stage in the game:
 * CRYPTO_mem_leaks_fp(stderr);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_log_config.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_init.c
 * Initialization of Servers
 */
 /* ``Recursive, adj.;
 see Recursive.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:930 - 4

/*
 * Optionally configure extra server certificate chain certificates.
 * This is usually done by OpenSSL automatically when one of the
 * server cert issuers are found under SSLCACertificatePath or in
 * SSLCACertificateFile. But because these are intended for client
 * authentication it can conflict. For instance when you use a
 * Global ID server certificate you've to send out the intermediate
 * CA certificate, too. When you would just configure this with
 * SSLCACertificateFile and also use client authentication mod_ssl
 * would accept all clients also issued by this CA. Obviously this
 * isn't what we want in this situation. So this feature here exists
 * to allow one to explicity configure CA certificates which are
 * used only for the server certificate chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:408 - 4

/* The reason I'm not offering brigade_consume yet
 * across to apr-util is that the following call
 * illustrates how borked that API really is. For
 * this sort of case (caller provided buffer) it
 * would be much more trivial for apr_bucket_consume
 * to do all the work that follows, based on the
 * particular characteristics of the bucket we are
 * consuming here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_kernel.c
 * The SSL engine kernel
 */
 /* ``It took me fifteen years to discover
 I had no talent for programming, but
 I couldn't give it up because by that
 time I was too famous.''
 -- Unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:670 - 4

/*
 * override of SSLVerifyClient
 *
 * We force a renegotiation if the reconfigured/new verify type is
 * stronger than the currently active verify type.
 *
 * The order is: none << optional_no_ca << optional << require
 *
 * Additionally the following optimization is possible here: When the
 * currently active verify type is "e;none"e; but a client certificate is
 * already known/present, it's enough to manually force a client
 * verification but at least skip the I/O-intensive renegotiation
 * handshake.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:776 - 4

/* If we're handling a request for a vhost other than the default one,
 * then we need to make sure that client authentication is properly
 * enforced. For clients supplying an SNI extension, the peer
 * certificate verification has happened in the handshake already
 * (and r->server == handshakeserver). For non-SNI requests,
 * an additional check is needed here. If client authentication
 * is configured as mandatory, then we can only proceed if the
 * CA list doesn't have to be changed (OpenSSL doesn't provide
 * an option to change the list for an existing session).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:815 - 4

/* If a renegotiation is now required for this location, and the
 * request includes a message body (and the client has not
 * requested a "e;100 Continue"e; response), then the client will be
 * streaming the request body over the wire already. In that
 * case, it is not possible to stop and perform a new SSL
 * handshake immediately; once the SSL library moves to the
 * "e;accept"e; state, it will reject the SSL packets which the client
 * is sending for the request body.
 *
 * To allow authentication to complete in this auth hook, the
 * solution used here is to fill a (bounded) buffer with the
 * request body, and then to reinject that request body later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:944 - 4

/* Additional mitigation for CVE-2009-3555: At this point,
 * before renegotiating, an (entire) request has been read
 * from the connection. An attacker may have sent further
 * data to "e;prefix"e; any subsequent request by the victim's
 * client after the renegotiation; this data may already
 * have been read and buffered. Forcing a connection
 * closure after the response ensures such data will be
 * discarded. Legimately pipelined HTTP requests will be
 * retried anyway with this approach. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_engine_pphrase.c
 * Pass Phrase Dialog
 */
 /* ``Treat your password like your
 toothbrush. Don't let anybody
 else use it, and get a new one
 every six months.''
 -- Clifford Stoll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:512 - 4

/*
 * stderr has already been redirected to the error_log.
 * rather than attempting to temporarily rehook it to the terminal,
 * we print the prompt to stdout before EVP_read_pw_string turns
 * off tty echo
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_util.c
 * Utility Functions
 */
 /* ``Every day of my life
 I am forced to add another
 name to the list of people
 who piss me off!''
 -- Calvin */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * _ __ ___ ___ __| | ___ ___| | mod_ssl
 * | '_ ` _ \ / _ \ / _` | / __/ __| | Apache Interface to OpenSSL
 * | | | | | | (_) | (_| | \__ \__ \ |
 * |_| |_| |_|\___/ \__,_|___|___/___/_|
 * |_____|
 * ssl_util_ssl.c
 * Additional Utility Functions for OpenSSL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:201 - 4

/*
 * OCSP response caching code. The response is preceded by a flag value
 * which indicates whether the response was invalid when it was stored.
 * the purpose of this flag is to avoid repeated queries to a server
 * which has given an invalid response while allowing a response which
 * has subsequently become invalid to be retried immediately.
 *
 * The key for the cache is the hash of the certificate the response
 * is for.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:705 - 4

/* Error in response. If this error was not present when it was
 * stored (i.e. response no longer valid) then it can be
 * renewed straight away.
 *
 * If the error *was* present at the time it was stored then we
 * don't renew the response straight away; we just wait for the
 * cached response to expire.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_dialup.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_optional_fn_export.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_optional_fn_import.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_optional_hook_export.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_optional_hook_import.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file will include OS specific functions which are not inlineable.
 * Any inlineable functions should be defined in os-inline.c instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/modules.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* modules.c --- major modules compiled into Apache for NetWare.
 * Only insert an entry for a module if it must be compiled into
 * the core server
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/os2/util_os2.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/modules.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* modules.c --- major modules compiled into Apache for Win32.
 * Only insert an entry for a module if it must be compiled into
 * the core server
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/util_win32.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_error.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_custom.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_param.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_urlencoded.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:1 - 4

/*
** Licensed to the Apache Software Foundation (ASF) under one or more
** contributor license agreements. See the NOTICE file distributed with
** this work for additional information regarding copyright ownership.
** The ASF licenses this file to You under the Apache License, Version 2.0
** (the "e;License"e;); you may not use this file except in compliance with
** the License. You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "e;AS IS"e; BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:788 - 4

/*
 * The reason we need the above cleanup is because on Windows, APR_DELONCLOSE
 * forces applications to open the file with FILE_SHARED_DELETE
 * set, which is, unfortunately, a property that is preserved
 * across NTFS "e;hard"e; links. This breaks apps that link() the temp
 * file to a permanent location, and subsequently expect to open it
 * before the original tempfile is closed+deleted. In fact, even
 * Apache::Upload does this, so it is a common enough event that the
 * apreq_file_cleanup workaround is necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/buildmark.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * http_config.c: once was auxillary functions for reading httpd's config
 * file and converting filenames into a namespace
 *
 * Rob McCool
 *
 * Wall-to-wall rewrite for Apache... commands which are part of the
 * server core can now be found next door in "e;http_core.c"e;. Now contains
 * general command loop, and functions which do bookkeeping for the new
 * Apache config stuff (modules and configuration vectors).
 *
 * rst
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:43 - 4

/*
 * More machine-dependent networking gooo... on some systems,
 * you've got to be *really* sure that all the packets are acknowledged
 * before closing the connection, since the client will not be able
 * to see the last response if their TCP buffer is flushed by a RST
 * packet from us, which is what the server's TCP stack will send
 * if it receives any request data after closing the connection.
 *
 * In an ideal world, this function would be accomplished by simply
 * setting the socket option SO_LINGER and handling it within the
 * server's TCP stack while the process continues on to the next request.
 * Unfortunately, it seems that most (if not all) operating systems
 * block the server process on close() when SO_LINGER is used.
 * For those that don't, see USE_SO_LINGER below. For the rest,
 * we have created a home-brew lingering_close.
 *
 * Many operating systems tend to block, puke, or otherwise mishandle
 * calls to shutdown only half of the connection. You should define
 * NO_LINGCLOSE in ap_config.h if such is the case for your system.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:728 - 4

/*****************************************************************
 *
 * There are some elements of the core config structures in which
 * other modules have a legitimate interest (this is ugly, but necessary
 * to preserve NCSA back-compatibility). So, we have a bunch of accessors
 * here...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5121 - 4

/* The Nagle algorithm says that we should delay sending partial
 * packets in hopes of getting more data. We don't want to do
 * this; we are not telnet. There are bad interactions between
 * persistent connections and Nagle's algorithm that have very severe
 * performance penalties. (Failing to disable Nagle is not much of a
 * problem with simple HTTP.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file core_filters.c
 * @brief Core input/output network filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/eoc_bucket.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/eor_bucket.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/error_bucket.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:110 - 4

/* Limit on the total --- clients will be locked out if more servers than
 * this are needed. It is intended solely to keep the server from crashing
 * when things get out of hand.
 *
 * We keep a hard maximum number of servers, for two reasons --- first off,
 * in case something goes seriously wrong, we want to stop the fork bomb
 * short of actually crashing the machine we're running on by filling some
 * kernel table. Secondly, it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:528 - 4

/* for ungraceful termination, let the workers exit now;
 * for graceful termination, the listener thread will notify the
 * workers to exit once it has stopped accepting new connections
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1093 - 4

/**
 * XXX If the platform does not have a usable way of bundling
 * accept() with a socket readability check, like Win32,
 * and there are measurable delays before the
 * socket is readable due to the first data packet arriving,
 * it might be better to create the cs on the listener thread
 * with the state set to CONN_STATE_CHECK_REQUEST_LINE_READABLE
 *
 * FreeBSD users will want to enable the HTTP accept filter
 * module in their kernel for the highest performance
 * When the accept filter is active, sockets are kept in the
 * kernel until a HTTP request is received.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1433 - 4

/* get_worker:
 * If *have_idle_worker_p == 0, reserve a worker thread, and set
 * *have_idle_worker_p = 1.
 * If *have_idle_worker_p is already 1, will do nothing.
 * If blocking == 1, block if all workers are currently busy.
 * If no worker was available immediately, will set *all_busy to 1.
 * XXX: If there are no workers, we should not block immediately but
 * XXX: close all keep-alive connections first.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2830 - 4

/* We consider a starting server as idle because we started it
 * at least a cycle ago, and if it still hasn't finished starting
 * then we're just going to swamp things worse by forking more.
 * So we hopefully won't need to fork more if we count it.
 * This depends on the ordering of SERVER_READY and SERVER_STARTING.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:155 - 4

/* Re-check the idle worker count to guard against a
 * race condition. Now that we're in the mutex-protected
 * region, one of two things may have happened:
 * - If the idle worker count is still negative, the
 * workers are all still busy, so it's safe to
 * block on a condition variable.
 * - If the idle worker count is non-negative, then a
 * worker has become idle since the first check
 * of queue_info->idlers above. It's possible
 * that the worker has also signaled the condition
 * variable--and if so, the listener missed it
 * because it wasn't yet blocked on the condition
 * variable. But if the idle worker count is
 * now non-negative, it's safe for this function to
 * return immediately.
 *
 * A "e;negative value"e; (relative to zero_pt) in
 * queue_info->idlers tells how many
 * threads are waiting on an idle worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:325 - 4

/* Ignore errors here, we can't do anything about them anyway.
 * XXX: We should at least try to signal an error here, it is
 * indicative of a programmer error. -aaron */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:955 - 4

/* If the child processed a SIGWINCH before setting up the
 * pollset, this error path is expected and harmless,
 * since the listener fd was already closed; so don't
 * pollute the logs in that case. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:91 - 4

/* Limit on the total --- clients will be locked out if more servers than
 * this are needed. It is intended solely to keep the server from crashing
 * when things get out of hand.
 *
 * We keep a hard maximum number of servers, for two reasons --- first off,
 * in case something goes seriously wrong, we want to stop the fork bomb
 * short of actually crashing the machine we're running on by filling some
 * kernel table. Secondly, it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:650 - 4

/* We consider a starting server as idle because we started it
 * at least a cycle ago, and if it still hasn't finished starting
 * then we're just going to swamp things worse by forking more.
 * So we hopefully won't need to fork more if we count it.
 * This depends on the ordering of SERVER_READY and SERVER_STARTING.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:64 - 4

/* Limit on the total --- clients will be locked out if more servers than
 * this are needed. It is intended solely to keep the server from crashing
 * when things get out of hand.
 *
 * We keep a hard maximum number of servers, for two reasons --- first off,
 * in case something goes seriously wrong, we want to stop the fork bomb
 * short of actually crashing the machine we're running on by filling some
 * kernel table. Secondly, it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:591 - 4

/* If the child processed a SIGWINCH before setting up the
 * pollset, this error path is expected and harmless,
 * since the listener fd was already closed; so don't
 * pollute the logs in that case. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:896 - 4

/* We consider a starting server as idle because we started it
 * at least a cycle ago, and if it still hasn't finished starting
 * then we're just going to swamp things worse by forking more.
 * So we hopefully won't need to fork more if we count it.
 * This depends on the ordering of SERVER_READY and SERVER_STARTING.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_core.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Simple Core utility methods.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:667 - 4

/* Important:
 * Give the child process a chance to run before dup'ing the sockets.
 * We have already set the listening sockets noninheritable, but if
 * WSADuplicateSocket runs before the child process initializes
 * the listeners will be inherited anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:709 - 4

/***********************************************************************
 * master_main()
 * master_main() runs in the parent process. It creates the child
 * process which handles HTTP requests then waits on one of three
 * events:
 *
 * restart_event
 * -------------
 * The restart event causes master_main to start a new child process and
 * tells the old child process to exit (by setting the child_exit_event).
 * The restart event is set as a result of one of the following:
 * 1. An apache -k restart command on the command line
 * 2. A command received from Windows service manager which gets
 * translated into an ap_signal_parent(SIGNAL_PARENT_RESTART)
 * call by code in service.c.
 * 3. The child process calling ap_signal_parent(SIGNAL_PARENT_RESTART)
 * as a result of hitting MaxConnectionsPerChild.
 *
 * shutdown_event
 * --------------
 * The shutdown event causes master_main to tell the child process to
 * exit and that the server is shutting down. The shutdown event is
 * set as a result of one of the following:
 * 1. An apache -k shutdown command on the command line
 * 2. A command received from Windows service manager which gets
 * translated into an ap_signal_parent(SIGNAL_PARENT_SHUTDOWN)
 * call by code in service.c.
 *
 * child process handle
 * --------------------
 * The child process handle will be signaled if the child process
 * exits for any reason. In a normal running server, the signaling
 * of this event means that the child process has exited prematurely
 * due to a seg fault or other irrecoverable error. For server
 * robustness, master_main will restart the child process under this
 * condtion.
 *
 * master_main uses the child_exit_event to signal the child process
 * to exit.
 **********************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1518 - 4

/* Handle the following SCM aspects in this phase:
 *
 * -k install (catch and exit as install was handled in rewrite_args)
 * -k config (catch and exit as config was handled in rewrite_args)
 * -k start
 * -k restart
 * -k runservice [Win95, only once - after we parsed the config]
 *
 * because all of these signals are useful _only_ if there
 * is a valid conf\httpd.conf environment to start.
 *
 * We reached this phase by avoiding errors that would cause
 * these options to fail unexpectedly in another process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/nt_eventlog.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This module ALONE requires the window message API from user.h
 * and the default APR include of windows.h will omit it, so
 * preload the API symbols now...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:143 - 4

/* Re-check the idle worker count to guard against a
 * race condition. Now that we're in the mutex-protected
 * region, one of two things may have happened:
 * - If the idle worker count is still zero, the
 * workers are all still busy, so it's safe to
 * block on a condition variable, BUT
 * we need to check for idle worker count again
 * when we are signaled since it can happen that
 * we are signaled by a worker thread that went idle
 * but received a context switch before it could
 * tell us. If it does signal us later once it is on
 * CPU again there might be no idle worker left.
 * See
 * https://issues.apache.org/bugzilla/show_bug.cgi?id=45605#c4
 * - If the idle worker count is nonzero, then a
 * worker has become idle since the first check
 * of queue_info->idlers above. It's possible
 * that the worker has also signaled the condition
 * variable--and if so, the listener missed it
 * because it wasn't yet blocked on the condition
 * variable. But if the idle worker count is
 * now nonzero, it's safe for this function to
 * return immediately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:249 - 4

/* Ignore errors here, we can't do anything about them anyway.
 * XXX: We should at least try to signal an error here, it is
 * indicative of a programmer error. -aaron */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:74 - 4

/* for INT_MAX */

/* Limit on the total --- clients will be locked out if more servers than
 * this are needed. It is intended solely to keep the server from crashing
 * when things get out of hand.
 *
 * We keep a hard maximum number of servers, for two reasons --- first off,
 * in case something goes seriously wrong, we want to stop the fork bomb
 * short of actually crashing the machine we're running on by filling some
 * kernel table. Secondly, it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:324 - 4

/* for ungraceful termination, let the workers exit now;
 * for graceful termination, the listener thread will notify the
 * workers to exit once it has stopped accepting new connections
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1538 - 4

/* We consider a starting server as idle because we started it
 * at least a cycle ago, and if it still hasn't finished starting
 * then we're just going to swamp things worse by forking more.
 * So we hopefully won't need to fork more if we count it.
 * This depends on the ordering of SERVER_READY and SERVER_STARTING.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* The purpose of this file is to store the code that MOST mpm's will need
 * this does not mean a function only goes into this file if every MPM needs
 * it. It means that if a function is needed by more than one MPM, and
 * future maintenance would be served by making the code common, then the
 * function belongs here.
 *
 * This is going in src/main because it is not platform specific, it is
 * specific to multi-process servers, but NOT to Unix. Which is why it
 * does not belong in src/os/unix
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* The purpose of this file is to store the code that MOST mpm's will need
 * this does not mean a function only goes into this file if every MPM needs
 * it. It means that if a function is needed by more than one MPM, and
 * future maintenance would be served by making the code common, then the
 * function belongs here.
 *
 * This is going in src/main because it is not platform specific, it is
 * specific to multi-process servers, but NOT to Unix. Which is why it
 * does not belong in src/os/unix
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:645 - 4

/* on some platforms (e.g., FreeBSD), the kernel won't accept many
 * queued connections before it starts blocking local connects...
 * we need to keep from blocking too long and instead return an error,
 * because the MPM won't want to hold up a graceful restart for a
 * long time
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:697 - 4

/* Create an HTTP request string. We include a User-Agent so
 * that adminstrators can track down the cause of the
 * odd-looking requests in their logs. A complete request is
 * used since kernel-level filtering may require that much
 * data before returning from accept(). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * protocol.c --- routines which directly communicate with the client.
 *
 * Code originally by Rob McCool; much redone by Robert S. Thau
 * and the Apache Software Foundation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1214 - 4

/*
 * Add the HTTP_IN filter here to ensure that ap_discard_request_body
 * called by ap_die and by ap_send_error_response works correctly on
 * status codes that do not cause the connection to be dropped and
 * in situations where the connection should be kept alive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/provider.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cfgtree.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_charset.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_debug.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_ebcdic.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* _ _
 * ap_expr_eval.c, based on ssl_expr_eval.c from mod_ssl
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1 - 4

/* A Bison parser, made by GNU Bison 2.7.12-4996. */

/* Bison implementation for Yacc-like parsers in C

 Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program. If not, see <http://www.gnu.org/licenses/>. */

/* As a special exception, you may create a larger work that contains
 part or all of the Bison parser skeleton and distribute that work
 under terms of your choice, so long as that work isn't itself a
 parser generator using the skeleton or a modified version thereof
 as a parser skeleton. Alternatively, if you modify or redistribute
 the parser skeleton itself, you may (at your option) remove this
 special exception, which will cause the skeleton and the resulting
 Bison output files to be licensed under the GNU General Public
 License without this special exception.

 This special exception was added by the Free Software Foundation in
 version 2.2 of Bison. */

/* C LALR(1) parser skeleton written by Richard Stallman, by
 simplifying the original so-called "e;semantic"e; parser. */

/* All symbols defined below should begin with yy or YY, to avoid
 infringing on user name space. This should be done even for local
 variables, as they might otherwise be expanded by user macros.
 There are some unavoidable exceptions within include files to
 define necessary library symbols; they are noted "e;INFRINGES ON
 USER NAME SPACE"e; below. */

/* Identify Bison output. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:711 - 4

/* Like YYERROR except do call yyerror. This remains here temporarily
 to ease the transition to the new meaning of YYERROR, for GCC.
 Once GCC version 2 has supplanted version 1, this can go. However,
 YYFAIL appears to be in use. Nevertheless, it is formally deprecated
 in Bison 2.4.2's NEWS entry, where a plan to phase it out is
discussed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1494 - 4

/* If YYLEN is nonzero, implement the default value of the action:
 `$$ = $1'.

 Otherwise, the following line sets YYVAL to garbage.
 This behavior is undocumented and Bison
 users should not rely upon it. Assigning to YYVAL
 unconditionally makes the parser a bit smaller, and it avoids a
 GCC warning that YYVAL may be used uninitialized. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:553 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * ap_expr_scan.l, based on ssl_expr_scan.l from mod_ssl
 */
/* _________________________________________________________________
**
** Expression Scanner
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:132 - 4

/* envlen - speculative, may overflow the limit
 * actualenvlen - len required without overflowing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:914 - 4

/*
 * This function decides whether a filter should yield due to buffered
 * data in a downstream filter. If a downstream filter buffers we
 * must back off so we don't overwhelm the server. If this function
 * returns true, the filter should call ap_filter_setaside_brigade()
 * to save unprocessed buckets, and then reinstate those buckets on
 * the next call with ap_filter_reinstate_brigade() and continue
 * where it left off.
 *
 * If this function is forced to return zero, we return back to
 * synchronous filter behaviour.
 *
 * Subrequests present us with a problem - we don't know how much data
 * they will produce and therefore how much buffering we'll need, and
 * if a subrequest had to trigger buffering, but next subrequest wouldn't
 * know when the previous one had finished sending data and buckets
 * could be sent out of order.
 *
 * In the case of subrequests, deny the ability to yield. When the data
 * reaches the filters from the main request, they will be setaside
 * there in the right order and the request will be given the
 * opportunity to yield.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_md5.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/************************************************************************
 * NCSA HTTPd Server
 * Software Development Group
 * National Center for Supercomputing Applications
 * University of Illinois at Urbana-Champaign
 * 605 E. Springfield, Champaign, IL 61820
 * httpd@ncsa.uiuc.edu
 *
 * Copyright (C) 1995, Board of Trustees of the University of Illinois
 *
 ************************************************************************
 *
 * md5.c: NCSA HTTPd code which uses the md5c.c RSA Code
 *
 * Original Code Copyright (C) 1994, Jeff Hostetler, Spyglass, Inc.
 * Portions of Content-MD5 code Copyright (C) 1993, 1994 by Carnegie Mellon
 * University (see Copyright below).
 * Portions of Content-MD5 code Copyright (C) 1991 Bell Communications
 * Research, Inc. (Bellcore) (see Copyright below).
 * Portions extracted from mpack, John G. Myers - jgm+@cmu.edu
 * Content-MD5 Code contributed by Martin Hamilton (martin@net.lut.ac.uk)
 *
 */



/* md5.c --Module Interface to MD5. */
/* Jeff Hostetler, Spyglass, Inc., 1994. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:90 - 4

/* Posix/SysV semaphores aren't file based, use the literal name
 * if provided and fall back on APR's default if not. Today, APR
 * will ignore it, but once supported it has an absurdly short limit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:176 - 4

/*************************************************
 * Match a regular expression *
 *************************************************/

/* Unfortunately, PCRE requires 3 ints of working space for each captured
 * substring, so we have to get and release working store instead of just using
 * the POSIX structures as was done in earlier releases when PCRE needed only 2
 * ints. However, if the number of possible capturing brackets is small, use a
 * block of store on the stack, to reduce the use of malloc/free. The threshold
 * is in a macro that can be changed at configure time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file vhost.c
 * @brief functions pertaining to virtual host addresses
 * (configuration and run-time)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/fcgistarter.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1049 - 4

/* process remaining entries oldest to newest, the check for an emtpy
 * ring actually isn't necessary except when the compiler does
 * corrupt 64bit arithmetics which happend to me once, so better safe
 * than sorry
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/httxt2dbm.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * httxt2dbm.c: simple program for converting RewriteMap text files to DBM
 * Rewrite databases for the Apache HTTP server
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:220 - 4

/*
 * Check whether we need to rotate.
 * Possible reasons are:
 * - No log file open (ROTATE_NEW)
 * - User forces us to rotate (ROTATE_FORCE)
 * - Our log file size is already bigger than the
 * allowed maximum (ROTATE_SIZE)
 * - The next log time interval expired (ROTATE_TIME)
 *
 * When size and time constraints are both given,
 * it suffices that one of them is fulfilled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:623 - 4

/*
 * Error out if the program is not executable for the user.
 * Otherwise, she won't find any error in the logs except for
 * "e;[error] Premature end of script headers: ..."e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:664 - 4

/*
 * In this case, exec() errors won't be logged because we have already
 * dropped privileges and won't be able to reopen the log file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* ====================================================================
 * ApacheMonitor.c Simple program to manage and monitor Apache services.
 *
 * Contributed by Mladen Turk <mturk mappingsoft.com>
 *
 * 05 Aug 2001
 * ====================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/cls.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_select.c:1 - 4

/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "e;License"e;); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* This is just a quick test program to see how long a wait is
 * produced by a select loop with an exponential backoff.
 *
 * gcc -g -O2 -o test_select test_select.c
 * test_select
 *
 * Roy Fielding, 1996
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:456 - 4

/*
 * Some SysV systems place the shared segment WAY too close
 * to the dynamic memory break point (sbrk(0)). This severely
 * limits the use of malloc/sbrk in the program since sbrk will
 * refuse to move past that point.
 *
 * To get around this, we move the break point "e;way up there"e;,
 * attach the segment and then move break back down. Ugly
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:740 - 3

/* The responder owns the request body, not the authorizer.
 * Don't even send an empty AP_FCGI_STDIN block. libfcgi doesn't care,
 * but it wasn't sent to authorizers by mod_fastcgi or mod_fcgi and
 * may be unhandled by the app. Additionally, the FastCGI spec does
 * not mention FCGI_STDIN in the Authorizer description, though it
 * does describe FCGI_STDIN elsewhere in more general terms than
 * simply a wrapper for the client's request body.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1020 - 3

/* combined authn/authz phase, so app won't be invoked for authz
 *
 * If the provider already successfully authorized this request, 
 * success.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1964 - 3

/** Cleanup LDAP connections before EOR. Note, if the authorization is unsuccessful,
 * this will not run, but EOR is unlikely to be delayed as in a successful request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:507 - 3

/* trigger NOT_IN_LIMIT errors as if this were a <Limit> directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:396 - 3

/* If we're not authoritative, then any error is ignored. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:436 - 3

/* If requested, create a fake basic authentication header for the benefit
 * of a proxy or application running behind this server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:468 - 3

/* The core already handles the realm, but it's just too convenient to
 * grab it ourselves too and cache some setups. However, we need to
 * let the core get at it too, which is why we decline at the end -
 * this relies on the fact that http_core is last in the list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1205 - 3

/* setup domain attribute. We want to send this attribute wherever
 * possible so that the client won't send the Authorization header
 * unnecessarily (it's usually > 200 bytes!).
 */


 /* don't send domain
 * - for proxy requests
 * - if it's not specified
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:817 - 3

/* If we're not authoritative, then any error is ignored. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:874 - 3

/**
 * Must we use form authentication? If so, extract the cookie and run
 * the authnz hooks to determine if the login is valid.
 *
 * If the login is not valid, a 401 Not Authorized will be returned. It
 * is up to the webmaster to ensure this screen displays a suitable login
 * form to give the user the opportunity to log in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:222 - 3

/* All done with the DLL... get rid of it...
 *
 * If optionally cached, and we weren't asked to force the unload,
 * pass HSE_TERM_ADVISORY_UNLOAD, and if it returns 1, unload,
 * otherwise, leave it alone (it didn't choose to cooperate.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:372 - 3

/* Remember last_load_time before releasing the global
 * hash lock to avoid colliding with another thread
 * that hit this exception at the same time as our
 * retry attempt, since we unlock the global mutex
 * before attempting a write lock for this module.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1208 - 3

/* XXX: Many authors issue their next HSE_REQ_ASYNC_READ_CLIENT
 * within the completion logic. An example is MS's own PSDK
 * sample web/iis/extensions/io/ASyncRead. This potentially
 * leads to stack exhaustion. To refactor, the notification
 * logic needs to move to isapi_handler() - differentiating
 * the cid->completed event with a new flag to indicate
 * an async-notice versus the async request completed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:157 - 3

/*
 * Future optimization:
 * When the registry is successfully searched, store the strings for
 * interpreter and arguments in an ext hash to speed up subsequent look-ups
 */

 /* Open the key associated with the script filetype extension */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:203 - 3

/*
 * select a specific URL entity in the cache
 *
 * It is possible to store more than one entity per URL. Content
 * negotiation is used to select an entity. Once an entity is
 * selected, details of it are stored in the per request
 * config to save time when serving the request later.
 *
 * This function returns OK if successful, DECLINED if no
 * cached entity fits the bill.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:655 - 3

/*
 * Store the key in the request_config for the cache as r->parsed_uri
 * might have changed in the time from our first visit here triggered by the
 * quick handler and our possible second visit triggered by the CACHE_SAVE
 * filter (e.g. r->parsed_uri got unescaped). In this case we would save the
 * resource in the cache under a key where it is never found by the quick
 * handler during following requests.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:359 - 3

/**
 * Remove the cache lock, if present.
 *
 * First, try to close the file handle, whose delete-on-close should
 * kill the file. Otherwise, just delete the file by name.
 *
 * If no lock name has yet been calculated, do the calculation of the
 * lock name first before trying to delete the file.
 *
 * If an optional bucket brigade is passed, the lock will only be
 * removed if the bucket brigade contains an EOS bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:701 - 3

/*
 * If none of Expires, Cache-Control: max-age, or Cache-Control:
 * s-maxage appears in the response, and the response header age
 * calculated is more than 24 hours add the warning 113
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:934 - 3

/* skip valid token characters to terminate token and
 * prepare for the next call (will terminate at '\0)
 * on the way, ignore all quoted strings, and within
 * quoted strings, escaped characters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1229 - 3

/*
 * Create a new table consisting of those elements from an output
 * headers table that are allowed to be stored in a cache;
 * ensure there is a content type and capture any errors.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:147 - 3

/* Add cache_invalidate filter to this request to force a
 * cache entry to be invalidated if the response is
 * ultimately successful (2xx).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:387 - 3

/**
 * The cache handler is functionally similar to the cache_quick_hander,
 * however a number of steps that are required by the quick handler are
 * not required here, as the normal httpd processing has already handled
 * these steps.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:447 - 3

/* Add cache_invalidate filter to this request to force a
 * cache entry to be invalidated if the response is
 * ultimately successful (2xx).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:647 - 3

/* user likely configured CACHE_OUT manually; they should use mod_cache
 * configuration to do that */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:832 - 3

/* user likely configured CACHE_SAVE manually; they should really use
 * mod_cache configuration to do that
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:856 - 3

/* have we already run the cacheability check and set up the
 * cached file handle?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1041 - 3

/* if a broken Expires header is present, don't cache it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1084 - 3

/* RFC2616 14.9.2 Cache-Control: no-store response
 * indicating do not cache, or stop now if you are
 * trying to cache it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1125 - 3

/**
 * 13.12 Cache Replacement:
 *
 * Note: a new response that has an older Date header value than
 * existing cached responses is not cacheable.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1199 - 3

/* remove the cached entity immediately, we might cache it again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1337 - 3

/* Caching layer declined the opportunity to cache the response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1461 - 3

/* Merge in our cached headers. However, keep any updated values. */
 /* take output, overlay on top of cached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1509 - 3

/* Strip the entity headers merged from the cached headers before
 * updating the entry (see cache_accept_headers() above).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1540 - 3

/* Probably a mod_cache_disk cache area has been (re)mounted
 * read-only, or that there is a permissions problem.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1622 - 3

/* user likely configured CACHE_REMOVE_URL manually; they should really
 * use mod_cache configuration to do that. So:
 * 1. Remove ourselves
 * 2. Do nothing and bail out
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1667 - 3

/* user likely configured CACHE_INVALIDATE manually; they should really
 * use mod_cache configuration to do that. So:
 * 1. Remove ourselves
 * 2. Do nothing and bail out
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2664 - 3

/* CACHE_REMOVE_URL has to be a protocol filter to ensure that is
 * run even if the response is a canned error message, which
 * removes the content filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:110 - 3

/* The SHM data segment is of fixed size and stores data as follows.
 *
 * [ SHMCBHeader | Subcaches ]
 *
 * The SHMCBHeader header structure stores metadata concerning the
 * cache and the contained subcaches.
 *
 * Subcaches is a hash table of header->subcache_num SHMCBSubcache
 * structures. The hash table is indexed by SHMCB_MASK(id). Each
 * SHMCBSubcache structure has a fixed size (header->subcache_size),
 * which is determined at creation time, and looks like the following:
 *
 * [ SHMCBSubcache | Indexes | Data ]
 *
 * Each subcache is prefixed by the SHMCBSubcache structure.
 *
 * The subcache's "e;Data"e; segment is a single cyclic data buffer, of
 * total size header->subcache_data_size; data inside is referenced
 * using byte offsets. The offset marking the beginning of the cyclic
 * buffer is subcache->data_pos; the buffer's length is
 * subcache->data_used.
 *
 * "e;Indexes"e; is an array of header->index_num SHMCBIndex structures,
 * which is used as a cyclic queue; subcache->idx_pos gives the array
 * index of the first in use, subcache->idx_used gives the number in
 * use. Both ->idx_* values have a range of [0, header->index_num)
 *
 * Each in-use SHMCBIndex structure represents a single cached object.
 * The ID and data segment are stored consecutively in the subcache's
 * cyclic data buffer. The "e;Data"e; segment can thus be seen to
 * look like this, for example
 *
 * offset: [ 0 1 2 3 4 5 6 ...
 * contents:[ ID1 Data1 ID2 Data2 ID3 ...
 *
 * where the corresponding indices would look like:
 *
 * idx1 = { data_pos = 0, data_used = 3, id_len = 1, ...}
 * idx2 = { data_pos = 3, data_used = 3, id_len = 1, ...}
 * ...
 */

/* This macro takes a pointer to the header and a zero-based index and returns
 * a pointer to the corresponding subcache. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:379 - 3

/*
 find first occurence of args in buf.
 in case of conflict, the LONGEST argument is kept. (could be the FIRST?).
 returns the pointer and the whichone found, or NULL.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:405 - 3

/*
 substitute macro arguments by replacements in buf of bufsize.
 returns an error message or NULL.
 if used is defined, returns the used macro arguments.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:172 - 3

/* loading the driver involves once-only dlloading that is
 * best done at server startup. This also guarantees that
 * we won't return an error later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:133 - 3

/* Indirect locks represent locks inherited from containing collections.
 * They reference the lock token for the collection the lock is
 * inherited from. A lock provider may also define a key to the
 * inherited lock, for fast datbase lookup. The key is opaque outside
 * the lock provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:165 - 3

/*
** The lockdb structure.
**
** The <db> field may be NULL, meaning one of two things:
** 1) That we have not actually opened the underlying database (yet). The
** <opened> field should be false.
** 2) We opened it readonly and it wasn't present.
**
** The delayed opening (determined by <opened>) makes creating a lockdb
** quick, while deferring the underlying I/O until it is actually required.
**
** We export the notion of a lockdb, but hide the details of it. Most
** implementations will use a database of some kind, but it is certainly
** possible that alternatives could be used.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:399 - 3

/*
** dav_fs_lock_expired: return 1 (true) if the given timeout is in the past
** or present (the lock has expired), or 0 (false) if in the future
** (the lock has not yet expired).
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:651 - 3

/* Clean up this record if we found expired locks */
 /*
 ** ### shouldn't do this if we've been opened READONLY. elide the
 ** ### timed-out locks from the response, but don't save that info back
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1296 - 3

/*
 ** If this resource is a locknull resource AND no more locks exist,
 ** then remove the locknull member.
 **
 ** Note: remove_locknull_state() attempts to convert a locknull member
 ** to a real member. In this case, all locks are gone, so the
 ** locknull resource returns to the null state (ie. doesn't exist),
 ** so there is no need to update the lockdb (and it won't find
 ** any because a precondition is that none exist).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:269 - 3

/* ###: Looks like a response could be appropriate
 *
 * APR_SUCCESS here tells us the dir is a root
 * APR_ERELATIVE told us we had no root (ok)
 * APR_EINCOMPLETE an incomplete testpath told us
 * there was no -file- name here!
 * APR_EBADPATH or other errors tell us this file
 * path is undecipherable
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:122 - 3

/* Indirect locks represent locks inherited from containing collections.
 * They reference the lock token for the collection the lock is
 * inherited from. A lock provider may also define a key to the
 * inherited lock, for fast datbase lookup. The key is opaque outside
 * the lock provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:154 - 3

/*
 * The lockdb structure.
 *
 * The <db> field may be NULL, meaning one of two things:
 * 1) That we have not actually opened the underlying database (yet). The
 * <opened> field should be false.
 * 2) We opened it readonly and it wasn't present.
 *
 * The delayed opening (determined by <opened>) makes creating a lockdb
 * quick, while deferring the underlying I/O until it is actually required.
 *
 * We export the notion of a lockdb, but hide the details of it. Most
 * implementations will use a database of some kind, but it is certainly
 * possible that alternatives could be used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:418 - 3

/*
 * dav_generic_lock_expired: return 1 (true) if the given timeout is in the
 * past or present (the lock has expired), or 0 (false) if in the future
 * (the lock has not yet expired).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:677 - 3

/* Clean up this record if we found expired locks */
 /*
 * ### shouldn't do this if we've been opened READONLY. elide the
 * ### timed-out locks from the response, but don't save that info back
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:209 - 3

/* assert: conf->provider_name != NULL
 (otherwise, DAV is disabled, and we wouldn't be here) */

 /* assert: conf->provider != NULL
 (checked when conf->provider_name is set) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:596 - 3

/* Didn't get a multistatus response passed in, but we still
 might be able to generate a standard <D:error> response.
 Search the error stack for an errortag. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2250 - 3

/*
 * Call <func> for each context. This can stop when an error occurs, or
 * simply iterate through the whole list.
 *
 * Returns 1 if an error occurs (and the iteration is aborted). Returns 0
 * if all elements are processed.
 *
 * If <reverse> is true (non-zero), then the list is traversed in
 * reverse order.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2524 - 3

/* oops. something was already there! */

 /* Apache will supply a default error for this. */
 /* ### we should provide a specific error message! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3261 - 3

/*
 * Check If-Headers and existing locks.
 *
 * Note: depth == 0 normally requires no multistatus response. However,
 * if we pass DAV_VALIDATE_PARENT, then we could get an error on a URI
 * other than the Request-URI, thereby requiring a multistatus.
 *
 * If the resource is a locknull resource, then the UNLOCK will affect
 * the parent collection (much like a delete). For that case, we must
 * validate the parent resource's conditions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4072 - 3

/* One or more resources had errors. If depth was zero, convert
 * response to simple error, else make sure there is an
 * overall error to pass to dav_handle_err()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4692 - 3

/* ### hrm. if we return HTTP_METHOD_NOT_ALLOWED, then an Allow header
 * ### is sent; it will need the other allowed states; since the default
 * ### handler is not called on error, then it doesn't add the other
 * ### allowed states, so we must
 */

 /* ### we might need to refine this for just where we return the error.
 * ### also, there is the issue with other methods (see ISSUES)
 */

 /* dispatch the appropriate method handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:155 - 3

/*
** There is some rough support for writable DAV:getcontenttype and
** DAV:getcontentlanguage properties. If this #define is (1), then
** this support is disabled.
**
** We are disabling it because of a lack of support in GET and PUT
** operations. For GET, it would be "e;expensive"e; to look for a propdb,
** open it, and attempt to extract the Content-Type and Content-Language
** values for the response.
** (Handling the PUT would not be difficult, though)
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:261 - 3

/* we have verified the scheme, port, and general structure */

 /*
 ** Hrm. IE5 will pass unqualified hostnames for both the
 ** Host: and Destination: headers. This breaks the
 ** http_vhost.c::matches_aliases function.
 **
 ** For now, qualify unqualified comp.hostnames with
 ** r->server->server_hostname.
 **
 ** ### this is a big hack. Apache should provide a better way.
 ** ### maybe the admin should list the unqualified hosts in a
 ** ### <ServerAlias> block?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:611 - 3

/* dav_process_if_header:
 *
 * If NULL (no error) is returned, then **if_header points to the
 * "e;If"e; productions structure (or NULL if "e;If"e; is not present).
 *
 * ### this part is bogus:
 * If an error is encountered, the error is logged. Parent should
 * return err->status.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1316 - 3

/*
 ** We may have aborted the scan before seeing the locktoken.
 ** Rescan the If: header to see if we can find the locktoken
 ** somewhere.
 **
 ** Note that seen_locktoken == 0 implies lock_list != NULL
 ** which implies locks_hooks != NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1647 - 3

/*
 ** This error occurred on the parent resource. This implies that
 ** we have to create a multistatus response (to report the error
 ** against a URI other than the Request-URI). "e;Convert"e; this error
 ** into a multistatus response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:137 - 3

/*
 ** Check if the timeout is not, for any reason, already elapsed.
 ** (e.g., because of a large collection, or disk under heavy load...)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:281 - 3

/*
 ** ### actually, this is probably wrong: we want to fail the whole
 ** ### LOCK process if something goes bad. maybe the caller should
 ** ### do a dav_unlock() (e.g. a rollback) if any errors occurred.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:582 - 3

/*
** dav_inherit_locks: When a resource or collection is added to a collection,
** locks on the collection should be inherited to the resource/collection.
** (MOVE, MKCOL, etc) Here we propagate any direct or indirect locks from
** parent of resource to resource and below.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:780 - 3

/* ### should pass depth to dav_inherit_locks so that it can
 ** ### optimize for the depth==0 case.
 */

 /* this resource should inherit locks from its parent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:279 - 3

/* if an error was received, bail out now. If the error is
 * EAGAIN and we have not yet seen an EOS, we will definitely
 * be called again, at which point we will send our buffered
 * data. Instead of sending EAGAIN, some filters return an
 * empty brigade instead when data is not yet available. In
 * this case, pass through the APR_SUCCESS and emulate the
 * underlying filter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_case_filter.c:94 - 3

/* Q: is there any advantage to passing a brigade for each bucket?
 * A: obviously, it can cut down server resource consumption, if this
 * experimental module was fed a file of 4MB, it would be using 8MB for
 * the 'read' buckets and the 'write' buckets.
 *
 * Note it is more efficient to consume (destroy) each bucket as it's
 * processed above than to do a single cleanup down here. In any case,
 * don't let our caller pass the same buckets to us, twice;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:499 - 3

/*--------------------------------------------------------------------------*/
/* We prototyped the various syntax for command handlers (routines that */
/* are called when the configuration parser detects a directive declared */
/* by our module) earlier. Now we actually declare a "e;real"e; routine that */
/* will be invoked by the parser when our "e;real"e; directive is */
/* encountered. */
/* */
/* If a command handler encounters a problem processing the directive, it */
/* signals this fact by returning a non-NULL pointer to a string */
/* describing the problem. */
/* */
/* The magic return value DECLINE_CMD is used to deal with directives */
/* that might be declared by multiple modules. If the command handler */
/* returns NULL, the directive was processed; if it returns DECLINE_CMD, */
/* the next module (if any) that declares the directive is given a chance */
/* at it. If it returns any other value, it's treated as the text of an */
/* error message. */
/*--------------------------------------------------------------------------*/
/*
 * Command handler for the NO_ARGS "e;Example"e; directive. All we do is mark the
 * call in the trace log, and flag the applicability of the directive to the
 * current location in that location's configuration record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:574 - 3

/*
 * This function gets called to merge two per-directory configuration
 * records. This is typically done to cope with things like .htaccess files
 * or <Location> directives for directories that are beneath one for which a
 * configuration record was already created. The routine has the
 * responsibility of creating a new record and merging the contents of the
 * other two into it appropriately. If the module doesn't declare a merge
 * routine, the record for the closest ancestor location (that has one) is
 * used exclusively.
 *
 * The routine MUST NOT modify any of its arguments!
 *
 * The return value is a pointer to the created module-specific structure
 * containing the merged values.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:788 - 3

/*
 * This routine is called to perform any module-specific log file
 * openings. It is invoked just before the post_config phase
 *
 * The return value is OK, DECLINED, or HTTP_mumble. If we return OK, the
 * server will still call any remaining modules with an handler for this
 * phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1244 - 3

/*
 * This routine is called to check the authentication information sent with
 * the request (such as looking up the user in a database and verifying that
 * the [encrypted] password sent matches the one in the database).
 *
 * This is a RUN_FIRST hook. The return value is OK, DECLINED, or some
 * HTTP_mumble error (typically HTTP_UNAUTHORIZED).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1416 - 3

/*--------------------------------------------------------------------------*/
/* */
/* Which functions are responsible for which hooks in the server. */
/* */
/*--------------------------------------------------------------------------*/
/*
 * Each function our module provides to handle a particular hook is
 * specified here. The functions are registered using
 * ap_hook_foo(name, predecessors, successors, position)
 * where foo is the name of the hook.
 *
 * The args are as follows:
 * name -> the name of the function to call.
 * predecessors -> a list of modules whose calls to this hook must be
 * invoked before this module.
 * successors -> a list of modules whose calls to this hook must be
 * invoked after this module.
 * position -> The relative position of this module. One of
 * APR_HOOK_FIRST, APR_HOOK_MIDDLE, or APR_HOOK_LAST.
 * Most modules will use APR_HOOK_MIDDLE. If multiple
 * modules use the same relative position, Apache will
 * determine which to call first.
 * If your module relies on another module to run first,
 * or another module running after yours, use the
 * predecessors and/or successors.
 *
 * The number in brackets indicates the order in which the routine is called
 * during request processing. Note that not all routines are necessarily
 * called (such as if a resource doesn't have access restrictions).
 * The actual delivery of content to the browser [9] is not handled by
 * a hook; see the handler declarations below.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1491 - 3

/*--------------------------------------------------------------------------*/
/* */
/* All of the routines have been declared now. Here's the list of */
/* directives specific to our module, and information about where they */
/* may appear and how the command parser should pass them to us for */
/* processing. Note that care must be taken to ensure that there are NO */
/* collisions of directive names between modules. */
/* */
/*--------------------------------------------------------------------------*/
/*
 * List of directives specific to our module.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:138 - 3

/* reset shm before writing to it.
 * We're only dealing with approx. counts, so we ignore the race condition
 * with our prospective readers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:229 - 3

/* if an error was received, bail out now. If the error is
 * EAGAIN and we have not yet seen an EOS, we will definitely
 * be called again, at which point we will send our buffered
 * data. Instead of sending EAGAIN, some filters return an
 * empty brigade instead when data is not yet available. In
 * this case, pass through the APR_SUCCESS and emulate the
 * underlying filter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:853 - 3

/* Hmm. We've run through the filter init before as we have a ctx,
 * but we never initialized. We probably have a dangling ref. Bail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:635 - 3

/* drain_available_output():
 *
 * if any data is available from the filter, read it and append it
 * to the bucket brigade
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:725 - 3

/*
 * We could also make the SSI vars available as %{...} style variables
 * (AP_EXPR_FUNC_VAR), but this would create problems if we ever want
 * to cache parsed expressions for performance reasons.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:181 - 3

/* The source of these above us in the core is check_pipeline(), which
 * is between requests but before this filter knows to reset timeouts 
 * during pre_read_request(). If they appear elsewhere, just don't 
 * check or extend the time since they won't block and we'll see the
 * bytes again later
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:1 - 3

/*
 * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:410 - 3

/* Here is the logic :
 * Read the readbytes data from next level fiter into bbinp. Loop through
 * the buckets in bbinp and read the data from buckets and invoke
 * sed_eval_buffer on the data. libsed will generate its output using
 * sed_write_output which will add data in ctx->bb. Do it until it have
 * atleast one bucket in ctx->bb. At the end of data eos bucket
 * should be there.
 *
 * Once eos bucket is seen, then invoke sed_finalize_eval to clear the
 * output. If the last byte of data is not a new line character then sed
 * will add a new line to the data that is default sed behaviour. Note
 * that using this filter with POST data, caller may not expect this
 * behaviour.
 *
 * If next level fiter generate the flush bucket, we can't do much about
 * it. If we want to return the flush bucket in brigade bb (to the caller)
 * the question is where to add it?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:513 - 3

/*
 * If the number of buckets in ctx->passbb reaches an
 * "e;insane"e; level, we consume much memory for all the
 * buckets as such. So lets flush them down the chain
 * in this case and thus clear ctx->passbb. This frees
 * the buckets memory for further processing.
 * Usually this condition should not become true, but
 * it is a safety measure for edge cases.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:237 - 3

/* either it's set to something we found or it's still the default */
 /* Aaargh! libxml2 has undocumented <META-crap> support. So this fails
 * if metafix is not active. Have to make it conditional.
 *
 * No, that means no-metafix breaks things. Deal immediately with
 * this particular instance of metafix.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:1 - 3

/*
 * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
 * Use is subject to license terms.
 *
 * Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T
 * All Rights Reserved
 *
 * University Copyright- Copyright (c) 1982, 1986, 1988
 * The Regents of the University of California
 * All Rights Reserved
 *
 * University Acknowledgment- Portions of this document are derived from
 * software developed by the University of California, Berkeley, and its
 * contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Code moved from regexp.h */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:1 - 3

/*
 * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
 * Use is subject to license terms.
 *
 * Copyright (c) 1984 AT&T
 * All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:1 - 3

/*
 * Copyright (c) 2005, 2008 Sun Microsystems, Inc. All Rights Reserved.
 * Use is subject to license terms.
 *
 * Copyright (c) 1984 AT&T
 * All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1060 - 3

/*
 * If there's a problem running the subrequest, display the
 * preamble if we didn't do it before -- the header file
 * didn't get displayed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2303 - 3

/* KLUDGE --- make the sub_req lookups happen in the right directory.
 * Fixing this in the sub_req_lookup functions themselves is difficult,
 * and would probably break virtual includes...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:996 - 3

/* We already read the message body (if any), so don't allow
 * the redirected request to think it has one. We can ignore
 * Transfer-Encoding, since we used REQUEST_CHUNKED_ERROR.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:160 - 3

/* DEFAULT_CONNECT_ATTEMPTS controls how many times we'll try to connect
 * to the cgi daemon from the thread/process handling the cgi request.
 * Generally we want to retry when we get ECONNREFUSED since it is
 * probably because the listen queue is full. We need to try harder so
 * the client doesn't see it as a 503 error.
 *
 * Set this to 0 to continually retry until the connect works or Apache
 * terminates.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1310 - 3

/* On AIX, for processes like mod_cgid's script children where
 * SIGCHLD is ignored, kill(pid,0) returns success for up to
 * one second after the script child exits, based on when a
 * daemon runs to clean up unnecessary process table entries.
 * getpgid() can report the proper info (-1/ESRCH) immediately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1656 - 3

/* We already read the message body (if any), so don't allow
 * the redirected request to think it has one. We can ignore
 * Transfer-Encoding, since we used REQUEST_CHUNKED_ERROR.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:443 - 3

/*
 * Don't attempt to do byte range work if this brigade doesn't
 * contain an EOS, or if any of the buckets has an unknown length;
 * this avoids the cases where it is expensive to perform
 * byteranging (i.e. may require arbitrary amounts of memory).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:159 - 3

/* RFC 2616, Section 3.6.1
 *
 * If there is an EOS bucket, then prefix it with:
 * 1) the last-chunk marker ("e;0"e; CRLF)
 * 2) the trailer
 * 3) the end-of-chunked body CRLF
 *
 * We only do this if we have not seen an error bucket with
 * status HTTP_BAD_GATEWAY. We have memorized an
 * error bucket that we had seen in the filter context.
 * The error bucket with status HTTP_BAD_GATEWAY indicates that the
 * connection to the backend (mod_proxy) broke in the middle of the
 * response. In order to signal the client that something went wrong
 * we do not create the last-chunk marker and set c->keepalive to
 * AP_CONN_CLOSE in the core output filter.
 *
 * XXX: it would be nice to combine this with the end-of-chunk
 * marker above, but this is a bit more straight-forward for
 * now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:182 - 3

/* If we have a variant list validator (vlv) due to the
 * response being negotiated, then we create a structured
 * entity tag which merges the variant etag with the variant
 * list validator (vlv). This merging makes revalidation
 * somewhat safer, ensures that caches which can deal with
 * Vary will (eventually) be updated if the set of variants is
 * changed, and is also a protocol requirement for transparent
 * content negotiation.
 */

 /* if the variant list validator is weak, we make the whole
 * structured etag weak. If we would not, then clients could
 * have problems merging range responses if we have different
 * variants with the same non-globally-unique strong etag.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:282 - 3

/* Otherwise, we need to indicate that we will be closing this
 * connection immediately after the current response.
 *
 * We only really need to send "e;close"e; to HTTP/1.1 clients, but we
 * always send it anyway, because a broken proxy may identify itself
 * as HTTP/1.0, but pass our request along with our HTTP/1.1 tag
 * to a HTTP/1.1 client. Better safe than sorry.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1420 - 3

/* For all HTTP/1.x responses for which we generate the message,
 * we need to avoid inheriting the "e;normal status"e; header fields
 * that may have been set by the request handler before the
 * error or redirect, except for Location on external redirects.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1518 - 3

/* folks decided they didn't want the error code in the H1 text */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:89 - 3

/*
 * Check if we still have the ap_http_header_filter in place. If
 * this is the case we should not ignore the error here because
 * it means that we have not sent any response at all and never
 * will. This is bad. Sent an internal server error instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:120 - 3

/*
 * The following takes care of Apache redirects to custom response URLs
 * Note that if we are already dealing with the response to some other
 * error condition, we just report on the original error, and give up on
 * any attempt to handle the other thing "e;intelligently"e;...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:260 - 3

/* Ignore trailing blank lines (which must not be interpreted as
 * pipelined requests) up to the limit, otherwise we would block
 * on the next read without flushing data, and hence possibly delay
 * pending response(s) until the next/real request comes in or the
 * keepalive timeout expires.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:349 - 3

/* The EOR bucket has either been handled by an output filter (eg.
 * deleted or moved to a buffered_bb => no more in bb), or an error
 * occured before that (eg. c->aborted => still in bb) and we ought
 * to destroy it now. So cleanup any remaining bucket along with
 * the orphan request (if any).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:747 - 3

/*
 * find_ct is the hook routine for determining content-type and other
 * MIME-related metadata. It assumes that r->filename has already been
 * set and stat has been called for r->finfo. It also assumes that the
 * non-path base file name is not the empty string unless it is a dir.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:928 - 3

/*
 * Need to set a notes entry on r for unrecognized elements.
 * Somebody better claim them! If we did absolutely nothing,
 * skip the notes to alert mod_negotiation we are clueless.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_ctx.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io_set.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:960 - 3

/**
 * Initialize the push diary by a cache digest as described in 
 * https://datatracker.ietf.org/doc/draft-kazuho-h2-cache-digest/
 * .
 * @param diary the diary to set the digest into
 * @param data the binary cache digest
 * @param len the length of the cache digest
 * @return APR_EINVAL if digest was not successfully parsed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_response.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream_set.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_output.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_queue.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_worker.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:1 - 3

/* Copyright 2015 greenbytes GmbH (https://www.greenbytes.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:535 - 3

/*
 * Connect to the LDAP server and binds. Does not connect if already
 * connected (i.e. ldc->ldap is non-NULL.) Does not bind if already bound.
 *
 * Returns LDAP_SUCCESS on success; and an error code on failure
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:885 - 3

/* ------------------------------------------------------------------ */

/*
 * Compares two DNs to see if they're equal. The only way to do this correctly
 * is to search for the dn and then do ldap_get_dn() on the result. This should
 * match the initial dn, since it would have been also retrieved with
 * ldap_get_dn(). This is expensive, so if the configuration value
 * compare_dn_on_server is false, just does an ordinary strcmp.
 *
 * The lock for the ldap cache should already be acquired.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1541 - 3

/*
 * The group entry we want to attach our SGL to doesn't exist.
 * We only got here if we verified this DN was actually a group
 * based on the objectClass, but we can't call the compare function
 * while we already hold the cache lock -- only the insert.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1690 - 3

/*
 * Remove this item from the cache if its expired. If the sent
 * password doesn't match the storepassword, the entry will
 * be removed and readded later if the credentials pass
 * authentication.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1795 - 3

/*
 * A bind to the server with an empty password always succeeds, so
 * we check to ensure that the password is not empty. This implies
 * that users who actually do have empty passwords will never be
 * able to authenticate with this module. I don't see this as a big
 * problem.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1886 - 3

/* Search again to make sure that another thread didn't ready insert
 * this node into the cache before we got here. If it does exist then
 * update the lastbind
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2095 - 3

/* Search again to make sure that another thread didn't ready insert
 * this node into the cache before we got here. If it does exist then
 * update the lastbind
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2942 - 3

/*
 * If we are using shared memory caching and the cache file already
 * exists then delete it. Otherwise we are going to run into problems
 * creating the shared memory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3016 - 3

/*
 * Initialize SSL support, and log the result for the benefit of the admin.
 *
 * If SSL is not supported it is not necessarily an error, as the
 * application may not want to use it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:145 - 3

/*
 =============================================================================
 db:query(statement): Executes the given database query and returns the 
 number of rows affected. If an error is encountered, returns nil as the 
 first parameter and the error message as the second.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1398 - 3

/*
 * lua_ap_runtime_dir_relative: r:runtime_dir_relative(file): Returns the
 * filename as relative to the runtime dir
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:97 - 3

/**
 * error reporting if lua has an error.
 * Extracts the error from lua stack and prints
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:960 - 3

/* You can be unhappy now.
 *
 * This is uncool.
 *
 * When you create a <Section handler in httpd, the only 'easy' way to create
 * a directory context is to parse the section, and convert it into a 'normal'
 * Configureation option, and then collapse the entire section, in memory,
 * back into the parent section -- from which you can then get the new directive
 * invoked.... anyways. evil. Rici taught me how to do this hack :-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:182 - 3

/* XXX: if FallbackResource points to something that doesn't exist,
 * this may recurse until it hits the limit for internal redirects
 * before returning an Internal Server Error.
 */

 /* The logic of this function is basically cloned and simplified
 * from fixup_dir below. See the comments there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:344 - 3

/* XXX: This used to do *value = '\0'; ... which is totally bogus
 * because it hammers the passed in value, which can be a string
 * constant, or part of a config, or whatever. Total garbage.
 * This works around that without changing the rest of this
 * code much
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:182 - 3

/*
 * Record of available info on a particular variant
 *
 * Note that a few of these fields are updated by the actual negotiation
 * code. These are:
 *
 * level_matched --- initialized to zero. Set to the value of level
 * if the client actually accepts this media type at that
 * level (and *not* if it got in on a wildcard). See level_cmp
 * below.
 * mime_stars -- initialized to zero. Set to the number of stars
 * present in the best matching Accept header element.
 * 1 for star/star, 2 for type/star and 3 for
 * type/subtype.
 *
 * definite -- initialized to 1. Set to 0 if there is a match which
 * makes the variant non-definite according to the rules
 * in rfc2296.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:428 - 3

/* You want case insensitive,
 * you'll *get* case insensitive.
 */

 /* KLUDGE!!! Default HTML to level 2.0 unless the browser
 * *explicitly* says something else.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1175 - 3

/*
 * mod_mime will _always_ provide us the base name in the
 * ap-mime-exception-list, if it processed anything. If
 * this list is empty, give up immediately, there was
 * nothing interesting. For example, looking at the files
 * readme.txt and readme.foo, we will throw away .foo if
 * it's an insignificant file (e.g. did not identify a
 * language, charset, encoding, content type or handler,)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1193 - 3

/* Each unregonized bit better match our base name, in sequence.
 * A test of index.html.foo will match index.foo or index.html.foo,
 * but it will never transpose the segments and allow index.foo.html
 * because that would introduce too much CPU consumption. Better that
 * we don't attempt a many-to-many match here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1297 - 3

/* Sort the variants into a canonical order. The negotiation
 * result sometimes depends on the order of the variants. By
 * sorting the variants into a canonical order, rather than using
 * the order in which readdir() happens to return them, we ensure
 * that the negotiation result will be consistent over filesystem
 * backup/restores and over all mirror sites.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1686 - 3

/* Handle the ForceDefaultLanguage overrides, based on the best match
 * to LanguagePriority order. The best match is the lowest index of
 * any LanguagePriority match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1926 - 3

/*
 * set_encoding_quality determines whether the encoding for a particular
 * variant is acceptable for the user-agent.
 *
 * The rules for encoding are that if the user-agent does not supply
 * any Accept-Encoding header, then all encodings are allowed but a
 * variant with no encoding should be preferred.
 * If there is an empty Accept-Encoding header, then no encodings are
 * acceptable. If there is a non-empty Accept-Encoding header, then
 * any of the listed encodings are acceptable, as well as no encoding
 * unless the "e;identity"e; encoding is specifically excluded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2049 - 3

/* RFC 2296 calls for the result to be rounded to 5 decimal places,
 * but we don't do that because it serves no useful purpose other
 * than to ensure that a remote algorithm operates on the same
 * precision as ours. That is silly, since what we obviously want
 * is for the algorithm to operate on the best available precision
 * regardless of who runs it. Since the above calculation may
 * result in significant variance at 1e-12, rounding would be bogus.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2306 - 3

/*
 * Find the 'best' variant
 * We run the loop possibly twice: if "e;prefer-language"e;
 * environment variable is set but we did not find an appropriate
 * best variant. In that case forget the preferred language and
 * negotiate over all variants.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:234 - 3

/*
 * check that a subrequest won't cause infinite recursion
 *
 * either not in a subrequest, or in a subrequest
 * and URIs aren't NULL and sub/main URIs differ
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:488 - 3

/* !REWRITELOG_DISABLED */


/*
 * +-------------------------------------------------------+
 * | |
 * | URI and path functions
 * | |
 * +-------------------------------------------------------+
 */

/* return number of chars of the scheme (incl. '://')
 * if the URI is absolute (includes a scheme etc.)
 * otherwise 0.
 * If supportqs is not NULL, we return a whether or not
 * the scheme supports a query string or not.
 *
 * NOTE: If you add new schemes here, please have a
 * look at escape_absolute_uri and splitout_queryargs.
 * Not every scheme takes query strings and some schemes
 * may be handled in a special way.
 *
 * XXX: we may consider a scheme registry, perhaps with
 * appropriate escape callbacks to allow other modules
 * to extend mod_rewrite at runtime.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1439 - 3

/* when `RewriteEngine off' was used in the per-server
 * context then the rewritemap-programs were not spawned.
 * In this case using such a map (usually in per-dir context)
 * is useless because it is not available.
 *
 * newlines in the key leave bytes in the pipe and cause
 * bad things to happen (next map lookup will use the chars
 * after the \n instead of the new key etc etc - in other words,
 * the Rewritemap falls out of sync with the requests).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2257 - 3

/* perform all the expansions on the input string
 * putting the result into a new string
 *
 * for security reasons this expansion must be performed in a
 * single pass, otherwise an attacker can arrange for the result
 * of an earlier expansion to include expansion specifiers that
 * are interpreted by a later expansion, producing results that
 * were not intended by the administrator.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4114 - 3

/* Ok, we already know the pattern has matched, but we now
 * additionally have to check for all existing preconditions
 * (RewriteCond) which have to be also true. We do this at
 * this very late stage to avoid unnessesary checks which
 * would slow down the rewriting engine.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4217 - 3

/* For rules evaluated in server context, the mod_proxy fixup
 * hook can be relied upon to escape the URI as and when
 * necessary, since it occurs later. If in directory context,
 * the ordering of the fixup hooks is forced such that
 * mod_proxy comes first, so the URI must be escaped here
 * instead. See PR 39746, 46428, and other headaches. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4255 - 3

/* Special Rewriting Feature: Self-Reduction
 * We reduce the URL by stripping a possible
 * http[s]://<ourhost>[:<port>] prefix, i.e. a prefix which
 * corresponds to ourself. This is to simplify rewrite maps
 * and to avoid recursion, etc. When this prefix is not a
 * coincidence then the user has to use [R] explicitly (see
 * above).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:231 - 3

/*
 * The request should end up looking like this:
 * r->uri: /correct-url/mispelling/more
 * r->filename: /correct-file/mispelling r->path_info: /more
 *
 * So we do this in steps. First break r->filename into two pieces
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:317 - 3

/*
 * The spdist() should have found the majority of the misspelled
 * requests. It is of questionable use to continue looking for
 * files with the same base name, but potentially of totally wrong
 * type (index.html <-> index.db).
 *
 * If you're using MultiViews, and have a file named foobar.html,
 * which you refer to as "e;foobar"e;, and someone tried to access
 * "e;Foobar"e;, without CheckBasenameMatch, mod_speling won't find it,
 * because it won't find anything matching that spelling.
 * With the extension-munging, it would locate "e;foobar.html"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:97 - 3

/*
 * Server config for this module: global disablement flag, a list of usernames
 * ineligible for UserDir access, a list of those immune to global (but not
 * explicit) disablement, and the replacement string for all others.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:143 - 3

/* Since we are a raw argument, it is possible for us to be called with
 * zero arguments. So that we aren't ambiguous, flat out reject this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1491 - 3

/*
 * softmagic - lookup one file in database (already read from /etc/magic by
 * apprentice.c). Passed the name and FILE * of one file to be typed.
 */
 /* ARGSUSED1 *//* nbytes passed for regularity, maybe need later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1504 - 3

/*
 * Go through the whole list, stopping if you find a match. Process all the
 * continuations of that match before returning.
 *
 * We support multi-level continuations:
 *
 * At any time when processing a successful top-level match, there is a current
 * continuation level; it represents the level of the last successfully
 * matched continuation.
 *
 * Continuations above that level are skipped as, if we see one, it means that
 * the continuation that controls them - i.e, the lower-level continuation
 * preceding them - failed to match.
 *
 * Continuations below that level are processed as, if we see one, it means
 * we've finished processing or skipping higher-level continuations under the
 * control of a successful or unsuccessful lower-level continuation, and are
 * now seeing the next lower-level continuation and should process it. The
 * current continuation level reverts to the level of the one we're seeing.
 *
 * Continuations at the current level are processed as, if we see one, there's
 * no lower-level continuation that may have failed.
 *
 * If a continuation matches, we bump the current continuation level so that
 * higher-level continuations are processed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:74 - 3

/* If the worker is in error state run
 * retry on that worker. It will be marked as
 * operational if the retry timeout is elapsed.
 * The worker might still be unusable, but we try
 * anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:117 - 3

/* If the worker is in error state run
 * retry on that worker. It will be marked as
 * operational if the retry timeout is elapsed.
 * The worker might still be unusable, but we try
 * anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:168 - 3

/*
 * How to add additional lbmethods:
 * 1. Create func which determines "e;best"e; candidate worker
 * (eg: find_best_bytraffic, above)
 * 2. Register it as a provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:28 - 3

/*
 * The idea behind the find_best_bytraffic scheduler is the following:
 *
 * We know the amount of traffic (bytes in and out) handled by each
 * worker. We normalize that traffic by each workers' weight. So assuming
 * a setup as below:
 *
 * worker a b c
 * lbfactor 1 1 3
 *
 * the scheduler will allow worker c to handle 3 times the
 * traffic of a and b. If each request/response results in the
 * same amount of traffic, then c would be accessed 3 times as
 * often as a or b. If, for example, a handled a request that
 * resulted in a large i/o bytecount, then b and c would be
 * chosen more often, to even things out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:89 - 3

/* If the worker is in error state run
 * retry on that worker. It will be marked as
 * operational if the retry timeout is elapsed.
 * The worker might still be unusable, but we try
 * anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:345 - 3

/* If set to 'on' the session will break
 * if the worker is in error state or
 * disabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1039 - 3

/* Allow "e;error-notes"e; string to be printed by ap_send_error_response()
 * Note; this goes nowhere, canned error response need an overhaul.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1057 - 3

/* Allow "e;error-notes"e; string to be printed by ap_send_error_response()
 * Note; this goes nowhere, canned error response need an overhaul.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1212 - 3

/* Recoverable server error.
 * We can failover to another worker
 * Mark the worker as unusable if member of load balancer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1244 - 3

/*
 * Save current r->status and set it to the value of access_status which
 * might be different (e.g. r->status could be HTTP_OK if e.g. we override
 * the error page on the proxy or if the error was not generated by the
 * backend itself but by the proxy e.g. a bad gateway) in order to give
 * ap_proxy_post_request a chance to act correctly on the status code.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1325 - 3

/* Check if the balancer is defined in both override and base configs:
 * a) If it is, Create copy of base balancer and change the configuration
 * which can be changed by ProxyPass.
 * b) Otherwise, copy the balancer to tocopy array and merge it later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:220 - 3

/*
 * This is only non fatal when the method is idempotent. In this
 * case we can dare to retry it with a different worker if we are
 * a balancer member.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:350 - 3

/*
 * This is only non fatal when we have not sent (parts) of a possible
 * request body so far (we do not store it and thus cannot send it
 * again) and the method is idempotent. In this case we can dare to
 * retry it with a different worker if we are a balancer member.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:490 - 3

/* Handle the case where the error document is itself reverse
 * proxied and was successful. We must maintain any previous
 * error status so that an underlying error (eg HTTP_NOT_FOUND)
 * doesn't become an HTTP_OK.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:537 - 3

/* If we are overriding the errors, we must not send anything to
 * the client, especially as the brigade already contains headers.
 * So do nothing here, and it will be cleaned up below.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:670 - 3

/*
 * This is only non fatal when we have not send (parts) of a possible
 * request body so far (we do not store it and thus cannot send it
 * again) and the method is idempotent. In this case we can dare to
 * retry it with a different worker if we are a balancer member.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:808 - 3

/*
 * In case the CPING / CPONG failed for the first time we might be
 * just out of luck and got a faulty backend connection, but the
 * backend might be healthy nevertheless. So ensure that the backend
 * TCP connection gets closed and try it once again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:226 - 3

/*
 * If the worker is in error state run
 * retry on that worker. It will be marked as
 * operational if the retry timeout is elapsed.
 * The worker might still be unusable, but we try
 * anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:250 - 3

/*
 * If the worker is in error state run
 * retry on that worker. It will be marked as
 * operational if the retry timeout is elapsed.
 * The worker might still be unusable, but we try
 * anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:574 - 3

/*
 * This balancer has sticky sessions and the client either has not
 * supplied any routing information or all workers for this route
 * including possible redirect and hotstandby workers are in error
 * state, but we have found another working worker for this
 * balancer where we can send the request. Thus notice that we have
 * changed the route to the backend.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:26 - 3

/*
 * This handles Netscape CONNECT method secure proxy requests.
 * A connection is opened to the specified host and data is
 * passed through between the WWW site and the browser.
 *
 * This code is based on the INTERNET-DRAFT document
 * "e;Tunneling SSL Through a WWW Proxy"e; currently at
 * http://www.mcom.com/newsref/std/tunneling_ssl.html.
 *
 * If proxyhost and proxyport are set, we send a CONNECT to
 * the specified proxy..
 *
 * FIXME: this doesn't log the number of bytes sent, but
 * that may be okay, since the data is supposed to
 * be transparent. In fact, this doesn't log at all
 * yet. 8^)
 * FIXME: doesn't check any headers initally sent from the
 * client.
 * FIXME: should allow authentication, but hopefully the
 * generic proxy authentication is good enough.
 * FIXME: no check for r->assbackwards, whatever that is.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:836 - 3

/* If the client aborted the connection during retrieval or (partially)
 * sending the response, dont't return a HTTP_SERVICE_UNAVAILABLE, since
 * this is not a backend problem. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:778 - 3

/* Reply syntax per RFC 2428: "e;229 blah blah (|||port|)"e; where '|'
 * can be any character in ASCII from 33-126, obscurely. Verify
 * the syntax. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:915 - 3

/* Common routine for failed authorization (i.e., missing or wrong password)
 * to an ftp service. This causes most browsers to retry the request
 * with username and password (which was presumably queried from the user)
 * supplied in the Authorization: header.
 * Note that we "e;invent"e; a realm name which consists of the
 * ftp://user@host part of the reqest (sans password -if supplied but invalid-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:767 - 3

/* sub-requests never use keepalives, and mustn't pass request bodies.
 * Because the new logic looks at input_brigade, we will self-terminate
 * input_brigade and jump past all of the request body logic...
 * Reading anything with ap_get_brigade is likely to consume the
 * main request's body or read beyond EOS - which would be unplesant.
 *
 * An exception: when a kept_body is present, then subrequest CAN use
 * pass request bodies, and we DONT skip the body.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1668 - 3

/*
 * Is it an HTTP/0.9 response or did we maybe preread the 1st line of
 * the response? If so, load the extra data. These are 2 mutually
 * exclusive possibilities, that just happen to require very
 * similar behavior.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1760 - 3

/* Handle the case where the error document is itself reverse
 * proxied and was successful. We must maintain any previous
 * error status so that an underlying error (eg HTTP_NOT_FOUND)
 * doesn't become an HTTP_OK.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:76 - 3

/*
 * We create our own bucket type, which is actually derived (c&p) from the
 * socket bucket.
 * Maybe some time this should be made more abstract (like passing an
 * interception function to read or something) and go into the ap_ or
 * even apr_ namespace.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:438 - 3

/*
 * if the address is given with an explicit netmask, use that
 * Due to a deficiency in apr_inet_addr(), it is impossible to parse
 * "e;partial"e; addresses (with less than 4 quads) correctly, i.e.
 * 192.168.123 is parsed as 192.168.0.123, which is not what I want.
 * I therefore have to parse the IP address manually:
 * if (proxy_readmask(This->name, &This->addr.s_addr, &This->mask.s_addr) == 0)
 * addr and mask were set by proxy_readmask()
 * return 1;
 */

 /*
 * Parse IP addr manually, optionally allowing
 * abbreviated net addresses like 192.168.
 */

 /* Iterate over up to 4 (dotted) quads. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:848 - 3

/*
 * XXX FIXME: Make sure this handled the ambiguous case of the :<PORT>
 * after the hostname
 * XXX FIXME: Ensure the /uri component is a case sensitive match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:888 - 3

/* The balancer comparison is a bit trickier. Given the context
 * BalancerMember balancer://alias http://example.com/foo
 * ProxyPassReverse /bash balancer://alias/bar
 * translate url http://example.com/foo/bar/that to /bash/that
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:947 - 3

/*
 * Cookies are a bit trickier to match: we've got two substrings to worry
 * about, and we can't just find them with strstr 'cos of case. Regexp
 * matching would be an easy fix, but for better consistency with all the
 * other matches we'll refrain and use apr_strmatch to find path=/domain=
 * and stick to plain strings for the config values.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1607 - 3

/*
 * Do a "e;longest match"e; on the worker name to find the worker that
 * fits best to the URL, but keep in mind that we must have at least
 * a minimum matching of length min_match such that
 * scheme://hostname[:port] matches between worker and url.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2913 - 3

/*
 * Put the entire worker to error state if
 * the PROXY_WORKER_IGNORE_ERRORS flag is not set.
 * Although some connections may be alive
 * no further connections to the worker could be made
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3506 - 3

/* X-Forwarded-*: handling
 *
 * XXX Privacy Note:
 * -----------------
 *
 * These request headers are only really useful when the mod_proxy
 * is used in a reverse proxy configuration, so that useful info
 * about the client can be passed through the reverse proxy and on
 * to the backend server, which may require the information to
 * function properly.
 *
 * In a forward proxy situation, these options are a potential
 * privacy violation, as information about clients behind the proxy
 * are revealed to arbitrary servers out there on the internet.
 *
 * The HTTP/1.1 Via: header is designed for passing client
 * information through proxies to a server, and should be used in
 * a forward proxy configuation instead of X-Forwarded-*. See the
 * ProxyVia option for details.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:280 - 3

/**
 * Set a particular value to the session.
 *
 * Using this method ensures that the dirty flag is set correctly, so that
 * the session can be saved efficiently.
 * @param r The current request.
 * @param z The current session. If this value is NULL, the session will be
 * looked up in the request, created if necessary, and saved to the request
 * notes.
 * @param key The key to set. The existing key value will be replaced.
 * @param value The value to set.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:426 - 3

/**
 * Ensure any changes to the session are committed.
 *
 * This is done in an output filter so that our options for where to
 * store the session can include storing the session within a cookie:
 * As an HTTP header, the cookie must be set before the output is
 * written, but after the handler is run.
 *
 * NOTE: It is possible for internal redirects to cause more than one
 * request to be present, and each request might have a session
 * defined. We need to go through each session in turn, and save each
 * one.
 *
 * The same session might appear in more than one request. The first
 * attempt to save the session will be called
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:96 - 3

/**
 * Isolate the cookie with the name "e;name"e;, and if present, extract
 * the payload from the cookie.
 *
 * If the cookie is found, the cookie and any other cookies with the
 * same name are removed from the cookies passed in the request, so
 * that credentials are not leaked to a backend server or process.
 *
 * A missing or malformed cookie will cause this function to return
 * APR_EGENERAL.
 *
 * On success, this returns APR_SUCCESS.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:74 - 3

/* Unixes (and Netware) have the unlink() semantic, which allows to
 * apr_file_remove() a file still in use (opened elsewhere), the inode
 * remains until the last fd is closed, whereas any file created with
 * the same name/path will use a new inode.
 *
 * On windows and OS/2 ("e;\SHAREMEM\..."e; tree), apr_file_remove() marks
 * the files for deletion until the last HANDLE is closed, meanwhile the
 * same file/path can't be opened/recreated.
 * Thus on graceful restart (the only restart mode with mpm_winnt), the
 * old file may still exist until all the children stop, while we ought
 * to create a new one for our new clear SHM. Therefore, we would only
 * be able to reuse (attach) the old SHM, preventing some changes to
 * the config file, like the number of balancers/members, since the
 * size checks (to fit the new config) would fail. Let's avoid this by
 * including the generation number in the SHM filename (obviously not
 * the persisted name!)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:324 - 3

/* Don't call ERR_free_strings in earlier versions, ERR_load_*_strings only
 * actually loaded the error strings once per process due to static
 * variable abuse in OpenSSL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1306 - 3

/* Ensure that we already have, or can fetch, fresh SCTs for each 
 * certificate. If so, start the daemon to maintain these and let
 * startup continue. (Otherwise abort startup.)
 *
 * Except when we start up as root. We don't want to run external
 * certificate-transparency tools as root, and we don't want to have
 * to fix up the permissions of everything we created so that the
 * SCT maintenance daemon can continue to maintain the SCTs as the
 * configured User/Group.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2166 - 3

/* The key is critical to avoiding validating and queueing of
 * the same stuff over and over.
 *
 * Is there any cheaper check than server cert and SCTs all exactly
 * the same as before?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:324 - 3

/* we don't actually know if data is ready before reading, so
 * this isn't an error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:477 - 3

/*
 * Enable/disable SSLProtocol. If the mod_ssl enables protocol
 * which is disabled by default by OpenSSL, show a warning.
 * "e;option"e; is for example SSL_OP_NO_SSLv3.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:499 - 3

/* If the read returns EAGAIN or success with an empty
 * brigade, return an error after setting the retry flag;
 * SSL_read() will then return -1, and SSL_get_error() will
 * indicate SSL_ERROR_WANT_READ. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:949 - 3

/* Send an error bucket, though the proxy currently has no
 * special handling for error buckets and ignores this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:231 - 3

/* Perform TLS upgrade here if "e;SSLEngine optional"e; is configured,
 * SSL is not already set up for this connection, and the client
 * has sent a suitable Upgrade header. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:334 - 3

/*
 * We are using a name based configuration here, but no hostname was
 * provided via SNI. Don't allow that if are requested to do strict
 * checking. Check whether this strict checking was set up either in the
 * server config we used for handshaking or in our current server.
 * This should avoid insecure configuration by accident.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:859 - 3

/*
 * Now we force the SSL renegotiation by sending the Hello Request
 * message to the client. Here we have to do a workaround: Actually
 * OpenSSL returns immediately after sending the Hello Request (the
 * intent AFAIK is because the SSL/TLS protocol says it's not a must
 * that the client replies to a Hello Request). But because we insist
 * on a reply (anything else is an error for us) we have to go to the
 * ACCEPT state manually. Using SSL_set_accept_state() doesn't work
 * here because it resets too much of the connection. So we set the
 * state explicitly and continue the handshake manually.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1528 - 3

/*
 * OpenSSL will call us with either keylen == 512 or keylen == 1024
 * (see the definition of SSL_EXPORT_PKEYLENGTH in ssl_locl.h).
 * Adjust the DH parameter length according to the size of the
 * RSA/DSA private key used for the current connection, and always
 * use at least 1024-bit parameters.
 * Note: This may cause interoperability issues with implementations
 * which limit their DH support to 1024 bit - e.g. Java 7 and earlier.
 * In this case, SSLCertificateFile can be used to specify fixed
 * 1024-bit DH parameters (with the effect that OpenSSL skips this
 * callback).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1636 - 3

/* If there was an optional verification error, it's not
 * possible to perform OCSP validation since the issuer may be
 * missing/untrusted. Fail in that case. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1866 - 3

/*
 * Set the timeout also for the internal OpenSSL cache, because this way
 * our inter-process cache is consulted only when it's really necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:214 - 3

/* Ensure that the error stack is empty; some SSL
 * functions will fail spuriously if the error stack
 * is not empty. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1157 - 3

/* Create an array large enough to accomodate every extension. This is
 * likely overkill, but safe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:130 - 3

/*
 * Repeat the calls, because SSL_shutdown internally dispatches through a
 * little state machine. Usually only one or two interation should be
 * needed, so we restrict the total number of restrictions in order to
 * avoid process hangs in case the client played bad with the socket
 * connection and OpenSSL cannot recognize it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:344 - 3

/* Check to see if response is an error. If so we automatically accept
 * it because it would have expired from the cache if it was time to
 * retry.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:728 - 3

/* Certificate Status callback. This is called when a client includes a
 * certificate status request extension.
 *
 * Check for cached responses in session cache. If valid send back to
 * client. If absent or no longer valid, query responder and update
 * cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:220 - 3

/**
 * Valid utf8 bit patterns: (true utf8 must satisfy a minimality condition)
 *
 * 0aaaaaaa
 * 110bbbba 10aaaaaa minimality mask: 0x1E
 * 1110cccc 10cbbbba 10aaaaaa 0x0F || 0x20
 * 11110ddd 10ddcccc 10cbbbba 10aaaaaa 0x07 || 0x30
 * 111110ee 10eeeddd 10ddcccc 10cbbbba 10aaaaaa 0x03 || 0x38
 * 1111110f 10ffffee 10eeeddd 10ddcccc 10cbbbba 10aaaaaa 0x01 || 0x3C
 *
 * Charset divination heuristics:
 * 1) presume ascii; if not, then
 * 2) presume utf8; if not, then
 * 3) presume latin1; unless there are control chars, in which case
 * 4) punt to cp1252.
 *
 * Note: in downgrading from 2 to 3, we need to be careful
 * about earlier control characters presumed to be valid utf8.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:108 - 3

/* During the course of debugging I expanded this macro out, so
 * rather than remove all the useful information there is in the
 * following lines, I'm going to leave it here in case anyone
 * else finds it useful.
 *
 * Ben has looked at it and thinks it correct :)
 *
AP_DECLARE(int) ap_hook_post_config(ap_HOOK_post_config_t *pf,
 const char * const *aszPre,
 const char * const *aszSucc,
 int nOrder)
{
 ap_LINK_post_config_t *pHook;

 if (!_hooks.link_post_config) {
 _hooks.link_post_config = apr_array_make(apr_hook_global_pool, 1,
 sizeof(ap_LINK_post_config_t));
 apr_hook_sort_register("e;post_config"e;, &_hooks.link_post_config);
 }

 pHook = apr_array_push(_hooks.link_post_config);
 pHook->pFunc = pf;
 pHook->aszPredecessors = aszPre;
 pHook->aszSuccessors = aszSucc;
 pHook->nOrder = nOrder;
 pHook->szName = apr_hook_debug_current;

 if (apr_hook_debug_enabled)
 apr_hook_debug_show("e;post_config"e;, aszPre, aszSucc);
}

AP_DECLARE(apr_array_header_t *) ap_hook_get_post_config(void)
{
 return _hooks.link_post_config;
}

AP_DECLARE(int) ap_run_post_config(apr_pool_t *pconf,
 apr_pool_t *plog,
 apr_pool_t *ptemp,
 server_rec *s)
{
 ap_LINK_post_config_t *pHook;
 int n;

 if (!_hooks.link_post_config)
 return;

 pHook = (ap_LINK_post_config_t *)_hooks.link_post_config->elts;
 for (n = 0; n < _hooks.link_post_config->nelts; ++n)
 pHook[n].pFunc (pconf, plog, ptemp, s);
}
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:241 - 3

/* A list of the merge_dir_config functions of all loaded modules, sorted
 * by module_index.
 * Using this list in ap_merge_per_dir_configs() is faster than following
 * the module->next linked list because of better memory locality (resulting
 * in better cache usage).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:398 - 3

/* Before continuing, allow each filter that is in the two chains to
 * run their init function to let them do any magic before we could
 * start generating data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1319 - 3

/* If the directive in error has already been set, don't
 * replace it. Otherwise, an error inside a container
 * will be reported as occuring on the first line of the
 * container.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:98 - 3

/* Server core module... This module provides support for really basic
 * server operations, including options and commands which control the
 * operation of other modules. Consider this the bureaucracy module.
 *
 * The core module also defines handlers, etc., to handle just enough
 * to allow a server with the core module ONLY to actually serve documents.
 *
 * This file could almost be mod_core.c, except for the stuff which affects
 * the http_conf_globals.
 */

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:159 - 3

/*
 * left as NULL (we use apr_pcalloc):
 * conf->limit_cpu = NULL;
 * conf->limit_mem = NULL;
 * conf->limit_nproc = NULL;
 * conf->sec_file = NULL;
 * conf->sec_if = NULL;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:702 - 3

/* simple case of already being sorted... */
 /* We're not checking this condition to be fast... we're checking
 * it to avoid trying to palloc zero bytes, which can trigger some
 * memory debuggers to barf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:780 - 3

/*
 * Optional function coming from mod_access_compat, used to determine how
 access control interacts with authentication/authorization
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1013 - 3

/* There are two options regarding what the "e;name"e; of a server is. The
 * "e;canonical"e; name as defined by ServerName and Port, or the "e;client's
 * name"e; as supplied by a possible Host: header or full URI.
 *
 * The DNS option to UseCanonicalName causes this routine to do a
 * reverse lookup on the local IP address of the connection and use
 * that for the ServerName. This makes its value more reliable while
 * at the same time allowing Demon's magic virtual hosting to work.
 * The assumption is that DNS lookups are sufficiently quick...
 * -- fanf 1998-10-03
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5130 - 3

/* expected cause is that the client disconnected already,
 * hence the debug level
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:103 - 3

/*
 * this mode is for filters that might need to 'initialize'
 * a connection before reading request data from a client.
 * NNTP over SSL for example needs to handshake before the
 * server sends the welcome message.
 * such filters would have changed the mode before this point
 * is reached. however, protocol modules such as NNTP should
 * not need to know anything about SSL. given the example, if
 * SSL is not in the filter chain, AP_MODE_INIT is a noop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:201 - 3

/* If mode is EXHAUSTIVE, we want to just read everything until the end
 * of the brigade, which in this case means the end of the socket.
 * To do this, we attach the brigade that has currently been setaside to
 * the brigade that was passed down, and send that brigade back.
 *
 * NOTE: This is VERY dangerous to use, and should only be done with
 * extreme caution. FWLIW, this would be needed by an MPM like Perchild;
 * such an MPM can easily request the socket and all data that has been
 * read, which means that it can pass it to the correct child process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:104 - 3

/*
 * To send data over high bandwidth-delay connections at full
 * speed we must force the TCP window to open wide enough to keep the
 * pipe full. The default window size on many systems
 * is only 4kB. Cross-country WAN connections of 100ms
 * at 1Mb/s are not impossible for well connected sites.
 * If we assume 100ms cross-country latency,
 * a 4kB buffer limits throughput to 40kB/s.
 *
 * To avoid this problem I've added the SendBufferSize directive
 * to allow the web master to configure send buffer size.
 *
 * The trade-off of larger buffers is that more kernel memory
 * is consumed. YMMV, know your customers and your network!
 *
 * -John Heidemann <johnh@isi.edu> 25-Oct-96
 *
 * If no size is specified, use the kernel default.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:199 - 3

/* I seriously doubt that this would work on Unix; I have doubts that
 * it entirely solves the problem on Win32. However, since setting
 * reuseaddr on the listener -prior- to binding the socket has allowed
 * us to attach to the same port as an already running instance of
 * Apache, or even another web server, we cannot identify that this
 * port was exclusively granted to this instance of Apache.
 *
 * So set reuseaddr, but do not attempt to do so until we have the
 * parent listeners successfully bound.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:632 - 3

/* Although we've removed ourselves from the list,
 * we need to make sure that the next iteration won't
 * consider "e;previous"e; a working IPv6 '::' socket.
 * Changing the family is enough to make sure the
 * conditions before make_sock() fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:654 - 3

/* if multiple listening sockets, make them non-blocking so that
 * if select()/poll() reports readability for a reset connection that
 * is already forgotten about by the time we call accept, we won't
 * be hung until another connection arrives on that port
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:309 - 3

/* In 2.4 favor PROGRAM_ENV, accept "e;||prog"e; syntax for compatibility
 * and "e;|$cmd"e; to override the default.
 * Any 2.2 backport would continue to favor SHELLCMD_ENV so there
 * accept "e;||prog"e; to override, and "e;|$cmd"e; to ease conversion.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:416 - 3

/*
 * Now that we have dup'ed s_main->error_log to stderr_log
 * close it and set s_main->error_log to stderr_log. This avoids
 * this fd being inherited by the next piped logger who would
 * keep open the writing end of the pipe that this one uses
 * as stdin. This in turn would prevent the piped logger from
 * exiting.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:594 - 3

/*
 * C: log conn log_id if available,
 * c: log conn log id if available and not a once-per-request log line
 * else: log request log id if available
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1837 - 3

/* In 2.4 favor PROGRAM_ENV, accept "e;||prog"e; syntax for compatibility
 * and "e;|$cmd"e; to override the default.
 * Any 2.2 backport would continue to favor SHELLCMD_ENV so there
 * accept "e;||prog"e; to override, and "e;|$cmd"e; to ease conversion.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:401 - 3

/* The event MPM respects a couple of runtime flags that can aid
 * in debugging. Setting the -DNO_DETACH flag will prevent the root process
 * from detaching from its controlling terminal. Additionally, setting
 * the -DONE_PROCESS flag (which implies -DNO_DETACH) will get you the
 * child_main loop running in the process which originally started up.
 * This gives you a pretty nice debugging environment. (You'll get a SIGHUP
 * early in standalone_main; just continue through. This is the server
 * trying to kill off any child processes which it might have lying
 * around --- Apache doesn't keep track of their pids, it just sends
 * SIGHUP to the process group, ignoring it in the root process.
 * Continue through and you'll be fine.).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:721 - 3

/* Um, is this _probably_ not an error, if the user has
 * tried to do a shutdown twice quickly, so we won't
 * worry about reporting it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:788 - 3

/* For systems following the LFS standard, ignoring SIGXFSZ allows
 * a write() beyond the 2GB limit to fail gracefully with E2BIG
 * rather than terminate the process. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2635 - 3

/* A terminating signal was received. Now join each of the
 * workers to clean them up.
 * If the worker already exited, then the join frees
 * their resources and returns.
 * If the worker hasn't exited, then this blocks until
 * they have (then cleans up).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2676 - 3

/* A terminating signal was received. Now join each of the
 * workers to clean them up.
 * If the worker already exited, then the join frees
 * their resources and returns.
 * If the worker hasn't exited, then this blocks until
 * they have (then cleans up).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3061 - 3

/* Don't perform idle maintenance when a child dies,
 * only do it when there's a timeout. Remember only a
 * finite number of children can die, and it's pretty
 * pathological for a lot to die suddenly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:428 - 3

/**
 * Retrieves the next available socket from the queue. If there are no
 * sockets available, it will block until one becomes available.
 * Once retrieved, the socket is placed into the address specified by
 * 'sd'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:722 - 3

/* Um, is this _probably_ not an error, if the user has
 * tried to do a shutdown twice quickly, so we won't
 * worry about reporting it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:780 - 3

/* For systems following the LFS standard, ignoring SIGXFSZ allows
 * a write() beyond the 2GB limit to fail gracefully with E2BIG
 * rather than terminate the process. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1045 - 3

/* kludge to avoid crash in APR reslist cleanup code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1339 - 3

/* Don't perform idle maintenance when a child dies,
 * only do it when there's a timeout. Remember only a
 * finite number of children can die, and it's pretty
 * pathological for a lot to die suddenly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:294 - 3

/* A child has terminated, remove its scoreboard entry & terminate if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:302 - 3

/* Child terminated normally, check its exit code and
 * terminate server if child indicates a fatal error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:273 - 3

/* Um, is this _probably_ not an error, if the user has
 * tried to do a shutdown twice quickly, so we won't
 * worry about reporting it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:379 - 3

/* Um, is this _probably_ not an error, if the user has
 * tried to do a shutdown twice quickly, so we won't
 * worry about reporting it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:436 - 3

/* For systems following the LFS standard, ignoring SIGXFSZ allows
 * a write() beyond the 2GB limit to fail gracefully with E2BIG
 * rather than terminate the process. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:647 - 3

/* check for termination first so we don't sleep for a while in
 * poll if already signalled
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:748 - 3

/* kludge to avoid crash in APR reslist cleanup code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1119 - 3

/* Don't perform idle maintenance when a child dies,
 * only do it when there's a timeout. Remember only a
 * finite number of children can die, and it's pretty
 * pathological for a lot to die suddenly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:168 - 3

/* We have already expired timers in the queue. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:156 - 3

/*
 * Signalling Apache on NT.
 *
 * Under Unix, Apache can be told to shutdown or restart by sending various
 * signals (HUP, USR, TERM). On NT we don't have easy access to signals, so
 * we use "e;events"e; instead. The parent apache process goes into a loop
 * where it waits forever for a set of events. Two of those events are
 * called
 *
 * apPID_shutdown
 * apPID_restart
 *
 * (where PID is the PID of the apache parent process). When one of these
 * is signalled, the Apache parent performs the appropriate action. The events
 * can become signalled through internal Apache methods (e.g. if the child
 * finds a fatal error and needs to kill its parent), via the service
 * control manager (the control thread will signal the shutdown event when
 * requested to stop the Apache service), from the -k Apache command line,
 * or from any external program which finds the Apache PID from the
 * httpd.pid file.
 *
 * The signal_parent() function, below, is used to signal one of these events.
 * It can be called by any child or parent process, since it does not
 * rely on global variables.
 *
 * On entry, type gives the event to signal. 0 means shutdown, 1 means
 * graceful restart.
 */
/*
 * Initialise the signal names, in the global variables signal_name_prefix,
 * signal_restart_name and signal_shutdown_name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:999 - 3

/* Handle the following SCM aspects in this phase:
 *
 * -k runservice [transition in service context only]
 * -k install
 * -k config
 * -k uninstall
 * -k stop
 * -k shutdown (same as -k stop). Maintained for backward compatability.
 *
 * We can't leave this phase until we know our identity
 * and modify the command arguments appropriately.
 *
 * We do not care if the .conf file exists or is parsable when
 * attempting to stop or uninstall a service.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1218 - 3

/* Start the NT Service _NOW_ because the WinNT SCM is
 * expecting us to rapidly assume control of our own
 * process, the SCM will tell us our service name, and
 * may have extra StartService() command arguments to
 * add for us.
 *
 * The SCM will generally invoke the executable with
 * the c:\win\system32 default directory. This is very
 * lethal if folks use ServerRoot /foopath on windows
 * without a drive letter. Change to the default root
 * (path to apache root, above /bin) for safety.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1393 - 3

/* Open a null handle to soak stdout in this process.
 * We need to emulate apr_proc_detach, unix performs this
 * same check in the pre_config hook (although it is
 * arguably premature). Services already fixed this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:184 - 3

/* for Terminate signals, shut down the server.
 * Wait for Apache to terminate, but respond
 * after a reasonable time to tell the system
 * that we did attempt to shut ourself down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:638 - 3

/* Now we have the mpm_service_name arg, and the mpm_runservice_nt()
 * call appended the arguments passed by StartService(), so it's
 * time to _prepend_ the default arguments for the server from
 * the service's default arguments (all others override them)...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1012 - 3

/* signal_service_transition is a simple thunk to signal the service
 * and monitor its successful transition. If the signal passed is 0,
 * then the caller is assumed to already have performed some service
 * operation to be monitored (such as StartService), and no actual
 * ControlService signal is sent.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:324 - 3

/**
 * Retrieves the next available socket from the queue. If there are no
 * sockets available, it will block until one becomes available.
 * Once retrieved, the socket is placed into the address specified by
 * 'sd'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:209 - 3

/* The worker MPM respects a couple of runtime flags that can aid
 * in debugging. Setting the -DNO_DETACH flag will prevent the root process
 * from detaching from its controlling terminal. Additionally, setting
 * the -DONE_PROCESS flag (which implies -DNO_DETACH) will get you the
 * child_main loop running in the process which originally started up.
 * This gives you a pretty nice debugging environment. (You'll get a SIGHUP
 * early in standalone_main; just continue through. This is the server
 * trying to kill off any child processes which it might have lying
 * around --- Apache doesn't keep track of their pids, it just sends
 * SIGHUP to the process group, ignoring it in the root process.
 * Continue through and you'll be fine.).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:490 - 3

/* Um, is this _probably_ not an error, if the user has
 * tried to do a shutdown twice quickly, so we won't
 * worry about reporting it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:557 - 3

/* For systems following the LFS standard, ignoring SIGXFSZ allows
 * a write() beyond the 2GB limit to fail gracefully with E2BIG
 * rather than terminate the process. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1386 - 3

/* A terminating signal was received. Now join each of the
 * workers to clean them up.
 * If the worker already exited, then the join frees
 * their resources and returns.
 * If the worker hasn't exited, then this blocks until
 * they have (then cleans up).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1780 - 3

/* Don't perform idle maintenance when a child dies,
 * only do it when there's a timeout. Remember only a
 * finite number of children can die, and it's pretty
 * pathological for a lot to die suddenly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:159 - 3

/* gave it our best shot, but alas... If this really
 * is a child we are trying to kill and it really hasn't
 * exited, we will likely fail to bind to the port
 * after the restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:332 - 3

/* The child already died - log the termination status if
 * necessary: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:377 - 3

/* Child died... if it died due to a fatal error,
 * we should simply bail out. The caller needs to
 * check for bad rc from us and exit, running any
 * appropriate cleanups.
 *
 * If the child died due to a resource shortage,
 * the parent should limit the rate of forking
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:625 - 3

/* If possible, find a listener which is configured for
 * plain-HTTP, not SSL; using an SSL port would either be
 * expensive to do correctly (performing a complete SSL handshake)
 * or cause log spam by doing incorrectly (simply sending EOF). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:732 - 3

/* we don't write anything to the pod here... we assume
 * that the would-be reader of the pod has another way to
 * see that it is time to die once we wake it up
 *
 * writing lots of things to the pod at once is very
 * problematic... we can fill the kernel pipe buffer and
 * be blocked until somebody consumes some bytes or
 * we hit a timeout... if we hit a timeout we can't just
 * keep trying because maybe we'll never successfully
 * write again... but then maybe we'll leave would-be
 * readers stranded (a number of them could be tied up for
 * a while serving time-consuming requests)
 */
 /* Recall: we only worry about IDLE child processes here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:178 - 3

/* For all static responses, it's almost certain that the file was
 * last modified before the beginning of the request. So there's
 * no reason to call time(NULL) again. But if the response has been
 * created on demand, then it might be newer than the time the request
 * started. In this event we really have to call time(NULL) again
 * so that we can give the clients the most accurate Last-Modified. If we
 * were given a time in the future, we return the current time - the
 * Last-Modified can't be in the future.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:509 - 3

/* http://issues.apache.org/bugzilla/show_bug.cgi?id=31875
 * http://issues.apache.org/bugzilla/show_bug.cgi?id=28450
 *
 * This is not in fact a URI, it's a path. That matters in the
 * case of a leading double-slash. We need to resolve the issue
 * by normalising that out before treating it as a URI.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:603 - 3

/* ap_rgetline returns APR_ENOSPC if it fills up the
 * buffer before finding the end-of-line. This is only going to
 * happen if it exceeds the configured limit for a request-line.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:803 - 3

/* ap_rgetline returns APR_ENOSPC if it fills up the buffer before
 * finding the end-of-line. This is only going to happen if it
 * exceeds the configured limit for a field size.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:810 - 3

/* ensure ap_escape_html will terminate correctly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:438 - 3

/*****************************************************************
 *
 * Getting and checking directory configuration. Also checks the
 * FollowSymlinks and FollowSymOwner stuff, since this is really the
 * only place that can happen (barring a new mid_dir_walk callout).
 *
 * We can't do it as an access_checker module function which gets
 * called with the final per_dir_config, since we could have a directory
 * with FollowSymLinks disabled, which contains a symlink to another
 * with a .htaccess file which turns FollowSymLinks back on --- and
 * access in such a case must be denied. So, whatever it is that
 * checks FollowSymLinks needs to know the state of the options as
 * they change, all the way down.
 */


/*
 * resolve_symlink must _always_ be called on an APR_LNK file type!
 * It will resolve the actual target file type, modification date, etc,
 * and provide any processing required for symlink evaluation.
 * Path must already be cleaned, no trailing slash, no multi-slashes,
 * and don't call this on the root!
 *
 * Simply, the number of times we deref a symlink are minimal compared
 * to the number of times we had an extra lstat() since we 'weren't sure'.
 *
 * To optimize, we stat() anything when given (opts & OPT_SYM_LINKS), otherwise
 * we start off with an lstat(). Every lstat() must be dereferenced in case
 * it points at a 'nasty' - we must always rerun check_safe_file (or similar.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:608 - 3

/* XXX: Better (faster) tests needed!!!
 *
 * "e;OK"e; as a response to a real problem is not _OK_, but to allow broken
 * modules to proceed, we will permit the not-a-path filename to pass the
 * following two tests. This behavior may be revoked in future versions
 * of Apache. We still must catch it later if it's heading for the core
 * handler. Leave INFO notes here for module debugging.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:852 - 3

/*
 * Now build r->filename component by component, starting
 * with the root (on Unix, simply "e;/"e;). We will make a huge
 * assumption here for efficiency, that any canonical path
 * already given included a canonical root.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1395 - 3

/* No tricks here, there are no <Locations > to parse in this vhost.
 * We won't destroy the cache, just in case _this_ redirect is later
 * redirected again to a vhost with <Location > blocks to optimize.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1406 - 3

/* Location and LocationMatch differ on their behaviour w.r.t. multiple
 * slashes. Location matches multiple slashes with a single slash,
 * LocationMatch doesn't. An exception, for backwards brokenness is
 * absoluteURIs... in which case neither match multiple slashes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1466 - 3

/* Test the regex, fnmatch or string as appropriate.
 * If it's a strcmp, and the <Location > pattern was
 * not slash terminated, then this uri must be slash
 * terminated (or at the end of the string) to match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:263 - 3

/*
 * Here's a pool-based interface to the POSIX-esque ap_regcomp().
 * Note that we return ap_regex_t instead of being passed one.
 * The reason is that if you use an already-used ap_regex_t structure,
 * the memory that you've already allocated gets forgotten, and
 * regfree() doesn't clear it. So we don't allow it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:950 - 3

/* Some twisted character [no pun intended] at MS decided that a
 * zero width joiner as the lead wide character would be ideal for
 * describing Unicode text files. This was further convoluted to
 * another MSism that the same character mapped into utf-8, EF BB BF
 * would signify utf-8 text files.
 *
 * Since MS configuration files are all protecting utf-8 encoded
 * Unicode path, file and resource names, we already have the correct
 * WinNT encoding. But at least eat the stupid three bytes up front.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1881 - 3

/* c2x takes an unsigned, and expects the caller has guaranteed that
 * 0 <= what < 256... which usually means that you have to cast to
 * unsigned char first, because (unsigned)(char)(x) first goes through
 * signed extension to an int before the unsigned cast.
 *
 * The reason for this assumption is to assist gcc code generation --
 * the unsigned char -> unsigned extension is already done earlier in
 * both uses of this code, so there's no need to waste time doing it
 * again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3270 - 3

/* APR_CHARSET_EBCDIC */
/* Derived from apr-iconv/ccs/cp037.c for EBCDIC case comparison,
 provides unique identity of every char value (strict ISO-646
 conformance, arbitrary election of an ISO-8859-1 ordering, and
 very arbitrary control code assignments into C1 to achieve
 identity and a reversible mapping of code points),
 then folding the equivalences of ASCII 41-5A into 61-7A, 
 presenting comparison results in a somewhat ISO/IEC 10646
 (ASCII-like) order, depending on the EBCDIC code page in use.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:639 - 3

/* YYTABLE[YYPACT[STATE-NUM]]. What to do in state STATE-NUM. If
 positive, shift that token. If negative, reduce the rule which
 number is the opposite. If YYTABLE_NINF, syntax error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1000 - 3

/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
 quotes and backslashes, so that it's suitable for yyerror. The
heuristic is that double-quoting is unnecessary unless the string
 contains an apostrophe, a comma, or backslash (other than
 backslash-backslash). YYSTR is taken from yytname. If YYRES is
 null, do not copy; instead, return the length of what the result
 would have been. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1103 - 3

/* Start YYX at -YYN if negative to avoid negative indexes in
 YYCHECK. In other words, skip the first -YYN actions for
 this state because they are default actions. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1893 - 3

/* If not already recovering from an error, report this error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:36 - 3

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:817 - 3

/* No semi-colon after return; correct usage is to write "e;yyterminate();"e; -
* we don't want an extra ';' after the "e;return"e; because that will cause
 * some compilers to complain about unreachable statements.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2532 - 3

/* ap_expr_yylex_init_extra has the same functionality as ap_expr_yylex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to ap_expr_yyalloc in
 * the yyextra field.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:801 - 3

/* Lowercase and remove any trailing dot and/or :port from the hostname,
 * and check that it is sane.
 *
 * In most configurations the exact syntax of the hostname isn't
 * important so strict sanity checking isn't necessary. However, in
 * mass hosting setups (using mod_vhost_alias or mod_rewrite) where
 * the hostname is interpolated into the filename, we need to be sure
 * that the interpolation doesn't expose parts of the filesystem.
 * We don't do strict RFC 952 / RFC 1123 syntax checking in order
 * to support iDNS and people who erroneously use underscores.
 * Instead we just check for filesystem metacharacters: directory
 * separators / and \ and sequences of more than one dot.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:868 - 3

/*
 * Already parsed, surrounding [ ] (if IPv6 literal) and :port have
 * already been removed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:100 - 3

/*
 * BUGS:
 *
 * - uses strcpy/etc.
 * - has various other poor buffer attacks related to the lazy parsing of
 * response headers from the server
 * - doesn't implement much of HTTP/1.x, only accepts certain forms of
 * responses
 * - (performance problem) heavy use of strstr shows up top in profile
 * only an issue for loopback usage
 */

/* -------------------------------------------------------------------- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1416 - 3

/* connection closed, but in violation of the protocol, after
 * some data has already been read; this commonly happens, so
 * let the length check catch any response errors
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:1 - 3

/**
 * Licensed under the Apache License, Version 2.0 (the "e;License"e;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "e;AS IS"e; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Originally written @ BBC by Graham Leggett
 * Copyright 2009-2011 British Broadcasting Corporation
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:828 - 3

/* we have a somehow unreadable headers file which is associated
 * with a data file. this may be caused by apache currently
 * rewriting the headers file. thus we may delete the file set
 * either in realclean mode or if the headers file modification
 * timestamp is not within a specified positive or negative offset
 * to the current time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:844 - 3

/* single data and header files may be deleted either in realclean
 * mode or if their modification timestamp is not within a
 * specified positive or negative offset to the current time.
 * this handling is necessary due to possible race conditions
 * between apache and this process
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1679 - 3

/* before daemonizing, so we
 * can report errors
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1802 - 3

/* we can't sleep the whole delay time here apiece as this is racy
 * with respect to interrupt delivery - think about what happens
 * if we have tested for an interrupt, then get scheduled
 * before the apr_sleep() call and while waiting for the cpu
 * we do get an interrupt
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:345 - 3

/* After a error, truncate the current file and write out an error
 * message, which must be contained in message. The process is
 * terminated on failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:504 - 3

/*
 * Get a size or time param from a string.
 * Parameter 'last' indicates, whether the
 * argument is the last commadnline argument.
 * UTC offset is only allowed as a last argument
 * in order to make is distinguishable from the
 * rotation interval time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:532 - 3

/*
 * Get the current working directory, as well as the proper
 * document root (dependant upon whether or not it is a
 * ~userdir request). Error out if we cannot get either one,
 * or if the current working directory is not in the docroot.
 * Use chdir()s and getcwd()s to avoid problems with symlinked
 * directories. Yuck.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:73 - 2

//(.*):(\\d{1,5})/?$%"e;

/*
 * utility function to connect to a peer; generally useful, but 
 * wait for AF_UNIX support in this mod before thinking about how
 * to make it available to other modules
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:680 - 2

/* When the application gives a 200 response, the server ignores response
 headers whose names aren't prefixed with Variable- prefix, and ignores
 any response content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:778 - 2

/* An Authorizer application's 200 response may include headers
 * whose names are prefixed with Variable-, and they should be
 * available to subsequent phases via subprocess_env (and yanked
 * from the client response).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:885 - 2

/* combined authn/authz phase, so app won't be invoked for authz
 *
 * Remember that the request was successfully authorized by this
 * provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:961 - 2

/* combined authn/authz phase, so app won't be invoked for authz
 *
 * Remember that the request was successfully authorized by this
 * provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:450 - 2

/* If the password isn't set in the per-request config, we didn't
 * authenticate this user, and leave the default credentials */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:493 - 2

/*
 * Authentication Phase
 * --------------------
 *
 * This phase authenticates the credentials the user has sent with
 * the request (ie the username and password are checked). This is done
 * by making an attempt to bind to the LDAP server using this user's
 * DN and the supplied password.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:744 - 2

/*
 * If we have been authenticated by some other module than mod_authnz_ldap,
 * the req structure needed for authorization needs to be created
 * and populated with the userid and DN of the account in LDAP
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:907 - 2

/*
 * If we have been authenticated by some other module than mod_auth_ldap,
 * the req structure needed for authorization needs to be created
 * and populated with the userid and DN of the account in LDAP
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:933 - 2

/* We weren't called in the authentication phase, so we didn't have a
 * chance to set the user field. Do so now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:954 - 2

/* PR52464 exhaust attrs in base group before checking subgroups */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1060 - 2

/*
 * If we have been authenticated by some other module than mod_auth_ldap,
 * the req structure needed for authorization needs to be created
 * and populated with the userid and DN of the account in LDAP
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1160 - 2

/*
 * If we have been authenticated by some other module than mod_auth_ldap,
 * the req structure needed for authorization needs to be created
 * and populated with the userid and DN of the account in LDAP
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1269 - 2

/*
 * If we have been authenticated by some other module than mod_auth_ldap,
 * the req structure needed for authorization needs to be created
 * and populated with the userid and DN of the account in LDAP
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:180 - 2

/* we can't break out here or row won't get cleaned up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:276 - 2

/* we can't break out here or row won't get cleaned up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:401 - 2

/* error: give up and pass the buck */
 /* FIXME: getting this for NOTFOUND - prolly a bug in mod_socache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:445 - 2

/* error: give up and pass the buck */
 /* FIXME: getting this for NOTFOUND - prolly a bug in mod_socache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:850 - 2

/*
 * If we're returning 401 to an authenticated user, tell them to
 * try again. If unauthenticated, note_auth_failure has already
 * been called during auth.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:861 - 2

/*
 * We need a user before we can decide what to do.
 * Get out of the way and proceed with authentication.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:886 - 2

/*
 * If we're returning 401 to an authenticated user, tell them to
 * try again. If unauthenticated, note_auth_failure has already
 * been called during auth.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:898 - 2

/* We'll assume that the module has already said what its
 * error was in the logs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:976 - 2

/*
 * If the argument to the 'all' provider is 'granted' then just let
 * everybody in. This would be equivalent to the previous syntax of
 * 'allow from all'. If the argument is 'denied' we reject everbody,
 * which is equivalent to 'deny from all'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbd.c:188 - 2

/* we can't break out here or row won't get cleaned up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:40 - 2

/* This should go into APR; perhaps with some nice
 * caching/locking/flocking of the open dbm file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:176 - 2

/* no groups available, so exit immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:251 - 2

/* no groups available, so exit immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:174 - 2

/* no groups available, so exit immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:241 - 2

/* no groups available, so exit immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:257 - 2

/* No need to emit a error log entry because the call
 to authz_owner_get_file_group already did it
 for us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:419 - 2

/* We'll assume that the module has already said what its error
 * was in the logs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:874 - 2

/*
 * Authorization header parser code
 */

/* Parse the Authorization header, if it exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1127 - 2

/*
 * Authorization challenge generation code (for WWW-Authenticate)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1608 - 2

/* Hmm, the simple match didn't work (probably a proxy modified the
 * request-uri), so lets do a more sophisticated match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1715 - 2

/* authentication denied in the provider before attempting a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:837 - 2

/*
 * We'll assume that the module has already said what its error
 * was in the logs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1207 - 2

/*
 * make sure the logout page is never cached - otherwise the logout won't
 * work!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:82 - 2

/* The ssl_proxy_enable() and ssl_engine_disable() optional functions
 * are used by mod_proxy to enable use of SSL for outgoing
 * connections. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:199 - 2

/* XXX Should be echoing by h_errno the actual failure, no?
 * ap_log_error would be good here. Better yet - APRize.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:702 - 2

/* Now that we have removed all of the mod_nw_ssl created socket records,
 allow the normal listen socket handling to occur.
 NOTE: If for any reason mod_nw_ssl is removed as a built-in module,
 the following call must be put back into the pre-config handler of the
 MPM. It is only here to ensure that mod_nw_ssl fixes up the listen
 socket list before anything else looks at it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1176 - 2

/* No need to ensure that this is a server with optional SSL, the filter
 * is only inserted if that is true.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:139 - 2

/* ugly hack: grab default uid and gid from unixd */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:314 - 2

/* We need to set privileges before mod_unixd,
 * 'cos otherwise setuid will wipe our privilege to do so
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:260 - 2

/* TODO: These aught to become overrideable, so that we
 * assure a given isapi can be fooled into behaving well.
 *
 * The tricky bit, they aren't really a per-dir sort of
 * config, they will always be constant across every
 * reference to the .dll no matter what context (vhost,
 * location, etc) they apply to.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:418 - 2

/* If the module was not found, it's time to create a hash key entry
 * before releasing the hash lock to avoid multiple threads from
 * loading the same module.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:451 - 2

/* Let others who are blocked on this particular
 * module resume their requests, for better or worse.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:615 - 2

/* Common code invoked for both HSE_REQ_SEND_RESPONSE_HEADER and
 * the newer HSE_REQ_SEND_RESPONSE_HEADER_EX ServerSupportFunction(s)
 * as well as other functions that write responses and presume that
 * the support functions above are optional.
 *
 * Other callers trying to split headers and body bytes should pass
 * head/headlen alone (leaving stat/statlen NULL/0), so that they
 * get a proper count of bytes consumed. The argument passed to stat
 * isn't counted as the head bytes are.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:734 - 2

/* We have a status in r->status, so let's just use it.
 * This is likely to be the Status: parsed above, and
 * may also be a delayed error result from the parser.
 * If it was filled in, status_line should also have
 * been filled in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:942 - 2

/* Deliberately hold off sending 'just the headers' to begin to
 * accumulate the body and speed up the overall response, or at
 * least wait for the end the session.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1248 - 2

/* Mapping started with assuming both strings matched.
 * Now roll on the path_info as a mismatch and handle
 * terminating slashes for directory matches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1286 - 2

/* is a combination of:
 * HSE_URL_FLAGS_READ 0x001 Allow read
 * HSE_URL_FLAGS_WRITE 0x002 Allow write
 * HSE_URL_FLAGS_EXECUTE 0x004 Allow execute
 * HSE_URL_FLAGS_SSL 0x008 Require SSL
 * HSE_URL_FLAGS_DONT_CACHE 0x010 Don't cache (VRoot only)
 * HSE_URL_FLAGS_NEGO_CERT 0x020 Allow client SSL cert
 * HSE_URL_FLAGS_REQUIRE_CERT 0x040 Require client SSL cert
 * HSE_URL_FLAGS_MAP_CERT 0x080 Map client SSL cert to account
 * HSE_URL_FLAGS_SSL128 0x100 Require 128-bit SSL cert
 * HSE_URL_FLAGS_SCRIPT 0x200 Allow script execution
 *
 * XxX: As everywhere, EXEC flags could use some work...
 * and this could go further with more flags, as desired.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1357 - 2

/* Deliberately hold off sending 'just the headers' to begin to
 * accumulate the body and speed up the overall response, or at
 * least wait for the end the session.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1510 - 2

/* Time to start reading the appropriate amount of data,
 * and allow the administrator to tweak the number
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1666 - 2

/* As the client returned no error, and if we did not error out
 * ourselves, trust dwHttpStatusCode to say something relevant.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:127 - 2

/* sign extension won't hurt us here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:148 - 2

/**
 * Take two sets of headers, sandwich them together, and apply the result to
 * r->headers_out.
 *
 * To complicate this, a header may be duplicated in either table. Should a
 * header exist in the top table, all matching headers will be removed from
 * the bottom table before the headers are combined. The Warning headers are
 * handled specially. Warnings are added rather than being replaced, while
 * in the case of revalidation 1xx Warnings are stripped.
 *
 * The Content-Type and Last-Modified headers are then re-parsed and inserted
 * into the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:179 - 2

/*
 * Also unset possible Content-Type headers in r->headers_out and
 * r->err_headers_out as they may be different to what we have received
 * from the cache.
 * Actually they are not needed as r->content_type set by
 * ap_set_content_type above will be used in the store_headers functions
 * of the storage providers as a fallback and the HTTP_HEADER filter
 * does overwrite the Content-Type header with r->content_type anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:192 - 2

/* If the cache gave us a Last-Modified header, we can't just
 * pass it on blindly because of restrictions on future values.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:228 - 2

/* if no-cache, we can't serve from the cache, but we may store to the
 * cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:418 - 2

/* if Cache-Control: only-if-cached, and not cached, return 504 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:496 - 2

/*
 * Copy the scheme, ensuring that it is lower case. If the parsed uri
 * contains no string or if this is not a proxy request get the http
 * scheme for this request. As r->parsed_uri.scheme is not set if this
 * is a reverse proxy request, it is ensured that the cases
 * "e;no proxy request"e; and "e;reverse proxy request"e; are handled in the same
 * manner (see above why this is needed).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:540 - 2

/* No port string given in the AbsoluteUri, and we have no
 * idea what the default port for the scheme is. Leave it
 * blank and live with the inefficiency of some extra cached
 * entities.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:177 - 2

/* per directory cache disable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:182 - 2

/* global cache disable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:647 - 2

/*
 * If no value is assigned to max-stale, then the client is willing
 * to accept a stale response of any age (RFC2616 14.9.3). We will
 * set it to one year in this case as this situation is somewhat
 * similar to a "e;never expires"e; Expires header (RFC2616 14.21)
 * which is set to a date one year from the time the response is
 * sent in this case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1210 - 2

/* Remove the user defined headers set with CacheIgnoreHeaders.
 * This may break RFC 2616 compliance on behalf of the administrator.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:25 - 2

/* -------------------------------------------------------------- */


/* Handles for cache filters, resolved at startup to eliminate
 * a name-to-function mapping on each request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:125 - 2

/* find certain cache controlling headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:194 - 2

/*
 * Add cache_save filter to cache this request. Choose
 * the correct filter by checking if we are a subrequest
 * or not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:261 - 2

/* we've got a cache hit! tell everyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:493 - 2

/*
 * Add cache_save filter to cache this request. Choose
 * the correct filter by checking if we are a subrequest
 * or not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:568 - 2

/* we've got a cache hit! tell everyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:635 - 2

/*
 * CACHE_OUT filter
 * ----------------
 *
 * Deliver cached content (headers and body) up the stack.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:665 - 2

/* restore content type of cached response if available */
 /* Needed especially when stale content gets served. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:708 - 2

/* pass the brigade in into the cache provider, which is then
 * expected to move cached buckets to the out brigade, for us
 * to pass up the filter stack. repeat until in is empty, or
 * we fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:746 - 2

/* cache provider wants more data before passing the brigade
 * upstream, oblige the provider by leaving to fetch more.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:843 - 2

/*
 * Pass Data to Cache
 * ------------------
 * This section passes the brigades into the cache modules, but only
 * if the setup section (see below) is complete.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:850 - 2

/* We've already sent down the response and EOS. So, ignore
 * whatever comes now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1046 - 2

/* if a Expires header is in the past, don't cache it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1053 - 2

/* if we're already stale, but can never revalidate, don't cache it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1059 - 2

/* if a query string is present but no explicit expiration time,
 * don't cache it (RFC 2616/13.9 & 13.2.1)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1091 - 2

/* RFC2616 14.9.1 Cache-Control: private response
 * this object is marked for this user's eyes only. Behave
 * as a tunnel.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1193 - 2

/* we've got a cache conditional miss! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1228 - 2

/* we've got a cache miss! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1333 - 2

/* we've got a cache miss! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1346 - 2

/* We are actually caching this response. So it does not
 * make sense to remove this entity any more.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1476 - 2

/* Did we just update the cached headers on a revalidated response?
 *
 * If so, we can now decide what to serve to the client. This is done in
 * the same way as with a regular response, but conditions are now checked
 * against the cached or merged response headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1547 - 2

/* we've got a cache conditional hit! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1555 - 2

/* we've got a cache conditional hit! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1575 - 2

/* we've got a cache miss! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1584 - 2

/* we've got a cache miss! tell anyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1633 - 2

/* Now remove this cache entry from the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1691 - 2

/* we've got a cache invalidate! tell everyone who cares */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1833 - 2

/* ignore everything except for 5xx errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2001 - 2

/* array of URL prefixes for which caching is disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2008 - 2

/* flag indicating that query-string should be ignored when caching */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2032 - 2

/* array of URL prefixes for which caching is disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2590 - 2

/* cache initializer */
 /* cache quick handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2597 - 2

/* cache error handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2623 - 2

/*
 * CACHE_SAVE must go into the filter chain after a possible DEFLATE
 * filter to ensure that the compressed content is stored.
 * Incrementing filter type by 1 ensures this happens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2633 - 2

/*
 * CACHE_SAVE_SUBREQ must go into the filter chain before SUBREQ_CORE to
 * handle subrequsts. Decrementing filter type by 1 ensures this
 * happens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2654 - 2

/*
 * CACHE_OUT_SUBREQ must go into the filter chain before SUBREQ_CORE to
 * handle subrequsts. Decrementing filter type by 1 ensures this
 * happens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:166 - 2

/* This assumes that the tempfiles are on the same file system
 * as the cache_root. If not, then we need a file copy/move
 * rather than a rename.
 */

 /* move the file over */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:241 - 2

/* Note that we could optimize this by conditionally doing the palloc
 * depending upon the size. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:376 - 2

/* Allocate and initialize cache_object_t and disk_cache_object_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:592 - 2

/* Oh dear, no luck matching header to the body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:631 - 2

/* Get disk cache object from cache handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:644 - 2

/* Will only result in an output if httpd is started with -e debug.
 * For reason see log_error_core for the case s == NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:661 - 2

/* Will only result in an output if httpd is started with -e debug.
 * For reason see log_error_core for the case s == NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1108 - 2

/* Parse the vary header and dump those fields from the headers_in. */
 /* FIXME: Make call to the same thing cache_select calls to crack Vary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1255 - 2

/* have we reached the limit of how much we're prepared to write in one
 * go? If so, leave, we'll get called again. This prevents us from trying
 * to swallow too much data at once, or taking so long to write the data
 * the client times out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1442 - 2

/*
 * Consider eliminating the next two directives in favor of
 * Ian's prime number hash...
 * key = hash_fn( r->uri)
 * filename = "e;/key % prime1 /key %prime2/key %prime3"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:65 - 2

/*
 * cache_socache_object_t
 * Pointed to by cache_object_t::vobj
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:419 - 2

/* Allocate and initialize cache_object_t and cache_socache_object_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:918 - 2

/* Parse the vary header and dump those fields from the headers_in. */
 /* TODO: Make call to the same thing cache_select calls to crack Vary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1032 - 2

/* have we reached the limit of how much we're prepared to write in one
 * go? If so, leave, we'll get called again. This prevents us from trying
 * to swallow too much data at once, or taking so long to write the data
 * the client times out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:167 - 2

/* WooHoo, we have a file to put in the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:236 - 2

/* If it's one of ours, fill in r->finfo now to avoid extra stat()... this is a
 * bit of a kludge, because we really want to run after core_translate runs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:34 - 2

/* XXX Unfortunately, there are still many unsigned ints in use here, so we
 * XXX cannot allow more than UINT_MAX. Since some of the ints are exposed in
 * XXX public interfaces, a simple search and replace is not enough.
 * XXX It should be possible to extend that so that the total cache size can
 * XXX be APR_SIZE_MAX and only the object size needs to be smaller than
 * XXX UINT_MAX.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:585 - 2

/* Perform the iteration inside the mutex to avoid corruption or invalid
 * pointer arithmetic. The rest of our logic uses read-only header data so
 * doesn't need the lock. */
 /* Iterate over the subcaches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:688 - 2

/* Perform the iteration inside the mutex to avoid corruption or invalid
 * pointer arithmetic. The rest of our logic uses read-only header data so
 * doesn't need the lock. */
 /* Iterate over the subcaches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:812 - 2

/* HERE WE ASSUME THAT THE NEW ENTRY SHOULD GO ON THE END! I'M NOT
 * CHECKING WHETHER IT SHOULD BE GENUINELY "e;INSERTED"e; SOMEWHERE.
 *
 * We aught to fix that. httpd (never mind third party modules)
 * does not promise to perform any processing in date order
 * (c.f. FAQ "e;My log entries are not in date order!"e;)
 */
 /* Insert the id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:444 - 2

/*
perform substitutions in a macro contents and
 return the result as a newly allocated array, if result is defined.
 may also return an error message.
 passes used down to substitute_macro_args.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:529 - 2

/************************************************** MACRO PSEUDO CONFIG FILE */

/*
 The expanded content of the macro is to be parsed as a ap_configfile_t.
 This is used to have some kind of old fashionned C object oriented inherited
 data structure for configs.

 The following struct stores the contents.

 This structure holds pointers (next, upper) to the current "e;file"e; which was
 being processed and is interrupted by the macro expansion. At the end
 of processing the macro, the initial data structure will be put back
 in place (see function next_one) and the reading will go on from there.

 If macros are used within macros, there may be a cascade of such temporary
 arrays used to insert the expanded macro contents before resuming the real
 file processing.

 There is some hopus-pocus to deal with line_number when transiting from
 one config to the other.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:937 - 2

/*
 Module hooks are request-oriented thus it does not suit configuration
 file utils a lot. I haven't found any clean hook to apply something
before then after configuration file processing. Also what about
 .htaccess files?

 Thus I think that server/util.c or server/config.c
 would be a better place for this stuff.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:201 - 2

/*
 * check for already existing module
 * If it already exists, we have nothing to do
 * Check both dynamically-loaded modules and statically-linked modules.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:128 - 2

/* Sleep after we were locked
 * up to 1 second. Httpd can be
 * in the middle of shutdown, and
 * our child didn't yet received
 * the shutdown signal.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:533 - 2

/* The driver is loaded at config time now, so this just checks a hash.
 * If that changes, the driver DSO could be registered to unload against
 * our pool, which is probably not what we want. Error checking isn't
 * necessary now, but in case that changes in the future ...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:626 - 2

/* We create the reslist using a sub-pool of the pool passed to our
 * child_init hook. No other threads can be here because we're
 * either in the child_init phase or dbd_setup_lock() acquired our mutex.
 * No other threads will use this sub-pool after this, except via
 * reslist calls, which have an internal mutex.
 *
 * We need to short-circuit the cleanup registered internally by
 * apr_reslist_create(). We do this by registering dbd_destroy()
 * as a cleanup afterwards, so that it will run before the reslist's
 * internal cleanup.
 *
 * If we didn't do this, then we could free memory twice when the pool
 * was destroyed. When apr_pool_destroy() runs, it first destroys all
 * all the per-connection sub-pools created in dbd_construct(), and
 * then it runs the reslist's cleanup. The cleanup calls dbd_destruct()
 * on each resource, which would then attempt to destroy the sub-pools
 * a second time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:720 - 2

/* we already logged an error when the mutex couldn't be created */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:776 - 2

/* we don't have a driver-specific error code, so we'll just pass
 * a "e;success"e; value and rely on the driver to ignore it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:65 - 2

/* -------------------------------------------------------------------------
 *
 * GENERIC DBM ACCESS
 *
 * For the most part, this just uses the APR DBM functions. They are wrapped
 * a bit with some error handling (using the mod_dav error functions).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:118 - 2

/* ### do we need to deal with the umask? */

 /* just try to make it, ignoring any resulting errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:257 - 2

/*
 ** V4 -- 0.9.9 ..
 ** Prior versions could have keys or values with invalid
 ** namespace prefixes as a result of the xmlns="e;"e; form not
 ** resetting the default namespace to be "e;no namespace"e;. The
 ** namespace would be set to "e;"e; which is invalid; it should
 ** be set to "e;no namespace"e;.
 **
 ** V3 -- 0.9.8
 ** Prior versions could have values with invalid namespace
 ** prefixes due to an incorrect mapping of input to propdb
 ** namespace indices. Version bumped to obsolete the old
 ** values.
 **
 ** V2 -- 0.9.7
 ** This introduced the xml:lang value into the property value's
 ** record in the propdb.
 **
 ** V1 -- .. 0.9.6
 ** Initial version.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:617 - 2

/* Note: mapping->ns_map was set up in dav_propdb_map_namespaces() */

 /* ### use a db- subpool for these values? clear on exit? */

 /* quote all the values in the element */
 /* ### be nice to do this without affecting the element itself */
 /* ### of course, the cast indicates Badness is occurring here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:36 - 2

/* ---------------------------------------------------------------
**
** Lock database primitives
**
*/

/*
** LOCK DATABASES
**
** Lockdiscovery information is stored in the single lock database specified
** by the DAVLockDB directive. Information about this db is stored in the
** global server configuration.
**
** KEY
**
** The database is keyed by a key_type unsigned char (DAV_TYPE_FNAME)
** followed by the full path. The key_type DAV_TYPE_INODE is not used anymore.
**
** VALUE
**
** The value consists of a list of elements.
** DIRECT LOCK: [char (DAV_LOCK_DIRECT),
** char (dav_lock_scope),
** char (dav_lock_type),
** int depth,
** time_t expires,
** apr_uuid_t locktoken,
** char[] owner,
** char[] auth_user]
**
** INDIRECT LOCK: [char (DAV_LOCK_INDIRECT),
** apr_uuid_t locktoken,
** time_t expires,
** apr_size_t key_size,
** char[] key]
** The key is to the collection lock that resulted in this indirect lock
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:106 - 2

/* #################################################################
** ### keep these structures (internal) or move fully to dav_lock?
*/

/*
** We need to reliably size the fixed-length portion of
** dav_lock_discovery; best to separate it into another
** struct for a convenient sizeof, unless we pack lock_discovery.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:511 - 2

/*
** dav_load_lock_record: Reads lock information about key from lock db;
** creates linked lists of the direct and indirect locks.
**
** If add_method = DAV_APPEND_LIST, the result will be appended to the
** head of the direct and indirect lists supplied.
**
** Passive lock removal: If lock has timed out, it will not be returned.
** ### How much "e;logging"e; does RFC 2518 require?
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:795 - 2

/* just in case the caller disregards the returned error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1290 - 2

/* save the modified locks, or remove all locks (dh=ih=NULL). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1358 - 2

/* ### we should be refreshing direct AND (resolved) indirect locks! */

 /* refresh all of the direct locks on this resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:323 - 2

/* Copy or move src to dst; src_finfo is used to propagate permissions
 * bits across if non-NULL; dst_finfo must be non-NULL iff dst already
 * exists. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1158 - 2

/* Postfix call for MOVE. delete the source dir.
 * Note: when copying, we do not enable the postfix-traversal.
 */
 /* ### we are ignoring any error here; what should we do? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1183 - 2

/*
 ** If we have a "e;not so bad"e; error, then it might need to go into a
 ** multistatus response.
 **
 ** For a MOVE, it will always go into the multistatus. It could be
 ** that everything has been moved *except* for the root. Using a
 ** multistatus (with no errors for the other resources) will signify
 ** this condition.
 **
 ** For a COPY, we are traversing in a prefix fashion. If the root fails,
 ** then we can just bail out now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1346 - 2

/* ### should have a better error than this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1411 - 2

/*
 ** If an error occurred, then add it to multistatus response.
 ** Note that we add it for the root resource, too. It is quite
 ** possible to delete the whole darn tree, yet fail on the root.
 **
 ** (also: remember we are deleting via a postfix traversal)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1536 - 2

/* ### need a better error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1544 - 2

/* avoid recursing into our current, parent, or state directories */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1551 - 2

/* ### need to authorize each file */
 /* ### example: .htaccess is normally configured to fail auth */

 /* stuff in the state directory and temp files are never authorized! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1575 - 2

/* woah! where'd it go? */
 /* ### should have a better error here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1935 - 2

/*
 ** Closest thing to a creation date. since we don't actually
 ** perform the operations that would modify ctime (after we
 ** create the file), then we should be pretty safe here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2054 - 2

/* ### hmm. this isn't actually looking at all the possible text items */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2220 - 2

/* a lock-null resource */
 /*
 ** ### technically, we should insert empty properties. dunno offhand
 ** ### what part of the spec said this, but it was essentially thus:
 ** ### "e;the properties should be defined, but may have no value"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:37 - 2

/* ---------------------------------------------------------------
 *
 * Lock database primitives
 *
 */

/*
 * LOCK DATABASES
 *
 * Lockdiscovery information is stored in the single lock database specified
 * by the DAVGenericLockDB directive. Information about this db is stored in
 * the per-dir configuration.
 *
 * KEY
 *
 * The database is keyed by a key_type unsigned char (DAV_TYPE_FNAME)
 * followed by full path.
 *
 * VALUE
 *
 * The value consists of a list of elements.
 * DIRECT LOCK: [char (DAV_LOCK_DIRECT),
 * char (dav_lock_scope),
 * char (dav_lock_type),
 * int depth,
 * time_t expires,
 * apr_uuid_t locktoken,
 * char[] owner,
 * char[] auth_user]
 *
 * INDIRECT LOCK: [char (DAV_LOCK_INDIRECT),
 * apr_uuid_t locktoken,
 * time_t expires,
 * int key_size,
 * char[] key]
 * The key is to the collection lock that resulted in this indirect lock
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:95 - 2

/* #################################################################
 * ### keep these structures (internal) or move fully to dav_lock?
 */

/*
 * We need to reliably size the fixed-length portion of
 * dav_lock_discovery; best to separate it into another
 * struct for a convenient sizeof, unless we pack lock_discovery.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:541 - 2

/*
 * dav_load_lock_record: Reads lock information about key from lock db;
 * creates linked lists of the direct and indirect locks.
 *
 * If add_method = DAV_APPEND_LIST, the result will be appended to the
 * head of the direct and indirect lists supplied.
 *
 * Passive lock removal: If lock has timed out, it will not be returned.
 * ### How much "e;logging"e; does RFC 2518 require?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1076 - 2

/* save the modified locks, or remove all locks (dh=ih=NULL). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1126 - 2

/* ### we should be refreshing direct AND (resolved) indirect locks! */

 /* refresh all of the direct locks on this resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:177 - 2

/* DBG3("e;dav_merge_dir_config: new=%08lx base=%08lx overrides=%08lx"e;,
 (long)newconf, (long)base, (long)overrides); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:306 - 2

/*
** dav_error_response()
**
** Send a nice response back to the user. In most cases, Apache doesn't
** allow us to provide details in the body about what happened. This
** function allows us to completely specify the response body.
**
** ### this function is not logging any errors! (e.g. the body)
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:343 - 2

/*
 * Send a "e;standardized"e; error response based on the error's namespace & tag
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:406 - 2

/* there was a '&', so more work is needed... sigh. */

 /*
 * Note: this is a teeny bit of overkill since we know there are no
 * '<' or '>' characters, but who cares.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:736 - 2

/* ### maybe use HTTP_INTERNAL_SERVER_ERROR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1066 - 2

/*
 * Ensure that we think the resource exists now.
 * ### eek. if an error occurred during the write and we did not commit,
 * ### then the resource might NOT exist (e.g. dav_fs_repos.c)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2445 - 2

/* This is snarfed from ap_setup_client_block(). We could get pretty
 * close to this behavior by passing REQUEST_NO_BODY, but we need to
 * return HTTP_UNSUPPORTED_MEDIA_TYPE (while ap_setup_client_block
 * returns HTTP_REQUEST_ENTITY_TOO_LARGE). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2533 - 2

/*
 * Check If-Headers and existing locks.
 *
 * Note: depth == 0 normally requires no multistatus response. However,
 * if we pass DAV_VALIDATE_PARENT, then we could get an error on a URI
 * other than the Request-URI, thereby requiring a multistatus.
 *
 * If the resource does not exist (DAV_RESOURCE_NULL), then we must
 * check the resource *and* its parent. If the resource exists or is
 * a locknull resource, then we check only the resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2829 - 2

/* The destination must exist (since it contains the source), and
 * a condition above implies Overwrite==T. Obviously, we cannot
 * delete the Destination before the MOVE/COPY, as that would
 * delete the Source.
 */

 /* Supply some text for the error response body. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2851 - 2

/* remove any locks from the old resources */
 /*
 * ### this is Yet Another Traversal. if we do a rename(), then we
 * ### really don't have to do this in some cases since the inode
 * ### values will remain constant across the move. but we can't
 * ### know that fact from outside the provider :-(
 *
 * ### note that we now have a problem atomicity in the move/copy
 * ### since a failure after this would have removed locks (technically,
 * ### this is okay to do, but really...)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3096 - 2

/*
 * Check If-Headers and existing locks.
 *
 * If this will create a locknull resource, then the LOCK will affect
 * the parent collection (much like a PUT/MKCOL). For that case, we must
 * validate the parent resource's conditions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3122 - 2

/*
 * Refresh request
 * ### Assumption: We can renew multiple locks on the same resource
 * ### at once. First harvest all the positive lock-tokens given in
 * ### the If header. Then modify the lock entries for this resource
 * ### with the new Timeout val.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3281 - 2

/* ### RFC 2518 s. 8.11: If this resource is locked by locktoken,
 * _all_ resources locked by locktoken are released. It does not say
 * resource has to be the root of an infinte lock. Thus, an UNLOCK
 * on any part of an infinte lock will remove the lock on all resources.
 *
 * For us, if r->filename represents an indirect lock (part of an infinity lock),
 * we must actually perform an UNLOCK on the direct lock for this resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4064 - 2

/* some sort of error occurred which terminated the walk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4196 - 2

/* Check request preconditions */

 /* ### need a general mechanism for reporting precondition violations
 * ### (should be returning XML document for 403/409 responses)
 */

 /* resource must not already exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4252 - 2

/* Check request preconditions */

 /* ### need a general mechanism for reporting precondition violations
 * ### (should be returning XML document for 403/409 responses)
 */

 /* resource must not already exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4377 - 2

/* ### check RFC. I believe the DAV:merge element may contain any
 ### element also allowed within DAV:checkout. need to extract them
 ### here, and pass them along.
 ### if so, then refactor the CHECKOUT method handling so we can reuse
 ### the code. maybe create a structure to hold CHECKOUT parameters
 ### which can be passed to the checkout() and merge() hooks. */

 /* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4394 - 2

/* ### check the source and target resources flags/types */

 /* ### do lock checks, once behavior is defined */

 /* set the Cache-Control header, per the spec */
 /* ### correct? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4402 - 2

/* Initialize these values for a standard MERGE response. If the MERGE
 is going to do something different (i.e. an error), then it must
 return a dav_error, and we'll reset these values properly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4479 - 2

/* ### Bindings protocol draft 02 says to return 507
 * ### (Cross Server Binding Forbidden); Apache already defines 507
 * ### as HTTP_INSUFFICIENT_STORAGE. So, for now, we'll return
 * ### HTTP_FORBIDDEN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:631 - 2

/* ### anything better to do? */
 /* ### probably should enter a 500 error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1038 - 2

/*
 ** If an error occurred, then assume that we didn't change the
 ** value. Remove the rollback item so that we don't try to set
 ** its value during the rollback.
 */
 /* ### euh... where is the removal? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1063 - 2

/*
 ** Use HTTP_INTERNAL_SERVER_ERROR because we shouldn't have seen
 ** any errors at this point.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1099 - 2

/*
 ** ### if we have an error, and a rollback occurs, then the namespace
 ** ### mods should not happen at all. Basically, the namespace management
 ** ### is simply a bitch.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1122 - 2

/* hook previous errors at the end of the rollback error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:41 - 2

/* DBG3("e;dav_new_error: %d %d %s"e;, status, error_id, desc ? desc : "e;(no desc)"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:299 - 2

/*
 * Lookup the URI and return the sub-request. Note that we use the
 * same HTTP method on the destination. This allows the destination
 * to apply appropriate restrictions (e.g. readonly).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:514 - 2

/* ### We need to handle overflow better:
 * ### timeout will be <= 2^32 - 1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:948 - 2

/*
 ** The locks on the resource (if any) are all shared. Set the
 ** <seen_locktoken> flag to indicate that we do not need to find
 ** the locks in an If: header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:971 - 2

/*
 ** If there is no If: header, then we can shortcut some logic:
 **
 ** 1) if we do not need to find a locktoken in the (non-existent) If:
 ** header, then we are successful.
 **
 ** 2) if we must find a locktoken in the (non-existent) If: header, then
 ** we fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1164 - 2

/*
 DBG2("e;compare: rsrc=%s ifhdr=%s"e;,
 (*locks_hooks->format_locktoken)(p, lock->locktoken),
 (*locks_hooks->format_locktoken)(p, state_list->locktoken));
 */

 /* nothing to do if the locktokens do not match. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1198 - 2

/* condition == DAV_IF_COND_NORMAL */

 /* Validate auth_user: If an authenticated user created
 ** the lock, only the same user may submit that locktoken
 ** to manipulate a resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1217 - 2

/*
 ** We just matched a specified State-Token to one of the
 ** resource's locktokens.
 **
 ** Break out of the lock scan -- we only needed to find
 ** one match (actually, there shouldn't be any other
 ** matches in the lock list).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1231 - 2

/*
 ** We had a NORMAL state, meaning that we should have
 ** found the State-Token within the locks on this
 ** resource. We didn't, so this state_list must fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1326 - 2

/*
 ** We found a match! We're set... none of the If: header
 ** assertions apply (implicit success), and the If: header
 ** specified the locktoken somewhere. We're done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1339 - 2

/* else: one or more state_lists were applicable, but failed. */

 /*
 ** If the dummy_header did not match, then they specified an
 ** incorrect token in the Lock-Token header. Forget whether the
 ** If: statement matched or not... we'll tell them about the
 ** bad Lock-Token first. That is considered a 400 (Bad Request).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1392 - 2

/*
 ** We had a matching state list, but the user agent did not specify one
 ** of this resource's locktokens. Tell them so.
 **
 ** Note that we need to special-case the message on whether a "e;dummy"e;
 ** header exists. If it exists, yet we didn't see a needed locktoken,
 ** then that implies the dummy header (Lock-Token header) did NOT
 ** specify one of this resource's locktokens. (this implies something
 ** in the real If: header matched)
 **
 ** We want to note the 400 (Bad Request) in favor of a 423 (Locked).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1427 - 2

/* There was no error, so just bug out. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1431 - 2

/*
 ** If we have a serious server error, or if the request itself failed,
 ** then just return error (not a multistatus).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1442 - 2

/* associate the error with the current URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1516 - 2

/*
 ** ### bleck. we can't return errors for other URIs unless we have
 ** ### a "e;response"e; ptr.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1700 - 2

/*
 ** Whatever caused the error, the Request-URI should have a 424
 ** associated with it since we cannot complete the method.
 **
 ** For a LOCK operation, insert an empty DAV:lockdiscovery property.
 ** For other methods, return a simple 424.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2036 - 2

/* if an error occurred, undo any auto-versioning operations already done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:52 - 2

/* If no locks or no lock provider, there are no locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:86 - 2

/* ### crap. design error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:436 - 2

/* Find the top of this lock-
 * If r->filename's direct locks include locktoken, use r->filename.
 * If r->filename's indirect locks include locktoken, retry r->filename/..
 * Else fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:514 - 2

/* 2518 requires the entire lock to be removed if resource/locktoken
 * point to an indirect lock. We need resource of the _direct_
 * lock in order to walk down the tree and remove the locks. So,
 * If locktoken != null_locktoken,
 * Walk up the resource hierarchy until we see a direct lock.
 * Or, we could get the direct lock's db/key, pick out the URL
 * and do a subrequest. I think walking up is faster and will work
 * all the time.
 * Else
 * Just start removing all locks at and below resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:527 - 2

/* ### return err! maybe add a higher-level desc */
 /* ### map result to something nice; log an error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:656 - 2

/* <locks> has all our new locks. Walk down and propagate them. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:673 - 2

/* ---------------------------------------------------------------
**
** Functions dealing with lock-null resources
**
*/

/*
** dav_get_resource_state: Returns the state of the resource
** r->filename: DAV_RESOURCE_NULL, DAV_RESOURCE_LOCK_NULL,
** or DAV_RESOURCE_EXIST.
**
** Returns DAV_RESOURCE_ERROR if an error occurs.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:723 - 2

/* note that we might see some expired locks... *shrug* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:795 - 2

/* else the resource already exists and its locks are correct. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:44 - 2

/* consider up to 80 additional characters, and factor the longest
 * line length of all \xNN sequences; log_error cannot record more
 * than MAX_STRING_LEN characters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:143 - 2

/* ignore the error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:225 - 2

/* ignore the error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:161 - 2

/* Something horribly wrong happened. Someone didn't block! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:658 - 2

/*
 * This function gets called to merge two per-server configuration
 * records. This is typically done to cope with things like virtual hosts and
 * the default server configuration The routine has the responsibility of
 * creating a new record and merging the contents of the other two into it
 * appropriately. If the module doesn't declare a merge routine, the more
 * specific existing record is used exclusively.
 *
 * The routine MUST NOT modify any of its arguments!
 *
 * The return value is a pointer to the created module-specific structure
 * containing the merged values.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:942 - 2

/*--------------------------------------------------------------------------*/
/* */
/* Now we declare our content handlers, which are invoked when the server */
/* encounters a document which our module is supposed to have a chance to */
/* see. (See mod_mime's SetHandler and AddHandler directives, and the */
/* mod_info and mod_status examples, for more details.) */
/* */
/* Since content handlers are dumping data directly into the connection */
/* (using the r*() routines, such as rputs() and rprintf()) without */
/* intervention by other parts of the server, they need to make */
/* sure any accumulated HTTP headers are sent first. This is done by */
/* calling send_http_header(). Otherwise, no header will be sent at all, */
/* and the output sent to the client will actually be HTTP-uncompliant. */
/*--------------------------------------------------------------------------*/
/*
 * Sample content handler. All this does is display the call list that has
 * been built up so far.
 *
 * This routine gets called for every request, unless another handler earlier
 * in the callback chain has already handled the request. It is up to us to
 * test the request_rec->handler field and see whether we are meant to handle
 * this request.
 *
 * The content handler gets to write directly to the client using calls like
 * ap_rputs() and ap_rprintf()
 *
 * This is a RUN_FIRST hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1128 - 2

/* This routine is used to actually process the connection that was received.
 * Only protocol modules should implement this hook, as it gives them an
 * opportunity to replace the standard HTTP processing with processing for
 * some other protocol. Both echo and POP3 modules are available as
 * examples.
 *
 * This is a RUN_FIRST hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1142 - 2

/*
 * This routine is called after the request has been read but before any other
 * phases have been processed. This allows us to make decisions based upon
 * the input header fields.
 *
 * This is a HOOK_VOID hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1158 - 2

/*
 * This routine is called after the request has been read but before any other
 * phases have been processed. This allows us to make decisions based upon
 * the input header fields.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1192 - 2

/*
 * This routine maps r->filename to a physical file on disk. Useful for
 * overriding default core behavior, including skipping mapping for
 * requests that are not file based.
 *
 * This is a RUN_FIRST hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1230 - 2

/*
 * This routine is called to check for any module-specific restrictions placed
 * upon the requested resource. (See the mod_access_compat module for an
 * example.)
 *
 * This is a RUN_ALL hook. The first handler to return a status other than OK
 * or DECLINED (for instance, HTTP_FORBIDDEN) aborts the callback chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1274 - 2

/*
 * Log the call and return OK, or access will be denied (even though we
 * didn't actually do anything).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1299 - 2

/*
 * This routine is called to perform any module-specific fixing of header
 * fields, et cetera. It is invoked just before any content-handler.
 *
 * This is a RUN_ALL HOOK.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:291 - 2

/* Lock acquisition loop */

 /* Sleep for a millisecond to make it a little harder for
 * httpd children to acquire the lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:161 - 2

/* further optimisation: if the buckets are already heap
 * buckets, and the buckets stay exactly APR_BUCKET_BUFF_SIZE
 * long (as they would be if we were reading bits of a
 * large bucket), then move the buckets instead of copying
 * them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:51 - 2

/* we don't handle chars wider than this that straddle
 * two buckets
 */

/* extended error status codes; this is used in addition to an apr_status_t to
 * track errors in the translation filter
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:100 - 2

/* charset_req_t is available via r->request_config if any translation is
 * being performed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:497 - 2

/* We must ensure not to process more than what would fit in the
 * remaining of the destination buffer, including terminating NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:514 - 2

/* chk_filter_chain() is called once per filter instance; it tries to
 * determine if the current filter instance should be disabled because
 * its translation is incompatible with the translation of an existing
 * instance of the translate filter
 *
 * Example bad scenario:
 *
 * configured filter chain for the request:
 * INCLUDES XLATEOUT(8859-1->UTS-16)
 * configured filter chain for the subrequest:
 * XLATEOUT(8859-1->UTS-16)
 *
 * When the subrequest is processed, the filter chain will be
 * XLATEOUT(8859-1->UTS-16) XLATEOUT(8859-1->UTS-16)
 * This makes no sense, so the instance of XLATEOUT added for the
 * subrequest will be noop-ed.
 *
 * Example good scenario:
 *
 * configured filter chain for the request:
 * INCLUDES XLATEOUT(8859-1->UTS-16)
 * configured filter chain for the subrequest:
 * XLATEOUT(IBM-1047->8859-1)
 *
 * When the subrequest is processed, the filter chain will be
 * XLATEOUT(IBM-1047->8859-1) XLATEOUT(8859-1->UTS-16)
 * This makes sense, so the instance of XLATEOUT added for the
 * subrequest will be left alone and it will translate from
 * IBM-1047->8859-1.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:623 - 2

/* xlate_brigade() is used to filter request and response bodies
 *
 * we'll stop when one of the following occurs:
 * . we run out of buckets
 * . we run out of space in the output buffer
 * . we hit an error or metadata
 *
 * inputs:
 * bb: brigade to process
 * buffer: storage to hold the translated characters
 * buffer_avail: size of buffer
 * (and a few more uninteresting parms)
 *
 * outputs:
 * return value: APR_SUCCESS or some error code
 * bb: we've removed any buckets representing the
 * translated characters; the eos bucket, if
 * present, will be left in the brigade
 * buffer: filled in with translated characters
 * buffer_avail: updated with the bytes remaining
 * hit_eos: did we hit an EOS bucket?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:770 - 2

/* this is SetOutputFilter path; grab the preallocated context,
 * if any; note that if we decided not to do anything in an earlier
 * handler, we won't even have a reqinfo
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:872 - 2

/* XXX yuck, but that tells us to send
 * eos down; when we minimize our bb construction
 * we'll fix this crap */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:993 - 2

/* this is SetInputFilter path; grab the preallocated context,
 * if any; note that if we decided not to do anything in an earlier
 * handler, we won't even have a reqinfo
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:47 - 2

/**
 * Create a data URL as follows:
 *
 * data:[<mime-type>;][charset=<charset>;]base64,<payload>
 *
 * Where:
 *
 * mime-type: The mime type of the original response.
 * charset: The optional character set corresponding to the mime type.
 * payload: A base64 version of the response body.
 *
 * The content type of the response is set to text/plain.
 *
 * The Content-Length header, if present, is updated with the new content
 * length based on the increase in size expected from the base64 conversion.
 * If the Content-Length header is too large to fit into an int, we remove
 * the Content-Length header instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:196 - 2

/* fill up and write out our overflow buffer if partially used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:496 - 2

/* ETag must be unique among the possible representations, so a change
 * to content-encoding requires a corresponding change to the ETag.
 * This routine appends -transform (e.g., -gzip) to the entity-tag
 * value inside the double-quotes if an ETag has already been set
 * and its value already contains double-quotes. PR 39727
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:537 - 2

/* Check whether the (inflate) ratio exceeds the configured limit/burst. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:606 - 2

/*
 * If we already know the size of the response, we can skip
 * compression on responses smaller than the compression overhead.
 * However, if we compress, we must initialize deflate_out before
 * calling ap_pass_brigade() for the first time. Otherwise the
 * headers will be sent to the client without
 * "e;Content-Encoding: gzip"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:815 - 2

/*
 * Zlib initialization worked, so we can now change the important
 * content metadata before sending the response out.
 */

 /* If the entire Content-Encoding is "e;identity"e;, we can replace it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1055 - 2

/* Consume nul terminated string. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1071 - 2

/* Consume nul terminated string. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1186 - 2

/* If the header was (partially) read it's an error, this
 * is not a gzip Content-Encoding, as claimed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1213 - 2

/* We didn't get the magic bytes. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1794 - 2

/*
 * There is nothing worth consuming for zlib left, because it is
 * either garbage data or the data has been copied to the
 * validation buffer (processing validation data is no business
 * for zlib). So set ctx->stream.avail_in to zero to indicate
 * this to the following while loop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:714 - 2

/* APR_FILES_AS_SOCKETS */
 /* Yuck... I'd really like to wait until I can read
 * or write, but instead I have to sleep and try again
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:537 - 2

/* Empty the chain */
 /** IG: Add a NULL provider to the beginning so that
 * we can ensure that we'll empty everything before
 * this when doing config merges later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:582 - 2

/* check whether this is already registered, in which case
 * it's already in the filter chain
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:479 - 2

/*
 * +-------------------------------------------------------+
 * | |
 * | Environment/Expansion Functions
 * | |
 * +-------------------------------------------------------+
 */

/*
 * decodes a string containing html entities or numeric character references.
 * 's' is overwritten with the decoded string.
 * If 's' is syntatically incorrect, then the followed fixups will be made:
 * unknown entities will be left undecoded;
 * references to unused numeric characters will be deleted.
 * In particular, &#00; will not be decoded, but will be deleted.
 */

/* maximum length of any ISO-LATIN-1 HTML entity name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3383 - 2

/* we may crash, since already cleaned up; hand over the responsibility
 * to the next filter;-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3681 - 2

/* if there was an error, it was already logged; just stop here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3986 - 2

/* We always return declined, because the default handler actually
 * serves the file. All we have to do is add the filter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:697 - 2

/* if it doesn't contain "e;content"e;, ignore, don't crash! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:910 - 2

/* pass on flush, except at start where it would cause
 * headers to be sent before doc sniffing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:106 - 2

/* calculate how many bytes / interval we want to send */
 /* speed is bytes / second, so, how many (speed / 1000 % interval) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:69 - 2

/*
 * Sometimes we'll get in a state where the input handling has
 * detected an error where we want to drop the connection, so if
 * that's the case, don't read the data as that is what we're trying
 * to avoid.
 *
 * This function is also a no-op on a subrequest.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:345 - 2

/*
 * Also, we must not allow keep-alive requests, as
 * ap_finalize_protocol() may ignore our error status (if the timeout
 * happened on a request body that is discarded).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:609 - 2

/*
 * mod_reqtimeout needs to be called before ap_process_http_request (which
 * is run at APR_HOOK_REALLY_LAST) but after all other protocol modules.
 * This ensures that it only influences normal http connections and not
 * e.g. mod_ftp. Also, if mod_reqtimeout used the pre_connection hook, it
 * would be inserted on mod_proxy's backend connections.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:36 - 2

/*
 * We want to limit the memory usage in a way that is predictable.
 * Therefore we limit the resulting length of the line.
 * This is the default value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:147 - 2

/*
 * Simple optimization. If we only have one pattern, then
 * we can safely avoid the overhead of flattening
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:351 - 2

/*
 * First time around? Create the saved bb that we used for each pass
 * through. Note that we can also get here when we explicitly clear ctx,
 * for error handling
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:417 - 2

/* this is only what we've already tried to convert.
 * The brigade is exhausted.
 * Save remaining data for next time round
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:784 - 2

/* XXX extremely inefficient 1 byte reads */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:699 - 2

/*
 * We're guaranteed that there'll be no overlap between
 * the add-options and the remove-options.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:960 - 2

/* ###: better error here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:989 - 2

/*
 * Handle the preamble through the H1 tag line, inclusive. Locate
 * the file with a subrequests. Process text/html documents by actually
 * running the subrequest; text/xxx documents get copied verbatim,
 * and any other content type is ignored. This means that a non-text
 * document (such as HEADER.gif) might get multiviewed as the result
 * instead of a text document, meaning nothing will be displayed, but
 * oh well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1121 - 2

/*
 * Handle the Readme file through the postamble, inclusive. Locate
 * the file with a subrequests. Process text/html documents by actually
 * running the subrequest; text/xxx documents get copied verbatim,
 * and any other content type is ignored. This means that a non-text
 * document (such as FOOTER.gif) might get multiviewed as the result
 * instead of a text document, meaning nothing will be displayed, but
 * oh well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1254 - 2

/*
 * p->name is now the true parent URI.
 * testpath is a crafted lie, so that the syntax '/some/..'
 * (or simply '..')be used to describe 'up' from '/some/'
 * when processeing IndexIgnore, and Icon|Alt|Desc configs.
 */

 /* The output has always been to the parent. Don't make ourself
 * our own parent (worthless cyclical reference).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1688 - 2

/* Include alt text in class name, distinguish between odd and even rows */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1693 - 2

/* Distinguish between odd and even rows */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1837 - 2

/*
 * The blank before the storm.. er, before the next field.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1968 - 2

/* names may identical when treated case-insensitively,
 * so always fall back on strcmp() flavors to put entries
 * in deterministic order. This means that 'ABC' and 'abc'
 * will always appear in the same order, rather than
 * variably between 'ABC abc' and 'abc ABC' order.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2071 - 2

/*
 * Figure out what sort of indexing (if any) we're supposed to use.
 *
 * If no QUERY_STRING was specified or client query strings have been
 * explicitly disabled.
 * If we are ignoring the client, suppress column sorting as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2177 - 2

/* Syntax error? Ignore the remainder! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:673 - 2

/* Read method of CGI bucket: polls on stderr and stdout of the child,
 * sending any stderr output immediately away to the error log. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:836 - 2

/* Transfer any put/post args, CERN style...
 * Note that we already ignore SIGPIPE in the core server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:901 - 2

/* Keep writing data to the child until done or too much time
 * elapses with no progress or an error occurs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:149 - 2

/* DEFAULT_CGID_LISTENBACKLOG controls the max depth on the unix socket's
 * pending connection queue. If a bunch of cgi requests arrive at about
 * the same time, connections from httpd threads/processes will back up
 * in the queue while the cgid process slowly forks off a child to process
 * each connection on the unix socket. If the queue is too short, the
 * httpd process will get ECONNREFUSED when trying to connect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:766 - 2

/* XXX apr_procattr_child_*_set() is creating an unnecessary
 * pipe between this process and the child being created...
 * It is cleaned up with the temporary pool for this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1503 - 2

/* Transfer any put/post args, CERN style...
 * Note that we already ignore SIGPIPE in the core server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1569 - 2

/* Keep writing data to the child until done or too much time
 * elapses with no progress or an error occurs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1591 - 2

/* we're done writing, or maybe we didn't write at all;
 * force EOF on child's stdin so that the cgi detects end (or
 * absence) of data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:99 - 2

/* ugh... need to know if we're running with a pthread implementation
 * such as linuxthreads that treats individual threads as distinct
 * processes; that affects how we add up CPU time in a process
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:533 - 2

/*
 * These differ from 'busy' and 'ready' in how gracefully finishing
 * threads are counted. XXX: How to make this clear in the html?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:155 - 2

/* After the call to ap_process_request, the
 * request pool may have been deleted. We set
 * r=NULL here to ensure that any dereference
 * of r that might be added later in this function
 * will result in a segfault immediately instead
 * of nondeterministic failures later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:211 - 2

/* After the call to ap_process_request, the
 * request pool will have been deleted. We set
 * r=NULL here to ensure that any dereference
 * of r that might be added later in this function
 * will result in a segfault immediately instead
 * of nondeterministic failures later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:558 - 2

/* FIXME: Note that we might get slightly confused on
 * chunked inputs as we'd need to compensate for the chunk
 * lengths which may not really count. This seems to be up
 * for interpretation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:779 - 2

/*
 * Since some clients choke violently on multiple Vary fields, or
 * Vary fields with duplicate tokens, combine any multiples and remove
 * any duplicates.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:934 - 2

/* kludge around broken browsers when indicated by force-response-1.0
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1257 - 2

/*
 * Remove the 'Vary' header field if the client can't handle it.
 * Since this will have nasty effects on HTTP/1.1 caches, force
 * the response into HTTP/1.0 mode.
 *
 * Note: the force-response-1.0 should come before the call to
 * basic_http_header_check()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1321 - 2

/*
 * Control cachability for non-cachable responses if not already set by
 * some other part of the server configuration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1371 - 2

/* We can't add this filter until we have already sent the headers.
 * If we add it before this point, then the headers will be chunked
 * as well, and that is just wrong.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1378 - 2

/* Don't remove this filter until after we have added the CHUNK filter.
 * Otherwise, f->next won't be the CHUNK filter and thus the first
 * brigade won't be chunked properly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1442 - 2

/* Sometimes we'll get in a state where the input handling has
 * detected an error where we want to drop the connection, so if
 * that's the case, don't read the data as that is what we're trying
 * to avoid.
 *
 * This function is also a no-op on a subrequest.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1601 - 2

/* get_client_block is called in a loop to get the request message body.
 * This is quite simple if the client includes a content-length
 * (the normal case), but gets messy if the body is chunked. Note that
 * r->remaining is used to maintain state across calls and that
 * r->read_length is the total number of bytes given to the caller
 * across all invocations. It is messy because we have to be careful not
 * to read past the data provided by the client, since these reads block.
 * Returns 0 on End-of-body, -1 on error or premature chunk end.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1634 - 2

/* AP_FILTER_ERROR means a filter has responded already,
 * we are DONE.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:533 - 2

/* Check for conditional requests --- note that we only want to do
 * this if we are successful so far and we are not processing a
 * subrequest or an ErrorDocument.
 *
 * The order of the checks is important, since ETag checks are supposed
 * to be more accurate than checks relative to the modification time.
 * However, not all documents are guaranteed to *have* ETags, and some
 * might have Last-Modified values w/o ETags, so this gets a little
 * complicated.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:670 - 2

/* put all the standard methods into the registry hash to ease the
 mapping operations between name and number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:924 - 2

/* Get the method number associated with the given string, assumed to
 * contain an HTTP method. Returns M_INVALID if not recognized.
 *
 * This is the first step toward placing method names in a configurable
 * list. Hopefully it (and other routines) can eventually be moved to
 * something like a mod_http_methods.c, complete with config stuff.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:973 - 2

/* The index is found by its offset from the x00 code of each level.
 * Although this is fast, it will need to be replaced if some nutcase
 * decides to define a high-numbered code before the lower numbers.
 * If that sad event occurs, replace the code below with a linear search
 * from status_lines[shortcut[i]] to status_lines[shortcut[i+1]-1];
 * or use NULL to fill the gaps.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1041 - 2

/* ### this is rather annoying. we should enforce registration of
 ### these methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1101 - 2

/* construct and return the default error message for a given
 * HTTP defined error code
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1316 - 2

/* HTTP_INTERNAL_SERVER_ERROR */
 /*
 * This comparison to expose error-notes could be modified to
 * use a configuration directive and export based on that
 * directive. For now "e;*"e; is used to designate an error-notes
 * that is totally safe for any user to see (ie lacks paths,
 * database passwords, etc.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1369 - 2

/* We should have named this send_canned_response, since it is used for any
 * response that can be generated by the server from the request record.
 * This includes all 204 (no content), 3xx (redirect), 4xx (client error),
 * and 5xx (server error) messages that have not been redirected to another
 * handler via the ErrorDocument feature.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:213 - 2

/*
 * Dumb user has given us a bad url to redirect to --- fake up
 * dying with a recursive server error...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:461 - 2

/*
 * Notice a timeout as an error message. This might be
 * valuable for detecting clients with broken network
 * connections or possible DoS attacks.
 *
 * It is still safe to use r / r->pool here as the eor bucket
 * could not have been destroyed in the event of a timeout.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:608 - 2

/* Stop at the protocol filters. If a protocol filter has
 * been newly installed for this resource, better leave it
 * in place, though it's probably a misconfiguration or
 * filter bug to get into this state. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:635 - 2

/*
 * XXX: hmm. This is because mod_setenvif and mod_unique_id really need
 * to do their thing on internal redirects as well. Perhaps this is a
 * misnamed function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:738 - 2

/* ap_die was already called, if an error occured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:762 - 2

/* ap_die was already called, if an error occured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:871 - 2

/* XXX should eliminate duplicate entities
 *
 * ah no. Order is important and double encoding is neither
 * forbidden nor impossible. -- nd
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:219 - 2

/* This is like the slave connection creation from 2.5-DEV. A
 * very efficient way - not sure how compatible this is, since
 * the core hooks are no longer run.
 * But maybe it's is better this way, not sure yet.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:258 - 2

/* This works for mpm_worker so far. Other mpm modules have 
 * different needs, unfortunately. The most interesting one 
 * being mpm_event...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:275 - 2

/*
 * Since some clients choke violently on multiple Vary fields, or
 * Vary fields with duplicate tokens, combine any multiples and remove
 * any duplicates.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:425 - 2

/*
 * Control cachability for non-cachable responses if not already set by
 * some other part of the server configuration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:435 - 2

/* This is a hack, but I can't find anyway around it. The idea is that
 * we don't want to send out 0 Content-Lengths if it is a head request.
 * This happens when modules try to outsmart the server, and return
 * if they see a HEAD request. Apache 1.3 handlers were supposed to
 * just return in that situation, and the core handled the HEAD. In
 * 2.0, if a handler returns, then the core sends an EOS bucket down
 * the filter stack, and the content-length filter computes a C-L of
 * zero and that gets put in the headers, and we end up sending a
 * zero C-L to the client. We can't just remove the C-L filter,
 * because well behaved 2.0 handlers will send their data down the stack,
 * and we will compute a real C-L for the head request. RBB
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:560 - 2

/* Our main processing needs to run quite late. Definitely after mod_ssl,
 * as we need its connection filters, but also before reqtimeout as its
 * method of timeouts is specific to HTTP/1.1 (as of now).
 * The core HTTP/1 processing run as REALLY_LAST, so we will have
 * a chance to take over before it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:569 - 2

/* With "e;H2SerializeHeaders On"e;, we install the filter in this hook
 * that parses the response. This needs to happen before any other post
 * read function terminates the request with an error. Otherwise we will
 * never see the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:390 - 2

/* Let's move the buckets from the request processing in here, so
 * that the main thread can read them when it has time/capacity.
 *
 * Move at most "e;maxlen"e; memory bytes. If buckets remain, it is
 * the caller's responsibility to take care of this.
 *
 * We allow passing of file buckets as long as we do not have too
 * many open files already buffered. Otherwise we will run out of
 * file handles.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:120 - 2

/**
 * A h2_mplx needs to be thread-safe *and* if will be called by
 * the h2_session thread *and* the h2_worker threads. Therefore:
 * - calls are protected by a mutex lock, m->lock
 * - the pool needs its own allocator, since apr_allocator_t are 
 * not re-entrant. The separate allocator works without a 
 * separate lock since we already protect h2_mplx itself.
 * Since HTTP/2 connections can be expected to live longer than
 * their HTTP/1 cousins, the separate allocator seems to work better
 * than protecting a shared h2_session one with an own lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:190 - 2

/* Initially, there was ref count increase for this as well, but
 * this is not needed, even harmful.
 * h2_workers is only a hub for all the h2_worker instances.
 * At the end-of-life of this h2_mplx, we always unregister at
 * the workers. The thing to manage are all the h2_worker instances
 * out there. Those may hold a reference to this h2_mplx and we cannot
 * call them to unregister.
 * 
 * Therefore: ref counting for h2_workers in not needed, ref counting
 * for h2_worker using this is critical.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:285 - 2

/* Any remaining ios have handed out requests to workers that are
 * not done yet. Any operation they do on their assigned stream ios will
 * be errored ECONNRESET/ABORTED, so that should find out pretty soon.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:613 - 2

/* We have the io ready, but the stream has gone away, maybe
 * reset by the client. Should no longer happen since such
 * streams should clear io's from the ready queue.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:658 - 2

/* Wait for data to drain until there is room again or
 * stream timeout expires */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:772 - 2

/* In case a close comes before a response was created,
 * insert an error one so that our streams can properly
 * reset.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:814 - 2

/**
 * Get a cache digest as described in 
 * https://datatracker.ietf.org/doc/draft-kazuho-h2-cache-digest/
 * from the contents of the push diary.
 * 
 * @param diary the diary to calculdate the digest from
 * @param p the pool to use
 * @param pdata on successful return, the binary cache digest
 * @param plen on successful return, the length of the binary data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:926 - 2

/* read 1 bits until we encounter 0, then read log2n(diary-P) bits.
 * On a malformed bit-string, this will not fail, but produce results
 * which are pbly too large. Luckily, the diary will modulo the hash.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:1014 - 2

/* a totally empty cache digest. someone tells us that she has no
 * entries in the cache at all. Use our own preferences for N+mask 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:727 - 2

/* Not good. The connection is being torn down and we have
 * not sent a goaway. This is considered a protocol error and
 * the client has to assume that any streams "e;in flight"e; may have
 * been processed and are not safe to retry.
 * As clients with idle connection may only learn about a closed
 * connection when sending the next request, this has the effect
 * that at least this one request will fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1670 - 2

/* Unsent push promises are written immediately, as nghttp2
 * 1.5.0 realizes internal stream data structures only on 
 * send and we might need them for other submits. 
 * Also, to conserve memory, we send at least every 10 submits
 * so that nghttp2 does not buffer all outbound items too 
 * long.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:81 - 2

/* ignore, idempotent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:110 - 2

/* ignore, idempotent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task.c:200 - 2

/* After the call to ap_process_request, the
 * request pool will have been deleted. We set
 * r=NULL here to ensure that any dereference
 * of r that might be added later in this function
 * will result in a segfault immediately instead
 * of nondeterministic failures later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:233 - 2

/*******************************************************************************
 * h2_util for bucket brigades
 ******************************************************************************/

/* DEEP_COPY==0 crashes under load. I think the setaside is fine, 
 * however buckets moved to another thread will still be
 * free'd against the old bucket_alloc. *And* if the old
 * pool gets destroyed too early, the bucket disappears while
 * still needed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:373 - 2

/* We do not want to read files when passing buckets, if
 * we can avoid it. However, what we've come up so far
 * is not working corrently, resulting either in crashes or
 * too many open file descriptors.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_worker.c:84 - 2

/* clean our references and report request as done. Signal
 * that we want another unless we have been aborted */
 /* TODO: this will keep a worker attached to this h2_mplx as
 * long as it has requests to handle. Might no be fair to
 * other mplx's. Perhaps leave after n requests? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:100 - 2

/*
 * Status Handler
 * --------------
 *
 * This handler generates a status page about the current performance of
 * the LDAP cache. It is enabled as follows:
 *
 * <Location /ldap-status>
 * SetHandler ldap-status
 * </Location>
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:401 - 2

/* Referral hop limit - only if referrals are enabled and a hop limit is explicitly requested */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:687 - 2

/*
 * Find an existing ldap connection struct that matches the
 * provided ldap connection parameters.
 *
 * If not found in the cache, a new ldc structure will be allocated
 * from st->pool and returned to the caller. If found in the cache,
 * a pointer to the existing ldc structure will be returned.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:751 - 2

/* If this connection didn't match the criteria, then we
 * need to unlock the mutex so it is available to be reused.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:795 - 2

/* If this connection didn't match the criteria, then we
 * need to unlock the mutex so it is available to be reused.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:805 - 2

/* artificially disable cache */
/* l = NULL; */

 /* If no connection was found after the second search, we
 * must create one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:822 - 2

/*
 * Add the new connection entry to the linked list. Note that we
 * don't actually establish an LDAP connection yet; that happens
 * the first time authentication is requested.
 */

 /* create the details of this connection in the new pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1245 - 2

/*
 * 3.B. The cache didn't have any subgrouplist yet. Go check for subgroups.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1456 - 2

/*
 * 2. Find previously created cache entry and check if there is already a
 * subgrouplist.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1561 - 2

/*
 * We have a valid cache entry and a locally generated SGL.
 * Attach the SGL to the cache entry
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1917 - 2

/*
 * This function will return the DN of the entry matching userid.
 * It is used to get the DN in case some other module than mod_auth_ldap
 * has authenticated the user.
 * The function is basically a copy of uldap_cache_checkuserid
 * with password checking removed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1966 - 2

/*
 * Remove this item from the cache if its expired.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2360 - 2

/**
 * Set LDAPTrustedGlobalCert.
 *
 * This directive takes either two or three arguments:
 * - certificate type
 * - certificate file / directory / nickname
 * - certificate password (optional)
 *
 * This directive may only be used globally.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2440 - 2

/**
 * Set LDAPTrustedClientCert.
 *
 * This directive takes either two or three arguments:
 * - certificate type
 * - certificate file / directory / nickname
 * - certificate password (optional)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2839 - 2

/* cache-related settings are not merged here, but in the post_config hook,
 * since the cache has not yet sprung to life
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2854 - 2

/* The cache settings can not be modified in a
 virtual host since all server use the same
 shared memory cache. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2957 - 2

/*
 * initializing cache if we don't already have a shm address
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:370 - 2

/* This frees cache in the right way even if !APR_HAS_SHARED_MEMORY or !st->cache_rmm */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:465 - 2

/* if the purge was not effective, we leave now to avoid an overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:246 - 2

/*
 * config_log_state holds the status of a single log file. fname might
 * be NULL, which means this module does no logging for this
 * request. format might be NULL, in which case the default_format
 * from the multi_log_state should be used, or if that is NULL as
 * well, use the CLF.
 * log_writer is NULL before the log file is opened and is
 * set to a opaque structure (usually a fd) after it is opened.

 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:575 - 2

/*
 * This supports Netscape version 0 cookies while being tolerant to
 * some properties of RFC2109/2965 version 1 cookies:
 * - case-insensitive match of cookie names
 * - white space between the tokens
 * It does not support the following version 1 features:
 * - quoted strings as cookie values
 * - commas to separate cookies
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1307 - 2

/*
 * If we were given two arguments, the second is a name to be given to the
 * format. This syntax just defines the nickname - it doesn't actually
 * make the format the default.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:301 - 2

/*
 =============================================================================
 db:select(statement): Queries the database for the given statement and 
 returns the rows/columns found as a table. If an error is encountered, 
 returns nil as the first parameter and the error message as the second.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:715 - 2

/*
 =============================================================================
 dbacquire(dbType, dbString): Opens a new connection to a database of type 
 _dbType_ and with the connection parameters _dbString_. If successful, 
 returns a table with functions for using the database handle. If an error 
 occurs, returns nil as the first parameter and the error message as the 
 second. See the APR_DBD for a list of database types and connection strings 
 supported.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1718 - 2

/**
 * ap_send_interim_response (request_rec *r, int send_headers)
 * Send an interim (HTTP 1xx) response immediately.
 * @param r The request
 * @param send_headers Whether to send&clear headers in r->headers_out
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:907 - 2

/* Okay, this deserves a little explaination -- in order for the errors that lua
 * generates to be 'accuarate', including line numbers, we basically inject
 * N line number new lines into the 'top' of the chunk reader.....
 *
 * be happy. this is cool.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2149 - 2

/* Hook this right before FallbackResource kicks in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:68 - 2

/* peek to see if "e;disabled"e; is first in a series of arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:461 - 2

/* they actually requested an error! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:212 - 2

/* The next five items give the quality values for the dimensions
 * of negotiation for this variant. They are obtained from the
 * appropriate header lines, except for source_quality, which
 * is obtained from the variant itself (the 'qs' parameter value
 * from the variant's mime-type). Apart from source_quality,
 * these values are set when we find the quality for each variant
 * (see best_match()). source_quality is set from the 'qs' parameter
 * of the variant description or mime type: see set_mime_fields().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:339 - 2

/*****************************************************************
 *
 * Parsing (lists of) media types and their parameters, as seen in
 * HTTPD header lines and elsewhere.
 */

/*
 * parse quality value. atof(3) is not well-usable here, because it
 * depends on the locale (argh).
 *
 * However, RFC 2616 states:
 * 3.9 Quality Values
 *
 * [...] HTTP/1.1 applications MUST NOT generate more than three digits
 * after the decimal point. User configuration of these values SHOULD also
 * be limited in this fashion.
 *
 * qvalue = ( "e;0"e; [ "e;."e; 0*3DIGIT ] )
 * | ( "e;1"e; [ "e;."e; 0*3("e;0"e;) ] )
 *
 * This is quite easy. If the supplied string doesn't match the above
 * definition (loosely), we simply return 1 (same as if there's no qvalue)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:373 - 2

/* be tolerant and accept qvalues without leading zero
 * (also for backwards compat, where atof() was in use)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:416 - 2

/*
 * Note that this handles what I gather is the "e;old format"e;,
 *
 * Accept: text/html text/plain moo/zot
 *
 * without any compatibility kludges --- if the token after the
 * MIME type begins with a semicolon, we know we're looking at parms,
 * otherwise, we know we aren't. (So why all the pissing and moaning
 * in the CERN server code? I must be missing something).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:600 - 2

/* This is possibly overkill for some servers, heck, we have
 * only 33 index.html variants in docs/docroot (today).
 * Make this configurable?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:615 - 2

/* First, default to no TCN, no Alternates, and the original Apache
 * negotiation algorithm with fiddles for broken browser configs.
 *
 * To save network bandwidth, we do not configure to send an
 * Alternates header to the user agent by default. User
 * agents that want an Alternates header for agent-driven
 * negotiation will have to request it by sending an
 * appropriate Negotiate header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:634 - 2

/* Lynx 2.7 and 2.8 send 'negotiate: trans' even though they
 * do not support transparent content negotiation, so for Lynx we
 * ignore the negotiate header when its contents are exactly "e;trans"e;.
 * If future versions of Lynx ever need to say 'negotiate: trans',
 * they can send the equivalent 'negotiate: trans, trans' instead
 * to avoid triggering the workaround below.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:678 - 2

/* We disable header fiddles on the assumption that a
 * client sending Negotiate knows how to send correct
 * headers which don't need fiddling.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:697 - 2

/* Sometimes clients will give us no Accept info at all; this routine sets
 * up the standard default for that case, and also arranges for us to be
 * willing to run a CGI script if we find one. (In fact, we set up to
 * dramatically prefer CGI scripts in cases where that's appropriate,
 * e.g., POST or when URI includes query args or extra path info).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:713 - 2

/*"e;;
 new_accept->quality = 1.0f;
 new_accept->level = 0.0f;
 }

 new_accept = (accept_rec *) apr_array_push(neg->accepts);

 new_accept->name = CGI_MAGIC_TYPE;
 if (neg->use_rvsa) {
 new_accept->quality = 0;
 }
 else {
 new_accept->quality = prefer_scripts ? 2.0f : 0.001f;
 }
 new_accept->level = 0.0f;
}

/*****************************************************************
 *
 * Parsing type-map files, in Roy's meta/http format augmented with
 * #-comments.
 */

/* Reading RFC822-style header lines, ignoring #-comments and
 * handling continuations.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1137 - 2

/* Don't negotiate directories and other unusual files
 * Really shouldn't see anything but DIR/LNK/REG here,
 * and we aught to discover if the LNK was interesting.
 *
 * Of course, this only helps platforms that capture the
 * the filetype in apr_dir_read(), which most can once
 * they are optimized with some magic [it's known to the
 * dirent, not associated to the inode, on most FS's.]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1163 - 2

/* XXX sub req not destroyed -- may be a bug/unintentional ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1312 - 2

/*****************************************************************
 * And now for the code you've been waiting for... actually
 * finding a match to the client's requirements.
 */

/* Matching MIME types ... the star/star and foo/star commenting conventions
 * are implemented here. (You know what I mean by star/star, but just
 * try mentioning those three characters in a C comment). Using strcmp()
 * is legit, because everything has already been smashed to lowercase.
 *
 * Note also that if we get an exact match on the media type, we update
 * level_matched for use in level_cmp below...
 *
 * We also give a value for mime_stars, which is used later. It should
 * be 1 for star/star, 2 for type/star and 3 for type/subtype.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1426 - 2

/* Finding languages. The main entry point is set_language_quality()
 * which is called for each variant. It sets two elements in the
 * variant record:
 * language_quality - the 'q' value of the 'best' matching language
 * from Accept-Language: header (HTTP/1.1)
 * lang_index - Non-negotiated language priority, using
 * position of language on the Accept-Language:
 * header, if present, else LanguagePriority
 * directive order.
 *
 * When we do the variant checking for best variant, we use language
 * quality first, and if a tie, language_index next (this only applies
 * when _not_ using the RVSA/1.0 algorithm). If using the RVSA/1.0
 * algorithm, lang_index is never used.
 *
 * set_language_quality() calls find_lang_index() and find_default_index()
 * to set lang_index.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1601 - 2

/* Find language. We match if either the variant
 * language tag exactly matches the language range
 * from the accept header, or a prefix of the variant
 * language tag up to a '-' character matches the
 * whole of the language range in the Accept-Language
 * header. Note that HTTP/1.x allows any number of
 * '-' characters in a tag or range, currently only
 * tags with zero or one '-' characters are defined
 * for general use (see rfc1766).
 *
 * We only use language range in the Accept-Language
 * header the best match for the variant language tag
 * if it is longer than the previous best match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1654 - 2

/* Finished looking at Accept-Language headers, the best
 * (longest) match is in bestthistag, or NULL if no match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1759 - 2

/* For a given variant, find the best matching Accept: header
 * and assign the Accept: header's quality value to the
 * mime_type_quality field of the variant, for later use in
 * determining the best matching variant.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1816 - 2

/* If we are allowed to mess with the q-values
 * and have no explicit q= parameters in the accept header,
 * make wildcards very low, so we have a low chance
 * of ending up with them if there's something better.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1947 - 2

/* We had no Accept-Encoding header, assume that all
 * encodings are acceptable with a low quality,
 * but we prefer no encoding if available.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2336 - 2

/* Find all the relevant 'quality' values from the
 * Accept... headers, and store in the variant. This also
 * prepares for sending an Alternates header etc so we need to
 * do it even if we do not actually plan to find a best
 * variant.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2361 - 2

/* Now find out if this variant is better than the current
 * best, either using the RVSA/1.0 algorithm, or Apache's
 * internal server-driven algorithm. Presumably other
 * server-driven algorithms are possible, and could be
 * implemented here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2381 - 2

/* We now either have a best variant, or no best variant */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2480 - 2

/* Calculate Vary by looking for any difference between variants */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2687 - 2

/* Called if we got a "e;Choice"e; response from the variant selection algorithm.
 * It checks the result of the chosen variant to see if it
 * is itself negotiated (if so, return error HTTP_VARIANT_ALSO_VARIES).
 * Otherwise, add the appropriate headers to the current response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2835 - 2

/* We can't be transparent, because of internal
 * assumptions in best_match(), if there is a
 * non-neighboring variant. We can have a non-neighboring
 * variant when processing a type map.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2863 - 2

/* alg_result is one of
 * alg_choice: a best variant is chosen
 * alg_list: no best variant is chosen
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2869 - 2

/* send a list response or HTTP_NOT_ACCEPTABLE error response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:362 - 2

/* cached maps contain an mtime for the whole map and live in a subpool
 * of the cachep->pool. That makes it easy to forget them if necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2503 - 2

/*
 * perform all the expansions on the cookies
 *
 * TODO: use cached time similar to how logging does it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2690 - 2

/*
 * +-------------------------------------------------------+
 * | |
 * | configuration directive handling
 * | |
 * +-------------------------------------------------------+
 */

/*
 * own command line parser for RewriteRule and RewriteCond,
 * which doesn't have the '\\' problem.
 * (returns true on error)
 *
 * XXX: what an inclined parser. Seems we have to leave it so
 * for backwards compat. *sigh*
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2756 - 2

/* 3rd argument is optional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2766 - 2

/* 3rd argument is still optional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3317 - 2

/* parse the argument line ourself
 * a1 .. a3 are substrings of str, which is a fresh copy
 * of the argument line. So we can use a1 .. a3 without
 * copying them again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4088 - 2

/* Try to match the URI against the RewriteRule pattern
 * and exit immediately if it didn't apply.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4548 - 2

/*
 * only do something under runtime if the engine is really enabled,
 * else return immediately!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4556 - 2

/*
 * check for the ugly API case of a virtual host section where no
 * mod_rewrite directives exists. In this situation we became no chance
 * by the API to setup our default per-server config so we have to
 * on-the-fly assume we have the default config. But because the default
 * config has a disabled rewriting engine we are lucky because can
 * just stop operating now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4575 - 2

/* Unless the anyuri option is set, ensure that the input to the
 * first rule really is a URL-path, avoiding security issues with
 * poorly configured rules. See CVE-2011-3368, CVE-2011-4317. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4746 - 2

/*
 * Hack because of underpowered API: passing the current
 * rewritten filename through to other URL-to-filename handlers
 * just as it were the requested URL. This is to enable
 * post-processing by mod_alias, etc. which always act on
 * r->uri! The difference here is: We do not try to
 * add the document root
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4848 - 2

/*
 * only do something under runtime if the engine is really enabled,
 * for this directory, else return immediately!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4868 - 2

/*
 * .htaccess file is called before really entering the directory, i.e.:
 * URL: http://localhost/foo and .htaccess is located in foo directory
 * Ignore such attempts, allowing mod_dir to direct the client to the
 * canonical URL. This can be controlled with the AllowNoSlash option.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:282 - 2

/*
 * If we end up with a "e;fixed"e; URL which is identical to the
 * requested one, we must have found a broken symlink or some such.
 * Do _not_ try to redirect this, it causes a loop!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:292 - 2

/*
 * miscapitalization errors are checked first (like, e.g., lower case
 * file, upper case request)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:360 - 2

/* Wow... we found us a mispelling. Construct a fixed url */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:274 - 2

/*
 * Crummy hack. Need to figure out whether we have been
 * redirected to a URL or to a file on some drive. Since I
 * know of no protocols that are a single letter, ignore
 * a : as the first or second character, and assume a file
 * was specified
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:422 - 2

/* ### There is an optimization available here to determine the
 * absolute portion of the path from the server config phase,
 * through the first % segment, and note that portion of the path
 * canonical_path buffer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:116 - 2

/* name is mandatory, value is optional. no value means
 * set the variable to an empty string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:420 - 2

/* expecting the add_* routines to be case-hardened this
 * is just a reminder that module is beta
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:441 - 2

/*
 * Output filter to set the Expires response header field
 * according to the content-type of the response -- if it hasn't
 * already been set.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:454 - 2

/* Don't add Expires headers to errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:530 - 2

/* Don't add Expires headers to errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:146 - 2

/*
 * errors from connect usually imply the remote machine doesn't support
 * the service; don't log such an error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:313 - 2

/* return immediately if ident requests are disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:789 - 2

/* XXX: this could be done at config time I'm sure... but I'm
 * confused by all this magic_rsl stuff. -djg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:797 - 2

/* XXX: this could be done at config time I'm sure... but I'm
 * confused by all this magic_rsl stuff. -djg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:817 - 2

/*
 * magic_process - process input file r Apache API request record
 * (formerly called "e;process"e; in file command, prefix added for clarity) Opens
 * the file and reads a fixed-size buffer to begin processing the contents.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:890 - 2

/*
 * try tests in /etc/magic (or surrogate magic file)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1061 - 2

/*
 * parse one line from magic file, put into magic[index++] if valid
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1281 - 2

/* MIME_MAGIC_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1286 - 2

/*
 * Read a numeric value from a pointer, into the value union of a magic
 * pointer, according to the magic type. Update the string pointer to point
 * just after the number read. Return 0 for success, non-zero for failure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1857 - 2

/*
 * What we want here is: v = strncmp(m->value.s, p->s, m->vallen);
 * but ignoring any nulls. bcmp doesn't give -/+/0 and isn't
 * universally available anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2305 - 2

/* MIME_MAGIC_DEBUG */

 /* check for recognized revision suffix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2324 - 2

/* MIME_MAGIC_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2334 - 2

/* MIME_MAGIC_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2367 - 2

/* MIME_MAGIC_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:335 - 2

/* For intranet (Internal proxies) ignore all restrictions below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:456 - 2

/*
 * This routine handles the BrowserMatch* directives. It simply turns around
 * and feeds them, with the appropriate embellishments, to the general-purpose
 * command handler.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:482 - 2

/*
 * This routine gets called at two different points in request processing:
 * once before the URI has been translated (during the post-read-request
 * phase) and once after (during the header-parse phase). We use different
 * config records for the two different calls to reduce overhead (by not
 * re-doing the server-wide settings during directory processing), and
 * signal which call it is by having the earlier one pass a flag to the
 * later one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:519 - 2

/* Optimize the case where a bunch of directives in a row use the
 * same header. Remember we don't need to strcmp the two header
 * names because we made sure the pointers were equal during
 * configuration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:247 - 2

/*
 * There are two ways the generation of a unique id can be triggered:
 *
 * - from the post_read_request hook which calls set_unique_id()
 * - from error logging via the generate_log_id hook which calls
 * generate_log_id(). This may happen before or after set_unique_id()
 * has been called, or not at all.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:304 - 2

/*
 * The harder case - stolen from mod_expires
 *
 * CookieExpires "e;[plus] {<num> <type>}*"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:296 - 2

/* XXXX need to figure out how to do this
 if (s->secret) {
 if (ajp_msg_append_uint8(msg, SC_A_SECRET) ||
 ajp_msg_append_string(msg, s->secret)) {
 ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r,
 "e;Error ajp_marshal_into_msgb - "e;
 "e;Error appending secret"e;);
 return APR_EGENERAL;
 }
 }
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:576 - 2

/* First, tuck away all already existing cookies */
 /*
 * Could optimize here, but just in case we want to
 * also save other headers, keep this logic.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:32 - 2

/**
 * Dump the given number of bytes on an AJP Message
 *
 * @param pool pool to allocate from
 * @param msg AJP Message to dump
 * @param err error string to display
 * @param count the number of bytes to dump
 * @param buf buffer pointer for dump message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:107 - 2

/**
 * Log an AJP message
 *
 * @param request The current request
 * @param msg AJP Message to dump
 * @param err error string to display
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:343 - 2

/* ignore error - we checked once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:54 - 2

/* First try to see if we have available candidate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:84 - 2

/* Take into calculation only the workers that are
 * not in error state or not disabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:99 - 2

/* First try to see if we have available candidate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:125 - 2

/* Take into calculation only the workers that are
 * not in error state or not disabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:71 - 2

/* First try to see if we have available candidate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:97 - 2

/* Take into calculation only the workers that are
 * not in error state or not disabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:39 - 2

/*
 * We do health-checks only if that (sub)module is loaded in. This
 * allows for us to continue as is w/o requiring mod_watchdog for
 * those implementations which aren't using health checks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:452 - 2

/* arbitrary limit here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:571 - 2

/* Interpolate an env str in a configuration string
 * Syntax ${var} --> value_of(var)
 * Method: replace one var, and recurse on remainder of string
 * Nothing clever here, and crap like nested vars may do silly things
 * but we'll at least avoid sending the unwary into a loop
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:743 - 2

/* XXX: since r->uri has been manipulated already we're not really
 * compliant with RFC1945 at this point. But this probably isn't
 * an issue because this is a hybrid proxy/origin server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:826 - 2

/* XXX: What about case insensitive matching ???
 * Compare regex, fnmatch or string as appropriate
 * If the entry doesn't relate, then continue
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1109 - 2

/*
 * Ensure that balancer is NULL if worker is NULL to prevent
 * potential problems in the post_request hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1223 - 2

/* Unrecoverable error.
 * Return the origin status code to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1228 - 2

/* Try again if the worker is unusable and the service is
 * unavailable.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1339 - 2

/* For shared memory entries, b2->s belongs to override
 * balancer, so if some entry is not set there, we have to
 * update it according to the base balancer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1755 - 2

/*
 * In the regex case supplying a fake URL doesn't make sense as it
 * cannot be parsed anyway with apr_uri_parse later on in
 * ap_proxy_define_balancer / ap_proxy_update_balancer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2637 - 2

/*
 * if c == NULL just check if the optional function was imported
 * else run the optional function so ssl filters are inserted
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2853 - 2

/* Do not disable worker in case of errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2858 - 2

/* Disable address cache for generic forward worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2870 - 2

/* Do not disable worker in case of errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2876 - 2

/* Disable address cache for generic reverse worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2908 - 2

/* fixup before mod_rewrite, so that the proxied url will not
 * escaped accidentally by our fixup.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:97 - 2

/*
 * RFC2616 (9.1.2): GET, HEAD, PUT, DELETE, OPTIONS, TRACE are considered
 * idempotent. Hint: HEAD requests use M_GET as method number as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:107 - 2

/*
 * If the request has arguments it might have side-effects and thus
 * it might be undesirable to resend it to a backend again
 * automatically.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:340 - 2

/* If we had a successful cping/cpong and then a timeout
 * we assume it is a request that cause a back-end timeout,
 * but doesn't affect the whole worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:469 - 2

/* If we are overriding the errors, we can't put the content
 * of the page into the brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:564 - 2

/*
 * If connection has been aborted by client: Stop working.
 * Pretend we are done (data_sent) to avoid further processing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:602 - 2

/*
 * Clear output_brigade to remove possible buckets that remained there
 * after an error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:615 - 2

/* Return DONE to avoid error messages being added to the stream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:626 - 2

/* Return DONE to avoid error messages being added to the stream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:663 - 2

/*
 * If we already send data, signal a broken backend connection
 * upwards in the chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:678 - 2

/* If we had a successful cping/cpong and then a timeout
 * we assume it is a request that cause a back-end timeout,
 * but doesn't affect the whole worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:509 - 2

/* Take into calculation only the workers that are
 * not in error state or not disabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:527 - 2

/*
 * We have a route provided that doesn't match the
 * balancer name. See if the provider route is the
 * member of the same balancer in which case return 503
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:599 - 2

/* Rewrite the url from 'balancer://url'
 * to the 'worker_scheme://worker_hostname[:worker_port]/url'
 * This replaces the balancers fictional name with the
 * real hostname of the elected worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:987 - 2

/* Manages the loadfactors and member status
 * The balancer, worker and nonce are obtained from
 * the request args (?b=...&w=...&nonce=....).
 * All other params are pulled from any POST
 * data that exists.
 * TODO:
 * /.../<whatever>/balancer/worker/nonce
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:233 - 2

/*
 * Step One: Determine Who To Connect To
 *
 * Break up the URL to determine the host to connect to
 */

 /* we break the URL into host, port, uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:367 - 2

/* FIXME: Error checking ignored.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:466 - 2

/* We need SOME kind of timeout here, or virtually anything will
 * cause timeout errors. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:698 - 2

/* we've already passed along the headers, so now pass
 * through the content. we could simply continue to
 * setaside the content and not pass until we see the
 * 0 content-length (below, where we append the EOS),
 * but that could be a huge amount of data; so we pass
 * along smaller chunks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:920 - 2

/* This scheme handler does not reuse connections by default, to
 * avoid tying up a fastcgi that isn't expecting to work on 
 * parallel requests. But if the user went out of their way to
 * type the default value of disablereuse=off, we'll allow it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:137 - 2

/*
 * Escape the globbing characters in a path used as argument to
 * the FTP commands (SIZE, CWD, RETR, MDTM, ...).
 * ftpd assumes '\\' as a quoting character to escape special characters.
 * Just returns the original string if ProxyFtpEscapeWildcards has been
 * configured "e;off"e;.
 * Returns: escaped string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:165 - 2

/*
 * Check for globbing characters in a path used as argument to
 * the FTP commands (SIZE, CWD, RETR, MDTM, ...).
 * ftpd assumes '\\' as a quoting character to escape special characters.
 * Returns: 0 (no globbing chars, or all globbing chars escaped), 1 (globbing chars)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:213 - 2

/*
 * converts a series of buckets into a string
 * XXX: BillS says this function performs essentially the same function as
 * ap_rgetline() in protocol.c. Deprecate this function and use ap_rgetline()
 * instead? I think ftp_string_read() will not work properly on non ASCII
 * (EBCDIC) machines either.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:246 - 2

/* The connection aborted or timed out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:393 - 2

/*
 ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, NULL,
 "e;<%s"e;, response);
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:691 - 2

/* Line is broken. Ignore it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1229 - 2

/*
 * RFC2616 states: 14.37 Retry-After
 *
 * The Retry-After response-header field can be used with a 503 (Service
 * Unavailable) response to indicate how long the service is expected
 * to be unavailable to the requesting client. [...] The value of
 * this field can be either an HTTP-date or an integer number of
 * seconds (in decimal) after the time of the response. Retry-After
 * = "e;Retry-After"e; "e;:"e; ( HTTP-date | delta-seconds )
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1747 - 2

/* already pstrdup'ed: no copy necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2150 - 2

/* responses: 221, 500 */
 /* 221 Service closing control connection. */
 /* 500 Syntax error, command unrecognized. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:82 - 2

/* Do not disable worker in case of errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:342 - 2

/*
 * We use our "e;generic"e; health-check worker instead of the *real*
 * worker, to avoid clashes and conflicts.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:300 - 2

/*
 * Save input_brigade in bb brigade. (At least) in the SSL case
 * input_brigade contains transient buckets whose data would get
 * overwritten during the next call of ap_get_brigade in the loop.
 * ap_save_brigade ensures these buckets to be set aside.
 * Calling ap_save_brigade with NULL as filter is OK, because
 * bb brigade already has been created and does not need to get
 * created by ap_save_brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:465 - 2

/*
 * Save input_brigade in bb brigade. (At least) in the SSL case
 * input_brigade contains transient buckets whose data would get
 * overwritten during the next call of ap_get_brigade in the loop.
 * ap_save_brigade ensures these buckets to be set aside.
 * Calling ap_save_brigade with NULL as filter is OK, because
 * bb brigade already has been created and does not need to get
 * created by ap_save_brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:625 - 2

/*
 * Save input_brigade in body_brigade. (At least) in the SSL case
 * input_brigade contains transient buckets whose data would get
 * overwritten during the next call of ap_get_brigade in the loop.
 * ap_save_brigade ensures these buckets to be set aside.
 * Calling ap_save_brigade with NULL as filter is OK, because
 * body_brigade already has been created and does not need to get
 * created by ap_save_brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:810 - 2

/* Prefetch MAX_MEM_SPOOL bytes
 *
 * This helps us avoid any election of C-L v.s. T-E
 * request bodies, since we are willing to keep in
 * memory this much data, in any case. This gives
 * us an instant C-L election if the body is of some
 * reasonable size.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:844 - 2

/*
 * Save temp_brigade in input_brigade. (At least) in the SSL case
 * temp_brigade contains transient buckets whose data would get
 * overwritten during the next call of ap_get_brigade in the loop.
 * ap_save_brigade ensures these buckets to be set aside.
 * Calling ap_save_brigade with NULL as filter is OK, because
 * input_brigade already has been created and does not need to get
 * created by ap_save_brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:863 - 2

/* Ensure we don't hit a wall where we have a buffer too small
 * for ap_get_brigade's filters to fetch us another bucket,
 * surrender once we hit 80 bytes less than MAX_MEM_SPOOL
 * (an arbitrary value.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:947 - 2

/* This is an appropriate default; very efficient for no-body
 * requests, and has the behavior that it will not add any C-L
 * when the *old_cl_val is NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1188 - 2

/* if we've already started loading headers_out, then
 * return what we've accumulated so far, in the hopes
 * that they are useful; also note that we likely pre-read
 * the first line of the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1277 - 2

/*
 * Limit the number of interim responses we sent back to the client. Otherwise
 * we suffer from a memory build up. Besides there is NO sense in sending back
 * an unlimited number of interim responses to the client. Thus if we cross
 * this limit send back a 502 (Bad Gateway).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1409 - 2

/* Need to return OK to avoid sending an error message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1751 - 2

/*
 * if we are overriding the errors, we can't put the content
 * of the page into the brigade
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1894 - 2

/* Ack! Phbtt! Die! User aborted! */
 /* Only close backend if we haven't got all from the
 * backend. Furthermore if *backend_ptr is NULL it is no
 * longer safe to fiddle around with backend as it might
 * be already in use by another thread.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1998 - 2

/*
 * Use a shorter-lived pool to reduce memory usage
 * and avoid a memory leak
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2051 - 2

/*
 * In the case that we are handling a reverse proxy connection and this
 * is not a request that is coming over an already kept alive connection
 * with the client, do NOT reuse the connection to the backend, because
 * we cannot forward a failure to the client in this case as the client
 * does NOT expect this in this situation.
 * Yes, this creates a performance penalty.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2094 - 2

/* We need to reset backend->close now, since ap_proxy_http_prefetch() set
 * it to disable the reuse of the connection *after* this request (no keep-
 * alive), not to close any reusable connection before this request. However
 * assure what is expected later by using a local flag and do the right thing
 * when ap_proxy_connect_backend() below provides the connection to close.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:159 - 2

/* If neither socket becomes readable in the specified timeout,
 * this callback will kill the request. We do not have to worry about
 * having a cancel and a IO both queued.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:450 - 2

/* Avoid sending error pages down an upgraded connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:70 - 2

/**
 * This works right now because all timers are invoked in the single listener
 * thread in the Event MPM -- the same thread that serf callbacks are made
 * from, so we don't technically need a mutex yet, but with the Simple MPM,
 * invocations are made from worker threads, and we need to figure out locking
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:147 - 2

/* XXXXX: List of headers not to copy to serf. serf's serf_bucket_headers_setn,
 * doesn't actually overwrite a header if we set it once, so we need to ignore anything
 * we might want to toggle or combine.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:277 - 2

/* XXXXXXX: Create better error message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:296 - 2

/**
 * XXXXX: If I understood serf buckets better, it might be possible to not
 * copy all of the data here, and better stream it to the client.
 **/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:361 - 2

/*
 * Parse the host string to separate host portion from optional port.
 * Perform range checking on port.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:507 - 2

/*
 * Determine (i.e., "e;guess"e;) netmask by counting the
 * number of trailing .0's; reduce #quads appropriately
 * (so that 192.168.0.0 is equivalent to 192.168.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:682 - 2

/* some error was logged already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:870 - 2

/*
 * First check if mapping against a balancer and see
 * if we have such a entity. If so, then we need to
 * find the particulars of the actual worker which may
 * or may not be the right one... basically, we need
 * to find which member actually handled this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1067 - 2

/*
 * BALANCER related...
 */

/*
 * verifies that the balancer name conforms to standards.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1212 - 2

/*
 * Create an already defined balancer and free up memory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1520 - 2

/*
 * Taken from ap_strcmp_match() :
 * Match = 0, NoMatch = 1, Abort = -1, Inval = -2
 * Based loosely on sections of wildmat.c by Rich Salz
 * Hmmm... shouldn't this really go component by component?
 *
 * Adds handling of the "e;\<any>"e; => "e;<any>"e; unescaping.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2268 - 2

/*
 * Break up the URL to determine the host to connect to
 */

 /* we break the URL into host, port, uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2593 - 2

/* Add proxy authorization from the initial request if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2943 - 2

/*
 * The worker is in error likely done by a different thread / process
 * e.g. for a timeout or bad status. We should respect this and should
 * not continue with a connection via this worker even if we got one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3064 - 2

/*
 * Since we can't resize the scoreboard when reconfiguring, we
 * have to impose a limit on the number of workers, we are
 * able to reconfigure to.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3095 - 2

/*
 * Provide a string hashing function for the proxy.
 * We offer 2 methods: one is the APR model but we
 * also provide our own, based on either FNV or SDBM.
 * The reason is in case we want to use both to ensure no
 * collisions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3373 - 2

/*
 * HTTP "e;Ping"e; test? Easiest is 100-Continue. However:
 * To be compliant, we only use 100-Continue for requests with bodies.
 * We also make sure we won't be talking HTTP/1.0 as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3440 - 2

/*
 * Save the original headers in here and restore them when leaving, since
 * we will apply proxy purpose only modifications (eg. clearing hop-by-hop
 * headers, add Via or X-Forwarded-* or Expect...), whereas the originals
 * will be needed later to prepare the correct response and logging.
 *
 * Note: We need to take r->pool for apr_table_copy as the key / value
 * pairs in r->headers_in have been created out of r->pool and
 * p might be (and actually is) a longer living pool.
 * This would trigger the bad pool ancestry abort in apr_table_copy if
 * apr is compiled with APR_POOL_DEBUG.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3644 - 2

/* Cleanup the brigade now to avoid buckets lifetime
 * issues in case of error returned below. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:167 - 2

/**
 * Save the session.
 *
 * In most implementations the session is only saved if the dirty flag is
 * true. This prevents the session being saved unnecessarily.
 *
 * @param r The request
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:456 - 2

/* load the session, or create one if necessary */
 /* when unset or on error, z will be NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:146 - 2

/* we can't break out here or row won't get cleaned up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:358 - 2

/* No need to do additional error logging here, it has already
 been done in dbd_init if needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:376 - 2

/**
 * Clean out expired sessions.
 *
 * TODO: We need to figure out a way to clean out expired sessions from the database.
 * The monitor hook doesn't help us that much, as we have no handle into the
 * server, and so we need to come up with a way to do this safely.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:481 - 2

/**
 * This function performs housekeeping on the database, deleting expired
 * sessions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:131 - 2

/* Don't mangle the file name if given an absolute path, it's
 * up to the caller to provide a unique name when necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:428 - 2

/*
 * TODO: Error check the below... What error makes
 * sense if the restore fails? Any?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:566 - 2

/*
 * Immediately stop processing if SSL is disabled for this connection
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:231 - 2

/* a server's SCT-related storage on disk:
 *
 * <rootdir>/<fingerprint>/servercerts.pem
 * Concatenation of leaf certificate and any
 * configured intermediate certificates
 *
 * <rootdir>/<fingerprint>/logs 
 * List of log URLs, one per line; this is
 * used to recognize when a log URL configuration
 * change makes our current SCT set invalid
 *
 * <rootdir>/<fingerprint>/AUTO_hostname_port_uri.sct
 * SCT for cert with this fingerprint
 * from this log (could be any number
 * of these)
 *
 * <rootdir>/<fingerprint>/<anything>.sct
 * (file is optional; could be any number
 * of these; should not start with "e;AUTO_"e;)
 * Note that the administrator should store 
 * statically maintained SCTs in a different
 * directory for the server certificate (specified
 * by the CTStaticSCTs directive). A hypothetical
 * external mechanism for maintaining SCTs following
 * some other model could store them here for use
 * by the server.
 *
 * <rootdir>/<fingerprint>/collated
 * one or more SCTs ready to send
 * (this is all that the web server
 * processes care about)
 *
 * Additionally, the CTStaticSCTs directive specifies a certificate-
 * specific directory of statically-maintained SCTs to be sent.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1663 - 2

/* perform quick sanity check of server SCT(s) during handshake;
 * errors should result in fatal alert
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2112 - 2

/* ignore criticality of extension */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2294 - 2

/* Hmmm... Is this actually called if the client doesn't include
 * the extension in the ClientHello? I don't think so.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2704 - 2

/* why here? some odd error path? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1111 - 2

/* ### Having a separate mode for this seems logically
 * unnecessary; the stated purpose of sending non-empty
 * session IDs would be better fixed in OpenSSL or simply
 * doing it by default if "e;none"e; is used. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:99 - 2

/* DH_free() is a noop for a NULL parameter, so these are harmless
 * in the (unexpected) case where these variables are already
 * NULL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:633 - 2

/*
 * Disallow a session from being resumed during a renegotiation,
 * so that an acceptable cipher suite can be negotiated.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1153 - 2

/* 
 * workaround for those OpenSSL versions where SSL_CTX_get0_certificate
 * is not yet available: create an SSL struct which we dispose of
 * as soon as we no longer need access to the cert. (Strictly speaking,
 * SSL_CTX_get0_certificate does not depend on the SSL_CONF stuff,
 * but there's no reliable way to check for its existence, so we
 * assume that if SSL_CONF is available, it's OpenSSL 1.0.2 or later,
 * and SSL_CTX_get0_certificate is implemented.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1437 - 2

/* Clear X509_verify_cert errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:639 - 2

/* Ensure a non-zero error code is returned */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:974 - 2

/*
 * Close the SSL part of the socket connection
 * (called immediately _before_ the socket is closed)
 * or called with
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1037 - 2

/* perform no close notify handshake at all
 (violates the SSL/TLS standard!) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1044 - 2

/* send close notify and wait for clients close notify
 (standard compliant, but usually causes connection hangs) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1143 - 2

/*
 * Enable SNI for backend requests. Make sure we don't do it for
 * pure SSLv3 connections, and also prevent IP addresses
 * from being included in the SNI extension. (OpenSSL would simply
 * pass them on, but RFC 6066 is quite clear on this: "e;Literal
 * IPv4 and IPv6 addresses are not permitted"e;.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1261 - 2

/*
 * The case where the connection was closed before any data
 * was transferred. That's not a real error and can occur
 * sporadically with some clients.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1280 - 2

/*
 * The case where OpenSSL has recognized a HTTP request:
 * This means the client speaks plain HTTP on our HTTPS port.
 * ssl_io_filter_error will disable the ssl filters when it
 * sees this status code.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1400 - 2

/* XXX: Ok, if we aborted, we ARE at the EOS. We also have
 * aborted. This 'double protection' is probably redundant,
 * but also effective against just about anything.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1540 - 2

/* The brigade consists of zero-or-more small data buckets which
 * can be coalesced (the prefix), followed by the remainder of the
 * brigade.
 *
 * Find the last bucket - if any - of that prefix. count gives
 * the number of buckets in the prefix. The "e;prefix"e; must contain
 * only data buckets with known length, and must be of a total
 * size which fits into the buffer.
 *
 * N.B.: The process here could be repeated throughout the brigade
 * (coalesce any run of consecutive data buckets) but this would
 * add significant complexity, particularly to memory
 * management. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1587 - 2

/* Iterate through the prefix segment. For non-fatal errors
 * in this loop it is safe to break out and fall back to the
 * normal path of sending the buffer + remaining buckets in
 * brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1601 - 2

/* non-fatal error; break out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1622 - 2

/* non-fatal error; break out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1854 - 2

/* After consuming all protocol-level input, remove all protocol-level
 * filters. It should strictly only be necessary to remove filters
 * at exactly ftype == AP_FTYPE_PROTOCOL, since this filter will
 * precede all > AP_FTYPE_PROTOCOL anyway. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1950 - 2

/* Ensure that the brigade is terminated by an EOS if the
 * buffered request body has been entirely consumed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1966 - 2

/* The request_rec pointer is passed in here only to ensure that the
 * filter chain is modified correctly when doing a TLS upgrade. It
 * must *not* be used otherwise. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1993 - 2

/* The request_rec pointer is passed in here only to ensure that the
 * filter chain is modified correctly when doing a TLS upgrade. It
 * must *not* be used otherwise. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:93 - 2

/* Perform a speculative (and non-blocking) read from the connection
 * filters for the given request, to determine whether there is any
 * pending data to read. Return non-zero if there is, else zero. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:249 - 2

/* If "e;SSLEngine optional"e; is configured, this is not an SSL
 * connection, and this isn't a subrequest, send an Upgrade
 * response header. Note this must happen before map_to_storage
 * and OPTIONS * request processing is completed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:270 - 2

/* Now that we have caught this error, forget it. we are done
 * with using SSL on this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:287 - 2

/*
 * Perform SNI checks only on the initial request. In particular,
 * if these checks detect a problem, the checks shouldn't return an
 * error again when processing an ErrorDocument redirect for the
 * original problem.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:298 - 2

/*
 * The SNI extension supplied a hostname. So don't accept requests
 * with either no hostname or a hostname that selected a different
 * virtual host than the one used for the handshake, causing
 * different SSL parameters to be applied, such as SSLProtocol,
 * SSLCACertificateFile/Path and SSLCADNRequestFile/Path which
 * cannot be renegotiated (SSLCA* due to current limitations in
 * OpenSSL, see:
 * http://mail-archives.apache.org/mod_mbox/httpd-dev/200806.mbox/%3C48592955.2090303@velox.ch%3E
 * and
 * http://mail-archives.apache.org/mod_mbox/httpd-dev/201312.mbox/%3CCAKQ1sVNpOrdiBm-UPw1hEdSN7YQXRRjeaT-MCWbW_7mN%3DuFiOw%40mail.gmail.com%3E
 * )
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:498 - 2

/*
 * Support for per-directory reconfigured SSL connection parameters
 *
 * We do not force any renegotiation if the user is already authenticated
 * via SRP.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:573 - 2

/* TODO: this categorically fails changed cipher suite settings
 * on slave connections. We could do better by
 * - create a new SSL* from our SSL_CTX and set cipher suite there,
 * and retrieve ciphers, free afterwards
 * Modifying the SSL on a slave connection is no good.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:996 - 2

/* XXX: Should replace setting state with SSL_renegotiate(ssl);
 * However, this causes failures in perl-framework currently,
 * perhaps pre-test if we have already negotiated?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1084 - 2

/* If we're trying to have the user name set from a client
 * certificate then we need to set it here. This should be safe as
 * the user name probably isn't important from an auth checking point
 * of view as the certificate supplied acts in that capacity.
 * However, if FakeAuth is being used then this isn't the case so
 * we need to postpone setting the username until later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1182 - 2

/*
 * We decline when we are in a subrequest. The Authorization header
 * would already be present if it was added in the main request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1214 - 2

/*
 * We decline operation in various situations...
 * - SSLOptions +FakeBasicAuth not configured
 * - r->user already authenticated
 * - ssl not enabled
 * - client did not present a certificate
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1584 - 2

/*
 * Check for optionally acceptable non-verifiable issuer situation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1760 - 2

/*
 * downstream server didn't send us a list of acceptable CA certs,
 * so we send the first client cert in the list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1872 - 2

/*
 * Store the SSL_SESSION in the inter-process cache with the
 * same expire time, so it expires automatically there, too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2197 - 2

/*
 * Adjust the session id context. ssl_init_ssl_connection()
 * always picks the configuration of the first vhost when
 * calling SSL_new(), but we want to tie the session to the
 * vhost we have just switched to. Again, we have to make sure
 * that we're not overwriting a session id context which was
 * possibly set in ssl_hook_Access(), before triggering
 * a renegotiation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2318 - 2

/*
 * This callback function is executed when the TLS Application-Layer
 * Protocol Negotiation Extension (ALPN, RFC 7301) is triggered by the Client
 * Hello, giving a list of desired protocol names (in descending preference) 
 * to the server.
 * The callback has to select a protocol name or return an error if none of
 * the clients preferences is supported.
 * The selected protocol does not have to be on the client list, according
 * to RFC 7301, so no checks are performed.
 * The client protocol list is serialized as length byte followed by ASCII
 * characters (not null-terminated), followed by the next protocol name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2369 - 2

/* The order the callbacks are invoked from TLS extensions is, unfortunately
 * not defined and older openssl versions do call ALPN selection before
 * they callback the SNI. We need to make sure that we know which vhost
 * we are dealing with so we respect the correct protocols.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:134 - 2

/*
 * Limit the maximum length of the subject and issuer DN strings
 * in the log message. 300 characters should always be sufficient
 * for holding both the timestamp, module name, pid etc. stuff
 * at the beginning of the line and the trailing information about
 * serial, notbefore and notafter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:293 - 2

/* correct error code for application errors? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:172 - 2

/*
 * if the private key is encrypted and SSLPassPhraseDialog
 * is configured to "e;builtin"e; it isn't possible to prompt for
 * a password after httpd has detached from the tty.
 * in this case if we already have a private key and the
 * file name/mtime hasn't changed, then reuse the existing key.
 * we also reuse existing private keys that were encrypted for
 * exec: and pipe: dialogs to minimize chances to snoop the
 * password. that and pipe: dialogs might prompt the user
 * for password, which on win32 for example could happen 4
 * times at startup. twice for each child and twice within
 * each since apache "e;restarts itself"e; on startup.
 * of course this will not work for the builtin dialog if
 * the server was started without LoadModule ssl_module
 * configured, then restarted with it configured.
 * but we fall through with a chance of success if the key
 * is not encrypted or can be handled via exec or pipe dialog.
 * and in the case of fallthrough, pkey_mtime and isatty()
 * are used to give a better idea as to what failed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:526 - 2

/*
 * The first time display a header to inform the user about what
 * program he actually speaks to, which module is responsible for
 * this terminal dialog and why to the hell he has to enter
 * something...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:214 - 2

/* Perform once-per-process library version determination: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_scache.c:34 - 2

/* _________________________________________________________________
**
** Session Cache: Common Abstraction Layer
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_scache.c:46 - 2

/* The very first invocation of this function will be the
 * post_config invocation during server startup; do nothing for
 * this first (and only the first) time through, since the pool
 * will be immediately cleared anyway. For every subsequent
 * invocation, initialize the configured cache. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:198 - 2

/*
 * if a value for this key already exists,
 * reuse as much of the already malloc-ed data
 * as possible.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:303 - 2

/* Errors already logged. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:223 - 2

/*
 * convert an X509_NAME to an RFC 2253 formatted string, optionally truncated
 * to maxlen characters (specify a maxlen of 0 for no length limit)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:377 - 2

/* 
 * Check if a certificate matches for a particular name, by iterating over its
 * DNS-IDs and CN-IDs (RFC 6125), optionally with basic wildcard matching.
 * If server_rec is non-NULL, some (debug/trace) logging is enabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:497 - 2

/* We must ensure not to process more than what would fit in the
 * destination buffer, including terminating NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:45 - 2

/*"e;

typedef enum policy_result
{
 policy_ignore = 0, /* ignore this policy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:51 - 2

/* log the violation as an error, and decline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:125 - 2

/* downgrade enforce and log to ignore? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:72 - 2

/* This routine complements the setuid() call: it causes the BS2000 job
 * environment to be switched to the target user's user id.
 * That is important if CGI scripts try to execute native BS2000 commands.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:364 - 2

/* Linux generates the rest of these, other tcp
 * stacks (i.e. bsd) tend to hide them behind
 * getsockopt() interfaces. They occur when
 * the net goes sour or the client disconnects
 * after the three-way handshake has been done
 * in the kernel but before userland has picked
 * up the socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:384 - 2

/* EAGAIN/EWOULDBLOCK can be returned on BSD-derived
 * TCP stacks when the connection is aborted before
 * we call connect, but only because our listener
 * sockets are non-blocking (AP_NONBLOCK_WHEN_MULTI_LISTEN)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:400 - 2

/*
 * When the network layer has been shut down, there
 * is not much use in simply exiting: the parent
 * would simply re-create us (and we'd fail again).
 * Use the CHILDFATAL code to tear the server down.
 * @@@ Martin's idea for possible improvement:
 * A different approach would be to define
 * a new APEXIT_NETDOWN exit code, the reception
 * of which would make the parent shutdown all
 * children, then idle-loop until it detected that
 * the network is up again, and restart the children.
 * Ben Hyde noted that temporary ENETDOWN situations
 * occur in mobile IP.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:480 - 2

/* This routine complements the setuid() call: it causes the BS2000 job
 * environment to be switched to the target user's user id.
 * That is important if CGI scripts try to execute native BS2000 commands.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:234 - 2

/* ###: deliberately overallocate all but the trailing null.
 * We could precalculate the exact buffer here instead, the question
 * is a matter of storage v.s. cpu cycles.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:472 - 2

/* ###: deliberately overallocate plus two extra nulls.
 * We could precalculate the exact buffer here instead, the question
 * is a matter of storage v.s. cpu cycles.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:491 - 2

/* Small possiblity the array is either unterminated
 * or single NULL terminated. Avert.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:115 - 2

/** TODO: Support wide-characters */
/* prompt takes a apreq_handle and 2 strings - name and type - and prompts a
 user for input via stdin/stdout. used in interactive mode.

 name must be defined. type can be null.

 we take the promptstring defined in the handle and interpolate variables as
 follows:

 $n - name of the variable we're asking for (param 2 to prompt())
 $t - type of the variable we're asking for - like cookie, get, post, etc
 (param 3 to prompt())
 parentheses - if a variable is surrounded by parentheses, and interpolates
 as null, then nothing else in the parentheses will be displayed
 Useful if you want a string to only show up if a given variable
 is available

 These are planned for forward-compatibility, but the underlying features
 need some love... I left these in here just as feature reminders, rather
 than completely removing them from the code - at least they provide sanity
 testing of the default prompt & parentheses - issac

 $l - label for the param - the end-user-developer can provide a textual
 description of the param (name) being requested (currently unused in
 lib)
 $d - default value for the param (currently unused in lib)

*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:941 - 2

/** Determine if we're interactive mode or not. Order is
 QUERY_STRING ? NO : Interactive

 I think we should just rely on GATEWAY_INTERFACE to set
 non-interactive mode, and be interactive if it's not there

Behaviour change should really be:
 Always check query_string before prompting user,
 but rewrite body/cookies to get if interactive

 Definately more work needed here...
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:195 - 2

/* Theoretically idx should never be 0 here, because we
 * already tested the front of the brigade for a potential match.
 * However, it doesn't hurt to allow for the possibility,
 * since this will just start the whole loop over again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:357 - 2

/* Must handle special case of missing CRLF (mainly
 * coming from empty file uploads). See RFC2065 S5.1.1:
 *
 * body-part = MIME-part-header [CRLF *OCTET]
 *
 * So the CRLF we already matched in MFD_HEADER may have been
 * part of the boundary string! Both Konqueror (v??) and
 * Mozilla-0.97 are known to emit such blocks.
 *
 * Here we first check for this condition with
 * brigade_start_string, and prefix the brigade with
 * an additional CRLF bucket if necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:725 - 2

/*
 * iovec.iov_len is a long here
 * which causes a comparison between 
 * signed(long) and unsigned(apr_size_t)
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:842 - 2

/*
 * is_2616_token() is the verbatim definition from section 2.2
 * in the rfc itself. We try to optimize it around the
 * expectation that the argument is not a token, which
 * should be the typical usage.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:853 - 2

/* The chars we are expecting are listed above;
 the chars below are just for completeness. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:445 - 2

/* If a module is deliberately returning something else
 * (request_rec in non-HTTP or proprietary extension?)
 * let it set a note to allow it explicitly.
 * Otherwise, a return code that is neither reserved nor HTTP
 * is a bug, as in PR#31759.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:645 - 2

/*
 * remove_module undoes what add_module did. There are some caveats:
 * when the module is removed, its slot is lost so all the current
 * per-dir and per-server configurations are invalid. So we should
 * only ever call this function when you are invalidating almost
 * all our current data. I.e. when doing a restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:708 - 2

/*
 * And module pointer to list of loaded modules
 *
 * Notes: 1. ap_add_module() would already complain if no more space
 * exists for adding a dynamically loaded module
 * 2. ap_add_module() accepts double inclusion, so we have
 * to accept this, too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:735 - 2

/*
 * Remove module pointer from list of loaded modules
 *
 * Note: 1. We cannot determine if the module was successfully
 * removed by ap_remove_module().
 * 2. We have not to complain explicity when the module
 * is not found because ap_remove_module() did it
 * for us already.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1815 - 2

/* note: this may not be a 'syntactic' error per se.
 * should it rather be "e;Configuration error ..."e;?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2475 - 2

/********************************************************************
 * Configuration directives are restricted in terms of where they may
 * appear in the main configuration files and/or .htaccess files according
 * to the bitmask req_override in the command_rec structure.
 * If any of the overrides set in req_override are also allowed in the
 * context in which the command is read, then the command is allowed.
 * The context is determined as follows:
 *
 * inside *.conf --> override = (RSRC_CONF|OR_ALL)&~(OR_AUTHCFG|OR_LIMIT);
 * within <Directory> or <Location> --> override = OR_ALL|ACCESS_CONF;
 * within .htaccess --> override = AllowOverride for current directory;
 *
 * the result is, well, a rather confusing set of possibilities for when
 * a particular directive is allowed to be used. This procedure prints
 * in English where the given (pc) directive can be used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:95 - 2

/* we now proceed to read from the client until we get EOF, or until
 * MAX_SECS_TO_LINGER has passed. The reasons for doing this are
 * documented in a draft:
 *
 * http://tools.ietf.org/html/draft-ietf-http-connection-00.txt
 *
 * in a nutshell -- if we don't make this effort we risk causing
 * TCP RST packets to be sent which can tear down a connection before
 * all the response data has been sent to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:119 - 2

/* Close the connection, being careful to send out whatever is still
 * in our buffers. If possible, try to avoid a hard close until the
 * client has ACKed our FIN and/or has stopped sending us data.
 */

 /* Send any leftover data to the client, but never try to again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:173 - 2

/*
 * First time through;
 * calculate now + 30 seconds (MAX_SECS_TO_LINGER).
 *
 * If some module requested a shortened waiting period, only wait for
 * 2s (SECONDS_TO_LINGER). This is useful for mitigating certain
 * DoS attacks.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:244 - 2

/* otherwise we just copy, because an explicit opts setting
 * overrides all earlier +/- modifiers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:432 - 2

/* httpready broken before 4.1.1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:476 - 2

/* pcalloc'ed - we have NULL's/0's
 conf->gprof_dir = NULL;

 ** recursion stopper; 0 == unset
 conf->redirect_limit = 0;
 conf->subreq_limit = 0;

 conf->protocol = NULL;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:766 - 2

/*
 * Optional function coming from mod_authn_core, used for
 * retrieving the authorization realm
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1347 - 2

/*
 * Make sure we can revert the effects of Define/UnDefine when restarting.
 * This function must be called once per loading of the config, before
 * ap_server_config_defines is changed. This may be during reading of the
 * config, which is even before the pre_config hook is run (due to
 * EXEC_ON_READ for Define/UnDefine).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1589 - 2

/* Heuristic to determine second argument. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1599 - 2

/* The entry should be ignored if it is a full URL for a 401 error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1612 - 2

/* special case: ErrorDocument 404 default restores the
 * canned server error response
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1623 - 2

/* hack. Prefix a "e; if it is a msg; as that is what
 * http_protocol.c relies on to distinguish between
 * a msg and a (local) path.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2226 - 2

/* Killing two features with one function,
 * if (tog == NULL) <Limit>, else <LimitExcept>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2632 - 2

/*
 * There are two phases where calling ap_find_loaded_module_symbol
 * is problematic:
 *
 * During reading of the config, ap_server_conf is invalid but s
 * points to the main server config, if passed from cmd->server
 * of an EXEC_ON_READ directive.
 *
 * During config parsing, s may be a virtual host that would cause
 * a segfault in mod_so if passed to ap_find_loaded_module_symbol,
 * because mod_so's server config for vhosts is initialized later.
 * But ap_server_conf is already set at this time.
 *
 * Therefore we use s if it is not virtual and ap_server_conf if
 * s is virtual.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5145 - 2

/* expected cause is that the client disconnected already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5229 - 2

/*
 * To ensure that the RNG state in the parent changes after the fork, we
 * pull some data from the RNG and discard it. This ensures that the RNG
 * states in the children are different even after the pid wraps around.
 * As we only use apr_random for insecure random bytes, pulling 2 bytes
 * should be enough.
 * XXX: APR should probably have some dedicated API to do this, but it
 * XXX: currently doesn't.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:156 - 2

/* ### AP_MODE_PEEK is a horrific name for this mode because we also
 * eat any CRLFs that we see. That's not the obvious intention of
 * this mode. Determine whether anyone actually uses this or not. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:163 - 2

/* The purpose of this loop is to ignore any CRLF (or LF) at the end
 * of a request. Many browsers send extra lines at the end of POST
 * requests. We use the PEEK method to determine if there is more
 * data on the socket, so that we know if we should delay sending the
 * end of one request until we have served the second request in a
 * pipelined situation. We don't want to actually delay sending a
 * response if the server finds a CRLF (or LF), becuause that doesn't
 * mean that there is another request, just a blank line.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:369 - 2

/* Fail quickly if the connection has already been aborted. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:394 - 2

/* Scan through the brigade and decide whether to attempt a write,
 * and how much to write, based on the following rules:
 *
 * 1) The bb is empty: Do a nonblocking write of as much as
 * possible: do a nonblocking write of as much data as possible,
 * then save the rest in ctx->buffered_bb. (If bb is empty,
 * it probably means that the MPM is doing asynchronous write
 * completion and has just determined that this connection
 * is writable.)
 *
 * 2) Determine if and up to which bucket we need to do a blocking
 * write:
 *
 * a) The brigade contains a flush bucket: Do a blocking write
 * of everything up that point.
 *
 * b) The request is in CONN_STATE_HANDLER state, and the brigade
 * contains at least THRESHOLD_MAX_BUFFER bytes in non-file
 * buckets: Do blocking writes until the amount of data in the
 * buffer is less than THRESHOLD_MAX_BUFFER. (The point of this
 * rule is to provide flow control, in case a handler is
 * streaming out lots of data faster than the data can be
 * sent to the client.)
 *
 * c) The request is in CONN_STATE_HANDLER state, and the brigade
 * contains at least MAX_REQUESTS_IN_PIPELINE EOR buckets:
 * Do blocking writes until less than MAX_REQUESTS_IN_PIPELINE EOR
 * buckets are left. (The point of this rule is to prevent too many
 * FDs being kept open by pipelined requests, possibly allowing a
 * DoS).
 *
 * d) The brigade contains a morphing bucket: If there was no other
 * reason to do a blocking write yet, try reading the bucket. If its
 * contents fit into memory before THRESHOLD_MAX_BUFFER is reached,
 * everything is fine. Otherwise we need to do a blocking write the
 * up to and including the morphing bucket, because ap_save_brigade()
 * would read the whole bucket into memory later on.
 *
 * 3) Actually do the blocking write up to the last bucket determined
 * by rules 2a-d. The point of doing only one flush is to make as
 * few calls to writev() as possible.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:45 - 2

/* A bunch of functions in util.c scan strings looking for certain characters.
 * To make that more efficient we encode a lookup table.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:87 - 2

/* Win32/OS2 have many of the same vulnerable characters
 * as Unix sh, plus the carriage return and percent char.
 * The proper escaping of these characters varies from unix
 * since Win32/OS2 use carets or doubled-double quotes,
 * and neither lf nor cr can be escaped. We escape unix
 * specific as well, to assure that cross-compiled unix
 * applications behave similiarly when invoked on win32/os2.
 *
 * Rem please keep in-sync with apr's list in win32/filesys.c
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:70 - 2

/* TODO: make_sock is just begging and screaming for APR abstraction */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:725 - 2

/* clear the enviroment on our second run
 * so that none of our future children get confused.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:925 - 2

/* This is limited to Linux with defined SO_REUSEPORT (ie. 3.9+) for
 * now since the implementation evenly distributes connections accross
 * all the listening threads/processes.
 *
 * *BSDs have SO_REUSEPORT too but with a different semantic: the first
 * wildcard address bound socket or the last non-wildcard address bound
 * socket will receive connections (no evenness garantee); the rest of
 * the sockets bound to the same port will not.
 * This can't (always) work for httpd.
 *
 * TODO: latests DragonFlyBSD's SO_REUSEPORT (seems to?) have the same
 * semantic as Linux, so we may need HAVE_SO_REUSEPORT available from
 * configure.in some day.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:143 - 2

/* remember to close this handle in the child process
 *
 * On Win32 this makes zero sense, because we don't
 * take the parent process's child procs.
 * If the win32 parent instead passed each and every
 * logger write handle from itself down to the child,
 * and the parent manages all aspects of keeping the
 * reliable pipe log children alive, this would still
 * make no sense :) Cripple it on Win32.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:372 - 2

/* Register to throw away the read_handles list when we
 * cleanup plog. Upon fork() for the apache children,
 * this read_handles list is closed so only the parent
 * can relaunch a lost log child. These read handles
 * are always closed on exec.
 * We won't care what happens to our stderr log child
 * between log phases, so we don't mind losing stderr's
 * read_handle a little bit early.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:745 - 2

/* XXX: maybe escaping the entry is not necessary for notes? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1112 - 2

/*
 * XXX: potential optimization: only create log id if %L is
 * XXX: actually used
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1604 - 2

/* If we fill the buffer, we're probably reading a corrupt pid file.
 * To be nice, let's also ensure the first char is a digit. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:312 - 2

/* For all intents and purposes, this is impossibly unlikely,
 * but APR doesn't exist yet, we can't use it for reporting
 * these earliest two failures;
 *
 * XXX: Note the apr_ctime() and apr_time_now() calls. These
 * work, today, against an uninitialized APR, but in the future
 * (if they relied on global pools or mutexes, for example) then
 * the datestamp logic will need to be replaced.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:334 - 2

/* Now we have initialized apr and our logger, no more
 * exceptional error reporting required for the lifetime
 * of this server process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:739 - 2

/* This is a hack until we finish the code so that it only reads
 * the config file once and just operates on the tree already in
 * memory. rbb
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:820 - 2

/* This ugly little hack pulls any function referenced in exports.c into
 * the web server. exports.c is generated during the build, and it
 * has all of the APR functions specified by the apr/apr.exports and
 * apr-util/aprutil.exports files.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:125 - 2

/* Admin can't tune ServerLimit beyond MAX_SERVER_LIMIT. We want
 * some sort of compile-time limit to help catch typos.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:143 - 2

/* Admin can't tune ThreadLimit beyond MAX_THREAD_LIMIT. We want
 * some sort of compile-time limit to help catch typos.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:284 - 2

/*
 * The pollset for sockets that are in any of the timeout queues. Currently
 * we use the timeout_mutex to make sure that connections are added/removed
 * atomically to/from both event_pollset and a timeout queue. Otherwise
 * some confusion can happen under high load if timeout queues and pollset
 * get out of sync.
 * XXX: It should be possible to make the lock unnecessary in many or even all
 * XXX: cases.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:360 - 2

/*
 * The max child slot ever assigned, preserved across restarts. Necessary
 * to deal with MaxRequestWorkers changes across AP_SIG_GRACEFUL restarts.
 * We use this value to optimize routines that have to scan the entire
 * scoreboard.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:464 - 2

/*
 * XXX: This is not yet optimal. If many workers suddenly become available,
 * XXX: the parent may kill some processes off too soon.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:698 - 2

/*
 * ap_start_shutdown() and ap_start_restart(), below, are a first stab at
 * functions to initiate shutdown or restart without relying on signals.
 * Previously this was initiated in sig_term() and restart() signal handlers,
 * but we want to be able to start a shutdown/restart from other sources --
 * e.g. on Win32, from the service manager. Now the service manager can
 * call ap_start_shutdown() or ap_start_restart() as appropriate. Note that
 * these functions can also be called by the child processes, since global
 * variables are no longer used to pass on the required action to the parent.
 *
 * These should only be called from the parent process itself, since the
 * parent process will use the shutdown_pending and restart_pending variables
 * to determine whether to shutdown or restart. The child process should
 * call signal_parent() directly to tell the parent to die -- this will
 * cause neither of those variable to be set, which the parent will
 * assume means something serious is wrong (which it will be, for the
 * child to force an exit) and so do an exit anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:869 - 2

/*
 * If some module requested a shortened waiting period, only wait for
 * 2s (SECONDS_TO_LINGER). This is useful for mitigating certain
 * DoS attacks.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:953 - 2

/*
 * forcibly close a lingering connection after the lingering period has
 * expired
 * Pre-condition: cs is not in any timeout queue and not in the pollset
 * return: irrelevant (need same prototype as start_lingering_close)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1119 - 2

/* Since we have an input filter which 'clogs' the input stream,
 * like mod_ssl used to, lets just do the normal read from input
 * filters, like the Worker MPM does. Filters that need to write
 * where they would otherwise read, or read where they would
 * otherwise write, should set the sense appropriately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1447 - 2

/* already reserved a worker thread - must have hit a
 * transient error on a previous pass
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1591 - 2

/* XXX: This cancel timer event count fire before the pollset is updated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1706 - 2

/* Trash the entry if:
 * - no timeout_time was given (asked for all), or
 * - it expired (according to the queue timeout), or
 * - the system clock skewed in the past: no entry should be
 * registered above the given timeout_time (~now) + the queue
 * timeout, we won't keep any here (eg. for centuries).
 * Stop otherwise, no following entry will match thanks to the
 * single timeout per queue (entries are added to the end!).
 * This allows maintenance in O(1).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1928 - 2

/* If we didn't get a worker immediately for a keep-alive
 * request, we close the connection, so that the client can
 * re-connect to a different process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2158 - 2

/* XXX For ungraceful termination/restart, we definitely don't want to
 * wait for active connections to finish but we may want to wait
 * for idle workers to get out of the queue code and release mutexes,
 * since those mutexes are cleaned up pretty soon and some systems
 * may not react favorably (i.e., segfault) if operations are attempted
 * on cleaned-up mutexes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2543 - 2

/*stuff to do before we switch id's, so we have permissions. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2578 - 2

/* Setup worker threads */

 /* clear the storage; we may not create all our threads immediately,
 * and we want a 0 entry to indicate a thread which was not created
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2621 - 2

/* make sure the start thread has finished; signal_threads()
 * and join_workers() depend on that
 */
 /* XXX join_start_thread() won't be awakened if one of our
 * threads encounters a critical error and attempts to
 * shutdown this child
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2630 - 2

/* helps us terminate a little more quickly than the dispatch of the
 * signal thread; beats the Pipe of Death and the browsers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2655 - 2

/* see if termination was triggered while we slept */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2714 - 2

/* fork didn't succeed. There's no need to touch the scoreboard;
 * if we were trying to replace a failed child process, then
 * server_main_loop() marked its workers SERVER_DEAD, and if
 * we were trying to replace a child process that exited normally,
 * its worker_thread()s left SERVER_DEAD or SERVER_GRACEFUL behind.
 */

 /* In case system resources are maxxed out, we don't want
 Apache running away with the CPU trying to fork over and
 over and over again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3122 - 2

/* If we're doing a graceful_restart then we're going to see a lot
 * of children exiting immediately when we get into the main loop
 * below (because we just sent them AP_SIG_GRACEFUL). This happens pretty
 * rapidly... and for each one that exits we may start a new one, until
 * there are at least min_spare_threads idle threads, counting across
 * all children. But we may be permitted to start more children than
 * that, so we'll just keep track of how many we're
 * supposed to start up without the 1 second penalty between each fork.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3140 - 2

/* give the system some time to recover before kicking into
 * exponential mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3287 - 2

/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3427 - 2

/* before we detach, setup crash handlers to log to errorlog */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3756 - 2

/* Our open_logs hook function must run before the core's, or stderr
 * will be redirected to a file, and the messages won't print to the
 * console.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:126 - 2

/* Don't block if there isn't any idle worker.
 * apr_atomic_add32(x, -1) does the same as dec32(x), except
 * that it returns the previous value (unlike dec32's bool).
 *
 * XXX: why don't we consume the last idler?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:370 - 2

/**
 * Push a new socket onto the queue.
 *
 * precondition: ap_queue_info_wait_for_idler has already been called
 * to reserve an idle worker thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:497 - 2

/* we must hold one_big_mutex when setting this... otherwise,
 * we could end up setting it and waking everybody up just after a
 * would-be popper checks it but right before they block
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:31 - 2

/* one_process --- debugging mode variable; can be set from the command line
 * with the -X flag. If set, this gets you the child_main loop running
 * in the process which originally started up (no detach, no make_child),
 * which is a pretty nice debugging environment. (You'll get a SIGHUP
 * early in standalone_main; just continue through. This is the server
 * trying to kill off any child processes which it might have lying
 * around --- Apache doesn't keep track of their pids, it just sends
 * SIGHUP to the process group, ignoring it in the root process.
 * Continue through and you'll be fine.).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:115 - 2

/* Code disabled because it does nothing yet but causes a compiler warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:315 - 2

/* Since we have an input filter which 'clogs' the input stream,
 * like mod_ssl used to, lets just do the normal read from input
 * filters, like the Worker MPM does. Filters that need to write
 * where they would otherwise read, or read where they would
 * otherwise write, should set the sense appropriately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:343 - 2

/*AP_DEBUG_ASSERT(rv == APR_SUCCESS);*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:830 - 2

/*****************************************************************
 * Child process main loop.
 * The following vars are static to avoid getting clobbered by longjmp();
 * they are really private to child_main.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:889 - 2

/* needs to be done before we switch UIDs so we have permissions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1116 - 2

/* Ignore SIGINT in child. This fixes race-condition in signals
 * handling when httpd is runnning on foreground and user hits ctrl+c.
 * In this case, SIGINT is sent to all children followed by SIGTERM
 * from the main process, which interrupts the SIGINT handler and
 * leads to inconsistency.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1241 - 2

/* If we're doing a graceful_restart then we're going to see a lot
 * of children exiting immediately when we get into the main loop
 * below (because we just sent them AP_SIG_GRACEFUL). This happens pretty
 * rapidly... and for each one that exits we'll start a new one until
 * we reach at least daemons_min_free. But we may be permitted to
 * start more than that, so we'll just keep track of how many we're
 * supposed to start up without the 1 second penalty between each fork.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1482 - 2

/* Ask each child to close its listeners.
 *
 * NOTE: we use the scoreboard, because if we send SIGUSR1
 * to every process in the group, this may include CGI's,
 * piped loggers, etc. They almost certainly won't handle
 * it gracefully.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1507 - 2

/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1610 - 2

/* before we detach, setup crash handlers to log to errorlog */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1770 - 2

/* Our open_logs hook function must run before the core's, or stderr
 * will be redirected to a file, and the messages won't print to the
 * console.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:60 - 2

/* We don't need many processes,
 * they're only for redundancy in the event of a crash
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:41 - 2

/* XXXXXX move these to header file private to this MPM */

/* We don't need many processes,
 * they're only for redundancy in the event of a crash
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:122 - 2

/*
 * The max child slot ever assigned, preserved across restarts. Necessary
 * to deal with MaxRequestWorkers changes across SIGWINCH restarts. We use this
 * value to optimize routines that have to scan the entire scoreboard.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:320 - 2

/*****************************************************************
 * Child process main loop.
 * The following vars are static to avoid getting clobbered by longjmp();
 * they are really private to child_main.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:449 - 2

/* if the error is a wouldblock then maybe we were too
 quick try to pull the next request from the listen
 queue. Try a few more times then return to our idle
 listen state. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:493 - 2

/*
 * When the network layer has been shut down, there
 * is not much use in simply exiting: the parent
 * would simply re-create us (and we'd fail again).
 * Use the CHILDFATAL code to tear the server down.
 * @@@ Martin's idea for possible improvement:
 * A different approach would be to define
 * a new APEXIT_NETDOWN exit code, the reception
 * of which would make the parent shutdown all
 * children, then idle-loop until it detected that
 * the network is up again, and restart the children.
 * Ben Hyde noted that temporary ENETDOWN situations
 * occur in mobile IP.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:965 - 2

/* Wait for all of the threads to terminate before initiating the restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1054 - 2

/* ap_threads_to_start > ap_threads_limit effectively checked in
 * call to startup_workers(ap_threads_to_start) in ap_mpm_run()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:79 - 2

/* Admin can't tune ServerLimit beyond MAX_SERVER_LIMIT. We want
 * some sort of compile-time limit to help catch typos.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:109 - 2

/*
 * The max child slot ever assigned, preserved across restarts. Necessary
 * to deal with MaxRequestWorkers changes across AP_SIG_GRACEFUL restarts. We
 * use this value to optimize routines that have to scan the entire scoreboard.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:140 - 2

/* one_process --- debugging mode variable; can be set from the command line
 * with the -X flag. If set, this gets you the child_main loop running
 * in the process which originally started up (no detach, no make_child),
 * which is a pretty nice debugging environment. (You'll get a SIGHUP
 * early in standalone_main; just continue through. This is the server
 * trying to kill off any child processes which it might have lying
 * around --- Apache doesn't keep track of their pids, it just sends
 * SIGHUP to the process group, ignoring it in the root process.
 * Continue through and you'll be fine.).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:486 - 2

/*****************************************************************
 * Child process main loop.
 * The following vars are static to avoid getting clobbered by longjmp();
 * they are really private to child_main.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:547 - 2

/* needs to be done before we switch UIDs so we have permissions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:630 - 2

/*
 * Wait for an acceptable connection to arrive.
 */

 /* Lock around "e;accept"e;, if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:656 - 2

/* timeout == 10 seconds to avoid a hang at graceful restart/stop
 * caused by the closing of sockets by the signal handler
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:678 - 2

/* We can always use pdesc[0], but sockets at position N
 * could end up completely starved of attention in a very
 * busy server. Therefore, we round-robin across the
 * returned set of descriptors. While it is possible that
 * the returned set of descriptors might flip around and
 * continue to starve some sockets, we happen to know the
 * internal pollset implementation retains ordering
 * stability of the sockets. Thus, the round-robin should
 * ensure that a socket will eventually be serviced.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:825 - 2

/* Ignore SIGINT in child. This fixes race-condition in signals
 * handling when httpd is runnning on foreground and user hits ctrl+c.
 * In this case, SIGINT is sent to all children followed by SIGTERM
 * from the main process, which interrupts the SIGINT handler and
 * leads to inconsistency.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1009 - 2

/* If we're doing a graceful_restart then we're going to see a lot
 * of children exiting immediately when we get into the main loop
 * below (because we just sent them AP_SIG_GRACEFUL). This happens pretty
 * rapidly... and for each one that exits we'll start a new one until
 * we reach at least daemons_min_free. But we may be permitted to
 * start more than that, so we'll just keep track of how many we're
 * supposed to start up without the 1 second penalty between each fork.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1026 - 2

/* give the system some time to recover before kicking into
 * exponential mode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1262 - 2

/* Ask each child to close its listeners.
 *
 * NOTE: we use the scoreboard, because if we send SIGUSR1
 * to every process in the group, this may include CGI's,
 * piped loggers, etc. They almost certainly won't handle
 * it gracefully.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1287 - 2

/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1386 - 2

/* before we detach, setup crash handlers to log to errorlog */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1535 - 2

/* Our open_logs hook function must run before the core's, or stderr
 * will be redirected to a file, and the messages won't print to the
 * console.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:65 - 2

/* Although we could cut this off 'earlier', and not even invoke this
 * function, I would like to keep the functions invoked when in debug mode
 * to be as close as possible to those when not in debug... So, we just skip
 * the actual spawn itself, but go through all of the motions...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:128 - 2

/* This is kinda of hack, but rather than spawning a child process,
 * we register the normal IO handlers in the main event loop....
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:34 - 2

/* Code disabled because it does nothing yet but causes a compiler warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:54 - 2

/* Since we have an input filter which 'clogs' the input stream,
 * like mod_ssl used to, lets just do the normal read from input
 * filters, like the Worker MPM does. Filters that need to write
 * where they would otherwise read, or read where they would
 * otherwise write, should set the sense appropriately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:76 - 2

/*AP_DEBUG_ASSERT(rv == APR_SUCCESS);*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:309 - 2

/* simple_setup_privs already logged error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:63 - 2

/* __MINGW32__ */

/*
 * The Windows MPM uses a queue of completion contexts that it passes
 * between the accept threads and the worker threads. Declare the
 * functions to access the queue and the structures passed on the
 * queue in the header file to enable modules to access them
 * if necessary. The queue resides in the MPM.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:592 - 2

/* For 'data', craft a bucket for our data result
 * and pass to worker_main as context->overlapped.Pointer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:677 - 2

/* Per MSDN, cancel the inherited association of this socket
 * to the WSAEventSelect API, and restore the state corresponding
 * to apr_os_sock_make's default assumptions (really, a flaw within
 * os_sock_make and os_sock_put that it does not query).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:731 - 2

/* Yow, hit an irrecoverable error! Tell the child to die. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:947 - 2

/* A smaller stack is sufficient.
 * To convert to CreateThread, the returned handle cannot be
 * ignored, it must be closed/joined.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1009 - 2

/*
 * Wait until we have permission to start accepting connections.
 * start_mutex is used to ensure that only one child ever
 * goes into the listen/accept loop at once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1204 - 2

/* Close the listening sockets. Note, we must close the listeners
 * before closing any accept sockets pending in AcceptEx to prevent
 * memory leaks in the kernel.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1270 - 2

/* Every time we roll over to wait on the first group
 * of MAXIMUM_WAIT_OBJECTS threads, take a breather,
 * and infrequently update the error log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:654 - 2

/*
 * This error is fatal, mop up the child and move on
 * We toggle the child's exit event to cause this child
 * to quit even as it is attempting to start.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:688 - 2

/*
 * This error is fatal, mop up the child and move on
 * We toggle the child's exit event to cause this child
 * to quit even as it is attempting to start.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1031 - 2

/* We wish this was *always* a reservation, but sadly it wasn't so and
 * we couldn't break a hard limit prior to NT Kernel 5.1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1095 - 2

/* The parent is responsible for providing the
 * COMPLETE ARGUMENTS REQUIRED to the child.
 *
 * No further argument parsing is needed, but
 * for good measure we will provide a simple
 * signal string for later testing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1131 - 2

/* WARNING: There is an implict assumption here that the
 * executable resides in ServerRoot or ServerRoot\bin
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1165 - 2

/* Shortcuts; include the -w option to hold the window open on error.
 * This must not be toggled once we reset ap_real_exit_code to 0!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1283 - 2

/* Attempt to Uninstall, or stop, before
 * we can read the arguments or .conf files
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1324 - 2

/* Track the args actually entered by the user.
 * These will be used for the -k install parameters, as well as
 * for the -k start service override arguments.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1364 - 2

/* Handle the following SCM aspects in this phase:
 *
 * -k runservice [WinNT errors logged from rewrite_args]
 */

 /* Initialize shared static objects.
 * TODO: Put config related statics into an sconf structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1638 - 2

/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1649 - 2

/* We cannot initialize our listeners if we are restarting
 * (the parent process already has glomed on to them)
 * nor should we do so for service reconfiguration
 * (since the service may already be running.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1763 - 2

/* Our open_logs hook function must run before the core's, or stderr
 * will be redirected to a file, and the messages won't print to the
 * console.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:71 - 2

/* Rather than repeat this logic throughout, create an either-or wide or narrow
 * implementation because we don't actually pass strings to OpenSCManager.
 * This election is based on build time defines and runtime os version test.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:239 - 2

/* An unexpected exit? Better to error! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:984 - 2

/* assure the service is stopped before continuing
 *
 * This may be out of order... we might not be able to be
 * granted all access if the service is running anyway.
 *
 * And do we want to make it *this easy* for them
 * to uninstall their service unintentionally?
 */
 /* ap_stop_service(schService);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:289 - 2

/**
 * Push a new socket onto the queue.
 *
 * precondition: ap_queue_info_wait_for_idler has already been called
 * to reserve an idle worker thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:382 - 2

/* we must hold one_big_mutex when setting this... otherwise,
 * we could end up setting it and waking everybody up just after a
 * would-be popper checks it but right before they block
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:91 - 2

/* Admin can't tune ServerLimit beyond MAX_SERVER_LIMIT. We want
 * some sort of compile-time limit to help catch typos.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:98 - 2

/* Limit on the threads per process. Clients will be locked out if more than
 * this * server_limit are needed.
 *
 * We keep this for one reason it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:109 - 2

/* Admin can't tune ThreadLimit beyond MAX_THREAD_LIMIT. We want
 * some sort of compile-time limit to help catch typos.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:153 - 2

/*
 * The max child slot ever assigned, preserved across restarts. Necessary
 * to deal with MaxRequestWorkers changes across AP_SIG_GRACEFUL restarts.
 * We use this value to optimize routines that have to scan the entire
 * scoreboard.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:467 - 2

/*
 * ap_start_shutdown() and ap_start_restart(), below, are a first stab at
 * functions to initiate shutdown or restart without relying on signals.
 * Previously this was initiated in sig_term() and restart() signal handlers,
 * but we want to be able to start a shutdown/restart from other sources --
 * e.g. on Win32, from the service manager. Now the service manager can
 * call ap_start_shutdown() or ap_start_restart() as appropriate. Note that
 * these functions can also be called by the child processes, since global
 * variables are no longer used to pass on the required action to the parent.
 *
 * These should only be called from the parent process itself, since the
 * parent process will use the shutdown_pending and restart_pending variables
 * to determine whether to shutdown or restart. The child process should
 * call signal_parent() directly to tell the parent to die -- this will
 * cause neither of those variable to be set, which the parent will
 * assume means something serious is wrong (which it will be, for the
 * child to force an exit) and so do an exit anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:772 - 2

/* We've already decremented the idle worker count inside
 * ap_queue_info_wait_for_idler. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:799 - 2

/* apr_pollset_poll() will only return errors in catastrophic
 * circumstances. Let's try exiting gracefully, for now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:808 - 2

/* We can always use pdesc[0], but sockets at position N
 * could end up completely starved of attention in a very
 * busy server. Therefore, we round-robin across the
 * returned set of descriptors. While it is possible that
 * the returned set of descriptors might flip around and
 * continue to starve some sockets, we happen to know the
 * internal pollset implementation retains ordering
 * stability of the sockets. Thus, the round-robin should
 * ensure that a socket will eventually be serviced.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:909 - 2

/* XXX For ungraceful termination/restart, we definitely don't want to
 * wait for active connections to finish but we may want to wait
 * for idle workers to get out of the queue code and release mutexes,
 * since those mutexes are cleaned up pretty soon and some systems
 * may not react favorably (i.e., segfault) if operations are attempted
 * on cleaned-up mutexes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1251 - 2

/*stuff to do before we switch id's, so we have permissions.*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1290 - 2

/* Setup worker threads */

 /* clear the storage; we may not create all our threads immediately,
 * and we want a 0 entry to indicate a thread which was not created
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1334 - 2

/* make sure the start thread has finished; signal_threads()
 * and join_workers() depend on that
 */
 /* XXX join_start_thread() won't be awakened if one of our
 * threads encounters a critical error and attempts to
 * shutdown this child
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1366 - 2

/* see if termination was triggered while we slept */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1424 - 2

/* fork didn't succeed. There's no need to touch the scoreboard;
 * if we were trying to replace a failed child process, then
 * server_main_loop() marked its workers SERVER_DEAD, and if
 * we were trying to replace a child process that exited normally,
 * its worker_thread()s left SERVER_DEAD or SERVER_GRACEFUL behind.
 */

 /* In case system resources are maxxed out, we don't want
 Apache running away with the CPU trying to fork over and
 over and over again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1841 - 2

/* If we're doing a graceful_restart then we're going to see a lot
 * of children exiting immediately when we get into the main loop
 * below (because we just sent them AP_SIG_GRACEFUL). This happens pretty
 * rapidly... and for each one that exits we may start a new one, until
 * there are at least min_spare_threads idle threads, counting across
 * all children. But we may be permitted to start more children than
 * that, so we'll just keep track of how many we're
 * supposed to start up without the 1 second penalty between each fork.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1859 - 2

/* give the system some time to recover before kicking into
 * exponential mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2011 - 2

/* This really should be a post_config hook, but the error log is already
 * redirected by that point, so we need to do this in the open_logs phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2139 - 2

/* before we detach, setup crash handlers to log to errorlog */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2405 - 2

/* Our open_logs hook function must run before the core's, or stderr
 * will be redirected to a file, and the messages won't print to the
 * console.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:185 - 2

/* this table of actions and elapsed times tells what action is taken
 * at which elapsed time from starting the reclaim
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:312 - 2

/* Before sending the signal to the pid this function verifies that
 * the pid is a member of the current process group; either using
 * apr_proc_wait(), where waitpid() guarantees to fail for non-child
 * processes; or by using getpgid() directly, if available. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:665 - 2

/* probably some server processes bailed out already and there
 * is nobody around to call accept and clear out the kernel
 * connection queue; usually this is not worth logging
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:242 - 2

/* Something horribly wrong happened. Someone didn't block! 
 * (this also happens at the end of each keepalive connection)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:279 - 2

/* ensure this string is NUL terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:390 - 2

/* ensure this string is terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:497 - 2

/* parse_uri: break apart the uri
 * Side Effects:
 * - sets r->args to rest after '?' (or NULL if no '?')
 * - sets r->uri to request uri (without r->args part)
 * - sets r->hostname (if not set already) from request (scheme://host:port)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:783 - 2

/*
 * Read header lines until we get the empty separator line, a read error,
 * the connection closes (EOF), reach the server limit, or we timeout.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:848 - 2

/* report what we have accumulated so far before the
 * overflow (last_field) as the field with the problem
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1235 - 2

/*
 * The Expect header field was added to HTTP/1.1 after RFC 2068
 * as a means to signal when a 100 response is desired and,
 * unfortunately, to signal a poor man's mandatory extension that
 * the server must understand or return 417 Expectation Failed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1291 - 2

/*
 * A couple of other functions which initialize some of the fields of
 * a request structure, as appropriate for adjuncts of one kind or another
 * to a request in progress. Best here, rather than elsewhere, since
 * *someone* has to set the protocol-specific fields...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:281 - 2

/* don't let buggy authn module crash us in authz */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:319 - 2

/* don't let buggy authn module crash us in authz */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:623 - 2

/* Canonicalize the file path without resolving filename case or aliases
 * so we can begin by checking the cache for a recent directory walk.
 * This call will ensure we have an absolute path in the same pass.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:637 - 2

/* XXX Notice that this forces path_info to be canonical. That might
 * not be desired by all apps. However, some of those same apps likely
 * have significant security holes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:646 - 2

/* If this is not a dirent subrequest with a preconstructed
 * r->finfo value, then we can simply stat the filename to
 * save burning mega-cycles with unneeded stats - if this is
 * an exact file match. We don't care about failure... we
 * will stat by component failing this meager attempt.
 *
 * It would be nice to distinguish APR_ENOENT from other
 * types of failure, such as APR_ENOTDIR. We can do something
 * with APR_ENOENT, knowing that the path is good.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:725 - 2

/*
 * APR_INCOMPLETE is as fine as result as APR_SUCCESS as we
 * have added APR_FINFO_NAME to the wanted parameter of
 * apr_stat above. On Unix platforms this means that apr_stat
 * is always going to return APR_INCOMPLETE in the case that
 * the call to the native stat / lstat did not fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:807 - 2

/* Set aside path_info to merge back onto path_info later.
 * If r->filename is a directory, we must remerge the path_info,
 * before we continue! [Directories cannot, by definition, have
 * path info. Either the next segment is not-found, or a file.]
 *
 * r->path_info tracks the unconsumed source path.
 * r->filename tracks the path as we process it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1009 - 2

/* No htaccess in an incomplete root path,
 * nor if it's disabled
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1034 - 2

/* If we merged this same htaccess last time, reuse it...
 * this wouldn't work except that we cache the htaccess
 * sections for the lifetime of the request, so we match
 * the same conf. Good planning (no, pure luck ;)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1420 - 2

/* If we have an cache->cached location that matches r->uri,
 * and the vhost's list of locations hasn't changed, we can skip
 * rewalking the location_walk entries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1601 - 2

/* To allow broken modules to proceed, we allow missing filenames to pass.
 * We will catch it later if it's heading for the core handler.
 * directory_walk already posted an INFO note for module debugging.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1612 - 2

/* No tricks here, there are just no <Files > to parse in this context.
 * We won't destroy the cache, just in case _this_ redirect is later
 * redirected again to a context containing the same or similar <Files >.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1620 - 2

/* Get the basename .. and copy for the cache just
 * in case r->filename is munged by another module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1631 - 2

/* If we have an cache->cached file name that matches test_file,
 * and the directory's list of file sections hasn't changed, we
 * can skip rewalking the file_walk entries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1801 - 2

/* No tricks here, there are just no <If > to parse in this context.
 * We won't destroy the cache, just in case _this_ redirect is later
 * redirected again to a context containing the same or similar <If >.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1949 - 2

/* Start a clean config from this subrequest's vhost. Optimization in
 * Location/File/Dir walks from the parent request assure that if the
 * config blocks of the subrequest match the parent request, no merges
 * will actually occur (and generally a minimal number of merges are
 * required, even if the parent and subrequest aren't quite identical.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1987 - 2

/* If NULL - we are expecting to be internal_fast_redirect'ed
 * to this subrequest - or this request will never be invoked.
 * Ignore the original request filter stack entirely, and
 * drill the input and output stacks back to the connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2045 - 2

/*
 * Handle the AsyncFilter directive. We limit the filters that are
 * eligible for asynchronous handling here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2485 - 2

/* XXX: @@@: What should be done with the parsed_uri values?
 * We would be better off stripping down to the 'common' elements
 * of the path, then reassembling the URI as best as we can.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:190 - 2

/* ignore errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:72 - 2

/* A bunch of functions in util.c scan strings looking for certain characters.
 * To make that more efficient we encode a lookup table. The test_char_table
 * is generated automatically by gen_test_char.c.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:175 - 2

/* Roy owes Rob beer. */
/* Rob owes Roy dinner. */

/* These legacy comments would make a lot more sense if Roy hadn't
 * replaced the old later_than() routine with util_date.c.
 *
 * Well, okay, they still wouldn't make any sense.
 */

/* Match = 0, NoMatch = 1, Abort = -1
 * Based loosely on sections of wildmat.c by Rich Salz
 * Hmmm... shouldn't this really go component by component?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:237 - 2

/* We actually compare the canonical root to this root, (but we don't
 * waste time checking the case), since every use of this function in
 * httpd-2.1 tests if the path is 'proper', meaning we've already passed
 * it through apr_filepath_merge, or we haven't.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:363 - 2

/* This function substitutes for $0-$9, filling in regular expression
 * submatches. Pass it the same nmatch and pmatch arguments that you
 * passed ap_regexec(). pmatch should not be greater than the maximum number
 * of subexpressions - i.e. one more than the re_nsub member of ap_regex_t.
 *
 * nmatch must be <=AP_MAX_REG_MATCH (10).
 *
 * input should be the string with the $-expressions, source should be the
 * string that was matched against.
 *
 * It returns the substituted string, or NULL if a vbuf is used.
 * On errors, returns the orig string.
 *
 * Parts of this code are based on Henry Spencer's regsub(), from his
 * AT&T V8 regexp package.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1905 - 2

/*
 * escape_path_segment() escapes a path segment, as defined in RFC 1808. This
 * routine is (should be) OS independent.
 *
 * os_escape_path() converts an OS path to a URL, in an OS dependent way. In all
 * cases if a ':' occurs before the first '/' in the URL, the URL should be
 * prefixed with "e;./"e; (or the ':' escaped). In the case of Unix, this means
 * leaving '/' alone, but otherwise doing what escape_path_segment() does. For
 * efficiency reasons, we don't use escape_path_segment(), which is provided for
 * reference. Again, RFC 1808 is where this stuff is defined.
 *
 * If partial is set, os_escape_path() assumes that the path will be appended to
 * something with a '/' in it (and thus does not prefix "e;./"e;).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2382 - 2

/* we want to downcase the type/subtype for comparison purposes
 * but nothing else because ;parameter=foo values are case sensitive.
 * XXX: in truth we want to downcase parameter names... but really,
 * apache has never handled parameters and such correctly. You
 * also need to compress spaces and such to be able to compare
 * properly. -djg
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:410 - 2

/* generic bison error message (XXX: usually not very useful, should be axed) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1687 - 2

/* maybe log an error if this goes wrong? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:591 - 2

/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
Performed when YYTABLE doesn't specify something else to do. Zero
 means the default is an error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1165 - 2

/* Avoid sprintf, as that infringes on the user's name space.
 Don't have undefined behavior even if the translation
 produced a string with the wrong number of "e;%s"e;s. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1277 - 2

/* Number of tokens to shift before error messages enabled. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1416 - 2

/* Do appropriate processing given the current state. Read a
 lookahead token if we need one and don't already have one. */

 /* First try to decide what to do without reference to lookahead token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1444 - 2

/* If the proper action on seeing token YYTOKEN is to reduce or to
 detect an error, take that action. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1458 - 2

/* Count tokens shifted since error; after three, turn off error
 status. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:115 - 2

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index. If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:139 - 2

/* Enter a start condition. This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:259 - 2

"/* When an EOF's been seen but there's still some text to process
	* then we mark the buffer as YY_EOF_PENDING, to indicate that we
	* shouldn't try reading from the input source any more. We might
	* still have a bunch of tokens to match, though, because of
	* possible backing-up.
	*
	* When we actually see the EOF, we change the status to "e;new"e;
	* (via ap_expr_yyrestart()), so that the user can continue scanning by
	* just pointing yyin at a new input file.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:545 - 2

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:696 - 2

/* Accessor methods to globals.
 These are made visible to non-reentrant scanners for convenience. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1553 - 2

"/* We're scanning a new file or input source. It's
	* possible that this happened because the user
	* just pointed yyin at a new source and called
	* ap_expr_yylex(). If so, then we have to assure
	* consistency between YY_CURRENT_BUFFER and our
	* globals. Here is the right place to do so, because
	* this is the first action (other than possibly a
	* back-up) that will match for the new input source.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2101 - 2

"/* We always need two end-of-buffer characters. The first causes
	* a transition to the end-of-buffer state. The second causes
	* a jam in that state.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2504 - 2

/* User-visible API */

/* ap_expr_yylex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2601 - 2

/* ap_expr_yylex_destroy is for both reentrant and non-reentrant scanners. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2621 - 2

/* Reset the globals. This is important in a non-reentrant scanner so the next time
 * ap_expr_yylex() is called, initialization will occur. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2662 - 2

"/* The cast to (char *) in the following accommodates both
	* implementations that use char* generic pointers, and those
	* that use void* generic pointers. It works with the latter
	* because both ANSI C and C++ allow castless assignment from
	* any pointer type to void*, and deal with argument conversions
	* as though doing an assignment.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:906 - 2

/*
 * Handle the AsyncFilter directive. We limit the filters that are
 * eligible for asynchronous handling here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:963 - 2

/* Before invocation of the flush callback, apr_brigade_write et
 * al may place transient buckets in the brigade, which will fall
 * out of scope after returning. Empty the brigade here, to avoid
 * issues with leaving such buckets in the brigade if some filter
 * fails and leaves a non-empty brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:63 - 2

/* Table of error strings corresponding to POSIX error codes; must be
 * kept in synch with include/ap_regex.h's AP_REG_E* definitions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:188 - 2

/* If this blows up on you, see the notes in the header/apidoc
 * rx->match is a pointer and it's your responsibility to ensure
 * it hasn't gone out-of-scope since the last ap_rxplus_exec
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:45 - 2

/*
 * Various utility functions which are common to a whole lot of
 * script-type extensions mechanisms, and might as well be gathered
 * in one place (if only to avoid creating inter-module dependancies
 * where there don't have to be).
 */

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:178 - 2

/* A few headers are special cased --- Authorization to prevent
 * rogue scripts from capturing passwords; content-type and -length
 * for no particular reason.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:232 - 2

/* HPUX PARISC 2.0W knows both, otherwise redundancy is harmless */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:380 - 2

/* Note that the code below special-cases scripts run from includes,
 * because it "e;knows"e; that the sub_request has been hacked to have the
 * args and path_info of the original request, and not any that may have
 * come with the script URI in the include command. Ugh.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:31 - 2

/* Cache for exploded values of recent timestamps
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:138 - 2

/* Apache will supply a default error, plus the error log above. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:322 - 2

/* This hashing function is designed to get good distribution in the cases
 * where the server is handling entire "e;networks"e; of servers. i.e. a
 * whack of /24s. This is probably the most common configuration for
 * ISPs with large virtual servers.
 *
 * NOTE: This function is symmetric (i.e. collapses all 4 octets
 * into one), so machine byte order (big/little endianness) does not matter.
 *
 * Hash function provided by David Hankins.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1164 - 2

/*
 * If we have both hostname from an absoluteURI and a Host header,
 * we must ignore the Host header (RFC 2616 5.2).
 * To enforce this, we reset the Host header to the value from the
 * request line.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:290 - 2

/* optional arbitrary headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:923 - 2

/*
 * XXX: what is better; this hideous cast of the compradre function; or
 * the four warnings during compile ? dirkx just does not know and
 * hates both/
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1502 - 2

/* terminate for benefit of strstr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1705 - 2

/* Header overridden, no need to add, as it is already in hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1713 - 2

/* Header overridden, no need to add, as it is already in hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1718 - 2

/*\r\n"e;, NULL);
 }
 else {
 /* Header overridden, no need to add, as it is already in hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1848 - 2

/*
 * Notes: APR_POLLHUP is set after FIN is received on some
 * systems, so treat that like APR_POLLIN so that we try to read
 * again.
 *
 * Some systems return APR_POLLERR with APR_POLLHUP. We need to
 * call read_connection() for APR_POLLHUP, so check for
 * APR_POLLHUP first so that a closed connection isn't treated
 * like an I/O error. If it is, we never figure out that the
 * connection is done and we loop here endlessly calling
 * apr_poll().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/fcgistarter.c:168 - 2

/* Ok, so we need a file that has file descriptor 0 (which
 * FastCGI wants), but points to our socket. This isn't really
 * possible in APR, so we cheat a bit. I have no idea how to
 * do this on a non-unix platform, so for now this is platform
 * specific. Ick.
 *
 * Note that this has to happen post-detach, otherwise fd 0
 * gets closed during apr_proc_detach and it's all for nothing.
 *
 * Unfortunately, doing this post detach means we have no way
 * to let anyone know if there's a problem at this point :( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:115 - 2

"/* { "e;output-host"e;, 'h', 1,
 "e; --output-host, -h <hostname>\tHostname to write demuxed connections to."e; },*/
 /* {
 "e;speed"e;,
 's',
 1,
 "e; --speed, -s <factor>\tSpeed up or slow down demuxing\n\t\t\t\tby the given factor."e; },*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:674 - 2

/* what may happen here is that apache did create a file which
 * we did detect but then does delete the file before we can
 * get file information, so if we don't get any file information
 * we will ignore the file in this case
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:170 - 2

/* Check for our UTC offset before using it, since it might
 * change if there's a switch between standard and daylight
 * savings time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:632 - 2

/* specific error message already issued */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:635 - 2

/*
 * After the initial flags we need 2 to 4 arguments,
 * the file name, either the rotation interval time or size
 * or both of them, and optionally the UTC offset.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:231 - 2

/* While cleaning the environment, the environment should be clean.
 * (e.g. malloc() may get the name of a file for writing debugging info.
 * Bad news if MALLOC_DEBUG_FILE is set to /etc/passwd. Sprintf() may be
 * susceptible to bad locale settings....)
 * (from PR 2790)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:359 - 2

/*
 * If there are a proper number of arguments, set
 * all of them to variables. Otherwise, error out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:513 - 2

/*
 * Change UID/GID here so that the following tests work over NFS.
 *
 * Initialize the group access list for the target user,
 * and setgid() to the target group. If unsuccessful, error out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:686 - 2

/*NEED_HASHBANG_EMUL*/

 /*
 * (I can't help myself...sorry.)
 *
 * Uh oh. Still here. Where's the kaboom? There was supposed to be an
 * EARTH-shattering kaboom!
 *
 * Oh well, log the failure and error out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1022 - 2

/* Dirty hack to bring the window to the foreground */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1341 - 2

/* Dirty hack to bring the window to the foreground */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/wintty.c:263 - 2

/* Instantly, upon creating the new process, we will close our
 * copies of the handles so our parent isn't confused when the
 * child closes their copy of the handle. Without this action,
 * we would hold a copy of the handle, and the parent would not
 * receive their EOF notification.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:93 - 2

/* pid not actually interesting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:98 - 2

/* pid not actually interesting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:193 - 1

/* no slash, didn't look like an IP address => must be a host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_allowmethods.c:25 - 1

/**
 * This module makes it easy to restrict what HTTP methods can be ran against
 * a server.
 *
 * It provides one comand:
 * AllowMethods
 * This command takes a list of HTTP methods to allow.
 *
 * The most common configuration should be like this:
 * <Directory />
 * AllowMethods GET HEAD OPTIONS
 * </Directory>
 * <Directory /special/cgi-bin>
 * AllowMethods GET HEAD OPTIONS POST
 * </Directory>
 * Non-matching methods will be returned a status 405 (method not allowed)
 *
 * To allow all methods, and effectively turn off mod_allowmethods, use:
 * AllowMethods reset
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:48 - 1

/* this is user if authorizer returns
 * success and a user expression yields
 * empty string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:54 - 1

/* fail if client didn't send credentials? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:58 - 1

/* If an "e;authnz"e; provider successfully authenticates, record
 * the provider name here for checking during authz.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:150 - 1

/* Drop the variables CONTENT_LENGTH, PATH_INFO, PATH_TRANSLATED,
 * SCRIPT_NAME and most Hop-By-Hop headers - EXCEPT we will pass
 * PROXY_AUTH to allow CGI to perform proxy auth for httpd
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:327 - 1

/* our limit per record, which could have been up
 * to AP_FCGI_MAX_CONTENT_LEN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:482 - 1

/* unless we actually read something */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:487 - 1

/* Keep reading FastCGI records until
 * we get AP_FCGI_END_REQUEST (done)
 * or an error occurs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:547 - 1

/* Response headers and optional body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:583 - 1

/* should not occur for these bucket types;
 * does not indicate overflow
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:612 - 1

/* If we didn't read all the data go back and get the
 * rest of it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:644 - 1

/* Leave on above switch's inner error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:712 - 1

/* unless we actually read something */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:876 - 1

/* unexpected error, not even an empty string was returned */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1097 - 1

/* at present, everything needs an argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1340 - 1

/* currently we just have a single directive applicable to a 
 * directory, so if it is set then grab all fields from fcgi_dir_conf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:58 - 1

/* Filter to further limit the search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:62 - 1

/* If true, will return errors when bind fails */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:90 - 1

/* if this module successfully authenticates, the basic auth password, else null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:189 - 1

/*
 * Build the search filter, or at least as much of the search filter that
 * will fit in the buffer, and return APR_EGENERAL if it won't fit, otherwise
 * APR_SUCCESS.
 *
 * The search filter consists of the filter provided with the URL,
 * combined with a filter made up of the attribute provided with the URL,
 * and the actual username passed by the HTTP client. For example, assume
 * that the LDAP URL is
 *
 * ldap://ldap.airius.com/ou=People, o=Airius?uid??(posixid=*)
 *
 * Further, assume that the userid passed by the client was `userj'. The
 * search filter will be (&(posixid=*)(uid=userj)).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:250 - 1

/*
 * Now add the client-supplied username to the filter, ensuring that any
 * LDAP filter metachars are escaped.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:427 - 1

/** 
 * Some LDAP servers restrict who can search or compare, and the hard-coded ID
 * might be good for the DN lookup but not for later operations. 
 * Requires the per-request config be set to ensure the connection is cleaned up
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:518 - 1

/*
 if (!sec->enabled) {
 return AUTH_USER_NOT_FOUND;
 }
*/

 /*
 * Basic sanity checks before any LDAP operations even happen.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:608 - 1

/* talking to a primitive LDAP server (like RACF-over-LDAP) that doesn't return specific errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:627 - 1

/* At least Sun Directory Server sends this if a user is
 * locked. This is not covered by LDAP_SECURITY_ERROR.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:685 - 1

/* Search failed, log error and return failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:793 - 1

/*
 * Now break apart the line and compare each word on it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1462 - 1

/*
 * Use the ldap url parsing routines to break up the ldap url into
 * host and port.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1836 - 1

/*
 authn_ldap_config_t *sec = (authn_ldap_config_t *)
 ap_get_module_config(s->module_config,
 &authnz_ldap_module);

 if (sec->secure)
 {
 if (!util_ldap_ssl_supported(s))
 {
 ap_log_error(APLOG_MARK, APLOG_CRIT, 0, s,
 "e;LDAP: SSL connections (ldaps://) not supported by utilLDAP"e;);
 return(!OK);
 }
 }
 */

 /* make sure that mod_ldap (util_ldap) is loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:142 - 1

/* Ignore if we are not configured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:147 - 1

/* Do we allow an empty userID and/or is it the magic one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:210 - 1

/* dir merger ensure strictness */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:246 - 1

/* Look up the alias provider to make sure that it hasn't already been registered. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:255 - 1

/* walk the subsection configuration to get the per_dir config that we will
 merge just before the real provider is called. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:294 - 1

/*
 * Load an authorisation realm into our location configuration, applying the
 * usual rules that apply to realms.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:392 - 1

/* if there isn't an AuthType, then assume that no authentication
 is required so return OK */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:398 - 1

/* there's an AuthType configured, but no authentication module
 * loaded to support it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:42 - 1

/* optional function - look it up once in post_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:162 - 1

/* string length of "e;AUTHENTICATE_"e;, excluding the trailing NIL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:258 - 1

/* string length of "e;AUTHENTICATE_"e;, excluding the trailing NIL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:42 - 1

/* FIXME:
 * I think the cache and mutex should be global
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:93 - 1

/* don't waste the overhead of creating mutex & cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:142 - 1

/* don't waste the overhead of creating mutex & cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:161 - 1

/* Argument is of form 'name:args' or just 'name'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:249 - 1

/* global stuff: cache and mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:282 - 1

/* any other context value is literal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:303 - 1

/* first check whether we're cacheing for this module */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:198 - 1

/* Look up the provider alias in the alias list.
 * Get the dir_config and call ap_Merge_per_dir_configs()
 * Call the real provider->check_authorization() function
 * return the result of the above function call
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:290 - 1

/* Walk the subsection configuration to get the per_dir config that we will
 * merge just before the real provider is called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:398 - 1

/* lookup and cache the actual provider now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:412 - 1

/* if the provider doesn't provide the appropriate function, reject it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:604 - 1

/* avoid one level of recursion when De Morgan permits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:719 - 1

/* check to make sure that the request method requires authorization */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:798 - 1

/* For negated directives, if the original result was denied
 * then the new result is neutral since we can not grant
 * access simply because authorization was not rejected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:823 - 1

/* there's an AuthType configured, but no authorization
 * directives applied to support it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:987 - 1

/* *parsed_require_line is already NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:84 - 1

/* We do something strange with the group file. If the group file
 * contains any : we assume the format is
 * key=username value="e;:"e;groupname ["e;:"e;anything here is ignored]
 * otherwise we now (0.8.14+) assume that the format is
 * key=username value=groupname
 * The first allows the password and group files to be the same
 * physical DBM file; key=username value=password"e;:"e;groupname["e;:"e;anything]
 *
 * mark@telescope.org, 22Sep95
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:119 - 1

/* we already have parsed this subnet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:159 - 1

/* authz_core will log the require line and the result at DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:218 - 1

/* authz_core will log the require line and the result at DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:105 - 1

/* this user is authorized */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:112 - 1

/* file-group only figures out the file's group and lets
 * other modules do the actual authorization (against a group file/db).
 * Thus, these modules have to hook themselves after
 * mod_authz_owner and of course recognize 'file-group', too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:96 - 1

/* lookup and cache the actual provider now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:110 - 1

/* if it doesn't provide the appropriate function, reject it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:154 - 1

/* if password is unspecified, set it to the fixed string "e;password"e; to
 * be compatible with the behaviour of mod_ssl.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:254 - 1

/* Get the appropriate header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:265 - 1

/* Client tried to authenticate using wrong auth scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:288 - 1

/* Determine user ID, and check if it really is that user, for HTTP
 * basic authentication...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:308 - 1

/* We need an authentication realm. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:132 - 1

/* struct to hold a parsed Authorization header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:169 - 1

/* client-list, opaque, and one-time-nonce stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:273 - 1

/* no lock, we'll do the locking ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:302 - 1

/* setup opaque */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:496 - 1

/* lookup and cache the actual provider now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:510 - 1

/* if it doesn't provide the appropriate function, reject it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:787 - 1

/* garbage collect all last entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:817 - 1

/*
 * Add a new client to the list. Returns the entry if successful, NULL
 * otherwise. This triggers the garbage collection if memory is low.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1035 - 1

/*
 * Nonce generation code
 */

/* The hash part of the nonce is a SHA-1 hash of the time, realm, server host
 * and port, opaque, and our secret.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1096 - 1

/*
 * Opaque and hash-table management
 */

/*
 * Generate a new client entry, add it to the list, and return the
 * entry. Returns NULL if failed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1161 - 1

/* Setup opaque */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1170 - 1

/* opaque not needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1268 - 1

/*
 * Authorization header verification code
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1443 - 1

/* else (lifetime < 0) => never expires */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1793 - 1

/*
 * Authorization-Info header code
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1833 - 1

/* else nonce never expires, hence no nextnonce */


 /* do rfc-2069 digest
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1863 - 1

/* assemble Authentication-Info header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:154 - 1

/* lookup and cache the actual provider now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:170 - 1

/* if it doesn't provide the appropriate function, reject it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:451 - 1

/* have we isolated the user and pw before? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:488 - 1

/* have we isolated the user and pw before? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:579 - 1

/**
 * Isolate the username and password in a POSTed form with the
 * username in the "e;username"e; field, and the password in the
 * "e;password"e; field.
 *
 * If either the username or the password is missing, this
 * function will return HTTP_UNAUTHORIZED.
 *
 * The location field is considered optional, and will be returned
 * if present.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:614 - 1

/* have we isolated the user and pw before? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:701 - 1

/*
 * save away the username, password, mimetype and method, so that they
 * are available should the auth need to be run again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:753 - 1

/**
 * Given a username and password (extracted externally from a cookie), run
 * the authnz hooks to determine whether this request is authorized.
 *
 * Return an HTTP code.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:859 - 1

/* fake the basic authentication header if configured to do so */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:899 - 1

/*
 * XSS security warning: using cookies to store private data only works
 * when the administrator has full control over the source website. When
 * in forward-proxy mode, websites are public by definition, and so can
 * never be secure. Abort the auth attempt in this case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:912 - 1

/* We need an authentication realm. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:951 - 1

/*
 * If we reach this point, the request should fail with access denied,
 * except for one potential scenario:
 *
 * If the request is a POST, and the posted form contains user defined fields
 * for a username and a password, and the username and password are correct,
 * then return the response obtained by a GET to this URL.
 *
 * If an additional user defined location field is present in the form,
 * instead of a GET of the current URL, redirect the browser to the new
 * location.
 *
 * As a further option, if the user defined fields for the type of request,
 * the mime type of the body of the request, and the body of the request
 * itself are present, replace this request with a new request of the given
 * type and with the given body.
 *
 * Otherwise access is denied.
 *
 * Reading the body requires some song and dance, because the input filters
 * are not yet configured. To work around this problem, we create a
 * subrequest and use that to create a sane filter stack we can read the
 * form from.
 *
 * The main request is then capped with a kept_body input filter, which has
 * the effect of guaranteeing the input stack can be safely read a second time.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:987 - 1

/* run the insert_filters hook on the subrequest to ensure a body read can
 * be done properly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1003 - 1

/* we cannot clean up rr at this point, as memory allocated to rr is
 * referenced from the main request. It will be cleaned up when the
 * main request is cleaned up.
 */

 /* insert the kept_body filter on the main request to guarantee the
 * input filter stack cannot be read a second time, optionally inject
 * a saved body if one was specified in the login form.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1021 - 1

/* did the form ask to change the method? if so, switch in the redirect handler
 * to relaunch this request as the subrequest with the new method. If the
 * form didn't specify a method, the default value GET will force a redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1082 - 1

/*
 * potential security issue: if we return a login to the browser, we must
 * send a no-store to make sure a well behaved browser will not try and
 * send the login details a second time if the back button is pressed.
 *
 * if the user has full control over the backend, the
 * AuthCookieDisableNoStore can be used to turn this off.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1204 - 1

/* remove the username and password, effectively logging the user out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1233 - 1

/**
 * Handle a redirect attempt.
 *
 * If during a form login, the method, mimetype and request body are
 * specified, this handler will ensure that this request is included
 * as an internal redirect.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1271 - 1

/* return the underlying error, or OK on success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:46 - 1

/* overrides ok */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:49 - 1

/* overrides ok */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:442 - 1

/* APR_HOOK_LAST because we need to lock the default_parsers hash
 * (to prevent further modifications) before the server forks.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/handle.c:41 - 1

/* ap_add_input_filter does not guarantee cfg->f == r->input_filters,
 * so we reposition the new filter there as necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/handle.c:387 - 1

/* init vs incomplete state? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:111 - 1

/* Handle the complete file name, we DON'T want to follow suexec, since
 * an unrooted command is as predictable as shooting craps in Win32.
 *
 * Notice that unlike most mime extension parsing, we have to use the
 * win32 parsing here, therefore the final extension is the only one
 * we will consider
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:127 - 1

/* truncate any arguments from the cmd */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:139 - 1

/* eliminate the '.' if there is one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:163 - 1

/* Tokenize the full command string into its arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:166 - 1

/* The first argument should be the executible */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:71 - 1

/* The ssl_var_lookup() optional function retrieves SSL environment
 * variables. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:78 - 1

/* An optional function which returns non-zero if the given connection
 * is using SSL/TLS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:625 - 1

/* slr is somewhere in between or at the end*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:780 - 1

/* If we find a pre-existing listen socket and it has already been
 created, then no neeed to go any further, just reuse it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1163 - 1

/* Just remove the filter, if it doesn't work the first time, it won't
 * work at all for this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1169 - 1

/*
 ap_log_error(APLOG_MARK, APLOG_ERR, 0, r->server, APLOGNO(02131)
 "e;Unable to get upgradeable socket handle"e;);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:72 - 1

/* inherit the mode if it's not set; the rest won't be inherited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:94 - 1

/* Hmmm, should CGI default to secure too ? */
/*
 CR_CHECK(priv_delset(cfg->child_priv, PRIV_FILE_LINK_ANY));
 CR_CHECK(priv_delset(cfg->child_priv, PRIV_PROC_INFO));
 CR_CHECK(priv_delset(cfg->child_priv, PRIV_PROC_SESSION));
 CR_CHECK(priv_delset(cfg->child_priv, PRIV_PROC_FORK));
 CR_CHECK(priv_delset(cfg->child_priv, PRIV_PROC_EXEC));
*/

 /* weÂ´ll use 0 for unset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:142 - 1

/* If we forked a child, we dropped privilege to revert, so
 * all we can do now is exit
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:206 - 1

/* Our fate was already determined for the vhost -
 * nothing to do per-directory
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:221 - 1

/* FIXME - does the child need to run synchronously?
 * esp. if we enable mod_privileges with threaded MPMs?
 * We do need at least to ensure r outlives the child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:69 - 1

/*
 * TODO: clean up the separation between this code
 * and its data structures and unixd.c, as shown
 * by the fact that we include unixd.h. Create
 * mod_unixd.h which does what we need and
 * clean up unixd.h for what it no longer needs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:112 - 1

/* OS/2 doesn't support groups. */
 /*
 * Set the GID before initgroups(), since on some platforms
 * setgid() is known to zap the group list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:291 - 1

/* If suexec is using capabilities, don't test for the setuid bit. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:155 - 1

/* Load the extention as cached (with null request_rec) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:192 - 1

/**********************************************************
 *
 * ISAPI Module Cache handling section
 *
 **********************************************************/

/* Our isapi global config values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:304 - 1

/* TerminateExtension() is an optional interface */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:340 - 1

/* If we find this lock exists, use a set-aside copy of gainlock
 * to avoid race conditions on NULLing the in_progress variable
 * when the load has completed. Release the global isapi hash
 * lock so other requests can proceed, then rdlock for completion
 * of loading our desired dll or wrlock if we would like to retry
 * loading the dll (because last_load_rv failed and retry is up.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:349 - 1

/* gainlock is NULLed after the module loads successfully.
 * This free-threaded module can be used without any locking.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:409 - 1

/* We haven't hit timeup on retry, let's grab the last_rv
 * within the hash mutex before unlocking.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:426 - 1

/* A mutex that exists only long enough to attempt to
 * load this isapi dll, the release this module to all
 * other takers that came along during the one-time
 * load process. Short lifetime for this lock would
 * be great, however, using r->pool is nasty if those
 * blocked on the lock haven't all unlocked before we
 * attempt to destroy. A nastier race condition than
 * I want to deal with at this moment...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:459 - 1

/* We must leave a rwlock around for requests to retry
 * loading this dll after timeup... since we were in
 * the setup code we had avoided creating this lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:500 - 1

/* crlf delimited, colon split, comma separated and
 * null terminated list of HTTP_ vars
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:538 - 1

/* crlf delimited, colon split, comma separated and
 * null terminated list of the raw request header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:703 - 1

/* Whoops... not NULL terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:727 - 1

/* This is an immediate error result from the parser
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:753 - 1

/* Well... either there is no dwHttpStatusCode or it's HTTP_OK.
 * In any case, we don't have a good status to return yet...
 * Perhaps the one we came in with will be better. Let's use it,
 * if we were given one (note this is a pendantic case, it would
 * normally be covered above unless the scan script code unset
 * the r->status). Should there be a check here as to whether
 * we are setting a valid response code?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:766 - 1

/* None of dwHttpStatusCode, the parser's r->status nor the
 * old value of r->status were helpful, and nothing was decoded
 * from Status: string passed to us. Let's just say HTTP_OK
 * and get the data out, this was the isapi dev's oversight.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1328 - 1

/* Ignore shi->fKeepConn - we don't want the advise
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1373 - 1

/* Added after ISAPI 4.0 */
 /* Returns True if client is connected c.f. MSKB Q188346
 * assuming the identical return mechanism as HSE_REQ_IS_KEEP_CONN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1380 - 1

/* Added after ISAPI 4.0 */
 /* Undocumented - defined by the Microsoft Jan '00 Platform SDK
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1420 - 1

/* Hang on to the isapi-isa for compatibility with older docs
 * (wtf did '-isa' mean in the first place?) but introduce
 * a newer and clearer "e;isapi-handler"e; name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1429 - 1

/* Use similar restrictions as CGIs
 *
 * If this fails, it's pointless to load the isapi dll.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1554 - 1

/* To emulate async behavior...
 *
 * We create a cid->completed mutex and lock on it so that the
 * app can believe is it running async.
 *
 * This request completes upon a notification through
 * ServerSupportFunction(HSE_REQ_DONE_WITH_SESSION), which
 * unlocks this mutex. If the HttpExtensionProc() returns
 * HSE_STATUS_PENDING, we will attempt to gain this lock again
 * which may *only* happen once HSE_REQ_DONE_WITH_SESSION has
 * unlocked the mutex.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1594 - 1

/* Ignore the keepalive stuff; Apache handles it just fine without
 * the ISAPI Handler's "e;advice"e;.
 * Per Microsoft: "e;In IIS versions 4.0 and later, the return
 * values HSE_STATUS_SUCCESS and HSE_STATUS_SUCCESS_AND_KEEP_CONN
 * are functionally identical: Keep-Alive connections are
 * maintained, if supported by the client."e;
 * ... so we were pat all this time
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1605 - 1

/* emulating async behavior...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:97 - 1

/* XXX: prep_string should translate the string into unicode,
 * such that it is compatible with whatever codepage the client
 * will read characters 80-ff. For the moment, use the unicode
 * values 0080-00ff. This isn't trivial, since the code page
 * varies between msdos and Windows applications.
 * For subsystem 2 [GUI] the default is the system Ansi CP.
 * For subsystem 3 [CLI] the default is the system OEM CP.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:339 - 1

/* Term that arg, already pushed on args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:386 - 1

/* We have to consider that the client gets any QUERY_ARGS
 * without any charset interpretation, use prep_string to
 * create a string of the literal QUERY_ARGS bytes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:395 - 1

/* Handle the complete file name, we DON'T want to follow suexec, since
 * an unrooted command is as predictable as shooting craps in Win32.
 * Notice that unlike most mime extension parsing, we have to use the
 * win32 parsing here, therefore the final extension is the only one
 * we will consider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:403 - 1

/* If the file has an extension and it is not .com and not .exe and
 * we've been instructed to search the registry, then do so.
 * Let apr_proc_create do all of the .bat/.cmd dirty work.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:437 - 1

/* Need to peek into the file figure out what it really is...
 * ### aught to go back and build a cache for this one of these days.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:476 - 1

/* Assuming file is a script since it starts with a shebang */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:520 - 1

/* XXX: Must fix r->subprocess_env to follow utf-8 conventions from
 * the client's octets so that win32 apr_proc_create is happy.
 * The -best- way is to determine if the .exe is unicode aware
 * (using 0x0080-0x00ff) or is linked as a command or windows
 * application (following the OEM or Ansi code page in effect.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:28 - 1

/* -------------------------------------------------------------- */

/*
 * delete all URL entities from the cache
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:41 - 1

/* Remove the stale cache entry if present. If not, we're
 * being called from outside of a request; remove the
 * non-stale handle.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:52 - 1

/* for each specified cache type, delete the URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:95 - 1

/* for each specified cache type, delete the URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:120 - 1

/* any stored Warning headers with warn-code 1xx (see section
 * 14.46) MUST be deleted from the cache entry and the forwarded
 * response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:133 - 1

/* any stored Warning headers with warn-code 2xx MUST be retained
 * in the cache entry and the forwarded response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:242 - 1

/* go through the cache types till we get a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:255 - 1

/* try again with next cache type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:285 - 1

/*
 * is this header in the request and the header in the cached
 * request identical? If not, we give up and do a straight get
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:309 - 1

/* try again with next cache type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:336 - 1

/* Is our cached response fresh enough? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:340 - 1

/* Cache-Control: only-if-cached and revalidation required, try
 * the next provider
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:344 - 1

/* try again with next cache type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:361 - 1

/* Remove existing conditionals that might conflict with ours */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:372 - 1

/* If we have a cached etag and/or Last-Modified add in
 * our own conditionals.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:407 - 1

/* try again with next cache type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:412 - 1

/* oo-er! an error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:440 - 1

/*
 * We have been here before during the processing of this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:487 - 1

/* const work-around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:508 - 1

/* const work-around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:520 - 1

/*
 * If this is a proxy request, but not a reverse proxy request (see comment
 * above why these cases must be handled in the same manner), copy the
 * URI's port-string (which may be a service name). If the URI contains
 * no port-string, use apr-util's notion of the default port for that
 * scheme - if available. Otherwise use the port-number of the current
 * server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:561 - 1

/*
 * Check if we need to ignore session identifiers in the URL and do so
 * if needed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:603 - 1

/*
 * In order to avoid subkey matching (PR 48401) prepend
 * identifier with a '&' and append a '='
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:645 - 1

/* Key format is a URI, optionally without the query-string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:738 - 1

/* go through the cache types */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:113 - 1

/* For HTTP caching purposes, an empty (NULL) path is equivalent to
 * a single "e;/"e; path. RFCs 3986/2396
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:139 - 1

/* Log an error! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:192 - 1

/* loop through all the per directory cacheenable entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:199 - 1

/* loop through all the global cacheenable entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:223 - 1

/* Perform an HTTP/1.1 age calculation. (RFC2616 13.2.3) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:275 - 1

/* no locks configured, leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:279 - 1

/* lock already obtained earlier? if so, success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:288 - 1

/*
 * Try to use the key of a possible open but stale cache
 * entry if we have one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:311 - 1

/* lock files represent discrete just-went-stale URLs "e;in flight"e;, so
 * we support a simple two level directory structure, more is overkill.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:378 - 1

/* no locks configured, leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:417 - 1

/* lock files represent discrete just-went-stale URLs "e;in flight"e;, so
 * we support a simple two level directory structure, more is overkill.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:500 - 1

/* We're not allowed to serve a cached copy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:573 - 1

/* Treat as stale, causing revalidation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:584 - 1

/* These come from the cached entity. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:709 - 1

/* Make sure we don't stomp on a previous warning, and don't dup
 * a 113 marning that is already present. Also, make sure to add
 * the new warning to the correct *headers_out location.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:719 - 1

/* Cache object is fresh (enough) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:762 - 1

/* lock already exists, return stale data anyway, with a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:779 - 1

/* some other error occurred, just treat the object as stale */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:906 - 1

/**
 * String tokenizer that ignores separator characters within quoted strings
 * and escaped characters, as per RFC2616 section 2.2.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:923 - 1

/* skip characters in sep (will terminate at '\0') */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:978 - 1

/**
 * Parse the Cache-Control and Pragma headers in one go, marking
 * which tokens appear within the header. Populate the structure
 * passed in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1116 - 1

/**
 * Parse the Cache-Control, identifying and removing headers that
 * exist as tokens after the no-cache and private tokens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1172 - 1

/*
 * Create a new table consisting of those elements from an
 * headers table that are allowed to be stored in a cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1220 - 1

/*
 * Create a new table consisting of those elements from an input
 * headers table that are allowed to be stored in a cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:103 - 1

/*
 * Which cache module (if any) should handle this request?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:118 - 1

/*
 * Are we allowed to serve cached info at all?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:128 - 1

/* First things first - does the request allow us to return
 * cached information at all? If not, just decline the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:135 - 1

/* Are we PUT/POST/DELETE? If so, prepare to invalidate the cached entities.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:237 - 1

/* cache_select() may have added conditional headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:255 - 1

/* error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:277 - 1

/* If we are a lookup, we have to return DECLINED as we have no
 * way of knowing if we will be able to serve the content.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:284 - 1

/* Return cached status. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:300 - 1

/*
 * Add cache_out filter to serve this request. Choose
 * the correct filter by checking if we are a subrequest
 * or not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:408 - 1

/* only run if the quick handler is disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:413 - 1

/*
 * Which cache module (if any) should handle this request?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:428 - 1

/*
 * Are we allowed to serve cached info at all?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:435 - 1

/* Are we PUT/POST/DELETE? If so, prepare to invalidate the cached entities.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:562 - 1

/* error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:577 - 1

/* Serve up the content */

 /*
 * Add cache_out filter to serve this request. Choose
 * the correct filter by checking if we are a subrequest
 * or not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:672 - 1

/* restore status of cached response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:675 - 1

/* recall_headers() was called in cache_select() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:721 - 1

/* give someone else the chance to cache the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:724 - 1

/* give up trying to cache, just step out the way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:741 - 1

/* conditionally remove the lock as soon as we see the eos bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:761 - 1

/* give someone else the chance to cache the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:830 - 1

/* Setup cache_request_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:893 - 1

/* morph the current save filter into the out filter, and serve from
 * cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:922 - 1

/* give someone else the chance to cache the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:959 - 1

/* read the etag and cache-control from the entity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:973 - 1

/* Have we received a 304 response without any headers at all? Fall back to
 * the original headers in the original cached request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:992 - 1

/* Parse the cache control header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1066 - 1

/* if the server said 304 Not Modified but we have no cache
 * file - pass this untouched to the user agent, it's not for us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1116 - 1

/* or we've been asked not to cache it above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1133 - 1

/* while this response is not cacheable, the previous response still is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1143 - 1

/* and lastly, contradiction checks for revalidated responses
 * as per RFC2616 Section 10.3.5
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1203 - 1

/* let someone else attempt to cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1216 - 1

/* Currently HTTP_NOT_MODIFIED, and after the redirect, handlers won't think to set status to HTTP_OK */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1254 - 1

/* parse error, see next 'if' block */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1315 - 1

/*
 * Restore the original request headers as they may be needed
 * by further output filters like the byterange filter to make
 * the correct decisions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1324 - 1

/* no cache handle, create a new entity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1400 - 1

/* if no expiry date then
 * if Cache-Control: max-age
 * expiry date = date + max-age
 * else if lastmod
 * expiry date = date + min((date - lastmod) * factor, maxexpire)
 * else
 * expire date = date + defaultexpire
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1424 - 1

/* if lastmod == date then you get 0*conf->factor which results in
 * an expiration time of now. This causes some problems with
 * freshness calculations, so we choose the else path...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1487 - 1

/* Load in the saved status and clear the status line. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1491 - 1

/* We're just saving response headers, so we are done. Commit
 * the response at this point, unless there was a previous error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1500 - 1

/* Restore the original request headers and see if we need to
 * return anything else than the cached response (ie. the original
 * request was conditional).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1562 - 1

/* let someone else attempt to cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1618 - 1

/* Setup cache_request_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1663 - 1

/* Setup cache_request_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1871 - 1

/* morph the current save filter into the out filter, and serve from
 * cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1904 - 1

/* give someone else the chance to cache the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1925 - 1

/* maximum time to cache a document */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1928 - 1

/* default time to cache a document */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1931 - 1

/* factor used to estimate Expires date from LastModified date */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1960 - 1

/* maximum time to cache a document */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1966 - 1

/* default time to cache a document */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1970 - 1

/* factor used to estimate Expires date from LastModified date */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1999 - 1

/* array of URL prefixes for which caching is enabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2005 - 1

/* array of headers that should not be stored in cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2036 - 1

/* array of URL prefixes for which caching is enabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2166 - 1

/* if header None is listed clear array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2172 - 1

/* Only add header if no "e;None"e; has been found in header list
 * so far.
 * (When 'None' is passed, IGNORE_HEADERS_SET && nelts == 0.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2194 - 1

/* if identifier None is listed clear array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2593 - 1

/* cache handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2595 - 1

/* cache status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:214 - 1

/* These two functions get and put state information into the data
 * file for an ap_cache_el, this state information will be read
 * and written transparent to clients of this module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:225 - 1

/* read the data from the cache file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:335 - 1

/*
 * Hook and mod_cache callback functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:352 - 1

/* we don't support caching of range requests (yet) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:384 - 1

/* Save the cache root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:435 - 1

/* Create and init the cache object */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:444 - 1

/* Save the cache root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:455 - 1

/* read the format from the cache file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:524 - 1

/* Read the bytes to setup the cache_info fields */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:534 - 1

/* Is this a cached HEAD request? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:571 - 1

/* Initialize the cache_handle callback functions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:621 - 1

/* Null out the cache object pointer so next time we start from scratch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:671 - 1

/* now delete directories as far as possible up to our cache root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:737 - 1

/* If we've finished reading the array, break out of the loop. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:810 - 1

/* If we've finished reading the headers, break out of the loop. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:840 - 1

/*APR_CHARSET_EBCDIC*/

 /* if we see a bogus header don't ignore it. Shout and scream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:858 - 1

/*
 * Reads headers from a buffer and returns an array of headers.
 * Returns NULL on file error
 * This routine tries to deal with too long lines and continuation lines.
 * @@@: XXX: FIXME: currently the headers are passed thru un-merged.
 * Is that okay, or should they be collapsed where possible?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:985 - 1

/* If we were initially opened as a vary format, rollback
 * that internal state for the moment so we can recreate the
 * vary format hints in the appropriate directory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1190 - 1

/* read the bucket, write to the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1198 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1203 - 1

/* don't write empty buckets to the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1234 - 1

/* write to the cache, leave if we fail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1239 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1248 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1272 - 1

/* Was this the final bucket? If yes, close the temp file and perform
 * sanity checks.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1293 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1301 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1310 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1350 - 1

/* remove the cached items completely on any failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1427 - 1

/*
 * mod_cache_disk configuration directives handlers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1437 - 1

/* TODO: canonicalize cache_root and strip off any trailing slashes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1569 - 1

/* cache initializer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:72 - 1

/* the cache buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:79 - 1

/* length of the cached entity body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:87 - 1

/* Is the attempt to cache complete? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:90 - 1

/*
 * mod_cache_socache configuration
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:113 - 1

/* maximum file size for cached files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:116 - 1

/* maximum data to attempt to cache in one go */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:117 - 1

/* maximum time taken to cache in one go */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:125 - 1

/* Shared object cache and mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:346 - 1

/*
 * Hook and mod_cache callback functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:364 - 1

/* we don't support caching of range requests (yet) */
 /* TODO: but we could */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:399 - 1

/* estimate the total cached size, given current headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:453 - 1

/* Create and init the cache object */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:468 - 1

/* attempt to retrieve the cached entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:508 - 1

/* read the format from the cache file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:531 - 1

/* attempt to retrieve the cached entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:621 - 1

/* Is this a cached HEAD request? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:652 - 1

/*
 * Optimisation: if the body is small, we want to make a
 * copy of the body and free the temporary pool, as we
 * don't want large blocks of unused memory hanging around
 * to the end of the response. In contrast, if the body is
 * large, we would rather leave the body where it is in the
 * temporary pool, and save ourselves the copy.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:714 - 1

/* Null out the cache object pointer so next time we start from scratch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:730 - 1

/* Remove the key from the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:999 - 1

/* read the bucket, write to the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1007 - 1

/* Remove the intermediate cache file and return non-APR_SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1013 - 1

/* don't write empty buckets to the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1049 - 1

/* Was this the final bucket? If yes, perform sanity checks.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1223 - 1

/*
 * mod_cache_socache configuration directives handlers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1236 - 1

/* Argument is of form 'name:args' or just 'name'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1490 - 1

/* don't waste the overhead of creating mutex & cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1526 - 1

/* cache initializer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:191 - 1

/* CacheFile directive. Caching the file handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:257 - 1

/* search the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:315 - 1

/* Bail out if r->handler isn't the default value, and doesn't look like a Content-Type 
 * XXX: Even though we made the user explicitly list each path to cache?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:318 - 1

/*"e;) && !AP_IS_DEFAULT_HANDLER_NAME(r->handler)) {
 return DECLINED;
 }

 /* we don't handle anything but GET */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:361 - 1

/* ap_set_content_length() always converts the same number and never
 * returns an error. Accelerate it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:372 - 1

/* Call appropriate handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:397 - 1

/* This trick doesn't work apparently because the translate hooks
 are single shot. If the core_hook returns OK, then our hook is
 not called.
 ap_hook_translate_name(file_cache_xlat, aszPre, NULL, APR_HOOK_MIDDLE);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:200 - 1

/* be careful: do not try to store too much bytes in a DBM file! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:209 - 1

/* at least less than approx. 1KB */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:278 - 1

/* and fetch it from the DBM file
 * XXX: Should we open the dbm against r->pool so the cleanup will
 * do the apr_dbm_close? This would make the code a bit cleaner.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:314 - 1

/* make sure the stuff is still not expired */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:435 - 1

/* pass 2: delete expired elements */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:526 - 1

/*
 * make sure the expired records are omitted
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:61 - 1

/* If a "e;persistent connection"e; mode of operation is preferred, you *must*
 * also use the PIDCHECK flag to ensure fork()'d processes don't interlace
 * comms on the same connection as each other. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:100 - 1

/* !@#$%^ - why do we deal with *absolute* time anyway???
 * Uhm - because most things expire things at a specific time?
 * Were the API were thought out expiry - r->request_time is a good approximation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:105 - 1

/* Send the serialised session to the distributed cache context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:122 - 1

/* Retrieve any corresponding session from the distributed cache context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:140 - 1

/* Remove any corresponding session from the distributed cache context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:175 - 1

/* socache API constraint: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:186 - 1

/* Converts (binary) id into a key prefixed by the predetermined
 * namespace tag; writes output to key buffer. Returns non-zero if
 * the id won't fit in the key buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:217 - 1

/* memcache needs time in seconds till expiry; fail if this is not
 * positive *before* casting to unsigned (apr_uint32_t). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:55 - 1

/* Stats for cache operations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:70 - 1

/* How far into each subcache the data area is (optimisation) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:72 - 1

/* How large the data area in each subcache is (optimisation) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:91 - 1

/* absolute time this entry expires */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:95 - 1

/* size (most logic ignores this, we keep it only to minimise memcpy) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:164 - 1

/* This macro takes the same params as the last, generating two outputs for use
 * in ap_log_error(...). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:189 - 1

/* Subtraction (or "e;distance between"e;) modulo 'mod' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:362 - 1

/* If anon shm isn't supported, fail if no named file was
 * configured successfully; the ap_runtime_dir_relative call
 * above will return NULL for invalid paths. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:431 - 1

/* Convert the subcache size (in bytes) to a value that is suitable for
 * structure alignment on the host platform, by rounding down if necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:457 - 1

/* The header is done, make the caches empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:492 - 1

/* XXX: Says who? Why shouldn't this be acceptable, or padded if not? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:700 - 1

/*
 * Subcache-level cache operations
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:718 - 1

/* not removed and not expired yet, we're done iterating */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:768 - 1

/* First reclaim space from removed and expired records. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:899 - 1

/* Already stale, quietly remove and treat as not-found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:994 - 1

/* Grow to ~150% of this buffer requirement on resize
 * always using APR_ALIGN_DEFAULT sized pages
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:1023 - 1

/* Already stale, quietly remove and treat as not-found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:33 - 1

/* How often we update the stats file */
/* TODO: Make a runtime config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:129 - 1

/* XXX: The same exists in mod_lbmethod_heartbeat.c where it is named argstr_to_table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:157 - 1

/*
 ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,
 "e;Found query arg: %s = %s"e;, key, value);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:209 - 1

/* XXX locking for grab() / put() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:419 - 1

/*
 * Skip this entry from the heartbeat file -- when it comes back,
 * we will reuse the memory...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:536 - 1

/* TODO: REMOVE ME BEFORE PRODUCTION (????) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:38 - 1

/* debug */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:44 - 1

/* MOD_MACRO_DEBUG */

/******************************************************** MODULE DECLARATION */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:50 - 1

/********************************************************** MACRO MANAGEMENT */

/*
 this is a macro: name, arguments, contents, location.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:60 - 1

/* of macro definition, for error messages */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:87 - 1

/*
 return configuration-parsed arguments from line as an array.
 the line is expected not to contain any '\n'?
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:106 - 1

/*
 warn if anything non blank appears, but ignore comments...
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:126 - 1

/*
 get read lines as an array till end_token.
 counts nesting for begin_token/end_token.
 it assumes a line-per-line configuration (thru getline).
 this function could be exported.
 begin_token may be NULL.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:204 - 1

/* the @* arguments are double-quote escaped when substituted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:207 - 1

/* other $* and %* arguments are simply replaced without escaping */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:210 - 1

/*
 characters allowed in an argument?
 not used yet, because that would trigger some backward compatibility.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:219 - 1

/*
 returns whether it looks like an argument, i.e. prefixed by ARG_PREFIX.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:261 - 1

/* must not use the same argument name twice */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:326 - 1

/*
 replace name by replacement at the beginning of buf of bufsize.
 returns an error message or NULL.
 C is not really a nice language for processing strings.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:346 - 1

/* hmmm??? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:359 - 1

/* cannot use strcpy as strings may overlap */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:486 - 1

/*
 warn if some macro arguments are not used.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:554 - 1

/* cached length of the current line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:557 - 1

/* hack: where to update it if needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:585 - 1

/* maybe update */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:624 - 1

/* maybe update to next, possibly a recursion */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:680 - 1

/********************************************************** KEYWORD HANDLING */

/*
 handles: <Macro macroname arg1 arg2 ...> any trash there is ignored...
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:716 - 1

/* coldly drop '>[^>]*$' out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:729 - 1

/* already defined: warn about the redefinition */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:744 - 1

/* get macro arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:840 - 1

/* get macro arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:102 - 1

/*
 * Server configuration to keep track of actually
 * loaded modules and the corresponding module name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:153 - 1

/* retry on error without path to use dlopen()'s search path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:177 - 1

/*
 * This is called for the directive LoadModule and actually loads
 * a shared object file into the address space of the server process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:307 - 1

/*
 * Register a cleanup in the config apr_pool_t (normally pconf). When
 * we do a restart (or shutdown) this cleanup will cause the
 * shared object to be unloaded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:322 - 1

/*
 * This implements the LoadFile directive and loads an arbitrary
 * shared object file into the adress space of the server process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:281 - 1

/* This mutex fixes problems with a fast start/fast end, where the pool
 * cleanup was being invoked before the thread completely spawned.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:364 - 1

/* We have already registered callback.
 * Do not allow callbacks that have the same
 * function and data pointers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:625 - 1

/* argument to include in call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:626 - 1

/* where available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:688 - 1

/*--------------------------------------------------------------------------*/
/* */
/* The list of optional hooks that we provide */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:81 - 1

/* a default DBDriver value that'll generate meaningful error messages */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:84 - 1

/* A default nmin of >0 will help with generating meaningful
 * startup error messages if the database is down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:100 - 1

/* to generate meaningful error messages */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:581 - 1

/* we use a sub-pool for the prepared statements for each connection so
 * that they will be cleaned up first, before the connection is closed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:686 - 1

/* we failed, so create a mutex so that subsequent competing callers
 * to ap_dbd_open can serialize themselves while they retry
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:748 - 1

/* Functions we export for modules to use:
 - open acquires a connection from the pool (opens one if necessary)
 - close releases it back in to the pool
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:112 - 1

/* ensure that our state subdirectory is present */
/* ### does this belong here or in dav_fs_repos.c ?? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:147 - 1

/* may be NULL if we tried to open a non-existent db as read-only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:169 - 1

/* If not opening read-only, ensure the state dir exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:171 - 1

/* ### what are the perf implications of always checking this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:179 - 1

/* ### readers cannot open while a writer has this open; we should
 ### perform a few retries with random pauses. */

 /* ### do we need to deal with the umask? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:397 - 1

/*
 ** Return if an error occurred, or there is no database.
 **
 ** NOTE: db could be NULL if we attempted to open a readonly
 ** database that doesn't exist. If we require read/write
 ** access, then a database was created and opened.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:422 - 1

/*
 ** If there is no METADATA key, then the database may be
 ** from versions 0.9.0 .. 0.9.4 (which would be incompatible).
 ** These can be identified by the presence of an NS_TABLE entry.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:432 - 1

/* call it a major version error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:572 - 1

/*
 ** Iterate over the provided namespaces. If a namespace already appears
 ** in our internal map of URI -> ns_id, then store that in the map. If
 ** we don't know the namespace yet, then add it to the map and to our
 ** table of known namespaces.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:684 - 1

/* free the previous key. note: if the loop is aborted, then the DBM
 will toss the key (via pool cleanup) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:129 - 1

/* authenticated user who created the lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:215 - 1

/* internal function for creating locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:365 - 1

/*
** dav_fs_close_lockdb:
**
** Close it. Duh.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:435 - 1

/* ### add a higher-level error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:441 - 1

/* don't fail if the key is not present */
 /* ### but what about other errors? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:456 - 1

/* ### can this be apr_palloc() ? */
 /* ### hmmm.... investigate the use of a buffer here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:500 - 1

/* ### more details? add an error_id? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:541 - 1

/* ### add a higher-level error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:545 - 1

/*
 ** If we opened readonly and the db wasn't there, then there are no
 ** locks for this resource. Just exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:636 - 1

/* ### should use a computed_desc and insert corrupt token data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:692 - 1

/* No match found (but we should have found one!) */

 /* ### use a different description and/or error ID? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:703 - 1

/* ---------------------------------------------------------------
**
** Property-related lock functions
**
*/

/*
** dav_fs_get_supportedlock: Returns a static string for all supportedlock
** properties. I think we save more returning a static string than
** constructing it every time, though it might look cleaner.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:921 - 1

/* ### fold into append_lock? */
/* ### take an optional buf parameter? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:952 - 1

/*
** dav_fs_remove_locknull_state: Given a request, check to see if r->filename
** is/was a lock-null resource. If so, return it to an existant state, i.e.
** remove it from the list in the appropriate .DAV/locknull file.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1020 - 1

/* copy all direct locks to the result list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1036 - 1

/* copy all the indirect locks to the result list. resolve as needed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1142 - 1

/* ### insert a higher-level error description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1146 - 1

/*
 ** If we opened readonly and the db wasn't there, then there are no
 ** locks for this resource. Just exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1173 - 1

/* ### maybe add in a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1229 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1237 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1264 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1292 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1310 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1354 - 1

/* ### maybe add in a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1380 - 1

/* if we refreshed any locks, then save them back. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1383 - 1

/* ### maybe add in a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:119 - 1

/*
** Does this platform support an executable flag?
**
** ### need a way to portably abstract this query
**
** DAV_FINFO_MASK gives the appropriate mask to use for the stat call
** used to get file attributes.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:204 - 1

/* returns an appropriate HTTP status code given an APR status code for a
 * failed I/O operation. ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:344 - 1

/* Determine permissions to use for destination */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:350 - 1

/* chmod it if it already exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:391 - 1

/* ### ACK! Inconsistent state... */

 /* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:418 - 1

/* ### ACK! Inconsistent state... */

 /* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:453 - 1

/* ### ACK. this creates an inconsistency. do more!? */

 /* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:472 - 1

/* copy/move a file from within a state dir to another state dir */
/* ### need more buffers to replace the pool argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:499 - 1

/* ### do we need to deal with the umask? */

 /* ensure that it exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:520 - 1

/* The mkdir() may have failed because a *file* exists there already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:650 - 1

/* ### CRAP. only removed half. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:679 - 1

/* ### optimize this into a single allocation! */

 /* Create private resource context descriptor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:691 - 1

/* ### not available in Apache 2.0 yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:750 - 1

/*
 ** The base of the path refers to a file -- nothing should
 ** be in path_info. The resource is simply an error: it
 ** can't be a null or a locknull resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:802 - 1

/* ### optimize this into a single allocation! */

 /* Create private resource context descriptor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:886 - 1

/* custom mktemp that creates the file with APR_OS_DEFAULT permissions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:981 - 1

/* ### use a better description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1042 - 1

/* only define set_headers() and deliver() for debug purposes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1065 - 1

/* ### how to set the content type? */
 /* ### until this is resolved, the Content-Type header is busted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1115 - 1

/* DEBUG_GET_HANDLER */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1135 - 1

/* ### refine this error message? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1168 - 1

/* ### assume it was a permissions problem */
 /* ### need a description here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1202 - 1

/* the error is in the multistatus now. do not stop the traversal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1221 - 1

/* if a collection, recursively copy/move it and its children,
 * including the state dirs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1239 - 1

/* note that we return the error OR the multistatus. never both */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1243 - 1

/* on a "e;real"e; error, then just punt. nothing else to do. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1281 - 1

/*
 ** ### strictly speaking, this is a design error; we should not
 ** ### have reached this point.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1314 - 1

/*
 ** ### strictly speaking, this is a design error; we should not
 ** ### have reached this point.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1359 - 1

/* no error. we're done. go ahead and return now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1363 - 1

/* error occurred during properties move; try to put resource back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1383 - 1

/* resource moved back, but properties may be inconsistent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1419 - 1

/* ### assume there is a permissions problem */

 /* ### use errno to generate DAV:responsedescription? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1437 - 1

/* if a collection, recursively remove it and its children,
 * including the state dirs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1454 - 1

/* on a "e;real"e; error, then just punt. nothing else to do. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1465 - 1

/* no errors... update resource state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1486 - 1

/* ### move this to dav_util? */
/* Walk recursively down through directories, *
 * including lock-null resources as we go. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1499 - 1

/* ensure the context is prepared properly, then call the func */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1525 - 1

/* Note: the URI should ALREADY have a trailing "e;/"e; */

 /* for this first pass of files, all resources exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1561 - 1

/* skip the state dir and temp files unless a HIDDEN is performed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1602 - 1

/* ### maybe add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1624 - 1

/* recurse on the subdir */
 /* ### don't always want to quit on error from single child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1627 - 1

/* ### maybe add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1639 - 1

/* assert: res1.exists == 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1652 - 1

/* null terminate the directory name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1659 - 1

/* ### maybe add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1729 - 1

/* ### maybe add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1737 - 1

/* ### maybe add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1817 - 1

/* res2 does not exist -- clear its finfo structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1828 - 1

/* if we have a directory, then ensure the URI has a trailing "e;/"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1843 - 1

/* always return the error, and any/all multistatus responses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1852 - 1

/* always return the error, and any/all multistatus responses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1983 - 1

/* ### what the heck was this property? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1987 - 1

/* assert: value != NULL */

 /* get the information and global NS index for the property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1992 - 1

/* assert: info != NULL && info->name != NULL */

 /* DBG3("e;FS: inserting lp%d:%s (local %d)"e;, ns, scan->name, scan->ns); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2004 - 1

/* assert: what == DAV_PROP_INSERT_SUPPORTED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2107 - 1

/* assert: prop == executable. operation == SET. */

 /* don't do anything if there is no change. no rollback info either. */
 /* DBG2("e;new value=%d (old=%d)"e;, value, old_value); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2150 - 1

/* assert: prop == executable. operation == SET. */

 /* restore the executable bit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:118 - 1

/* authenticated user who created the lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:230 - 1

/* internal function for creating locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:381 - 1

/*
 * dav_generic_close_lockdb:
 *
 * Close it. Duh.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:456 - 1

/* ### add a higher-level error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:462 - 1

/* don't fail if the key is not present */
 /* ### but what about other errors? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:477 - 1

/* ### can this be apr_palloc() ? */
 /* ### hmmm.... investigate the use of a buffer here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:528 - 1

/* ### more details? add an error_id? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:572 - 1

/* ### add a higher-level error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:576 - 1

/*
 * If we opened readonly and the db wasn't there, then there are no
 * locks for this resource. Just exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:662 - 1

/* ### should use a computed_desc and insert corrupt token data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:718 - 1

/* No match found (but we should have found one!) */

 /* ### use a different description and/or error ID? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:729 - 1

/* ---------------------------------------------------------------
 *
 * Property-related lock functions
 *
 */

/*
 * dav_generic_get_supportedlock: Returns a static string for all
 * supportedlock properties. I think we save more returning a static string
 * than constructing it every time, though it might look cleaner.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:812 - 1

/* copy all direct locks to the result list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:828 - 1

/* copy all the indirect locks to the result list. resolve as needed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:935 - 1

/* ### insert a higher-level error description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:939 - 1

/*
 * If we opened readonly and the db wasn't there, then there are no
 * locks for this resource. Just exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:968 - 1

/* ### maybe add in a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1024 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1050 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1078 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1122 - 1

/* ### maybe add in a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1148 - 1

/* if we refreshed any locks, then save them back. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1151 - 1

/* ### maybe add in a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:47 - 1

/* already registered */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:126 - 1

/* assert: should not reach this point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:65 - 1

/* ### what is the best way to set this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:261 - 1

/* lookup and cache the actual provider now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:335 - 1

/* the response has been sent. */
 /*
 * ### Use of DONE obviates logging..!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:385 - 1

/* the response has been sent. */
 /*
 * ### Use of DONE obviates logging..!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:416 - 1

/* Write a complete RESPONSE object out as a <DAV:repsonse> xml
 element. Data is sent into brigade BB, which is auto-flushed into
 OUTPUT filter stack. Use POOL for any temporary allocations.

 [Presumably the <multistatus> tag has already been written; this
 routine is shared by dav_send_multistatus and dav_stream_response.]
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:448 - 1

/* use the Status-Line text from Apache. Note, this will
 * default to 500 Internal Server Error if first->status
 * is not a known (or valid) status code.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:546 - 1

/*
 * dav_log_err()
 *
 * Write error information to the log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:555 - 1

/* Log the errors */
 /* ### should have a directive to log the first or all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:566 - 1

/*
 * dav_handle_err()
 *
 * Handle the standard error processing. <err> must be non-NULL.
 *
 * <response> is set by the following:
 * - dav_validate_request()
 * - dav_add_lock()
 * - repos_hooks->remove_resource
 * - repos_hooks->move_resource
 * - repos_hooks->copy_resource
 * - vsn_hooks->update
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:582 - 1

/* log the errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:586 - 1

/* we have responded already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:593 - 1

/* our error messages are safe; tell Apache this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:613 - 1

/* handy function for return values of methods that (may) create things.
 * locn if provided is assumed to be escaped. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:624 - 1

/* did the target resource already exist? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:710 - 1

/* if the request target can be overridden, get any target selector */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:716 - 1

/* assert: conf->provider != NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:744 - 1

/* ### hmm. this doesn't feel like the right place or thing to do */
 /* if there were any input headers requiring a Vary header in the response,
 * add it now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:765 - 1

/**
 * @return 1 if valid content-range,
 * 0 if no content-range,
 * -1 if malformed content-range
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:787 - 1

/* malformed header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:823 - 1

/* This method should only be called when the resource is not
 * visible to Apache. We will fetch the resource from the repository,
 * then create a subrequest for Apache to handle.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:833 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:867 - 1

/* validate resource/locks on POST, then pass to the default handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:930 - 1

/*
 * Note: depth == 0 normally requires no multistatus response. However,
 * if we pass DAV_VALIDATE_PARENT, then we could get an error on a URI
 * other than the Request-URI, thereby requiring a multistatus.
 *
 * If the resource does not exist (DAV_RESOURCE_NULL), then we must
 * check the resource *and* its parent. If the resource exists or is
 * a locknull resource, then we check only the resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1040 - 1

/* write whatever we read, until we see an error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1076 - 1

/* undo if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1079 - 1

/* check for errors now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1101 - 1

/* The file creation was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1117 - 1

/* The file creation was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1127 - 1

/* NOTE: WebDAV spec, S8.7.1 states properties should be unaffected */

 /* return an appropriate response (HTTP_CREATED or HTTP_NO_CONTENT) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1134 - 1

/* Use POOL to temporarily construct a dav_response object (from WRES
 STATUS, and PROPSTATS) and stream it via WRES's ctx->brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1195 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1199 - 1

/* 2518 says that depth must be infinity only for collections.
 * For non-collections, depth is ignored, unless it is an illegal value (1).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1218 - 1

/*
 ** If any resources fail the lock/If: conditions, then we must fail
 ** the delete. Each of the failing resources will be listed within
 ** a DAV:multistatus body, wrapped into a 424 response.
 **
 ** Note that a failure on the resource itself does not generate a
 ** multistatus response -- only internal members/collections.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1239 - 1

/* ### RFC 2518 s. 8.10.5 says to remove _all_ locks, not just those
 * locked by the token(s) in the if_header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1257 - 1

/* undo if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1260 - 1

/* check for errors now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1279 - 1

/* ### HTTP_NO_CONTENT if no body, HTTP_OK if there is a body (some day) */

 /* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1547 - 1

/* This method should only be called when the resource is not
 * visible to Apache. We will fetch the resource from the repository,
 * then create a subrequest for Apache to handle.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1557 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1636 - 1

/* determine which providers are available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1663 - 1

/* ###
 * MSFT Web Folders chokes if length of DAV header value > 63 characters!
 * To workaround that, we use separate DAV headers for versioning and
 * live prop provider namespace URIs.
 * ###
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1682 - 1

/*
 * Gather property set URIs from all the liveprop providers,
 * and generate a separate DAV header for each URI, to avoid
 * problems with long header lengths.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1758 - 1

/* ### internal error! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1901 - 1

/* if unrecognized option, pass to versioning provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1923 - 1

/* we've sent everything necessary to the client. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1932 - 1

/* just return if we built the thing already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1962 - 1

/*
 ** Note: ctx->doc can only be NULL for DAV_PROPFIND_IS_ALLPROP. Since
 ** dav_get_allprops() does not need to do namespace translation,
 ** we're okay.
 **
 ** Note: we cast to lose the "e;const"e;. The propdb won't try to change
 ** the resource, however, since we are opening readonly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2006 - 1

/* at this point, ctx->scratchpool has been used to stream a
 single response. this function fully controls the pool, and
 thus has the right to clear it for the next iteration of this
 callback. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2033 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2047 - 1

/* default is to DISALLOW these requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2205 - 1

/* ### we should use compute_desc if necessary... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2224 - 1

/*
 * ### we probably need to revise the way we assemble the response...
 * ### this code assumes everything will return status==200.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2308 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2325 - 1

/* Check If-Headers and existing locks */
 /* Note: depth == 0. Implies no need for a multistatus response. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2361 - 1

/* do a first pass to ensure that all "e;remove"e; properties exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2367 - 1

/* Ignore children that are not set/remove */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2396 - 1

/* for later use by dav_prop_log_errors() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2429 - 1

/* log any errors that occurred */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2460 - 1

/* Use this instead of Apache's default error string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2486 - 1

/* ### log something? */

 /* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2492 - 1

/*
 * Get rid of the body. this will call ap_setup_client_block(), but
 * our copy above has already verified its work.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2564 - 1

/* undo if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2567 - 1

/* check for errors now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2585 - 1

/* The directory creation was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2601 - 1

/* The dir creation was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2611 - 1

/* return an appropriate response (HTTP_CREATED) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2644 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2683 - 1

/* ### this assumes that dav_lookup_uri() only generates a status
 * ### that Apache can provide a status line for!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2698 - 1

/* ### how best to report this... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2711 - 1

/* ### this message exposes some backend config, but screw it... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2728 - 1

/* Supply some text for the error response body. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2736 - 1

/* Supply some text for the error response body. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2821 - 1

/* Supply some text for the error response body. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2863 - 1

/* ### this is wrong! it blasts direct locks on parent resources */
 /* ### pass lockdb! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2938 - 1

/* If destination is being replaced, remove it first
 * (we know Ovewrite must be TRUE). Then try to copy/move the resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2953 - 1

/* perform any auto-versioning cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2954 - 1

/* undo if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2958 - 1

/* undo if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2964 - 1

/* check for error from remove/copy/move operations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2977 - 1

/* check for errors from auto-versioning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2997 - 1

/* propagate any indirect locks at the target */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3006 - 1

/* The move/copy was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3016 - 1

/* return an appropriate response (HTTP_CREATED or HTTP_NO_CONTENT) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3021 - 1

/* dav_method_lock: Handler to implement the DAV LOCK method
 * Returns appropriate HTTP_* response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3039 - 1

/* If no locks provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3074 - 1

/*
 * Open writable. Unless an error occurs, we'll be
 * writing into the database.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3200 - 1

/* dav_method_unlock: Handler to implement the DAV UNLOCK method
 * Returns appropriate HTTP_* response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3215 - 1

/* If no locks provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3363 - 1

/* Check request preconditions */

 /* ### need a general mechanism for reporting precondition violations
 * ### (should be returning XML document for 403/409 responses)
 */

 /* if not versioning existing resource, must specify version to select */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3395 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3405 - 1

/* Check If-Headers and existing locks */
 /* Note: depth == 0. Implies no need for a multistatus response. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3449 - 1

/* The resource creation was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3465 - 1

/* The dir creation was successful, but the locking failed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3475 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3478 - 1

/* return an appropriate response (HTTP_CREATED) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3551 - 1

/* no href's is a DTD violation:
 <!ELEMENT activity-set (href+ | new)>
 */

 /* This supplies additional info for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3572 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3576 - 1

/* Check the state of the resource: must be a file or collection,
 * must be versioned, and must not already be checked out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3595 - 1

/* ### do lock checks, once behavior is defined */

 /* Do the checkout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3610 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3648 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3670 - 1

/* ### do lock checks, once behavior is defined */

 /* Do the uncheckout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3725 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3747 - 1

/* ### do lock checks, once behavior is defined */

 /* Do the checkin */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3846 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3850 - 1

/* ### need a general mechanism for reporting precondition violations
 * ### (should be returning XML document for 403/409 responses)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3871 - 1

/* ### this assumes that dav_lookup_uri() only generates a status
 * ### that Apache can provide a status line for!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3877 - 1

/* ### how best to report this... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3904 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3919 - 1

/* label being manipulated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3938 - 1

/* Check the state of the resource: must be a version or
 * non-checkedout version selector
 */
 /* ### need a general mechanism for reporting precondition violations
 * ### (should be returning XML document for 403/409 responses)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3996 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4089 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4131 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4143 - 1

/* No data has been sent to client yet; throw normal error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4209 - 1

/* ### what about locking? */

 /* attempt to create the workspace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4221 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4224 - 1

/* return an appropriate response (HTTP_CREATED) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4274 - 1

/* ### what about locking? */

 /* attempt to create the activity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4286 - 1

/* set the Cache-Control header, per the spec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4289 - 1

/* return an appropriate response (HTTP_CREATED) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4357 - 1

/* ### this assumes that dav_lookup_uri() only generates a status
 * ### that Apache can provide a status line for!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4363 - 1

/* ### how best to report this... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4390 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4408 - 1

/* ### should we do any preliminary response generation? probably not,
 ### because we may have an error, thus demanding something else in
 ### the response body. */

 /* Do the merge, including any response generation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4417 - 1

/* ### is err->status the right error here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4457 - 1

/* Apache will supply a default error for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4489 - 1

/* ### this assumes that dav_lookup_uri() only generates a status
 * ### that Apache can provide a status line for!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4495 - 1

/* ### how best to report this... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4508 - 1

/* ### this message exposes some backend config, but screw it... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4559 - 1

/* guard against creating circular bindings */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4567 - 1

/* The destination must exist (since it contains the source), and
 * a condition above implies Overwrite==T. Obviously, we cannot
 * delete the Destination before the BIND, as that would
 * delete the Source.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4585 - 1

/* If target exists, remove it first (we know Ovewrite must be TRUE).
 * Then try to bind to the resource.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4597 - 1

/* undo if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4600 - 1

/* check for error from remove/bind operations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4610 - 1

/* check for errors from reverting writability */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4621 - 1

/* return an appropriate response (HTTP_CREATED) */
 /* ### spec doesn't say what happens when destination was replaced */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4635 - 1

/* Reject requests with an unescaped hash character, as these may
 * be more destructive than the user intended. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4805 - 1

/* ### add'l methods for Advanced Collections, ACLs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4814 - 1

/* quickly ignore any HTTP/0.9 requests which aren't subreqs. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4827 - 1

/* We are going to handle almost every request. In certain cases,
 the provider maps to the filesystem (thus, handle_get is
 FALSE), and core Apache will handle it. a For that case, we
 just return right away. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4832 - 1

/*
 * ### need some work to pull Content-Type and Content-Language
 * ### from the property database.
 */

 /*
 * If the repository hasn't indicated that it will handle the
 * GET method, then just punt.
 *
 * ### this isn't quite right... taking over the response can break
 * ### things like mod_negotiation. need to look into this some more.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:329 - 1

/* perform a "e;GET"e; on the resource's URI (note that the resource
 may not correspond to the current request!). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:548 - 1

/* always defer actual open, to avoid expense of accessing db
 * when only live properties are involved
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:587 - 1

/* ### what to do with db open error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:609 - 1

/*
 ** We also look for <DAV:getcontenttype> and
 ** <DAV:getcontentlanguage>. If they are not stored as dead
 ** properties, then we need to perform a subrequest to get
 ** their values (if any).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:635 - 1

/* assert: found == 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:660 - 1

/* insert the standard properties */
 /* ### should be handling the return errors here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:669 - 1

/* if we didn't find these, then do the whole subreq thing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:671 - 1

/* ### should be handling the return error here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:678 - 1

/* ### should be handling the return error here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:685 - 1

/* if not just reporting on supported live props,
 * terminate the result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:746 - 1

/* cache the propid; dav_get_props() could be called many times */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:755 - 1

/* ### need to propagate the error to the caller... */
 /* ### skip it for now, as if nothing was inserted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:793 - 1

/* ### need to change signature to return an error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:808 - 1

/* ### what to do with db open error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:920 - 1

/*
 ** Check to see if this is a live property, and fill the fields
 ** in the XML elem, as appropriate.
 **
 ** Verify that the property is read/write. If not, then it cannot
 ** be SET or DELETEd.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:930 - 1

/* it's a liveprop if a provider was found */
 /* ### actually the "e;core"e; props should really be liveprops, but
 ### there is no "e;provider"e; for those and the r/w props are
 ### treated as dead props anyhow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:954 - 1

/* clear is_liveprop -- act as a dead prop now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:992 - 1

/*
 ** There are no checks to perform here. If a property exists, then
 ** we will delete it. If it does not exist, then it does not matter
 ** (see S12.13.1).
 **
 ** Note that if a property does not exist, that does not rule out
 ** that a SET will occur during this PROPPATCH (thusly creating it).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1061 - 1

/* push a more specific error here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:149 - 1

/* assert: value != NULL */

 /* get the information and global NS index for the property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:154 - 1

/* assert: info != NULL && info->name != NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:84 - 1

/* src error doesn't exist so nothing to join just return dest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:89 - 1

/* dest error doesn't exist so nothing to join just return src */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:94 - 1

/* find last error in dest stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:99 - 1

/* add the src error onto end of dest stack and return it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:107 - 1

/* grow the buffer if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:177 - 1

/*
** dav_lookup_uri()
**
** Extension for ap_sub_req_lookup_uri() which can't handle absolute
** URIs properly.
**
** If NULL is returned, then an error occurred with parsing the URI or
** the URI does not match the current server.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:345 - 1

/* initialize to avoid gcc warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:575 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:589 - 1

/* fetch_next_token returns the substring from str+1
 * to the next occurence of char term, or \0, whichever
 * occurs first. Leading whitespace is ignored.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:696 - 1

/* ### dav_add_if_resource() should return an error for us! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:711 - 1

/* ### add a description to this error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:718 - 1

/* ### maybe add a higher level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:726 - 1

/* ### add a description to this error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:733 - 1

/* ### maybe add a higher level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:807 - 1

/* given state_list->locktoken, match it */

 /*
 ** The resource will have one or more lock tokens. We only
 ** need to match one of them against any token in the
 ** If: header.
 **
 ** One token case: It is an exclusive or shared lock. Either
 ** way, we must find it.
 **
 ** N token case: They are shared locks. By policy, we need
 ** to match only one. The resource's other
 ** tokens may belong to somebody else (so we
 ** shouldn't see them in the If: header anyway)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:894 - 1

/* we're in State 1. no locks. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:898 - 1

/*
 ** ### hrm... we don't need to have these fully
 ** ### resolved since we're only looking at the
 ** ### locktokens...
 **
 ** ### use get_locks w/ calltype=PARTIAL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:917 - 1

/*
 ** For a new, exclusive lock: if any locks exist, fail.
 ** For a new, shared lock: if an exclusive lock exists, fail.
 ** else, do not require a token to be seen.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1014 - 1

/*
 ** Prepare the input URI. We want the URI to never have a trailing slash.
 **
 ** When URIs are placed into the dav_if_header structure, they are
 ** guaranteed to never have a trailing slash. If the URIs are equivalent,
 ** then it doesn't matter if they both lack a trailing slash -- they're
 ** still equivalent.
 **
 ** Note: we could also ensure that a trailing slash is present on both
 ** URIs, but the majority of URIs provided to us via a resource walk
 ** will not contain that trailing slash.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1175 - 1

/*
 ** We have now matched up one of the resource's locktokens
 ** to a locktoken in a State-token in the If: header.
 ** Note this fact, so that we can pass the overall
 ** requirement of seeing at least one of the resource's
 ** locktokens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1257 - 1

/* foreach ( state_list ) */

 /*
 ** We've checked every state in this state_list and none of them
 ** have failed. Since all of them succeeded, then we have a matching
 ** state list and we may be done.
 **
 ** The next requirement is that we have seen one of the resource's
 ** locktokens (if any). If we have, then we can just exit. If we
 ** haven't, then we need to keep looking.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1273 - 1

/*
 ** Haven't seen one. Let's break out of the search and just look
 ** for a matching locktoken.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1296 - 1

/*
 ** We finished the loop without finding any matching state lists.
 */

 /*
 ** If none of the state_lists apply to this resource, then we
 ** may have succeeded. Note that this scenario implies a
 ** tagged-list with no matching state_lists. If the If: header
 ** was a no-tag-list, then it would have applied to this resource.
 **
 ** S9.4.2 states that when no state_lists apply, then the header
 ** should be ignored.
 **
 ** If we saw one of the resource's locktokens, then we're done.
 ** If we did not see a locktoken, then we fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1334 - 1

/* error_id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1411 - 1

/* error_id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1438 - 1

/* ### maybe push a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1557 - 1

/* ### maybe add higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1561 - 1

/* If a locktoken was specified, create a dummy if_header with which
 * to validate resources. In the interim, figure out why DAV uses
 * locktokens in an if-header without a Lock-Token header to refresh
 * locks, but a Lock-Token header without an if-header to remove them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1583 - 1

/*
 ** If necessary, open the lock database (read-only, lazily);
 ** the validation process may need to retrieve or update lock info.
 ** Otherwise, assume provided lockdb is valid and opened rw.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1591 - 1

/* ### maybe insert higher-level comment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1598 - 1

/* (1) Validate the specified resource, at the specified depth.
 * Avoid the walk there is no if_header and we aren't planning
 * to modify this resource. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1669 - 1

/* assert: DAV_VALIDATE_PARENT implies response != NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1693 - 1

/* manufacture a 424 error to hold the multistatus response(s) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1728 - 1

/* manufacture a 207 error for the multistatus response(s) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1842 - 1

/* dav_can_auto_checkout
 *
 * Determine whether auto-checkout is enabled for a resource.
 * r - the request_rec
 * resource - the resource
 * auto_version - the value of the auto_versionable hook for the resource
 * lockdb - pointer to lock database (opened if necessary)
 * auto_checkout - set to 1 if auto-checkout enabled
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:54 - 1

/*
 ** Since resourcediscovery is defined with (activelock)*,
 ** <D:activelock/> shouldn't be necessary for an empty lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:61 - 1

/*
 ** Note: it could be interesting to sum the lengths of the owners
 ** and locktokens during this loop. However, the buffer
 ** mechanism provides some rough padding so that we don't
 ** really need to have an exact size. Further, constructing
 ** locktoken strings could be relatively expensive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:75 - 1

/* reset the length before we start appending stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:101 - 1

/* ### internal error. log something? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:113 - 1

/* ### internal error. log something? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:229 - 1

/*
 ** Store a full <DAV:owner> element with namespace definitions
 ** and an xml:lang definition, if applicable.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:253 - 1

/* ---------------------------------------------------------------
**
** General lock functions
**
*/

/* dav_lock_walker: Walker callback function to record indirect locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:291 - 1

/*
** dav_add_lock: Add a direct lock for resource, and indirect locks for
** all children, bounded by depth.
** ### assume request only contains one lock
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:306 - 1

/* Requested lock can be:
 * Depth: 0 for null resource, existing resource, or existing collection
 * Depth: Inf for existing collection
 */

 /*
 ** 2518 9.2 says to ignore depth if target is not a collection (it has
 ** no internal children); pretend the client gave the correct depth.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:319 - 1

/* In all cases, first add direct entry in lockdb */

 /*
 ** Append the new (direct) lock to the resource's existing locks.
 **
 ** Note: this also handles locknull resources
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:328 - 1

/* ### maybe add a higher-level description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:333 - 1

/* Walk existing collection and set indirect locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:354 - 1

/* manufacture a 207 error for the multistatus response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:365 - 1

/*
** dav_lock_query: Opens the lock database. Returns a linked list of
** dav_lock structures for all direct locks on path.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:385 - 1

/* dav_unlock_walker: Walker callback function to remove indirect locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:391 - 1

/* Before removing the lock, do any auto-checkin required */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:458 - 1

/* not found! that's an error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:509 - 1

/* If no locks provider, then there is nothing to unlock. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:565 - 1

/* dav_inherit_walker: Walker callback function to inherit locks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:576 - 1

/* ### maybe add a higher-level desc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:609 - 1

/* ### map result to something nice; log an error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:624 - 1

/* ### maybe add a higher-level desc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:629 - 1

/* No locks to propagate, just return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:699 - 1

/*
 ** A locknull resource has the form:
 **
 ** known-dir "e;/"e; locknull-file
 **
 ** It would be nice to look into <resource> to verify this form,
 ** but it does not have enough information for us. Instead, we
 ** can look at the path_info. If the form does not match, then
 ** there is no way we could have a locknull resource -- it must
 ** be a plain, null resource.
 **
 ** Apache sets r->filename to known-dir/unknown-file and r->path_info
 ** to "e;"e; for the "e;proper"e; case. If anything is in path_info, then
 ** it can't be a locknull resource.
 **
 ** ### I bet this path_info hack doesn't work for repositories.
 ** ### Need input from repository implementors! What kind of
 ** ### restructure do we need? New provider APIs?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:729 - 1

/* ### don't log an error. return err. add higher-level desc. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:768 - 1

/*
 ** There are resources under this one, which are new. We must
 ** propagate the locks down to the new resources.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:71 - 1

/* If have a context, it means we've done this before successfully. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:103 - 1

/*
 * Ignore flush buckets for the moment..
 * we decide what to stream
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:50 - 1

/*
 * Workhorse function: simply log to the current error_log
 * info about the data in the bucket as well as the data itself
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:121 - 1

/**
 * Add the terminating empty fragment to indicate end-of-connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:174 - 1

/*
 * Pump the bucket contents to the pipe.
 *
 * Writes smaller than PIPE_BUF are guaranteed to be atomic when written to
 * pipes. As a result, we break the buckets into packets smaller than PIPE_BUF and
 * send each one in turn.
 *
 * Each packet is marked with the UUID of the connection so that the process that
 * reassembles the packets can put the right packets in the right order.
 *
 * Each packet is numbered with an incrementing counter. If a packet cannot be
 * written we drop the packet on the floor, and the counter will enable dropped
 * packets to be detected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:386 - 1

/* Ideas for extension:
 *
 * TODO: An idea for configuration. Let the filename directives be per-directory,
 * with a global hashtable of filename to filehandle mappings. As each directive
 * is parsed, a file is opened at server start. By default, all input is buffered
 * until the header_parser hook, at which point we check if we should be buffering
 * at all. If not, we dump the buffer and remove the filter. If so, we start
 * attempting to write the buffer to the file.
 *
 * TODO: Implement a buffer to allow firehose fragment writes to back up to some
 * threshold before packets are dropped. Flush the buffer on cleanup, waiting a
 * suitable amount of time for the downstream to catch up.
 *
 * TODO: For the request firehose, have an option to set aside request buckets
 * until we decide whether we're going to record this request or not. Allows for
 * targeted firehose by URL space.
 *
 * TODO: Potentially decide on firehose sending based on a variable in the notes
 * table or subprocess_env. Use standard httpd SetEnvIf and friends to decide on
 * whether to include the request or not. Using this, we can react to the value
 * of a flagpole. Run this check in the header_parser hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:61 - 1

/* compensate for NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:117 - 1

/* Deliberate trailing space - filling in string on WRITE passes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_case_filter_in.c:95 - 1

/* It is tempting to do this...
 * APR_BUCKET_REMOVE(pB);
 * APR_BRIGADE_INSERT_TAIL(pbbOut,pB);
 * and change the case of the bucket data, but that would be wrong
 * for a file or socket buffer, for example...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:286 - 1

/*
 * The following utility routines are not used in the module. Don't
 * compile them so -Wall doesn't complain about functions that are
 * defined but not used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:387 - 1

/*
 * This utility route traces the hooks called as a request is handled.
 * It takes the current request as argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:471 - 1

/*
 * Stash copy back into pool notes. This call has a cleanup
 * parameter, but we're not using it because the string has been
 * allocated from that same pool. There is also an unused return
 * value: we have nowhere to communicate any error that might
 * occur, and will have to check for the existence of this data on
 * the other end.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:534 - 1

/*
 * This function gets called to create a per-directory configuration
 * record. This will be called for the "e;default"e; server environment, and for
 * each directory for which the parser finds any of our directives applicable.
 * If a directory doesn't have any of our directives involved (i.e., they
 * aren't in the .htaccess file, or a <Location>, <Directory>, or related
 * block), this routine will *not* be called - the configuration for the
 * closest ancestor is used.
 *
 * The return value is a pointer to the created module-specific
 * structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:610 - 1

/*
 * If we're merging records for two different types of environment (server
 * and directory), mark the new record appropriately. Otherwise, inherit
 * the current value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:748 - 1

/*
 * This routine is called after the server processes the configuration
 * files. At this point the module may review and adjust its configuration
 * settings in relation to one another and report any problems. On restart,
 * this routine will be called twice, once in the startup process (which
 * exits shortly after this phase) and once in the running server process.
 *
 * The return value is OK, DECLINED, or HTTP_mumble. If we return OK, the
 * server will still call any remaining modules with an handler for this
 * phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:769 - 1

/*
 * This routine is called when the -t command-line option is supplied.
 * It executes only once, in the startup process, after the check_config
 * phase and just before the process exits. At this point the module
 * may output any information useful in configuration testing.
 *
 * This is a VOID hook: all defined handlers get called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:806 - 1

/*
 * This routine is called after the server finishes the configuration
 * process. At this point the module may review and adjust its configuration
 * settings in relation to one another and report any problems. On restart,
 * this routine will be called only once, in the running server process.
 *
 * The return value is OK, DECLINED, or HTTP_mumble. If we return OK, the
 * server will still call any remaining modules with an handler for this
 * phase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:835 - 1

/*
 * The arbitrary text we add to our trace entry indicates for which server
 * we're being called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:855 - 1

/*
 * The arbitrary text we add to our trace entry indicates for which server
 * we're being called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:911 - 1

/*
 * This routine is called just before the handler gets invoked. It allows
 * a module to insert a previously defined filter into the filter chain.
 *
 * No filter has been defined by this module, so we just log the call
 * and exit.
 *
 * This is a VOID hook: all defined handlers get called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:928 - 1

/*
 * This routine is called to insert a previously defined error filter into
 * the filter chain as the request is being processed.
 *
 * For the purpose of this example, we don't have a filter to insert,
 * so just add to the trace and exit.
 *
 * This is a VOID hook: all defined handlers get called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:991 - 1

/*
 * Set the Content-type header. Note that we do not actually have to send
 * the headers: this is done by the http core.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:996 - 1

/*
 * If we're only supposed to send header information (HEAD request), we're
 * already there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1070 - 1

/*
 * We're all done, so cancel the timeout we set. Since this is probably
 * the end of the request we *could* assume this would be done during
 * post-processing - but it's possible that another handler might be
 * called and inherit our outstanding timer. Not good; to each its own.
 */
 /*
 * We did what we wanted to do, so tell the rest of the server we
 * succeeded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1105 - 1

/*
 * This routine is called just after the server accepts the connection,
 * but before it is handed off to a protocol module to be served. The point
 * of this hook is to allow modules an opportunity to modify the connection
 * as soon as possible. The core server uses this phase to setup the
 * connection record based on the type of connection that is being used.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1151 - 1

/*
 * We don't actually *do* anything here, except note the fact that we were
 * called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1167 - 1

/*
 * We don't actually *do* anything here, except note the fact that we were
 * called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1184 - 1

/*
 * We don't actually *do* anything here, except note the fact that we were
 * called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1201 - 1

/*
 * We don't actually *do* anything here, except note the fact that we were
 * called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1221 - 1

/*
 * We don't actually *do* anything here, except note the fact that we were
 * called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1291 - 1

/*
 * Log the call, but don't do anything else - and report truthfully that
 * we didn't do anything.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1314 - 1

/*
 * This routine is called to perform any module-specific logging activities
 * over and above the normal server things.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1360 - 1

/*
 * This hook is defined in server/core.c, but it is not actually called
 * or documented.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1404 - 1

/*
 * This hook gets run periodically by a maintenance function inside
 * the MPM. Its exact purpose is unknown and undocumented at this time.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1508 - 1

/* argument to include in call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1509 - 1

/* where available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:72 - 1

/* Maximum number of times we camp out before giving up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:85 - 1

/* More fields if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:101 - 1

/*
 * This routine is called in the parent; we must register our
 * mutex type before the config is processed so that users can
 * adjust the mutex settings using the Mutex directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:127 - 1

/*
 * Do nothing if we are not creating the final configuration.
 * The parent process gets initialized a couple of times as the
 * server starts up, and we don't want to create any more mutexes
 * and shared memory segments than we're actually going to use.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:136 - 1

/*
 * The shared memory allocation routines take a file name.
 * Depending on system-specific implementation of these
 * routines, that file may or may not actually be created. We'd
 * like to store those files in the operating system's designated
 * temporary directory, which APR can point us to.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:216 - 1

/* Ugly, but what else? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:267 - 1

/* Some error, log and bail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:275 - 1

/* Some other error, log and bail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:282 - 1

/*
 * The only way to get to this point is if the trylock worked
 * and returned BUSY. So, bump the time and try again
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:332 - 1

/* Swallowing the result because what are we going to do with it at
 * this stage?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:64 - 1

/* we're disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:103 - 1

/* do nothing if disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:66 - 1

/* buffering won't work on subrequests, it would be nice if
 * it did. Within subrequests, we have no EOS to check for,
 * so we don't know when to flush the buffer to the network
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:144 - 1

/* should break out of the loop, since our write to the client
 * failed in some way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:253 - 1

/* flush buckets clear the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:59 - 1

/* no error info yet; value must be 0 for easy init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:61 - 1

/* incomplete multi-byte char at end of content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:81 - 1

/* charset_filter_ctx_t is created for each filter instance; because the same
 * filter code is used for translating in both directions, we need this context
 * data to tell the filter which translation handle to use; it also can hold a
 * character which was split between buckets
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:90 - 1

/* extended error status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:93 - 1

/* has filter instance run before? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:311 - 1

/* xlate_insert_filter() is a filter hook which decides whether or not
 * to insert a translation filter for the current request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:352 - 1

/* stuff that sucks that I know of:
 *
 * bucket handling:
 * why create an eos bucket when we see it come down the stream? just send the one
 * passed as input... news flash: this will be fixed when xlate_out_filter() starts
 * using the more generic xlate_brigade()
 *
 * translation mechanics:
 * we don't handle characters that straddle more than two buckets; an error
 * will be generated
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:441 - 1

/* Keep adding bytes from the input string to the saved string until we
 * 1) finish the input char
 * 2) get an error
 * or 3) run out of bytes to add
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:678 - 1

/* for axing when we're done reading it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:683 - 1

/* Rats... we need to finish a partial character from the previous
 * bucket.
 *
 * Strangely, finish_partial_char() increments the input buffer
 * pointer but does not increment the output buffer pointer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:736 - 1

/* Oops... we have a partial char from the previous bucket
 * that won't be completed because there's no more data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:748 - 1

/* xlate_out_filter() handles (almost) arbitrary conversions from one charset
 * to another...
 * translation is determined in the fixup hook (find_code_page), which is
 * where the filter's context data is set up... the context data gives us
 * the translation handle
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:788 - 1

/* Check the mime type to see if translation should be performed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:795 - 1

/* On an EBCDIC machine, be willing to translate mod_autoindex-
 * generated output. Otherwise, it doesn't look too cool.
 *
 * XXX This isn't a perfect fix because this doesn't trigger us
 * to convert from the charset of the source code to ASCII. The
 * general solution seems to be to allow a generator to set an
 * indicator in the r specifying that the body is coded in the
 * implementation character set (i.e., the charset of the source
 * code). This would get several different types of documents
 * translated properly: mod_autoindex output, mod_status output,
 * mod_info output, hard-coded error documents, etc.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:842 - 1

/* filter never ran before */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:846 - 1

/* We're not converting between two single-byte charsets, so unset
 * Content-Length since it is unlikely to remain the same.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:876 - 1

/* Oops... we have a partial char from the previous bucket
 * that won't be completed because there's no more data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:900 - 1

/* for axing when we're done reading it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:907 - 1

/* maybe we just hit the end of a pipe (len = 0) ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:924 - 1

/* Update input ptr and len after consuming some bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1017 - 1

/* filter never ran before */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1068 - 1

/* make sure we insert at the head, because there may be
 * an eos bucket already there, and the eos bucket should
 * come after the data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:79 - 1

/* base64-ing won't work on subrequests, it would be nice if
 * it did. Within subrequests, we have no EOS to check for,
 * so we don't know when to flush the tail to the network.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:217 - 1

/* save away any tail in the overflow buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:228 - 1

/* should break out of the loop, since our write to the client
 * failed in some way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:93 - 1

/* magic header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:96 - 1

/* windowsize is negative to suppress Zlib header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:177 - 1

/*
 * If we have dealt with the headers above but content_encoding was set
 * before sync it with the new value in the hdrs table as
 * r->content_encoding takes precedence later on in the http_header_filter
 * and hence would destroy what we have just set in the hdrs table.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:530 - 1

/* null terminate newtag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:682 - 1

/* Let's see what our current Content-Encoding is.
 * If it's already encoded, don't compress again.
 * (We could, but let's not.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:734 - 1

/* force-gzip will just force it out regardless if the browser
 * can actually do anything with it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:761 - 1

/* No acceptable token found. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:774 - 1

/* At this point we have decided to filter the content. Let's try to
 * to initialize zlib (except for 304 responses, where we will only
 * send out the headers).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:802 - 1

/*
 * Register a cleanup function to ensure that we cleanup the internal
 * libz resources.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:827 - 1

/* Fix r->content_encoding if it was set before */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:844 - 1

/* add immortal gzip header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:863 - 1

/*
 * Optimization: If we are a HEAD request and bytes_sent is not zero
 * it means that we have passed the content-length filter once and
 * have more data to sent. This means that the content-length filter
 * could not determine our content-length for the response to the
 * HEAD request anyway (the associated GET request would deliver the
 * body in chunked encoding) and we can stop compressing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:881 - 1

/* should be zero already anyway */
 /* flush the remaining data from the zlib buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1023 - 1

/* Consume 2 bytes length prefixed data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1087 - 1

/* Consume CRC16 (2 octets). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1149 - 1

/* Check whether request body is gzipped.
 *
 * If it is, we're transforming the contents, invalidating
 * some request headers including Content-Encoding.
 *
 * If not, we just remove ourself.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1250 - 1

/* The core is checking the deflated body, we'll check the inflated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1257 - 1

/* Don't terminate on EAGAIN (or success with an empty brigade in
 * non-blocking mode), just return focus.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1337 - 1

/* sanity check - data after completed compressed body and before eos? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1424 - 1

/*
 * We have inflated all data. Now try to capture the
 * validation bytes. We may not have them all available
 * right now, but capture what is there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1472 - 1

/* Did we have trailing data behind the closing 8 bytes? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1589 - 1

/*
 * Register a cleanup function to ensure that we cleanup the internal
 * libz resources.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1609 - 1

/*
 * We are really done now. Ensure that we never return here, even
 * if a second EOS bucket falls down the chain. Thus remove
 * ourselves.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1615 - 1

/* should be zero already anyway */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1836 - 1

/*
 * We have inflated all data. Now try to capture the
 * validation bytes. We may not have them all available
 * right now, but capture what is there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:322 - 1

/* XXX need a way to ensure uniqueness among all filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:326 - 1

/* XXX need a way to ensure uniqueness among all filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:384 - 1

/* if at least one limit defined */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:487 - 1

/* We don't want the handle to the child's stdin inherited by any
 * other processes created by httpd. Otherwise, when we close our
 * handle, the child won't see EOF because another handle will still
 * be open.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:598 - 1

/* an environment variable that enables the filter isn't set; bail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:616 - 1

/* nasty, but needed to avoid confusing the browser
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:667 - 1

/* we should never get here; if we do, a bogus error message would be
 * the least of our problems
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:709 - 1

/* some error such as APR_TIMEUP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:766 - 1

/* Good cast, we just tested len isn't negative */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:779 - 1

/* close the child's stdin to signal that no more data is coming;
 * that will cause the child to finish generating output
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:919 - 1

/* Match behaviour of HTTP_IN if filter is re-invoked after
 * hitting EOS: give back another EOS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:119 - 1

/* if anyone errors out here, so do we */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:171 - 1

/* Handle 'content-type;charset=...' correctly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:291 - 1

/* look up a handler function if we haven't already set it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:347 - 1

/* Fixup the args: it's really pname that's optional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:191 - 1

/* currently parsed argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:192 - 1

/* all arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:419 - 1

/* DEBUG_INCLUDE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:437 - 1

/* !DEBUG_INCLUDE */


/*
 * +-------------------------------------------------------+
 * | |
 * | Static Module Data
 * | |
 * +-------------------------------------------------------+
 */

/* global module structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:457 - 1

/* Sentinel value to store in subprocess_env for items that
 * shouldn't be evaluated until/unless they're actually used
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:499 - 1

/* The following is a shrinking transformation, therefore safe. */

/* Note: this function is deprecated in favour of apr_unescape_entity() in APR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:656 - 1

/* Handle $0 .. $9 from the last regex evaluated.
 * The choice of returning NULL strings on not-found,
 * v.s. empty strings on an empty match is deliberate.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:774 - 1

/* well, actually something to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1183 - 1

/* uncomment this to see how the tree a built:
 *
 * DEBUG_DUMP_TREE(ctx, root);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1851 - 1

/*"e;;
 }

 /* See the Kludge in includes_filter for why.
 * Basically, it puts a bread crumb in here, then looks
 * for the crumb later to see if its been here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1870 - 1

/* onerror threw an error, give up completely */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2835 - 1

/* wow, found it. ready. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2976 - 1

/* work hard to find a match ;-) */

 /* no match at all, release all (wrongly) matched chars so far */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2999 - 1

/* we have to consider the case of missing space between directive
 * and end_seq (be somewhat lenient), e.g. <!--#printenv-->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3049 - 1

/* continue immediately with the next state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3084 - 1

/*
 * find out whether the next token is (a possible) end_seq or an argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3107 - 1

/*
 * test the stream for end_seq. If it doesn't match at all, it must be an
 * argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3141 - 1

/* no match. It must be an argument string then
 * The caller should cleanup and rewind to the reparse point
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3163 - 1

/*
 * create argument structure and append it to the current list
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3183 - 1

/* check whether it's a valid one. If it begins with a quote, we
 * can safely assume, someone forgot the name of the argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3207 - 1

/* continue immediately with next state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3239 - 1

/* continue with next state immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3290 - 1

/* continue with next state immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3376 - 1

/* magic pointer for sentinel use */

 /* fast exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3406 - 1

/* handle meta buckets before reading any data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3496 - 1

/*
 * it's actually a data containing bucket, start/continue parsing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3538 - 1

/* check if we mismatched earlier and have to release some chars */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3775 - 1

/*
 * +-------------------------------------------------------+
 * | |
 * | Runtime Hooks
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3799 - 1

/* Don't allow ETag headers to be generated - see RFC2616 - 13.3.4.
 * We don't know if we are going to be including a file or executing
 * a program - in either case a strong ETag header will likely be invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3839 - 1

/* runtime data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3870 - 1

/* Kludge --- for nested includes, we want to keep the subprocess
 * environment of the base document (for compatibility); that means
 * torquing our own last_modified date as well so that the
 * LAST_MODIFIED variable gets reset to the proper value if the
 * nested document resets <!--#config timefmt -->.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3912 - 1

/* update the last modified if we have a valid time, and only if
 * we don't already have a valid last modified.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3936 - 1

/* add QUERY stuff to env cause it ain't yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:293 - 1

/* do nothing if overridden in config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:351 - 1

/* enforce html */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:358 - 1

/* enforce html legacy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:403 - 1

/* enforce html */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:412 - 1

/* enforce html legacy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:550 - 1

/* URIs only want one match unless overridden in the config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:668 - 1

/* if there are more required attributes than we found then complain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:710 - 1

/* No terminating delimiter found? Skip the boggus directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:923 - 1

/* For documents smaller than four bytes, there is no reason to do
 * HTML rewriting. The URL schema (i.e. 'http') needs four bytes alone.
 * And the HTML parser needs at least four bytes to initialise correctly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:994 - 1

/*ap_fflush(ctxt->f->next, ctxt->bb); // uncomment for debug */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1095 - 1

/* back-compatibility: support old-style ENV expressions
 * by converting to ap_expr syntax.
 *
 * 1. var --> env(var)
 * 2. var=val --> env(var)=val
 * 3. !var --> !env(var)
 * 4. !var=val --> env(var)!=val
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1315 - 1

/* move this to pre_config so old_expr is available to interpret
 * old-style conditions on URL maps.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:122 - 1

/* Find where we 'stop' going full speed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:139 - 1

/*
 * We MUST read because in case we have an unknown-length
 * bucket or one that morphs, we want to exhaust it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:153 - 1

/* no way to know what type of error occurred */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:131 - 1

/*
 * Append bbIn to bbOut and merge small buckets, to avoid DoS by high memory
 * usage
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:242 - 1

/*
 * For a blocking AP_MODE_GETLINE read, apr_brigade_split_line()
 * would loop until a whole line has been read. As this would make it
 * impossible to enforce a total timeout, we only do non-blocking
 * reads.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:321 - 1

/* Don't extend the timeout in speculative mode, wait for
 * the real (relevant) bytes to be asked later, within the
 * currently alloted time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:364 - 1

/* disabled for this vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:422 - 1

/* either disabled for this connection or a CONNECT request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:601 - 1

/*
 * mod_ssl is AP_FTYPE_CONNECTION + 5 and mod_reqtimeout needs to
 * be called before mod_ssl. Otherwise repeated reads during the ssl
 * handshake can prevent the timeout from triggering.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:30 - 1

/* For errors detected in basic auth common
 * support code... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:91 - 1

/* fail fast if the content length exceeds keep body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:95 - 1

/* Protects against over/underflow, non-digit chars in the
 * string (excluding leading space) (the endstr checks)
 * and a negative number. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:108 - 1

/* If we have a limit in effect and we know the C-L ahead of
 * time, stop it here if it is invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:133 - 1

/* does the length take us over the limit? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:147 - 1

/* pass any errors downstream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:174 - 1

/**
 * Initialisation of filter to handle a kept body on subrequests.
 *
 * If a body is to be reinserted into a subrequest, any chunking will have
 * been removed from the body during storage. We need to change the request
 * from Transfer-Encoding: chunked to an explicit Content-Length.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:218 - 1

/* set up the context if it does not already exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:253 - 1

/* As above; this should not fail since the bucket has
 * a known length, but just to be sure, this takes
 * care of uncopyable buckets that do somehow manage
 * to slip through. */
 /* XXX: check for failure? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:271 - 1

/**
 * Check whether this filter is not already present.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:286 - 1

/**
 * Insert filter hook.
 *
 * Add the KEEP_BODY filter to the request, if the admin wants to keep
 * the body using the KeptBodySize directive.
 *
 * As a precaution, any pre-existing instances of either the kept_body or
 * keep_body filters will be removed before the filter is added.
 *
 * @param r The request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:61 - 1

/* This function will be call back from libsed functions if there is any error
 * happend during execution of sed scripts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:71 - 1

/* This function will be call back from libsed functions if there is any
 * compilation error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:81 - 1

/* clear the temporary pool (used for transient buckets)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:178 - 1

/* pool might get clear after append_bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:238 - 1

/* Create the context. Call sed_init_eval. libsed will generated
 * output by calling sed_write_output and generates any error by
 * invoking log_sed_errf.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:300 - 1

/* Here is the main logic. Iterate through all the buckets, read the
 * content of the bucket, call sed_eval_buffer on the data.
 * sed_eval_buffer will read the data line by line, run filters on each
 * line. sed_eval_buffer will generates the output by calling
 * sed_write_output which will add the output to ctx->bb. At the end of
 * the loop, ctx->bb is passed to the next filter in chain. At the end of
 * the data, if new line is not found then sed_eval_buffer will store the
 * data in its own buffer.
 *
 * Once eos bucket is found then sed_finalize_eval will flush the rest of
 * the data. If there is no new line in last line of data, new line is
 * appended (that is a solaris sed behavior). libsed's internal memory for
 * evaluation is allocated on request's pool so it will be cleared once
 * request is over.
 *
 * If flush bucket is found then append the flush bucket to ctx->bb
 * and pass it to next filter. There may be some data which will still be
 * in sed's internal buffer which can't be flushed until new line
 * character is arrived.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:443 - 1

/* eos bucket. Clear the internal sed buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:197 - 1

/*
 * The string before the match but after the
 * previous match (if any) has length 'len'.
 * Check if we still have space for this string and
 * the replacement string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:206 - 1

/*
 * We now split off the string before the match
 * as its own bucket, then isolate the matched
 * string and delete it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:264 - 1

/* check remaining buffer size */
 /* Note that the last param in ap_varbuf_regsub below
 * must stay positive. If it gets 0, it would mean
 * unlimited space available. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:270 - 1

/* copy bytes before the match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:273 - 1

/* add replacement string, last argument is unsigned! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:282 - 1

/* acount for string before the match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:358 - 1

/*
 * Create all the temporary brigades we need and reuse them to avoid
 * creating them over and over again from r->pool which would cost a
 * lot of memory in some cases.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:461 - 1

/*
 * We've likely read more data, so bypass rereading
 * bucket data and continue scanning through this
 * buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:488 - 1

/* Avoid pflattening further lines, we will
 * abort later on anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:558 - 1

/*
 * Provide ap_save_brigade with an existing empty brigade
 * (ctx->linesbb) to avoid creating a new one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:138 - 1

/* found a starting element. Strip all that comes before. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:227 - 1

/* cut out the <meta> we're invalidating */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:249 - 1

/* Unsupported charset. Can we get (iconv) support through apr_xlate? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:310 - 1

/* log error about configuring this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:374 - 1

/* consume the data we just sniffed */
 /* we need to omit any <meta> we just invalidated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:411 - 1

/* we have dangling data. Flatten it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:459 - 1

/* nothing was converted last time!
 * break out of this loop! 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:491 - 1

/* If outbuf too small, go round again.
 * If it was inbuf, we'll break out when
 * we test ctx->bytes == ctx->bblen
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:74 - 1

/* No error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:124 - 1

/*
 * sed_get_finalize_error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:884 - 1

/* overflowed the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:661 - 1

/* expand genbuf and set the sp appropriately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:665 - 1

/*
 * If the current directory explicitly says 'no options' then we also
 * clear any incremental mods from being inheritable further down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:693 - 1

/*
 * There are local nonincremental settings, which clear
 * all inheritance from above. They *are* the new base settings.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:739 - 1

/****************************************************************
 *
 * Looking things up in config entries...
 */

/* Structure used to hold entries when we're actually building an index */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:852 - 1

/*
 * Make the comparison using the cheapest method; only do
 * wildcard checking if we must.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:914 - 1

/*****************************************************************
 *
 * Actually generating output
 */

/*
 * Elements of the emitted document:
 * Preamble
 * Emitted unless SUPPRESS_PREAMBLE is set AND ap_run_sub_req
 * succeeds for the (content_type == text/html) header file.
 * Header file
 * Emitted if found (and able).
 * H1 tag line
 * Emitted if a header file is NOT emitted.
 * Directory stuff
 * Always emitted.
 * HR
 * Emitted if FANCY_INDEXING is set.
 * Readme file
 * Emitted if found (and able).
 * ServerSig
 * Emitted if ServerSignature is not Off AND a readme file
 * is NOT emitted.
 * Postamble
 * Emitted unless SUPPRESS_PREAMBLE is set AND ap_run_sub_req
 * succeeds for the (content_type == text/html) readme file.
 */


/*
 * emit a plain text file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1066 - 1

/* It didn't work */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1072 - 1

/*
 * If we can open the file, prefix it with the preamble
 * regardless; since we'll be sending a <pre> block around
 * the file's contents, any HTML header it had won't end up
 * where it belongs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1289 - 1

/* Special alt text for parent dir to distinguish it from other directories
 this is essential when trying to style this dir entry via AddAltClass */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1310 - 1

/* Dot is ignored, Parent is handled by make_parent_entry() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1421 - 1

/*
 * If there's no DescriptionWidth in effect, default to the old
 * behaviour of adjusting the description size depending upon
 * what else is being displayed. Otherwise, stick with the
 * setting.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1685 - 1

/* Even/Odd rows for IndexStyleSheet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1895 - 1

/*
 * Compare two file entries according to the sort criteria. The return
 * is essentially a signum function value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1923 - 1

/*
 * All of our comparisons will be of the c1 entry against the c2 one,
 * so assign them appropriately to take care of the ordering.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1984 - 1

/* The names may be identical in respects other than
 * filename case when strnatcmp is used above, so fall back
 * to strcmp on conflicts so that fn1.01.zzz and fn1.1.zzz
 * are also sorted in a deterministic order.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2159 - 1

/* ignore the pattern, if it's bad. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2214 - 1

/* ignore un-stat()able files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2294 - 1

/* OK, nothing easy. Trot out the heavy artillery... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:72 - 1

/* KLUDGE --- for back-combatibility, we don't have to check ExecCGI
 * in ScriptAliased directories, which means we need to know if this
 * request came through ScriptAlias or not... so the Alias module
 * leaves a note for us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:199 - 1

/* Soak up stderr from a script and redirect it to the error log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:419 - 1

/* Transmute ourselves into the script.
 * NB only ISINDEX scripts get decoded arguments.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:797 - 1

/*
 if (!ap_suexec_enabled) {
 if (!ap_can_exec(&r->finfo))
 return log_scripterror(r, conf, HTTP_FORBIDDEN, 0,
 "e;file permissions deny server execution"e;);
 }

*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1031 - 1

/* don't soak up script output if errors occurred writing it
 * out... otherwise, we prolong the life of the script when the
 * connection drops or we stopped sending output for some other
 * reason */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1149 - 1

/* We can't close the pipe here, because we may return before the
 * full CGI has been sent to the network. That's okay though,
 * because we can rely on the pool to close the pipe for us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:69 - 1

/* ### should be tossed in favor of APR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:104 - 1

/* The APR other-child API doesn't tell us how the daemon exited
 * (SIGSEGV vs. exit(1)). The other-child maintenance function
 * needs to decide whether to restart the daemon after a failure
 * based on whether or not it exited due to a fatal startup error
 * or something that happened at steady-state. This exit status
 * is unlikely to collide with exit signals.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:125 - 1

/* KLUDGE --- for back-combatibility, we don't have to check ExecCGI
 * in ScriptAliased directories, which means we need to know if this
 * request came through ScriptAlias or not... so the Alias module
 * leaves a note for us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:288 - 1

/* If apache is not terminating or restarting,
 * restart the cgid daemon
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:323 - 1

/* send signal to daemon telling it to die */

 /* Remove the cgi socket, we must do it here in order to try and
 * guarantee the same permissions as when the socket was created.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:345 - 1

/* deal with incomplete reads and signals
 * assume you really have to read buf_size bytes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:631 - 1

/* can't fail, so can't clobber errno */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:792 - 1

/* Something bad happened, tell the world.
 * ap_log_rerror() won't work because the header table used by
 * ap_log_rerror() hasn't been replicated in the phony r
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:807 - 1

/* We want to close sd2 for the new CGI process too.
 * If it is left open it'll make ap_pass_brigade() block
 * waiting for EOF if CGI forked something running long.
 * close(sd2) here should be okay, as CGI channel
 * is already dup()ed by apr_procattr_child_{in,out}_set()
 * above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:830 - 1

/* Bad things happened. Everyone should have cleaned up.
 * ap_log_rerror() won't work because the header table used by
 * ap_log_rerror() hasn't been replicated in the phony r
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:842 - 1

/* If the script process was created, remember the pid for
 * later cleanup. If the script process wasn't created, clear
 * out any prior pid with the same key.
 *
 * We don't want to leak storage for the key, so only allocate
 * a key if the key doesn't exist yet in the hash; there are
 * only a limited number of possible keys (one for each
 * possible thread in the server), so we can allocate a copy
 * of the key the first time a thread has a cgid request.
 * Note that apr_hash_set() only uses the storage passed in
 * for the key if it is adding the key to the hash for the
 * first time; new key storage isn't needed for replacing the
 * existing value of a key.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:866 - 1

/* should be <= 0 to distinguish from startup errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:873 - 1

/* clear setting from previous generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1251 - 1

/* If we didn't find the socket but the server was not recently restarted,
 * chances are there's something wrong with the cgid daemon
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1366 - 1

/* we got a socket, and there is already a cleanup registered for it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1460 - 1

/*
 if (!ap_suexec_enabled) {
 if (!ap_can_exec(&r->finfo))
 return log_scripterror(r, conf, HTTP_FORBIDDEN, 0, APLOGNO(01267)
 "e;file permissions deny server execution"e;);
 }
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1825 - 1

/* for this type of request, the script is invoked through an
 * intermediate shell process... cleanup_script is only able
 * to knock out the shell process, not the actual script
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:282 - 1

/*
 * hook_get_t is a pointer to a function that takes void as an argument and
 * returns a pointer to an apr_array_header_t. The nasty WIN32 ifdef
 * is required to account for the fact that the ap_hook* calls all use
 * STDCALL calling convention.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:953 - 1

/* work around buggy MPMs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:117 - 1

/* XXX - Another important reason not to allow this in .htaccess is that
 * the ap_[ug]name2id() is not thread-safe */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:42 - 1

/* For errors detected in basic auth common
 * support code... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:108 - 1

/* is content already a single range? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:113 - 1

/* is content already a multiple range? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:146 - 1

/*
 * Per RFC 2616 14.35.1: If there is at least one syntactically invalid
 * byte-range-spec, we must ignore the whole header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:183 - 1

/*
 * special case: 0-
 * ignore all other ranges provided
 * return as a single range: 0-
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:457 - 1

/* No Ranges or we hit a limit? We have nothing to do, get out of the way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:490 - 1

/* if we have no type for the content, do our best */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:542 - 1

/*
 * Every now and then, pass what we have down the filter chain.
 * In this case, the content-length filter cannot calculate and
 * set the content length and we must remove any Content-Length
 * header already present.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:556 - 1

/* bsend is assumed to be empty if we get here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:41 - 1

/*
 * A pointer to this is used to memorize in the filter context that a bad
 * gateway error bucket had been seen. It is used as an invented unique pointer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:78 - 1

/*
 * We had a broken backend. Memorize this in the filter
 * context.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:143 - 1

/*
 * Insert the end-of-chunk CRLF before an EOS or
 * FLUSH bucket, or appended to the brigade
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:65 - 1

/* We don't want to take into account whether or not KeepAliveTimeout is
 * set for the main server, because if no http_module directive is used
 * for a vhost, it will inherit the http_srv_cfg from the main server.
 * However keep_alive_timeout_set helps determine whether the vhost should
 * use its own configured timeout or the one from the vhost delared first
 * on the same IP:port (ie. c->base_server, and the legacy behaviour).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:149 - 1

/* process the request if it was read without error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:195 - 1

/* To preserve legacy behaviour, use the keepalive timeout from the
 * base server (first on this IP:port) when none is explicitly
 * configured on this server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:204 - 1

/* process the request if it was read without error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:277 - 1

/* Send HTTP pong, without Allow header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:56 - 1

/*
 * Construct an entity tag (ETag) from resource information. If it's a real
 * file, build in some of the file characteristics. If the modification time
 * is newer than (request-time minus 1 second), mark the ETag as weak - it
 * could be modified again in as short an interval. We rationalize the
 * modification time we're given to keep it from being in the future.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:76 - 1

/*
 * If it's a file (or we wouldn't be here) and no ETags
 * should be set for files, return an empty string and
 * note it for the header-sender to ignore.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:89 - 1

/*
 * Make an ETag header out of various pieces of information. We use
 * the last-modified date and, if we have a real file, the
 * length and inode number - note that this doesn't have to match
 * the content-length (i.e. includes), it just has to be unique
 * for the file.
 *
 * If the request was made within a second of the last-modified date,
 * we send a weak tag instead of a strong one, since it could
 * be modified again later in the second, and the validation
 * would be incorrect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:42 - 1

/* For errors detected in basic auth common
 * support code... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:78 - 1

/* chunked data terminating CRLF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:185 - 1

/* ignore leading zeros */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:193 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:213 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:304 - 1

/* LimitRequestBody does not apply to proxied responses.
 * Consider implementing this check in its own filter.
 * Would adding a directive to limit the size of proxied
 * responses be useful?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:337 - 1

/* Something that isn't a HTTP request, unless some future
 * edition defines new transfer encodings, is unsupported.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:351 - 1

/* Protects against over/underflow, non-digit chars in the
 * string (excluding leading space) (the endstr checks)
 * and a negative number. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:364 - 1

/* If we have a limit in effect and we know the C-L ahead of
 * time, stop it here if it is invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:411 - 1

/* if we send an interim response, we're no longer
 * in a state of expecting one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:497 - 1

/* Treat UNSET as DISABLE - trailers aren't merged by default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:508 - 1

/* Ensure that the caller can not go over our boundary point. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:536 - 1

/* If this happens, we have a bucket of unknown length. Die because
 * it means our assumptions have changed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:556 - 1

/* We have a limit in effect. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:692 - 1

/* Send a single HTTP header field to the client. Note that this function
 * is used in calls to apr_table_do(), so don't change its interface.
 * It returns true unless there was a write error of some kind.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:762 - 1

/* Now add it to values if it isn't already represented.
 * Could be replaced by a ap_array_strcasecmp() if we had one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:790 - 1

/* Extract all Vary fields from the headers_out, separate each into
 * its comma-separated fieldname values, and then add them to varies
 * if not already present in the array.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:928 - 1

/* Note that we must downgrade before checking for force responses. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:995 - 1

/*
 * proxy_date needs to be const. So use date for the creation of
 * our own Date header and pass it over to proxy_date later to
 * avoid a compiler warning.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1023 - 1

/*
 * Date and Server are less interesting, use TRACE5 for them while
 * using TRACE4 for the other headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1036 - 1

/* Avoid bogosity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1071 - 1

/* init to avoid gcc -Wall warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1484 - 1

/* We MUST read because in case we have an unknown-length
 * bucket or one that morphs, we want to exhaust it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1580 - 1

/* Make sure ap_getline() didn't leave any droppings. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1592 - 1

/* First check if we have already read the request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1663 - 1

/* if we actually fail here, we want to just return and
 * stop trying to read data from the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1709 - 1

/* Filter to handle any error buckets on output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1727 - 1

/*
 * Start of error handling state tree. Just one condition
 * right now :)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1733 - 1

/* stream aborted and we have not ended it yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:44 - 1

/* For errors detected in basic auth common
 * support code... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:63 - 1

/* New Apache routine to map status codes into array indicies
 * e.g. 100 -> 0, 101 -> 1, 200 -> 2 ...
 * The number of status lines must equal the value of
 * RESPONSE_CODES (httpd.h) and must be listed in order.
 * No gaps are allowed between X00 and the largest Xnn
 * for any X (see ap_index_of_response).
 * When adding a new code here, add a define to httpd.h
 * as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:170 - 1

/* The index of the first bit field that is used to index into a limit
 * bitmask. M_INVALID + 1 to METHOD_NUMBER_LAST.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:175 - 1

/* The max method number. Method numbers are used to shift bitmasks,
 * so this cannot exceed 63, and all bits high is equal to -1, which is a
 * special flag, so the last bit used has index 62.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:294 - 1

/*
 * If we had previously been a keepalive connection and this
 * is the last one, then bump up the number of keepalives
 * we've had
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:632 - 1

/**
 * Singleton registry of additional methods. This maps new method names
 * such as "e;MYGET"e; to methnums, which are int offsets into bitmasks.
 *
 * This follows the same technique as standard M_GET, M_POST, etc. These
 * are dynamically assigned when modules are loaded and <Limit GET MYGET>
 * directives are processed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:653 - 1

/* This internal function is used to clear the method registry
 * and reset the cur_method_number counter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1031 - 1

/* the M_GET method actually refers to two methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1387 - 1

/* and we need to get rid of any RESOURCE filters that might be lurking
 * around, thinking they are in the middle of the original request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1434 - 1

/* avoids coredump when printing, below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1446 - 1

/* avoid adding default
 * charset later
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1561 - 1

/*
 * Make a copy of a method list (primarily for subrequests that may
 * subsequently change it; don't want them changing the parent's, too!).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1606 - 1

/*
 * Add the specified method to a method list (if it isn't already there).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:54 - 1

/*****************************************************************
 *
 * Mainline request processing...
 */

/* XXX A cleaner and faster way to do this might be to pass the request_rec
 * down the filter chain as a parameter. It would need to change for
 * subrequest vs. main request filters; perhaps the subrequest filter could
 * make the switch.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:128 - 1

/* Get back to original error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:154 - 1

/*
 * This test is done here so that none of the auth modules needs to know
 * about proxy authentication. They treat it like normal auth, and then
 * we tweak the status.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:163 - 1

/* If we don't want to keep the connection, make sure we mark that the
 * connection is not eligible for keepalive. If we want to keep the
 * connection, be sure that the request body (if any) has been read.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:179 - 1

/*
 * The URL isn't local, so lets drop through the rest of this
 * apache code, and continue with the usual REDIRECT handler.
 * But note that the client will ultimately see the wrong
 * status...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:190 - 1

/* Do NOT send HTTP_NOT_MODIFIED for
 * error documents! */
 /*
 * This redirect needs to be a GET no matter what the original
 * method was.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:198 - 1

/*
 * Provide a special method for modules to communicate
 * more informative (than the plain canned) messages to us.
 * Propagate them to ErrorDocuments via the ERROR_NOTES variable:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:247 - 1

/*
 * Error or empty brigade: There is no data present in the input
 * filter
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:252 - 1

/* Unexpected error, stop with this connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:270 - 1

/* Unexpected error, stop with this connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:275 - 1

/* Let outside (non-speculative/blocking) read determine
 * where this possible failure comes from (metadata,
 * morphed EOF socket => empty bucket? debug only here).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:357 - 1

/* From here onward, it is no longer safe to reference r
 * or r->pool, because r->pool may have been destroyed
 * already by the EOR bucket's cleanup function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:512 - 1

/*
 * A whole lot of this really ought to be shared with http_protocol.c...
 * another missing cleanup. It's particularly inappropriate to be
 * setting header_only, etc., here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:535 - 1

/* Must have prev and next pointers set before calling create_request
 * hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:583 - 1

/* If this is a subrequest, the filter chain may contain a
 * mixture of filters specific to the old request (r), and
 * some inherited from r->main. Here, inherit that filter
 * chain, and remove all those which are specific to the old
 * request; ensuring the subreq filter is left in place. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:599 - 1

/* To remove the filter, first set f->r to the *new*
 * request_rec, so that ->output_filters on 'new' is
 * changed (if necessary) when removing the filter. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:615 - 1

/* If this is not a subrequest, clear out all
 * resource-specific filters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:626 - 1

/* Begin by presuming any module can make its own path_info assumptions,
 * until some module interjects and changes the value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:648 - 1

/* XXX: Is this function is so bogus and fragile that we deep-6 it? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:651 - 1

/* We need to tell POOL_DEBUG that we're guaranteeing that rr->pool
 * will exist as long as r->pool. Otherwise we run into troubles because
 * some values in this request will be allocated in r->pool, and others in
 * rr->pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:709 - 1

/*
 * We need to check if we now have the SUBREQ_CORE filter in our filter
 * chain. If this is the case we need to remove it since we are NO
 * subrequest. But we need to keep in mind that the SUBREQ_CORE filter
 * does not necessarily need to be the first filter in our chain. So we
 * need to go through the chain. But we only need to walk up the chain
 * until the proto_output_filters as the SUBREQ_CORE filter is below the
 * protocol filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:39 - 1

/* XXXX - fix me / EBCDIC
 * there was a cludge here which would use its
 * own version apr_isascii(). Indicating that
 * on some platforms that might be needed.
 *
 * #define OS_ASC(c) (c) -- for mere mortals
 * or
 * #define OS_ASC(c) (ebcdic2ascii[c]) -- for dino's
 *
 * #define apr_isascii(c) ((OS_ASC(c) & 0x80) == 0)
 */

/* XXXXX - fix me - See note with NOT_PROXY
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:88 - 1

/* If set to 0, only use filename.
 * If set to 1, append PATH_INFO to filename for
 * lookups.
 * If set to 2, this value is unset and is
 * effectively 0.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:133 - 1

/*
 * Overlay one hash table of extension_mappings onto another
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:276 - 1

/*
 * As RemoveType should also override the info from TypesConfig, we add an
 * empty string as type instead of actually removing the type.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:792 - 1

/* The exception list keeps track of those filename components that
 * are not associated with extensions indicating metadata.
 * The base name is always the first exception (i.e., "e;txt.html"e; has
 * a basename of "e;txt"e; even though it might look like an extension).
 * Leading dots are considered to be part of the base name (a file named
 * "e;.png"e; is likely not a png file but just a hidden file called png).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:821 - 1

/* ignore empty extensions "e;bad..html"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:827 - 1

/* Save the ext in extcase before converting it to lower case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:894 - 1

/* XXX Two significant problems; 1, we don't check to see if we are
 * setting redundant filters. 2, we insert these in the types
 * config hook, which may be too early (dunno.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1010 - 1

/*
 * this hook seems redundant ... is there any reason a type checker isn't
 * allowed to do this already? I'd think that fixups in general would be
 * the last opportunity to get the filters right.
 * ap_hook_insert_filter(mime_insert_filters,NULL,NULL,APR_HOOK_MIDDLE);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:52 - 1

/* mandatory : */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:54 - 1

/* optional host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:93 - 1

/* We have alt-svcs defined and client is not already using
 * one, announce the services that were configured and match. 
 * The security of this connection determines if we allow
 * other host names or ports only.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:253 - 1

/* Simulate that we had already a request on this connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:277 - 1

/* This is an internal mpm event.c struct which is disguised
 * as a conn_state_t so that mpm_event can have special connection
 * state information without changing the struct seen on the outside.
 *
 * For our task connections we need to create a new beast of this type
 * and fill it with enough meaningful things that mpm_event reads and
 * starts processing out task request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:35 - 1

/* Calculated like this: assuming MTU 1500 bytes
 * 1500 - 40 (IP) - 20 (TCP) - 40 (TCP options) 
 * - TLS overhead (60-100) 
 * ~= 1300 bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:128 - 1

/* Bring the current buffer content into the output brigade, appropriately
 * chunked.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:98 - 1

/* continuation line from the header before this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:258 - 1

/* Now add it to values if it isn't already represented.
 * Could be replaced by a ap_array_strcasecmp() if we had one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:286 - 1

/* Extract all Vary fields from the headers_out, separate each into
 * its comma-separated fieldname values, and then add them to varies
 * if not already present in the array.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:315 - 1

/*
 * proxy_date needs to be const. So use date for the creation of
 * our own Date header and pass it over to proxy_date later to
 * avoid a compiler warning.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:366 - 1

/*
 * Remove the 'Vary' header field if the client can't handle it.
 * Since this will have nasty effects on HTTP/1.1 caches, force
 * the response into HTTP/1.0 mode.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:574 - 1

/* FIXME: need a better test case than this.
 apr_table_setn(r->trailers_out, "e;X"e;, "e;1"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:54 - 1

/*******************************************************************************
 * The optional mod_ssl functions we need. 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:74 - 1

/*******************************************************************************
 * HTTP/2 error stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:446 - 1

/*******************************************************************************
 * Once per lifetime init, retrieve optional functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:607 - 1

/* Fresh connection still is on http/1.1 and H2Direct is enabled. 
 * Otherwise connection is in a fully acceptable state.
 * -> peek at the first 24 incoming bytes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:667 - 1

/* This hook will get called twice on internal redirects. Take care
 * that we manipulate filters only once. */
 /* our slave connection? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:313 - 1

/* just checking length available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:369 - 1

/* We have already delivered an EOS bucket to a reader, no
 * sense in storing anything more here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io_set.c:93 - 1

/* Normally, streams get added in ascending order if id. We
 * keep the array sorted, so we just need to check of the newly
 * appended stream has a lower id than the last one. if not,
 * sorting is not necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io_set.c:137 - 1

/* For now, this just removes the first element in the set.
 * the name is misleading...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:222 - 1

/* Process outstanding events before destruction */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:252 - 1

/* already finished or not even started yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:278 - 1

/* disable WINDOW_UPDATE callbacks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:298 - 1

/* Oh, oh. Still we wait for assigned workers to report that 
 * they are done. Unless we have a bug, a worker seems to be hanging. 
 * If we exit now, all will be deallocated and the worker, once 
 * it does return, will walk all over freed memory...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:342 - 1

/* there should be an h2_io, once the stream has been scheduled
 * for processing, e.g. when we received all HEADERs. But when
 * a stream is cancelled very early, it will not exist. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:242 - 1

/* value is optional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:302 - 1

/* We only want to generate pushes for resources in the
 * same authority than the original request.
 * icing: i think that is wise, otherwise we really need to
 * check that the vhost/server is available and uses the same
 * TLS (if any) parameters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:346 - 1

/* RFC 5988 <https://tools.ietf.org/html/rfc5988#section-6.2.1>
 Link = "e;Link"e; "e;:"e; #link-value
 link-value = "e;<"e; URI-Reference "e;>"e; *( "e;;"e; link-param )
 link-param = ( ( "e;rel"e; "e;="e; relation-types )
 | ( "e;anchor"e; "e;="e; <"e;> URI-Reference <"e;> )
 | ( "e;rev"e; "e;="e; relation-types )
 | ( "e;hreflang"e; "e;="e; Language-Tag )
 | ( "e;media"e; "e;="e; ( MediaDesc | ( <"e;> MediaDesc <"e;> ) ) )
 | ( "e;title"e; "e;="e; quoted-string )
 | ( "e;title*"e; "e;="e; ext-value )
 | ( "e;type"e; "e;="e; ( media-type | quoted-mt ) )
 | ( link-extension ) )
 link-extension = ( parmname [ "e;="e; ( ptoken | quoted-string ) ] )
 | ( ext-name-star "e;="e; ext-value )
 ext-name-star = parmname "e;*"e; ; reserved for RFC2231-profiled
 ; extensions. Whitespace NOT
 ; allowed in between.
 ptoken = 1*ptokenchar
 ptokenchar = "e;!"e; | "e;#"e; | "e;$"e; | "e;%"e; | "e;&"e; | "e;'"e; | "e;("e;
 | "e;)"e; | "e;*"e; | "e;+"e; | "e;-"e; | "e;."e; | "e;/"e; | DIGIT
 | "e;:"e; | "e;<"e; | "e;="e; | "e;>"e; | "e;?"e; | "e;@"e; | ALPHA
 | "e;["e; | "e;]"e; | "e;^"e; | "e;_"e; | "e;`"e; | "e;{"e; | "e;|"e;
 | "e;}"e; | "e;~"e;
 media-type = type-name "e;/"e; subtype-name
 quoted-mt = <"e;> media-type <"e;>
 relation-types = relation-type
 | <"e;> relation-type *( 1*SP relation-type ) <"e;>
 relation-type = reg-rel-type | ext-rel-type
 reg-rel-type = LOALPHA *( LOALPHA | DIGIT | "e;."e; | "e;-"e; )
 ext-rel-type = URI

 and from <https://tools.ietf.org/html/rfc5987>
 parmname = 1*attr-char
 attr-char = ALPHA / DIGIT
 / "e;!"e; / "e;#"e; / "e;$"e; / "e;&"e; / "e;+"e; / "e;-"e; / "e;."e;
 / "e;^"e; / "e;_"e; / "e;`"e; / "e;|"e; / "e;~"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:550 - 1

/* the mask we use in value comparision depends on where we got
 * the values from. If we calculate them ourselves, we can use
 * the full 64 bits.
 * If we set the diary via a compressed golomb set, we have less
 * relevant bits and need to use a smaller mask. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:104 - 1

/* ignore duplicate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:268 - 1

/* If we have a content-type, but already see eos, no more
 * data will come. Signal a zero content length explicitly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:278 - 1

/* In the presence of trailers, force behaviour of chunked encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:373 - 1

/* Must be set before we run create request hook */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:391 - 1

/* Begin by presuming any module can make its own path_info assumptions,
 * until some module interjects and changes the value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:417 - 1

/* update what we think the virtual host is based on the headers we've
 * now read. may update status.
 * Leave r->hostname empty, vhost will parse if form our Host: header,
 * otherwise we get complains about port numbers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:439 - 1

/* Request check post hooks failed. An example of this would be a
 * request for a vhost where h2 is disabled --> 421.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:108 - 1

/**
 * Determine the importance of streams when scheduling tasks.
 * - if both stream depend on the same one, compare weights
 * - if one stream is closer to the root, prioritize that one
 * - if both are on the same level, use the weight of their root
 * level ancestors
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:237 - 1

/* ignore */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:340 - 1

/* just ignore */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:647 - 1

/* This is an early cleanup of the session that may
 * discard what is no longer necessary for *new* streams
 * and general HTTP/2 processing.
 * At this point, all frames are in transit or somehwere in
 * our buffers or passed down output filters.
 * h2 streams might still being written out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:740 - 1

/* keep us from destroying the pool, since that is already ongoing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1076 - 1

/* Resume all streams where we have data in the out queue and
 * which had been suspended before. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1107 - 1

/* The session wants to send more DATA for the stream. We need
 * to find out how much of the requested length we can send without
 * blocking.
 * Indicate EOS when we encounter it or DEFERRED if the stream
 * should be suspended. Beware of trailers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1142 - 1

/* If there is no data available, our session will automatically
 * suspend this stream and not ask for more data until we resume
 * it. Remember at our h2_stream that we need to do this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1394 - 1

/* PUSHed stream os to be sent BEFORE the initiating stream.
 * It gets the same weight as the initiating stream, replaces
 * that stream in the dependency tree and has the initiating
 * stream as child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1447 - 1

/* this may be called while the session has already freed
 * some internal structures. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1615 - 1

/* successful read, reset our idle timers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1744 - 1

/* already did that? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1761 - 1

/* already received that? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:2031 - 1

/* resume any streams for which data is available again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:2088 - 1

/* nothing, increase timer for graceful backup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:696 - 1

/* we can move file handles from h2_mplx into this h2_stream as many
 * as we want, since the lifetimes are the same and we are not freeing
 * the ones in h2_mplx->io before this stream is done. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:37 - 1

/*******************************************************************************
 * Once per lifetime init, retrieve optional functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:108 - 1

/* Add all protocols we know (tls or clear) and that
 * are part of the offerings (if there have been any). 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task.c:97 - 1

/* This hook runs on new connections before mod_ssl has a say.
 * Its purpose is to prevent mod_ssl from touching our pseudo-connections
 * for streams.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task.c:103 - 1

/* When the connection processing actually starts, we might 
 * take over, if the connection is for a task.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:71 - 1

/* We do not serialize and have eos already, no need to
 * create a bucket brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:194 - 1

/* Hmm, well. There is mode AP_MODE_EATCRLF, but we chose not
 * to support it. Seems to work. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_queue.c:86 - 1

/* Assume that changes in ordering are minimal. This needs,
 * best case, q->nelts - 1 comparisions to check that nothing
 * changed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:168 - 1

/* 0 terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:284 - 1

/* this has no memory footprint really unless
 * it is read, disregard it in length count,
 * unless we do not move the file buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:355 - 1

/* we have not managed the magic of passing buckets from
 * one thread to another. Any attempts result in
 * cleanup of pools scrambling memory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:367 - 1

/* ignore */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:478 - 1

/* ignore */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:576 - 1

/* test read to determine available length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:587 - 1

/* data in the brigade, limit the length returned. Check for EOS
 * bucket only if we indicate data. This is required since plen == 0
 * means "e;the whole brigade"e; for h2_util_hash_eos()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:622 - 1

/* ignore */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:799 - 1

/* Return an error but still save the brigade if
 * ->setaside() is really not implemented. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:946 - 1

/* Ignore, see rfc7230, ch. 4.1.2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:64 - 1

/**
 * Get the next task for the given worker. Will block until a task arrives
 * or the max_wait timer expires and more than min workers exist.
 * The previous h2_mplx instance might be passed in and will be served
 * with preference, since we can ask it for the next task without aquiring
 * the h2_workers lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:93 - 1

/* Get the next h2_mplx to process that has a task to hand out.
 * If it does, place it at the end of the queu and return the
 * task to the worker.
 * If it (currently) has no tasks, remove it so that it needs
 * to register again for scheduling.
 * If we run out of h2_mplx in the queue, we need to wait for
 * new mplx to arrive. Depending on how many workers do exist,
 * we do a timed wait or block indefinitely.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:293 - 1

/* before we go, cleanup any zombie workers that may have accumulated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:120 - 1

/* Runs once per created child process. Perform any process 
 * related initionalization here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:144 - 1

/* Run once after configuration is set, but before mpm children initialize.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:158 - 1

/* Setup subprocess env for certain variables 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:145 - 1

/* ------------------------------------------------------------------ */
/*
 * Closes an LDAP connection by unlocking it. The next time
 * uldap_connection_find() is called this connection will be
 * available for reuse.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:163 - 1

/* mark our connection as available for reuse */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:174 - 1

/*
 * Destroys an LDAP connection by unbinding and closing the connection to
 * the LDAP server. It is used to bring the connection back to a known
 * state after an error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:275 - 1

/*
 * Normally we enable SSL/TLS with apr_ldap_set_option(), except
 * with Solaris LDAP, where this is broken.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:281 - 1

/*
 * With Solaris LDAP, we enable TSL via the secure argument
 * to apr_ldap_init(). This requires a fix from apr-util >= 1.4.0.
 *
 * Just in case client certificates ever get supported, we
 * handle those as with the other LDAP SDKs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:291 - 1

/* Since the host will include a port if the default port is not used,
 * always specify the default ports for the port parameter. This will
 * allow a host string that contains multiple hosts the ability to mix
 * some hosts with ports and some without. All hosts which do not
 * specify a port will use the default port.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:464 - 1

/*
 * LDAP_OPT_TIMEOUT is not portable, but it influences all synchronous ldap
 * function calls and not just ldap_search_ext_s(), which accepts a timeout
 * parameter.
 * XXX: It would be possible to simulate LDAP_OPT_TIMEOUT by replacing all
 * XXX: synchronous ldap function calls with asynchronous calls and using
 * XXX: ldap_result() with a timeout.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:497 - 1

/*
 * Replacement function for ldap_simple_bind_s() with a timeout.
 * To do this in a portable way, we have to use ldap_simple_bind() and
 * ldap_result().
 *
 * Returns LDAP_SUCCESS on success; and an error code on failure
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:554 - 1

/* If the connection is already bound, return
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:614 - 1

/* Other errors not retryable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:629 - 1

/* free the handle if there was an error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:846 - 1

/* The security mode after parsing the URL will always be either
 * APR_LDAP_NONE (ldap://) or APR_LDAP_SSL (ldaps://).
 * If the security setting is NONE, override it to the security
 * setting optionally supplied by the admin using LDAPTrustedMode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:913 - 1

/* get cache entry (or create one) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:940 - 1

/* is it in the compare cache? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:944 - 1

/* If it's in the cache, it's good */
 /* unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1007 - 1

/* compare unsuccessful */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1013 - 1

/* compare successful - add to the compare cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1059 - 1

/* get cache entry (or create one) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1069 - 1

/* make a comparison to the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1131 - 1

/* uldap_connection_open() retried already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1165 - 1

/* compare completed; caching result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1258 - 1

/* uldap_connection_open() retried already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1286 - 1

/* if there is an error (including LDAP_NO_SUCH_OBJECT) return now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1466 - 1

/* make a comparison to the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1513 - 1

/* No Cached SGL, retrieve from LDAP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1519 - 1

/* No SGL aailable via LDAP either */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1525 - 1

/*
 * Find the generic group cache entry and add the sgl we just retrieved.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1597 - 1

/*
 * tmp_local_sgl has either been created, or copied out of the cache
 * If tmp_local_sgl is NULL, there are no subgroups to process and we'll
 * return false
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1610 - 1

/*
 * 4. Now loop through the subgroupList and call uldap_cache_compare
 * to check for the user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1626 - 1

/*
 * 4.B. We didn't find the user in this subgroup, so recurse into
 * it and keep looking.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1660 - 1

/* Cached URL node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1662 - 1

/* Cached search node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1670 - 1

/* Get the cache node for this url */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1687 - 1

/* found entry in search cache... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1722 - 1

/*
 * At this point, there is no valid cached search, so lets do the search.
 */

 /*
 * If LDAP operation fails due to LDAP_SERVER_DOWN, control returns here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1765 - 1

/* if there is an error (including LDAP_NO_SUCH_OBJECT) return now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1771 - 1

/*
 * We should have found exactly one entry; to find a different
 * number is an error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1838 - 1

/*
 * We have just bound the connection to a different user and password
 * combination, which might be reused unintentionally next time this
 * connection is used from the connection pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1874 - 1

/*
 * Add the new username to the search cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1895 - 1

/* Nothing in cache, insert new entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1901 - 1

/* Entry in cache is invalid, remove it and insert new one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1906 - 1

/* Cache entry is valid, update lastbind */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1936 - 1

/* Cached URL node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1938 - 1

/* Cached search node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1946 - 1

/* Get the cache node for this url */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1963 - 1

/* found entry in search cache... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1992 - 1

/*
 * At this point, there is no valid cached search, so lets do the search.
 */

 /*
 * If LDAP operation fails due to LDAP_SERVER_DOWN, control returns here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2026 - 1

/* if there is an error (including LDAP_NO_SUCH_OBJECT) return now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2032 - 1

/*
 * We should have found exactly one entry; to find a different
 * number is an error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2083 - 1

/*
 * Add the new username to the search cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2104 - 1

/* Nothing in cache, insert new entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2113 - 1

/* Cache entry is valid, update lastbind */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2832 - 1

/* no limit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2871 - 1

/* These LDAP connection settings can not be overwritten in
 a virtual host. Once set in the base server, they must
 remain the same. None of the LDAP SDKs seem to be able
 to handle setting the verify_svr_cert flag on a
 per-connection basis. The OpenLDAP client appears to be
 able to handle the connection timeout per-connection
 but the Novell SDK cannot. Allowing the timeout to
 be set by each vhost is of little value so rather than
 trying to make special expections for one LDAP SDK, GLOBAL_ONLY
 is being enforced on this setting as well. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:130 - 1

/* ------------------------------------------------------------------ */

/* Cache functions for search nodes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:89 - 1

/* Cache shm is not used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:109 - 1

/* Cache shm is not used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:133 - 1

/* Cache shm is not used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:197 - 1

/*
 * Computes the hash on a set of strings. The first argument is the number
 * of strings to hash, the rest of the args are strings.
 * Algorithm taken from glibc.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:271 - 1

/*
 * create caches
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:281 - 1

/* create the three caches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:304 - 1

/* check that all the caches initialised successfully */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:307 - 1

/* The contents of this structure will be duplicated in shared
 memory during the insert. So use stack memory rather than
 pool memory to avoid a memory leak. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:446 - 1

/*
 * Insert an item into the cache.
 * *** Does not catch duplicates!!! ***
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:475 - 1

/*
 * XXX: The cache management should be rewritten to work
 * properly when LDAPSharedCacheSize is too small.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:483 - 1

/*
 * We have not even reached fullmark, trigger a complete purge.
 * This is still better than not being able to add new entries
 * at all.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:500 - 1

/* Take a copy of the payload before proceeeding. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:503 - 1

/*
 * XXX: The cache management should be rewritten to work
 * properly when LDAPSharedCacheSize is too small.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:511 - 1

/*
 * We have not even reached fullmark, trigger a complete purge.
 * This is still better than not being able to add new entries
 * at all.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:537 - 1

/* if we reach the full mark, note the time we did so
 * for the benefit of the purge function
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:63 - 1

/*
 * Optional function for the core to add to bytes_out
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:73 - 1

/*
 * Optional function for modules to adjust bytes_in
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:84 - 1

/*
 * Optional function to get total byte count of last request for
 * ap_increment_counts.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:271 - 1

/** place of definition or NULL if already checked */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:386 - 1

/* NOTE: If the original request contained a password, we
 * re-write the request line here to contain XXXXXX instead:
 * (note the truncation before the protocol string for HTTP/0.9 requests)
 * (note also that r->the_request contains the unmodified request)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:751 - 1

/* Custom format */
 /* The custom time formatting uses a very large temp buffer
 * on the stack. To avoid using so much stack space in the
 * common case where we're not using a custom format, the code
 * for the custom format in a separate function. (That's why
 * log_request_time_custom is not inlined right here.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:761 - 1

/* CLF format */
 /* This code uses the same technique as ap_explode_recent_localtime():
 * optimistic caching with logic to detect and correct race conditions.
 * See the comments in server/util_time.c for more information.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:774 - 1

/* Invalid or old snapshot, so compute the proper time string
 * and store it in the cache
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:826 - 1

/* These next two routines use the canonical name:port so that log
 * parsers don't need to duplicate all the vhost parsing crud.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:854 - 1

/* This respects the setting of UseCanonicalName so that
 * the dynamic mass virtual hosting trick works better.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1093 - 1

/*****************************************************************
 *
 * Actually logging.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1132 - 1

/* XXX: error handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1156 - 1

/*
 * See if we've got any conditional envariable-controlled logging decisions
 * to make.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1391 - 1

/* Set the inherit flag unless there was some error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1488 - 1

/* Failure already logged by open_config_log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1506 - 1

/* Failure already logged by open_config_log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:178 - 1

/* apr_array_append actually creates a new array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:119 - 1

/* e is the first _invalid_ location in q
 N.B. returns the terminating NUL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:195 - 1

/* we make the assumption that we can't go through all the PIDs in
 under 1 second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_apr.c:43 - 1

/* Unless it's the 'notes' table, check for newline chars */
 /* t->r will be NULL in case of the connection notes, but since 
 we aren't going to check anything called 'notes', we can safely 
disregard checking whether t->r is defined.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:174 - 1

/* r:debug(String) and friends which use apache logging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:89 - 1

/*
 =============================================================================
 db:__gc(): Garbage collecting function.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:467 - 1

/*
 =============================================================================
 statement:query(var1, var2, var3...): Injects variables into a prepared 
 statement and returns the number of rows affected.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:664 - 1

/* lua_push_db_handle: Creates a database table object with database functions 
 and a userdata at index 0, which will call lua_dbgc when garbage collected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_passwd.c:83 - 1

/*
 * Make a password record from the given information. A zero return
 * indicates success; on failure, ctx->errstr points to the error message.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:112 - 1

/**
 * Verify that the thing at index is a request_rec wrapping
 * userdata thingamajig and return it if it is. if it is not
 * lua will enter its error handling routine.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:164 - 1

/* only set if not already set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:214 - 1

/* only set if not already set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:249 - 1

/* Only room for incomplete data chunk :( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:521 - 1

/* wrap optional ssl_var_lookup as r:ssl_var_lookup(String) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:993 - 1

/*
 * lua_apr_mkdir; r:mkdir(string [, permissions]) - Creates a directory
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1012 - 1

/*
 * lua_apr_mkrdir; r:mkrdir(string [, permissions]) - Creates directories
 * recursive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1453 - 1

/* ignore un-stat()able files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1647 - 1

/**
 * ap_strcmp_match (const char *str, const char *expected)
 * Determine if a string matches a patterm containing the wildcards '?' or '*'
 * @param str The string to check
 * @param expected The pattern to match against
 * @param ignoreCase Whether to ignore case when matching
 * @return 1 if the two strings match, 0 otherwise
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1693 - 1

/**
 * ap_make_etag (request_rec *r, int force_weak)
 * Construct an entity tag from the resource information. If it's a real
 * file, build in some of the file characteristics.
 * @param r The current request
 * @param force_weak Force the entity tag to be weak - it could be modified
 * again in as short an interval.
 * @return The entity tag
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1802 - 1

/*
 * lua_ap_usleep; r:usleep(microseconds)
 * - Sleep for the specified number of microseconds.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1901 - 1

/* r:debug(String) and friends which use apache logging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2098 - 1

/* Domain does NOT like quotes in most browsers, so let's avoid that */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2164 - 1

/* Trick httpd into NOT using the chunked filter, IMPORTANT!!!111*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2382 - 1

/* Pong! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2480 - 1

/* Get opcode and FIN bit from pong */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:425 - 1

/**
 * Function used to create a lua_State instance bound into the web
 * server in the appropriate scope.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:485 - 1

/* not available, so create */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:281 - 1

/* Decline the request if the script does not exist (or is a directory),
 * rather than just returning internal server error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:403 - 1

/* If a Lua filter is interested in filtering a request, it must first do a yield, 
 * otherwise we'll assume that it's not interested and pretend we didn't find it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:443 - 1

/* No filter entry found (or the script declined to filter), just pass on the buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:653 - 1

/* ---------------- Configury stuff --------------- */

/** harnesses for magic hooks **/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1186 - 1

/* disabled (see reference below)
static int lua_check_user_id_harness_first(request_rec *r)
{
 return lua_request_rec_hook_harness(r, "e;check_user_id"e;, AP_LUA_HOOK_FIRST);
}
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1196 - 1

/* disabled (see reference below)
static int lua_check_user_id_harness_last(request_rec *r)
{
 return lua_request_rec_hook_harness(r, "e;check_user_id"e;, AP_LUA_HOOK_LAST);
}
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1353 - 1

/* XXX: This does not currently work!!
 if (when) {
 if (!strcasecmp(when, "e;early"e;)) {
 apr_hook_when = AP_LUA_HOOK_FIRST;
 }
 else if (!strcasecmp(when, "e;late"e;)) {
 apr_hook_when = AP_LUA_HOOK_LAST;
 }
 else {
 return "e;Third argument must be 'early' or 'late'"e;;
 }
 }
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:120 - 1

/* ap_method_register recognizes already registered methods,
 * so don't bother to check its previous existence explicitely.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:118 - 1

/* need prototype for overlap check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:132 - 1

/* XXX: real can NOT be relative to DocumentRoot here... compat bug. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:157 - 1

/* check for overlapping (Script)Alias directives
 * and throw a warning if found one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:175 - 1

/* one warning per alias should be sufficient */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:242 - 1

/*
 * Logic flow:
 * Go ahead and try to grok the 1st arg, in case it is a
 * Redirect status. Now if we have 3 args, we expect that
 * we were able to understand that 1st argument (it's something
 * we expected, so if not, then we bail
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:272 - 1

/*
 * if we have the 2nd arg and we understand the 1st one as a redirect
 * status (3xx, but not things like 404 /robots.txt), or if we have the
 * 1st arg but don't understand it, we use the expression syntax assuming
 * a path from the location.
 *
 * if we understand the first arg but have no second arg, we are dealing
 * with a status like "e;GONE"e; or a non-redirect status (e.g. 404, 503).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:313 - 1

/*
 * if we don't have the 3rd arg and we didn't understand the 1st
 * one, then assume URL-path URL. This also handles case, eg, GONE
 * we even though we don't have a 3rd arg, we did understand the 1st
 * one, so we don't want to re-arrange
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:333 - 1

/* PR#35314: we can allow path components here;
 * they get correctly resolved to full URLs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:434 - 1

/* Return number of characters from URI which matched (may be
 * greater than length of alias, since we may have matched
 * doubled slashes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:638 - 1

/* append requested query only, if the config didn't
 * supply its own.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:693 - 1

/* append requested query only, if the config didn't
 * supply its own.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:72 - 1

/* "e;disabled"e; is first, and alone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:245 - 1

/* Redirect requests that are not '/' terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:282 - 1

/* Prevent DIR_MAGIC_TYPE from leaking out when someone has taken over */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:289 - 1

/* we're running between mod_rewrites fixup and its internal redirect handler, step aside */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:291 - 1

/* Prevent DIR_MAGIC_TYPE from leaking out when someone has taken over */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:313 - 1

/* Once upon a time args were handled _after_ the successful redirect.
 * But that redirect might then _refuse_ the given r->args, creating
 * a nasty tangle. It seems safer to consider the r->args while we
 * determine if name_ptr is our viable index, and therefore set them
 * up correctly on redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:325 - 1

/* The sub request lookup is very liberal, and the core map_to_storage
 * handler will almost always result in HTTP_OK as /foo/index.html
 * may be /foo with PATH_INFO="e;/index.html"e;, or even / with
 * PATH_INFO="e;/foo/index.html"e;. To get around this we insist that the
 * the index be a regular filetype.
 *
 * Another reason is that the core handler also makes the assumption
 * that if r->finfo is still NULL by the time it gets called, the
 * file does not exist.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:385 - 1

/* record what we tried, mostly for the benefit of mod_autoindex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:212 - 1

/* don't mess around with negative coordinates */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:253 - 1

/* -1 is returned on error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:283 - 1

/* See if string has a "e;quoted part"e;, and if so set *quoted_part to
 * the first character of the quoted part, then hammer a \0 onto the
 * trailing quote, and set *string to point at the first character
 * past the second quote.
 *
 * Otherwise set *quoted_part to NULL, and leave *string alone.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:414 - 1

/* for each '..', knock a directory off the end
 by ending the string right at the last slash.
 But only consider the directory portion: don't eat
 into the server name. And only try if a directory
 portion was found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:506 - 1

/* comments are ignored in the 'formatted' form */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:656 - 1

/* blank lines and comments are ignored
 if we aren't printing a menu */

 /* find the first two space delimited fields, recall that
 * ap_cfg_getline has removed leading/trailing whitespace.
 *
 * note that we're tokenizing as we go... if we were to use the
 * ap_getword() class of functions we would end up allocating extra
 * memory for every line of the map file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:858 - 1

/* There's not much else we can do ... we've already sent the headers
 * to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:870 - 1

/* Optimization: skip the allocation of large local variables on the
 * stack (in imap_handler_internal()) on requests that aren't using
 * imagemaps
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:44 - 1

/* Commands --- configuring document caching on a per (virtual?)
 * server basis...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:55 - 1

/* Same as FLP_DEFAULT, but base overrides */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:56 - 1

/* Return 406, HTTP_NOT_ACCEPTABLE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:170 - 1

/*
 * Record of available info on a media type specified by the client
 * (we also use 'em for encodings and languages)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:231 - 1

/* text/html, *or* the INCLUDES_MAGIC_TYPEs */

 /* Above are all written-once properties of the variant. The
 * three fields below are changed during negotiation:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:262 - 1

/* available variants */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:275 - 1

/* A few functions to manipulate var_recs.
 * Cleaning out the fields...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:325 - 1

/* Calculating the variant list validator is similar to
 * calculating an etag for the source of the variant list
 * information, so we use ap_make_etag(). Note that this
 * validator can be 'weak' in extreme case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:381 - 1

/* better only one division later, than dealing with fscking
 * IEEE format 0.1 factors ...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:404 - 1

/*
 * Get a single mime type entry --- one media type and parameters;
 * enter the values we recognize into the argument accept_rec
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:463 - 1

/* No '='; just ignore it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:836 - 1

/* We are at the first character following a body:tag\n entry
 * Suck in the body, then backspace to the first char after the
 * closing tag entry. If we fail to read, find the tag or back
 * up then we have a hosed file, so give up already
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:877 - 1

/* Hmmm... is this correct? In Roy's latest draft, (comments) can nest! */
 /* Nope, it isn't correct. Fails to handle backslash escape as well. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1149 - 1

/* Ok, something's here. Maybe nothing useful. Remember that
 * we tried, if we completely fail, so we can reject the request!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1259 - 1

/* Have reasonable variant --- gather notes. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1389 - 1

/* Levels are only comparable between matching media types */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1412 - 1

/* Neither matched. Take lowest level, if there's a difference. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1564 - 1

/* no accept-language header makes the variant indefinite */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1670 - 1

/* If one of the language tags of the variant matched on *, we
 * need to see if its q is better than that of any non-* match
 * on any other tag of the variant. If so the * match takes
 * precedence and the overall match is not definite.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1732 - 1

/* Determining the content length --- if the map didn't tell us,
 * we have to do a stat() and remember for next time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1772 - 1

/* if no Accept: header, leave quality alone (will
 * remain at the default value of 1)
 *
 * XXX: This if is currently never true because of the effect of
 * maybe_add_default_accepts().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1805 - 1

/* didn't match the content type at all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1873 - 1

/* Don't go guessing if we are in strict header mode,
 * e.g. when running the rvsa, as any guess won't be reflected
 * in the variant list or content-location headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1883 - 1

/*
 * Go through each of the items on the Accept-Charset header,
 * looking for a match with this variant's charset. If none
 * match, charset is unacceptable, so set quality to 0.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1900 - 1

/* No explicit match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1966 - 1

/* Go through each of the encodings on the Accept-Encoding: header,
 * looking for a match with our encoding. x- prefixes are ignored.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1990 - 1

/* No explicit match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1996 - 1

/* Encoding not found on Accept-Encoding: header, so it is
 * _not_ acceptable unless it is the identity (no encoding)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2038 - 1

/* TCN does not cover negotiation on content-encoding. For now,
 * we ignore the encoding unless it was explicitly excluded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2085 - 1

/* If the best variant's encoding is of lesser quality than
 * this variant, then we prefer this variant
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2151 - 1

/* don't consider unacceptables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2199 - 1

/* If the best variant's charset is ISO-8859-1 and this variant has
 * the same charset quality, then we prefer this variant
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2254 - 1

/* check for environment variables 'no-gzip' and
 * 'gzip-only-text/html' to get a behaviour similiar
 * to mod_deflate
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2281 - 1

/* fetch request dependent variables
 * prefer-language: prefer a certain language.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2356 - 1

/* Only do variant selection if we may actually choose a
 * variant for the client
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2384 - 1

/* calculate result for RVSA/1.0 algorithm:
 * only a choice response if the best variant has q>0
 * and is definite
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2396 - 1

/* run the loop again, if the "e;prefer-language"e; got no clear result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2405 - 1

/* Returning a choice response with a non-neighboring variant is a
 * protocol security error in TCN (see rfc2295). We do *not*
 * verify here that the variant and URI are neighbors, even though
 * we may return alg_choice. We depend on the environment (the
 * caller) to only declare the resource transparently negotiable if
 * all variants are neighbors.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2454 - 1

/* In order to avoid O(n^2) memory copies in building Alternates,
 * we preallocate a apr_table_t with the maximum substrings possible,
 * fill it with the variant list, and then concatenate the entire array.
 * Note that if you change the number of substrings pushed, you also
 * need to change the calculation of max_vlist_array above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2554 - 1

/* Strictly speaking, this is non-standard, but so is TCN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2624 - 1

/* In order to avoid O(n^2) memory copies in building the list,
 * we preallocate a apr_table_t with the maximum substrings possible,
 * fill it with the variant list, and then concatenate the entire array.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2796 - 1

/* add Alternates and Vary */

 /* Still to do by caller: add Expires */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2821 - 1

/* maybe this should be configurable, see also the comment
 * about recursive type maps in setup_choice_response()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2843 - 1

/* We can't be transparent, because of the behavior
 * of variant typemap bodies.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2905 - 1

/* return if error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3047 - 1

/* remove any path_info from the end of the uri before trying
 * to change the filename. r->path_info from the original
 * request is passed along on the redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3111 - 1

/* We got this out of a map file, so we don't actually have
 * a sub_req structure yet. Get one now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3148 - 1

/**********************************************************************
 * There is a problem with content-encoding, as some clients send and
 * expect an x- token (e.g. x-gzip) while others expect the plain token
 * (i.e. gzip). To try and deal with this as best as possible we do
 * the following: if the client sent an Accept-Encoding header and it
 * contains a plain token corresponding to the content encoding of the
 * response, then set content encoding using the plain token. Else if
 * the A-E header contains the x- token use the x- token in the C-E
 * header. Else don't do anything.
 *
 * Note that if no A-E header was sent, or it does not contain a token
 * compatible with the final content encoding, then the token in the
 * C-E header will be whatever was specified in the AddEncoding
 * directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:135 - 1

/* !REWRITELOG_DISABLED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:139 - 1

/* REWRITELOG_DISABLED */

/* remembered mime-type for [T=...] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:223 - 1

/* for better readbility */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:259 - 1

/* for cached maps (txt/rnd/dbm) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:325 - 1

/* limit on number of loops with N flag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:352 - 1

/* the (per-child) cache structures.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:414 - 1

/* the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:417 - 1

/* whether proxy module is available or not */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:420 - 1

/* Locks/Mutexes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:424 - 1

/* Optional functions imported from mod_ssl when loaded: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:536 - 1

//"e;, 10)) { /* balancer:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:855 - 1

/* now check whether we could reduce it to a local path... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:911 - 1

/* let's recognize slashes only, the mod_rewrite semantics are opaque
 * enough.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:978 - 1

/* prefix didn't match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:983 - 1

/*
 * +-------------------------------------------------------+
 * | |
 * | caching support
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1065 - 1

/* copy the cached value into the supplied pool,
 * where it belongs (r->pool usually)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1085 - 1

/* turns off cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1098 - 1

/*
 * +-------------------------------------------------------+
 * | |
 * | Map Functions
 * | |
 * +-------------------------------------------------------+
 */

/*
 * General Note: key is already a fresh string, created (expanded) just
 * for the purpose to be passed in here. So one can modify key itself.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1292 - 1

/* ignore comments and lines starting with whitespaces */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1304 - 1

/* key doesn't match - ignore. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1314 - 1

/* no value? ignore */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1416 - 1

/* what's a fair rewritelog level for this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1460 - 1

/* Maybe this should be fatal? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1467 - 1

/* XXX: error handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1478 - 1

/* XXX: error handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1574 - 1

/* Maybe this should be fatal? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1700 - 1

/*
 * SQL map without cache
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1716 - 1

/*
 * SQL map with cache
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1875 - 1

/* sigh, the user wants a file based subrequest, but
 * we can't do one, since we don't know what the file
 * path is! In this case behave like LA-U.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2283 - 1

/* well, actually something to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2471 - 1

/*
 * perform all the expansions on the environment variables
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2666 - 1

/* create the lockfile */
 /* XXX See if there are any rewrite map programs before creating
 * the mutex.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2714 - 1

/*
 * determine first argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2739 - 1

/*
 * determine second argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2770 - 1

/*
 * determine third argument
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3226 - 1

/* This should have been checked before, but just in case... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3331 - 1

/* arg3: optional flags field
 * (this has to be parsed first, because we need to
 * know if the regex should be compiled with ICASE!)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3403 - 1

/* Inversion, ensure !-ne == -eq */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3741 - 1

/* parse the argument line ourself */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3748 - 1

/* arg3: optional flags field */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3790 - 1

/* now, if the server or per-dir config holds an
 * array of RewriteCond entries, we take it for us
 * and clear the array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4100 - 1

/* It matched, wow! Now it's time to prepare the context structure for
 * further processing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4315 - 1

/*
 * Ignore this rule on subrequests if we are explicitly
 * asked to do so or this is a proxy-throughput or a
 * forced redirect rule.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4356 - 1

/*
 * Pass-Through Feature (`RewriteRule .. .. [PT]'):
 * Because the Apache 1.x API is very limited we
 * need this hack to pass the rewritten URL to other
 * modules like mod_alias, mod_userdir, etc.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4465 - 1

/* check if proxy module is available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4495 - 1

/* get a rid of gcc warning (REWRITELOG_DISABLED) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4507 - 1

/* create the lookup cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4515 - 1

/*
 * +-------------------------------------------------------+
 * | |
 * | runtime hooks
 * | |
 * +-------------------------------------------------------+
 */

/*
 * URI-to-filename hook
 * [deals with RewriteRules in server context]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4668 - 1

/* it should be go on as an internal proxy request */

 /* check if the proxy module is enabled, so
 * we can actually use it!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4774 - 1

/* if there is no valid prefix, we call
 * the translator from the core and
 * prefix the filename with document_root
 *
 * NOTICE:
 * We cannot leave out the prefix_stat because
 * - when we always prefix with document_root
 * then no absolute path can be created, e.g. via
 * emulating a ScriptAlias directive, etc.
 * - when we always NOT prefix with document_root
 * then the files under document_root have to
 * be references directly and document_root
 * gets never used and will be a dummy parameter -
 * this is also bad
 *
 * BUT:
 * Under real Unix systems this is no problem,
 * because we only do stat() on the first directory
 * and this gets cached by the kernel for along time!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4843 - 1

/* if there is no per-dir config we return immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4856 - 1

/* if there are no real (i.e. no RewriteRule directives!)
 per-dir config of us, we return also immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4895 - 1

/* FollowSymLinks is mandatory! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4904 - 1

/*
 * remember the current filename before rewriting for later check
 * to prevent deadlooping because of internal redirects
 * on final URL/filename which can be equal to the inital one.
 * also, we'll restore original r->filename if we decline this
 * request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4936 - 1

/* it should go on as an internal proxy request */

 /* make sure the QUERY_STRING and
 * PATH_INFO parts get incorporated
 * (r->path_info was already appended by the
 * rewriting engine because of the per-dir context!)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4960 - 1

/* it was finally rewritten to a remote URL */

 /* because we are in a per-dir context
 * first try to replace the directory with its base-URL
 * if there is a base-URL available
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5051 - 1

/* it was finally rewritten to a local path */

 /* if someone used the PASSTHROUGH flag in per-dir
 * context we just ignore it. It is only useful
 * in per-server context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5088 - 1

/* if no explicit base-URL exists we assume
 * that the directory prefix is also a valid URL
 * for this webserver and only try to remove the
 * document_root if it is prefix
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5245 - 1

/* fixup after mod_proxy, so that the proxied url will not
 * escaped accidentally by mod_proxy's fixup.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5250 - 1

/* make the hashtable before registering the function, so that
 * other modules are prevented from accessing uninitialized memory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:211 - 1

/* We only want to worry about GETs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:216 - 1

/* We've already got a file of some kind or another */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:250 - 1

/* bad = mispelling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:252 - 1

/* postgood = mispelling/more */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:304 - 1

/*
 * simple typing errors are checked next (like, e.g.,
 * missing/extra/transposed char)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:400 - 1

/*
 * Otherwise, a "e;[300] Multiple Choices"e; list with the variants is
 * returned.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:465 - 1

/*
 * when we have printed the "e;close matches"e; and there are
 * more "e;distant matches"e; (matched by stripping the suffix),
 * then we insert an additional separator text to suggest
 * that the user LOOK CLOSELY whether these are really the
 * files she wanted.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:76 - 1

/*
 * The default directory in user's home dir
 * In the default install, the module is disabled
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:154 - 1

/*
 * If there are no usernames specified, this is a global disable - we
 * need do no more at this point than record the fact.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:179 - 1

/*
 * Now we just take each word in turn from the command line and add it to
 * the appropriate table.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:235 - 1

/*
 * If there's no username, it's not for us. Ignore . and .. as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:243 - 1

/*
 * Nor if there's an username but it's in the disabled list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:129 - 1

/* there ought to be a better way of doing this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:174 - 1

/* optional dash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:185 - 1

/* optional plus */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:194 - 1

/* optional dash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:205 - 1

/* optional plus */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:233 - 1

/*
 * This really wants to be a nested function
 * but C is too feeble to support them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:240 - 1

/* XXX: what if size > HUGE_STRING_LEN? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:306 - 1

/* deal with %-N+.-M+ -- syntax is already checked */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:205 - 1

/* XXX: this is very similar to ap_scan_script_header_err_core...
 * are the differences deliberate, or just a result of bit rot?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:231 - 1

/* if we see a bogus header don't ignore it. Shout and scream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:312 - 1

/* should really barf, but hey, let's be friends... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:58 - 1

/*
 * res->vars = copy_table( p, base->vars );
 * foreach $unsetenv ( @add->unsetenv )
 * table_unset( res->vars, $unsetenv );
 * foreach $element ( @add->vars )
 * table_set( res->vars, $element.key, $element.val );
 *
 * add->unsetenv already removed the vars from add->vars,
 * if they preceeded the UnsetEnv directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:210 - 1

/* check_code() parse 'code' and return NULL or an error response
 * string. If we return NULL then real_code contains code converted
 * to the cnnnn format.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:402 - 1

/* file doesn't exist on disk, so we can't do anything based on
 * modification time. Note that this does _not_ log an error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:412 - 1

/* there's been some discussion and it's possible that
 * 'access time' will be stored in request structure
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:478 - 1

/*
 * No expiration has been set, so we can apply any managed by
 * this module. First, check to see if there is an applicable
 * ExpiresByType directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:541 - 1

/* Check to see if the filter is enabled and if there are any applicable
 * config directives for this directory scope
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:86 - 1

/* for the ssl_var_lookup optional function defn */

/* format_tag_hash is initialized during pre-config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:95 - 1

/* merge (merge, but avoid duplicates) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:100 - 1

/* set value if header not already present*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:104 - 1

/*
 * magic cmd->info values
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:123 - 1

/* 'Magic' condition_var value to run action in post_read_request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:164 - 1

/* Pointer to ssl_var_lookup, if available. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:184 - 1

/* unwrap_header returns HDR with any newlines converted into
 * whitespace if necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:344 - 1

/* Handle string literal/conditionals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:361 - 1

/* grab the argument if there is one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:381 - 1

/*
 * A format string consists of white space, text and optional format
 * tags in any order. E.g.,
 *
 * Header add MyHeader "e;Free form text %D %t more text"e;
 *
 * Decompose the format string into its tags. Each tag (struct format_tag)
 * contains a pointer to the function used to format the tag. Then save each
 * tag in the tag array anchored in the header_entry.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:484 - 1

/* there's no subs, so envclause is really that argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:646 - 1

/* Process tags in the input string rather than the resulting
 * substitution to avoid surprises
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:656 - 1

/* recurse to edit multiple matches if applicable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:711 - 1

/* ignore early headers in late calls */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:715 - 1

/* ignore late headers in early calls */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:887 - 1

/*
 * Make sure we propagate any "e;Header always"e; settings on the error
 * path through http_protocol.c.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:901 - 1

/*
 * Add any header fields defined by "e;Header always"e; to r->err_headers_out.
 * Server-wide first, then per-directory to allow overriding.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:52 - 1

/* for aplog_error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:75 - 1

/* rough limit on the amount of data we accept. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:193 - 1

/*
 * Read response from server. - the response should be newline
 * terminated according to rfc - make sure it doesn't stomp its
 * way out of the buffer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:218 - 1

/* Oops... we ran out of data before finding newline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:300 - 1

/*
 * Optional function for the core to the actual ident request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:130 - 1

/* line number from magic file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:140 - 1

/* offset to magic number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:163 - 1

/* mask before comparison with value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:164 - 1

/* supress space character */

 /* NOTE: this string is suspected of overrunning - find it! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:209 - 1

/* The magic field is filled with this if uname and gname are valid. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:237 - 1

/*
 * includes for ASCII substring recognition formerly "e;names.h"e; in file
 * command
 *
 * Original notes: names and types used by ascmagic in file(1). These tokens are
 * here because they can appear anywhere in the first HOWMANY bytes, while
 * tokens in /etc/magic must appear at fixed offsets into the file. Don't
 * make HOWMANY too high unless you have a very fast CPU.
 */

/* these types are used to index the apr_table_t 'types': keep em in sync! */
/* HTML inserted in first because this is a web server module now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:254 - 1

/* some kinda assembler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:272 - 1

/* "e;can't happen error on names.h/types"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:281 - 1

/* These must be sorted by eye for optimal hit rate */
 /* Add to this list only after substantial meditation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:456 - 1

/* where magic be found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:457 - 1

/* head of magic config list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:517 - 1

/*
 * RSL (result string list) processing routines
 *
 * These collect strings that would have been printed in fragments by file(1)
 * into a list of magic_rsl structures with the strings. When complete,
 * they're concatenated together to become the MIME content and encoding
 * types.
 *
 * return value conventions for these functions: functions which return int:
 * failure = -1, other = result functions which return pointers: failure = 0,
 * other = result
 */

/* allocate a per-request structure and put it in the request record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:659 - 1

/* states for the state-machine algorithm in magic_rsl_to_request() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:724 - 1

/* should not be possible */
 /* abandon malfunctioning module */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:768 - 1

/* should not be possible */
 /* abandon malfunctioning module */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:780 - 1

/* if we ended prior to state rsl_subtype, we had incomplete info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:803 - 1

/* detect memory allocation or other errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:825 - 1

/* one extra for terminating '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:839 - 1

/* fatal error, bail out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:910 - 1

/*
 * apprentice - load configuration from the magic file r
 * API request record
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:941 - 1

/* set up the magic list (empty) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1031 - 1

/*
 * Do not remove the casts below. They are vital. When later
 * compared with the data, the sign extension must have happened.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1071 - 1

/* allocate magic structure entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1084 - 1

/* set values in magic structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1431 - 1

/*
 * return DONE to indicate it's been handled
 * return OK to indicate it's a regular file still needing handling
 * other returns indicate a failure of some sort
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1443 - 1

/*
 * (void) magic_rsl_printf(r,"e;character special (%d/%d)"e;,
 * major(sb->st_rdev), minor(sb->st_rdev));
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1450 - 1

/*
 * (void) magic_rsl_printf(r,"e;block special (%d/%d)"e;,
 * major(sb->st_rdev), minor(sb->st_rdev));
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1458 - 1

/*
 * magic_rsl_puts(r,"e;fifo (named pipe)"e;);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1464 - 1

/* We used stat(), the only possible reason for this is that the
 * symlink is broken.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1582 - 1

/*
 * main entry didn't match, flush its continuations
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1621 - 1

/*
 * If we printed something, we'll need to print a blank before we
 * print something else.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1651 - 1

/*
 * This continuation matched. Print its message, with a
 * blank before it if the previous item printed and this
 * item isn't empty.
 */
 /* space if previous printed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1756 - 1

/* Null terminate and eat the return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1958 - 1

/* bogosity, pretend it didn't match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1969 - 1

/* an optimization over plain strcmp() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1976 - 1

/* one extra for terminating '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2006 - 1

/* look for tokens from names.h - this is expensive!, so we'll limit
 * ourselves to only SMALL_HOWMANY bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2069 - 1

/*
 * XXX pcat does not work, cause I don't know how to make it read stdin,
 * so we use gzip
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2204 - 1

/*
 * is_tar() -- figure out whether file is a tar archive.
 *
 * Stolen (by author of file utility) from the public domain tar program: Public
 * Domain version written 26 Aug 1985 John Gilmore (ihnp4!hoptoad!gnu).
 *
 * @(#)list.c 1.18 9/23/86 Public Domain - gnu $Id: mod_mime_magic.c,v 1.7
 * 1997/06/24 00:41:02 ikluft Exp ikluft $
 *
 * Comments changed and some code/comments reformatted for file command by Ian
 * Darwin.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2260 - 1

/*
 * Quick and dirty octal conversion.
 *
 * Result is -1 if the field is invalid (all blank, or nonoctal).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2286 - 1

/*
 * Check for file-revision suffix
 *
 * This is for an obscure document control system used on an intranet.
 * The web representation of each file's revision has an @1, @2, etc
 * appended with the revision number. This needs to be stripped off to
 * find the file suffix, which can be recognized by sending the name back
 * through a sub-request. The base file name (without the @num suffix)
 * must exist because its type will be used as the result.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2318 - 1

/* perform sub-request for the file name without the suffix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2407 - 1

/*
 * Find the Content-Type from any resource this module has available
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2421 - 1

/* was someone else already here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2452 - 1

/* mod_mime_magic should be run after mod_mime, if at all. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:56 - 1

/** The list of proxy IP's ignored as remote IP's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:144 - 1

/* Note s may be null, that's fine (explicit host) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:115 - 1

/* ignoring case? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:161 - 1

/*
 * any non-NULL magic constant will do... used to indicate if AP_REG_ICASE should
 * be used
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:183 - 1

/* If the input string does not take advantage of regular
 * expression metacharacters, return a pointer to an equivalent
 * string that can be searched using apr_strmatch(). (The
 * returned string will often be the input string. But if
 * the input string contains escaped characters, the returned
 * string will be a copy with the escapes removed.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:310 - 1

/*
 * If we've already got a sei_entry with the same name we want to
 * just copy the name pointer... so that later on we can compare
 * two header names just by comparing the pointers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:378 - 1

/* Handle fname as a regular expression.
 * If fname a simple header string, identify as such
 * (new->pnamereg = NULL) to avoid the overhead of searching
 * through headers_in for a regex match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:576 - 1

/*
 * A NULL value indicates that the header field or special entity
 * wasn't present or is undefined. Represent that as an empty string
 * so that REs like "e;^$"e; will work and allow envariable setting
 * based on missing or empty field. This is also necessary to make
 * ap_pregsub work after evaluating an ap_expr_t which does set the
 * regexp backref data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:166 - 1

/*
 * If we use 0 as the initial counter we have a little less protection
 * against restart problems, and a little less protection against a clock
 * going backwards in time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:209 - 1

/* we'll use a temporal buffer to avoid uuencoding the possible internal
 * paddings of the original structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:276 - 1

/* copy the unique_id if this is an internal redirect (we're never
 * actually called for sub requests, so we don't need to test for
 * them) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:164 - 1

/* The goal is to end up with this regexp,
 * ^cookie_name=([^;,]+)|[;,][ \t]+cookie_name=([^;,]+)
 * with cookie_name obviously substituted either
 * with the real cookie name set by the user in httpd.conf, or with the
 * default COOKIE_NAME. */

 /* Anyway, we need to escape the cookie_name before pasting it
 * into the regex
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:220 - 1

/* Our regexp,
 * ^cookie_name=([^;]+)|;[ \t]+cookie_name=([^;]+)
 * only allows for $1 or $2 to be available. ($0 is always
 * filled with the entire matched expression, not just
 * the part in parentheses.) So just check for either one
 * and assign to cookieval if present. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:246 - 1

/* There's already a cookie, no new one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:386 - 1

/*
 * Apply the restrictions on cookie domain attributes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:110 - 1

/* syntax error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:181 - 1

/* supplying one argument is possible, we assume an equality check then */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:194 - 1

/* the third argument makes version surrounding quotes plus operator
 * possible.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:56 - 1

/* ACCEPT-LANGUAGE is the longest header
 * that is of interest.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:345 - 1

/* XXX: Is the subprocess_env a right place?
 * <Location /examples>
 * ProxyPass ajp://remote:8009/servlets-examples
 * SetEnv SSL_SESSION_ID CUSTOM_SSL_SESSION_ID
 * </Location>
 */
 /*
 * Only lookup SSL variables if we are currently running HTTPS.
 * Furthermore ensure that only variables get set in the AJP message
 * that are not NULL and not empty.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:407 - 1

/* If the method was unrecognized, encode it as an attribute */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:438 - 1

/* Forward the remote port information, which was forgotten
 * from the builtin data of the AJP 13 protocol.
 * Since the servlet spec allows to retrieve it via getRemotePort(),
 * we provide the port to the Tomcat connector as a request
 * attribute. Modern Tomcat versions know how to retrieve
 * the remote port from this attribute.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:458 - 1

/* Forward the local ip address information, which was forgotten
 * from the builtin data of the AJP 13 protocol.
 * Since the servlet spec allows to retrieve it via getLocalAddr(),
 * we provide the address to the Tomcat connector as a request
 * attribute. Modern Tomcat versions know how to retrieve
 * the local address from this attribute.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_link.c:65 - 1

/* any error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:142 - 1

/**
 * Check a new AJP Message by looking at signature and return its size
 *
 * @param msg AJP Message to check
 * @param len Pointer to returned len
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:182 - 1

/**
 * Reset an AJP Message
 *
 * @param msg AJP Message to reset
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:196 - 1

/**
 * Reuse an AJP Message
 *
 * @param msg AJP Message to reuse
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:217 - 1

/**
 * Mark the end of an AJP Message
 *
 * @param msg AJP Message to end
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:251 - 1

/**
 * Add an unsigned 32bits value to AJP Message
 *
 * @param msg AJP Message to get value from
 * @param value value to add to AJP Message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:276 - 1

/**
 * Add an unsigned 16bits value to AJP Message
 *
 * @param msg AJP Message to get value from
 * @param value value to add to AJP Message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:299 - 1

/**
 * Add an unsigned 8bits value to AJP Message
 *
 * @param msg AJP Message to get value from
 * @param value value to add to AJP Message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:320 - 1

/**
 * Add a String in AJP message, and transform the String in ASCII
 * if convert is set and we're on an EBCDIC machine
 *
 * @param msg AJP Message to get value from
 * @param value Pointer to String
 * @param convert When set told to convert String to ASCII
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:359 - 1

/**
 * Add a Byte array to AJP Message
 *
 * @param msg AJP Message to get value from
 * @param value Pointer to Byte array
 * @param valuelen Byte array len
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:371 - 1

/* Shouldn't we indicate an error ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:385 - 1

/**
 * Get a 32bits unsigned value from AJP Message
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:410 - 1

/**
 * Get a 16bits unsigned value from AJP Message
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:432 - 1

/**
 * Peek a 16bits unsigned value from AJP Message, position in message
 * is not updated
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:455 - 1

/**
 * Peek a 8bits unsigned value from AJP Message, position in message
 * is not updated
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:473 - 1

/**
 * Get a 8bits unsigned value from AJP Message
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:492 - 1

/**
 * Get a String value from AJP Message
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:513 - 1

/* a String in AJP is NULL terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:520 - 1

/**
 * Get a Byte array from AJP Message
 *
 * @param msg AJP Message to get value from
 * @param rvalue Pointer where value will be returned
 * @param rvalueLen Pointer where Byte array len will be returned
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:551 - 1

/**
 * Create an AJP Message from pool
 *
 * @param pool memory pool to allocate AJP message from
 * @param size size of the buffer to create
 * @param rmsg Pointer to newly created AJP message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:574 - 1

/**
 * Recopy an AJP Message to another
 *
 * @param smsg source AJP message
 * @param dmsg destination AJP message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:599 - 1

/**
 * Serialize in an AJP Message a PING command
 *
 * +-----------------------+
 * | PING CMD (1 byte) |
 * +-----------------------+
 *
 * @param smsg AJP message to put serialized message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:620 - 1

/**
 * Serialize in an AJP Message a CPING command
 *
 * +-----------------------+
 * | CPING CMD (1 byte) |
 * +-----------------------+
 *
 * @param smsg AJP message to put serialized message
 * @return APR_SUCCESS or error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:120 - 1

/* assumed to be mutex protected by caller */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:151 - 1

/* assumed to be mutex protected by caller */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:123 - 1

/* assumed to be mutex protected by caller */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:26 - 1

/* If we haven't seen a heartbeat in the last N seconds, don't count this IP
 * as allive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:40 - 1

/*
 * configuration structure
 * path: path of the file where the heartbeat information is stored.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:84 - 1

/*
 ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,
 "e;Found query arg: %s = %s"e;, key, value);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:200 - 1

/* Server has zero threads active, but lots of them ready,
 * it likely just started up, so lets /4 the number ready,
 * to prevent us from completely flooding it with all new
 * requests.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:386 - 1

/* Try to use a slotmem created by mod_heartmonitor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:56 - 1

/* The index of the candidate last chosen is stored in ctx->index */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:58 - 1

/* UGLY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:87 - 1

/* Normalized load factor. Used with BalancerMember,
 * it is a number between 1 and 100.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:96 - 1

/* If set it will give the retry timeout for the worker
 * The default value is 60 seconds, meaning that if
 * in error state, it will be retried after that timeout.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:107 - 1

/* Time in seconds that will destroy all the connections
 * that exceed the smax
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:263 - 1

/* Ping/Pong timeout in given unit (default is second).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:315 - 1

/* Balancer sticky session name.
 * Set to something like JSESSIONID or
 * PHPSESSIONID, etc..,
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:358 - 1

/* Balancer timeout in seconds.
 * If set this will be the maximum time to
 * wait for a free worker.
 * Default is not to wait.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:369 - 1

/* Maximum number of failover attempts before
 * giving up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:506 - 1

/* We reach the end of the uri before the end of "e;alias_fakename"e;
 * for example uri is "e;/"e; and alias_fakename "e;/examples"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:517 - 1

/* Return number of characters from URI which matched (may be
 * greater than length of alias, since we may have matched
 * doubled slashes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:700 - 1

/* We made a reducing transformation, so we can't safely use
 * unparsed_uri. Safe fallback is to ignore nocanon.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:732 - 1

/* someone has already set up the proxy, it was possibly ourselves
 * in proxy_detect
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:883 - 1

/* XXX: Shouldn't we try this before we run the proxy_walk? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:906 - 1

/* otherwise; we've done the best we can */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:908 - 1

/* Send a redirection if the request contains a hostname which is not */
/* fully qualified, i.e. doesn't have a domain name appended. Some proxy */
/* servers like Netscape's allow this and access hosts from the local */
/* domain in this case. I think it is better to redirect to a FQDN, since */
/* these will later be found in the bookmarks files. */
/* The "e;ProxyDomain"e; directive determines what domain will be appended */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:919 - 1

/* We only want to worry about GETs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:923 - 1

/* If host does contain a dot already, or it is "e;localhost"e;, decline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:924 - 1

/* has domain, or IPv4 literal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:925 - 1

/* IPv6 literal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:927 - 1

/* host name has a dot already */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1102 - 1

/*
 * Only return if access_status is not HTTP_SERVICE_UNAVAILABLE
 * This gives other modules the chance to hook into the
 * request_status hook and decide what to do in this situation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1118 - 1

/* Initialise worker if needed, note the shared area must be initialized by the balancer logic */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1151 - 1

/*
 * An fatal error or success, so no point in
 * retrying with a direct connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1161 - 1

/*
 * The request body is of length > 0. We cannot
 * retry with a direct connection since we already
 * sent (parts of) the request body to the proxy
 * and do not have any longer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1184 - 1

/* otherwise, try it direct */
 /* N.B. what if we're behind a firewall, where we must use a proxy or
 * give up??
 */

 /* handle the scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1492 - 1

/* Filled in by proxysection, when applicable */

 /* Put these in the dir config so they work inside <Location> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1616 - 1

/*
 * We could be passed a URL during the config stage that contains
 * the UDS path... ignore it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1750 - 1

/* Distinguish the balancer from worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1921 - 1

/* ignore case for host names */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2266 - 1

/* lowercase scheme://hostname */

 /* Try to find the balancer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2333 - 1

/* Directive inside <Proxy section
 * Parent directive arg is the worker/balancer name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2342 - 1

/* Standard set directive with worker/balancer
 * name as first param.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2451 - 1

/* XXX Ignore case? What if we proxy a case-insensitive server?!?
 * While we are at it, shouldn't we also canonicalize the entire
 * scheme? See proxy_fixup()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2671 - 1

/* XXX Perhaps the casting useless */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2822 - 1

/* Ugly, but what else? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2884 - 1

/*
 * This routine is called before the server processes the configuration
 * files.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2923 - 1

/* walk <Proxy > entries and suppress default TRACE behavior */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2936 - 1

/* register optional functions within proxy_util.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:47 - 1

/*
 * do syntactic check.
 * We break the URL into host, port, path, search
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:82 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:116 - 1

/* Everything else is not considered idempotent. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:132 - 1

/* parse error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:365 - 1

/*
 * Prepare apr_pollfd_t struct for possible later check if there is currently
 * data available from the backend (do not flush response to client)
 * or not (flush response to client)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:428 - 1

/*
 * something is wrong TC asks for more body but we are
 * already at the end of the body data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:439 - 1

/* Do not send anything to the client.
 * Backend already send us the headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:473 - 1

/* AJP13_SEND_BODY_CHUNK with zero length
 * is explicit flush message
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:647 - 1

/*
 * prevent proxy_handler() from treating this as an
 * internal error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:36 - 1

/*
 * Register our mutex type before the config is read so we
 * can adjust the mutex settings using the Mutex directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:67 - 1

/* TODO: offset of BALANCER_PREFIX ?? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:77 - 1

/* do syntatic check.
 * We break the URL into host, port, path, search
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:397 - 1

/* we break the URL into host, port, uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:431 - 1

/* If all workers are in error state force the recovery.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:488 - 1

/* Step 3.5: Update member list for the balancer */
 /* TODO: Implement as provider! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:502 - 1

/* We have a sticky load balancer
 * Update the workers status
 * so that even session routes get
 * into account.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:591 - 1

/* Add balancer/worker info to env. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:727 - 1

/* balancer_post_config() will be called twice during startup. So, don't
 * set up the static data the 1st time through. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:757 - 1

/*
 * Go thru each Vhost and create the shared mem slotmem for
 * each balancer's workers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:783 - 1

/* Shared memory already created for this proxy_server_conf.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:840 - 1

/* setup shm for balancers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1070 - 1

/* Check that the supplied nonce matches this server's nonce;
 * otherwise ignore all parameters, to prevent a CSRF attack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1245 - 1

/* by default, all new workers are disabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1271 - 1

/* Start proxy_balancer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1295 - 1

/* End proxy_balancer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1696 - 1

/* Ugly, but what else? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1708 - 1

/* Ugly, but what else? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:146 - 1

/* read available data (in blocks of CONN_BLKSZ) from c_i and copy to c_o */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:300 - 1

/* handle a permanent error from the above loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:417 - 1

/* Loop until done (one side closes the connection, or an error) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:168 - 1

/*
 * See if we have already added a ProxyPassReverse entry
 * for this host... If so, don't do it again.
 */
 /*
 * NOTE: dconf is process specific so this will only
 * work as long as we maintain that this process
 * or thread is handling the backend
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:184 - 1

/* Didn't find one... add it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:66 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:121 - 1

/* before proxy-fcgi-pathinfo had multi-values. This requires the
 * the FCGI server to fixup PATH_INFO because it's the entire path
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:265 - 1

/* Strip balancer prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:277 - 1

/* XXX are there any FastCGI specific env vars we need to send? */

 /* XXX mod_cgi/mod_cgid use ap_create_environment here, which fills in
 * the TZ value specially. We could use that, but it would mean
 * parsing the key/value pairs back OUT of the allocated env array,
 * not to mention allocating a totally useless array in the first
 * place, which would suck. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:301 - 1

/* our limit per record, which could have been up
 * to AP_FCGI_MAX_CONTENT_LEN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:605 - 1

/* Now get the actual data. Yes it sucks to do this in a second
 * recv call, this will eventually change when we move to real
 * nonblocking recv calls. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:649 - 1

/* The 304 response MUST NOT contain
 * a message-body, ignore it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:663 - 1

/*
 * set script_error_status to discard
 * everything after the headers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:668 - 1

/*
 * prevent ap_die() from treating this as a
 * recursive error, initially:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:716 - 1

/* If we didn't read all the data, go back and get the
 * rest of it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:763 - 1

/* Leave on above switch's inner error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:800 - 1

/* Request IDs are arbitrary numbers that we assign to a
 * single request. This would allow multiplex/pipelining of
 * multiple requests to the same FastCGI connection, but
 * we don't support that, and always use a value of '1' to
 * keep things simple. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:32 - 1

/* Automatic timestamping (Last-Modified header) based on MDTM is used if:
 * 1) the FTP server supports the MDTM command and
 * 2) HAVE_TIMEGM (preferred) or HAVE_GMTOFF is available at compile time
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:125 - 1

/* decode it if not already done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:260 - 1

/*
 * is string LF terminated?
 * XXX: This check can be made more efficient by simply checking
 * if the last character in the 'response' buffer is an ASCII_LF.
 * See ap_rgetline() for an example.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:316 - 1

/* now parse path/parameters args, according to rfc1738 */
 /*
 * N.B. if this isn't a true proxy request, then the URL path (but not
 * query args) has already been decoded. This gives rise to the problem
 * of a ; being decoded into the path.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:362 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:470 - 1

/* basedir is either "e;"e;, or "e;/%2f"e; for the "e;squid %2f hack"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:501 - 1

/* Strip off a type qualifier. It is ignored for dir listings */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:507 - 1

/* collapse multiple leading slashes to one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:522 - 1

/* Add a link to the root directory (if %2f hack was used) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:566 - 1

/* If the caller has determined the current directory, and it differs */
 /* from what the client requested, then show the real name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:605 - 1

/* get a complete line */
 /* if the buffer overruns - throw data away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:771 - 1

/* Parse EPSV reply and return port, or zero on error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:796 - 1

/*
 * Generic "e;send FTP command to server"e; routine, using the control socket.
 * Returns the FTP returncode (3 digit code)
 * Allows for tracing the FTP protocol (in LogLevel debug)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:840 - 1

/* Set ftp server to TYPE {A,I,E} before transfer of a directory or file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:874 - 1

/* ignore it silently */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1022 - 1

/*
 * I: Who Do I Connect To? -----------------------
 *
 * Break up the URL to determine the host to connect to
 */

 /* we only support GET and HEAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1032 - 1

/* We break the URL into host, port, path-search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1058 - 1

/* "e;type=d"e; forces a dir listing.
 * The other types (i|a|e) are directly used for the ftp TYPE command
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1064 - 1

/* Check valid types, rather than ignoring invalid types silently: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1076 - 1

/*
 * The "e;Authorization:"e; header must be checked first. We allow the user
 * to "e;override"e; the URL-coded user [ & password ] in the Browsers'
 * User&Password Dialog. NOTE that this is only marginally more secure
 * than having the password travel in plain as part of the URL, because
 * Basic Auth simply uuencodes the plain text password. But chances are
 * still smaller that the URL is logged regularly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1207 - 1

/*
 * III: Send Control Request -------------------------
 *
 * Log into the ftp server, send the username & password, change to the
 * correct directory...
 */


 /* possible results: */
 /* 120 Service ready in nnn minutes. */
 /* 220 Service ready for new user. */
 /* 421 Service not available, closing control connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1399 - 1

/*
 * IV: Make Data Connection? -------------------------
 *
 * Try EPSV, if that fails... try PASV, if that fails... try PORT.
 */
/* this temporarily switches off EPSV/PASV */
/*goto bypass;*/

 /* set up data connection - EPSV */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1450 - 1

/* Take a shallow copy of the server address to
 * modify; the _addr_get function gives back a
 * pointer to the socket's internal structure.
 * This is awkward given current APR network
 * interfaces. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1790 - 1

/* If the current directory contains no slash, we are talking to
 * a non-unix ftp system. Try LIST instead of "e;LIST -lag"e;, it
 * should return a long listing anyway (unlike NLST).
 * Some exotic FTP servers might choke on the "e;-lag"e; switch.
 */
 /* Note that we do not escape the path here, to allow for
 * queries like: ftp://user@host/apache/src/server/http_*.c
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1809 - 1

/* from draft-ietf-ftpext-mlst-14.txt:
 * The FTP command, MODIFICATION TIME (MDTM), can be used to determine
 * when a file in the server NVFS was last modified. <..>
 * The syntax of a time value is:
 * time-val = 14DIGIT [ "e;."e; 1*DIGIT ] <..>
 * Symbolically, a time-val may be viewed as
 * YYYYMMDDHHMMSS.sss
 * The "e;."e; and subsequent digits ("e;sss"e;) are optional. <..>
 * Time values are always represented in UTC (GMT)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1930 - 1

/* See above for the "e;LIST"e; vs. "e;LIST -lag"e; discussion. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1985 - 1

/* USE_MDTM */

 /* If an encoding has been set by mistake, delete it.
 * @@@ FIXME (e.g., for ftp://user@host/file*.tar.gz,
 * @@@ the encoding is currently set to x-gzip)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2024 - 1

/*
 * the peer reset the connection already; ap_run_create_connection() closed
 * the socket
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2116 - 1

/* Ack! Phbtt! Die! User aborted! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:87 - 1

/* Enable address cache for generic reverse worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:97 - 1

/*
 * Since this is the watchdog, workers never actually handle a
 * request here, and so the local data isn't initialized (of
 * course, the shared memory is). So we need to bootstrap
 * worker->cp. Note, we only need do this once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:322 - 1

/* No error means we have a valid template */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:371 - 1

/* TODO: REMOVE ap_log_error call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:415 - 1

/* loop thru all workers */
 /* TODO: REMOVE ap_log_error call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:429 - 1

/* Have any new balancers or workers been added dynamically? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:434 - 1

/* TODO: REMOVE ap_log_error call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:62 - 1

/* do syntatic check.
 * We break the URL into host, port, path, search
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:72 - 1

/*
 * now parse path/search args, according to rfc1738:
 * process the path.
 *
 * In a reverse proxy, our URL has been processed, so canonicalise
 * unless proxy-nocanon is set to say it's raw
 * In a forward proxy, we have and MUST NOT MANGLE the original.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:105 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:113 - 1

/* Clear all connection-based headers from the incoming headers table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:294 - 1

/* Flush now since we have the header and (enough of) the prefeched
 * body already, unless we are EOS since everything is to be
 * flushed below this loop with the EOS chunk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:435 - 1

/* C-L < bytes streamed?!?
 * We will error out after the body is completely
 * consumed, but we can't stream more bytes at the
 * back end since they would in part be interpreted
 * as another request! If nothing is sent, then
 * just send nothing.
 *
 * Prevents HTTP Response Splitting.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:460 - 1

/* Flush now since we have the header and (enough of) the prefeched
 * body already.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:566 - 1

/*
 * LimitRequestBody does not affect Proxy requests (Should it?).
 * Let it take effect if we decide to store the body in a
 * temporary file on disk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:674 - 1

/*
 * Transform buckets from one bucket allocator to another one by creating a
 * transient bucket for each data bucket and let it use the data read from
 * the old bucket. Metabuckets are transformed by just recreating them.
 * Attention: Currently only the following bucket types are handled:
 *
 * All data buckets
 * FLUSH
 * EOS
 *
 * If an other bucket type is found its type is logged as a debug message
 * and APR_EGENERAL is returned.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:787 - 1

/* WE only understand chunked. Other modules might inject
 * (and therefore, decode) other flavors but we don't know
 * that the can and have done so unless they remove
 * their decoding from the headers_in T-E list.
 * XXX: Make this extensible, but in doing so, presume the
 * encoding has been done by the extensions' handler, and
 * do not modify add_te_chunked's logic
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:954 - 1

/* If we have to spool the body, do it now, before connecting or
 * reusing the backend connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:967 - 1

/* Yes I hate gotos. This is the subrequest shortcut */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1159 - 1

/*
 * Read header lines until we get the empty separator line, a read error,
 * the connection closes (EOF), or we timeout.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1209 - 1

/* this is the psc->badopt == bad_ignore case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1228 - 1

/* make sure we add so as not to destroy duplicated headers
 * Modify headers requiring canonicalisation and/or affected
 * by ProxyPassReverse and family with process_proxy_header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1334 - 1

/* Setup for 100-Continue timeout if appropriate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1381 - 1

/*
 * If we are a reverse proxy request shutdown the connection
 * WITHOUT ANY response to trigger a retry by the client
 * if allowed (as for idempotent requests).
 * BUT currently we should not do this if the request is the
 * first request on a keepalive connection as browsers like
 * seamonkey only display an empty page in this case and do
 * not do a retry. We should also not do this on a
 * connection which times out; instead handle as
 * we normally would handle timeouts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1427 - 1

/* Is it an HTTP/1 response?
 * This is buggy if we ever see an HTTP/1.10
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1474 - 1

/* read the headers. */
 /* N.B. for HTTP/1.0 clients, we have to fold line-wrapped headers*/
 /* Also, take care with headers with multiple occurences. */

 /* First, tuck away all already existing cookies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1492 - 1

/*
 * ap_send_error relies on a headers_out to be present. we
 * are in a bad position here.. so force everything we send out
 * to have nothing to do with the incoming packet
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1519 - 1

/*
 * 2616 section 4.4, point 3: "e;if both Transfer-Encoding
 * and Content-Length are received, the latter MUST be
 * ignored"e;;
 *
 * To help mitigate HTTP Splitting, unset Content-Length
 * and shut down the backend server connection
 * XXX: We aught to treat such a response as uncachable
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1559 - 1

/* Clear hop-by-hop headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1594 - 1

/* cancel keepalive if HTTP/1.0 or less */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1643 - 1

/* FIXME: refine this to be able to specify per-response-status
 * policies and maybe also add option to bail out with 502
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1651 - 1

/* Moved the fixups of Date headers and those affected by
 * ProxyPassReverse/etc from here to ap_proxy_read_headers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1677 - 1

/*@@@FIXME:
 * At this point in response processing of a 0.9 response,
 * we don't know yet whether data is binary or not.
 * mod_charset_lite will get control later on, so it cannot
 * decide on the conversion of this buffer full of data.
 * However, chances are that we are not really talking to an
 * HTTP/0.9 server, but to some different protocol, therefore
 * the best guess IMHO is to always treat the buffer as "e;text/x"e;:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1718 - 1

/*
 * prevent proxy_handler() from treating this as an
 * internal error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1730 - 1

/* not 304 */

 /* We need to copy the output headers and treat them as input
 * headers as well. BUT, we need to do this before we remove
 * TE, so that they are preserved accordingly for
 * ap_http_filter to know where to end.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1738 - 1

/*
 * Restore Transfer-Encoding header from response if we saved
 * one before and there is none left. We need it for the
 * ap_http_filter. See above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1878 - 1

/* make sure we release the backend connection as soon
 * as we know we are done, so that the backend isn't
 * left waiting for a slow client to eventually
 * acknowledge the data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1886 - 1

/* Ensure that the backend is not reused */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1901 - 1

/* this causes socket close below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1917 - 1

/* make sure we release the backend connection as soon
 * as we know we are done, so that the backend isn't
 * left waiting for a slow client to eventually
 * acknowledge the data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1936 - 1

/* We have to cleanup bb brigade, because buckets inserted to it could be
 * created from scpool and this pool can be freed before this brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1952 - 1

/* If our connection with the client is to be aborted, return DONE. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1968 - 1

/*
 * This handles http:// URLs, and other URLs using a remote proxy over http
 * If proxyhost is NULL, then contact the server directly, otherwise
 * go via the proxy.
 * Note that if a proxy is used, then URLs other than http: can be accessed,
 * also, if we have trouble which is clearly specific to the proxy, then
 * we return DECLINED so that we can try another proxy. (Or the direct
 * route.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2115 - 1

/* The code assumes locurl is not changed during the loop, or
 * ap_proxy_http_prefetch() would have to be called every time,
 * and header_brigade be changed accordingly...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2172 - 1

/* Step Four: Send the Request
 * On the off-chance that we forced a 100-Continue as a
 * kinda HTTP ping test, allow for retries
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:204 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:225 - 1

/*
 * Send a block of data, ensure, everything is sent
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:271 - 1

/*
 * The header blob basically takes the environment and concatenates
 * keys and values using 0 bytes. There are special treatments here:
 * - GATEWAY_INTERFACE and SCGI_MAGIC are dropped
 * - CONTENT_LENGTH is always set and must be sent as the very first
 * variable
 *
 * Additionally it's wrapped into a so-called netstring (see SCGI spec)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:485 - 1

/* break; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:515 - 1

/* break; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:35 - 1

/* cleared before each suspend, destroyed when request ends */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:231 - 1

/*
 * do syntactic check.
 * We break the URL into host, port, path, search
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:261 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:80 - 1

/* Causes all serf connections to unregister from the event mpm */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:115 - 1

/* justin says that error handling isn't done yet. hah. */
 /* XXXXXX: review */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:481 - 1

/* XXXXX: cache dns? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:914 - 1

/* Server has zero threads active, but lots of them ready,
 * it likely just started up, so lets /4 the number ready,
 * to prevent us from completely flooding it with all new
 * requests.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:45 - 1

/*
 * Opaque structure containing target server info when
 * using a forward proxy.
 * Up to now only used in combination with HTTP CONNECT.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:54 - 1

/* Proxy authorization */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:76 - 1

/* Global balancer counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:101 - 1

/* XXX: APR_ENOSPACE would be better */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:116 - 1

/* already called in the knowledge that the characters are hex digits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:271 - 1

/*
 * decode it if not already done. do not decode reverse proxied URLs
 * unless specifically forced
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:287 - 1

/* recode it, if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:300 - 1

/*
 * Parses network-location.
 * urlp on input the URL; on output the path, after the leading /
 * user NULL if no user/password permitted
 * password holder for password
 * host holder for host
 * port port number; only set if one is supplied.
 *
 * Returns an error string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:393 - 1

/* Allow "e;error-notes"e; string to be printed by ap_send_error_response() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:501 - 1

/* netmask must be between 0 and 32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:516 - 1

/* "e;IP Address should be given in dotted-quad form, optionally followed by a netmask (e.g., 192.168.111.0/24)"e;; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:567 - 1

/* ap_proxy_is_ipaddr() already confirmed that we have
 * a valid octet in ip_addr[i]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:659 - 1

/* @@@@ handle optional port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:688 - 1

/* @@@ do this within the setup? */
 /* Ignore trailing dots in domain comparison: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:755 - 1

/* Ignore trailing dots in host2 comparison: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:787 - 1

/* XXX FIXME: conf->noproxies->elts is part of an opaque structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:896 - 1

/* urlpart (l3) assuredly starts with its own '/' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:908 - 1

/* edge case where fake is just "e;/"e;... avoid double slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1152 - 1

/* We should never get here without a valid BALANCER_PREFIX... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1272 - 1

/*
 * for each balancer we need to init the global
 * mutex and then attach to the shared worker shm
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1339 - 1

/*
 * Create a connection pool's subpool.
 * This pool is used for connection recycling.
 * Once the worker is added it is never removed but
 * it can be disabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1381 - 1

/* Sanity check: Did we already return the pooled connection? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1426 - 1

/*
 * If we have an existing SSL connection it might be possible that the
 * server sent some SSL message we have not read so far (e.g. an SSL
 * shutdown message if the server closed the keepalive connection while
 * the connection was held unused in our pool).
 * So ensure that if present (=> APR_NONBLOCK_READ) it is read and
 * processed. We don't expect any data to be in the returned brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1464 - 1

/*
 * Create the subpool for each connection
 * This keeps the memory consumption constant
 * when disconnecting from backend.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1471 - 1

/*
 * Create another subpool that manages the data for the
 * socket and the connection member of the proxy_conn_rec struct as we
 * destroy this data more frequently than other data in the proxy_conn_rec
 * struct like hostname and addr (at least in the case where we have
 * keepalive connections that timed out).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1555 - 1

/* We got all the way through the worker path without a difference */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1653 - 1

/*
 * To create a worker from scratch first we define the
 * specifics of the worker; this is all local data.
 * We then allocate space for it if data needs to be
 * shared. This allows for dynamic addition during
 * config and runtime.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1672 - 1

/*
 * Look to see if we are using UDS:
 * require format: unix:/path/foo/bar.sock|http://ignored/path2/
 * This results in talking http to the socket at /path/foo/bar.sock
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1710 - 1

/*
 * Workers can be associated w/ balancers or on their
 * own; ie: the generic reverse-proxy or a worker
 * in a simple ProxyPass statement. eg:
 *
 * ProxyPass / http://www.example.com
 *
 * in which case the worker goes in the conf slot.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1723 - 1

/* right to left baby */
 /* we've updated the list of workers associated with
 * this balancer *locally* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1812 - 1

/*
 * Create an already defined worker and free up memory
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1851 - 1

/* The worker is already initialized */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2048 - 1

/*
 * The forward worker does not keep connections alive, so
 * ensure that mod_proxy_http does the correct thing
 * regarding the Connection header in the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2063 - 1

/*
 * The reverse worker does not keep connections alive, so
 * ensure that mod_proxy_http does the correct thing
 * regarding the Connection header in the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2091 - 1

/* no post_request handler available */
 /* TODO: recycle direct worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2099 - 1

/* DEPRECATED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2118 - 1

/*
 * this could be an IPv6 address from the DNS but the
 * local machine won't give us an IPv6 socket; hopefully the
 * DNS returned an additional address to try
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2173 - 1

/* if an error occurred, loop round and try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2285 - 1

/*
 * allocate these out of the specified connection pool
 * The scheme handler decides if this is permanent or
 * short living pool.
 */
 /* Unless we are connecting the backend via a (forward Proxy)Remote, we
 * have to use the original form of the URI (non absolute), but this is
 * also the case via a remote proxy using the CONNECT method since the
 * original request (and URI) is to be embedded in the body.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2347 - 1

/*
 * If we have a forward proxy and the protocol is HTTPS,
 * then we need to prepend a HTTP CONNECT request before
 * sending our actual HTTPS requests.
 * Save our real backend data for using it later during HTTP CONNECT.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2361 - 1

/* Do we want to pass Proxy-Authorization along?
 * If we haven't used it, then YES
 * If we have used it then MAYBE: RFC2616 says we MAY propagate it.
 * So let's make it configurable by env.
 * The logic here is the same used in mod_proxy_http.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2370 - 1

/* we haven't yet authenticated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2453 - 1

/*
 * When SSL is configured, determine the hostname (SNI) for the request
 * and save it in conn->ssl_hostname. Close any reused connection whose
 * SNI differs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2522 - 1

/* The socket might be closed in which case
 * the poll will return POLLIN.
 * If there is no data available the socket
 * is closed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2599 - 1

/* Set a reasonable agent and send everything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2621 - 1

/* Drain what's left */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2786 - 1

/*
 * this could be an IPv6 address from the DNS but the
 * local machine won't give us an IPv6 socket; hopefully the
 * DNS returned an additional address to try
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2852 - 1

/* if an error occurred, loop round and try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2887 - 1

/*
 * For HTTP CONNECT we need to prepend CONNECT request before
 * sending our actual HTTPS requests.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2893 - 1

/* If an error occurred, loop round and try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2931 - 1

/*
 * A worker came back. So here is where we need to
 * either reset all params to initial conditions or
 * apply some sort of aging
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3005 - 1

/*
 * the peer reset the connection already; ap_run_create_connection()
 * closed the socket
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3029 - 1

/* TODO: See if this will break FTP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3054 - 1

/* Shutdown the connection before closing it (eg. SSL connections
 * need to be close-notify-ed).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3074 - 1

/* deprecated - to be removed in v2.6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3082 - 1

/*
 * If this is a subrequest, then prevent also caching of the main
 * request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3177 - 1

/* balancer sync */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3187 - 1

/* worker sync */

 /*
 * Look thru the list of workers in shm
 * and see which one(s) we are lacking...
 * again, the cast to unsigned int is safe
 * since our upper limit is always max_workers
 * which is int.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3307 - 1

/**
 * Remove all headers referred to by the Connection header.
 * Returns -1 on error. Otherwise, returns 1 if 'Close' was seen in
 * the Connection header tokens, and 0 if not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3405 - 1

/* if literal IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3491 - 1

/* Don't forward any "e;100 Continue"e; response if the client is
 * not expecting it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3498 - 1

/* Add the Expect header if not already there. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3564 - 1

/* Already sent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3567 - 1

/* Clear out hop-by-hop request headers not to send
 * RFC2616 13.5.1 says we should strip these headers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3578 - 1

/* Do we want to strip Proxy-Authorization ?
 * If we haven't used it, then NO
 * If we have used it then MAYBE: RFC2616 says we MAY propagate it.
 * So let's make it configurable by env.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3584 - 1

/* we've authenticated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3602 - 1

/* for sub-requests, ignore freshness/expiry headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3621 - 1

/* Restore the original headers in (see comment above),
 * we won't modify them anymore.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:127 - 1

/* found a session that hasn't expired? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:146 - 1

/* no luck, create a blank session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:206 - 1

/* reset the expiry before saving if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:217 - 1

/* also don't save sessions that didn't change at all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:254 - 1

/**
 * Get a particular value from the session.
 * @param r The current request.
 * @param z The current session. If this value is NULL, the session will be
 * looked up in the request, created if necessary, and saved to the request
 * notes.
 * @param key The key to get.
 * @param value The buffer to write the value to.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:369 - 1

/**
 * Default identity decoding for the session.
 *
 * By default, the name value pairs in the session are URLEncoded, separated
 * by equals, and then in turn separated by ampersand, in the format of an
 * html form.
 *
 * This was chosen to make it easy for external code to unpack a session,
 * should there be a need to do so.
 *
 * This function reverses that process, and populates the session table.
 *
 * Name / value pairs that are not encoded properly are ignored.
 *
 * @param r The request pointer.
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:479 - 1

/* save away the session, and we're done */
 /* when unset or on error, we've complained to the log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:502 - 1

/**
 * Fixups hook.
 *
 * Load the session within a fixup - this ensures that the session is
 * properly loaded prior to the handler being called.
 *
 * The fixup is also responsible for injecting the session into the CGI
 * environment, should the admin have configured it so.
 *
 * @param r The request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:41 - 1

/**
 * Set the cookie and embed the session within it.
 *
 * This function adds an RFC2109 compliant Set-Cookie header for
 * the cookie specified in SessionCookieName, and an RFC2965 compliant
 * Set-Cookie2 header for the cookie specified in SessionCookieName2.
 *
 * If specified, the optional cookie attributes will be added to
 * each cookie. If defaults are not specified, DEFAULT_ATTRS
 * will be used.
 *
 * On success, this method will return APR_SUCCESS.
 *
 * @param r The request pointer.
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:162 - 1

/* don't cache auth protected pages */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:142 - 1

/* don't attempt to encrypt an empty string, trying to do so causes a segfault */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:472 - 1

/* if no library has been configured, set the recommended library
 * as a sensible default.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:50 - 1

/* optional function - look it up once in post_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:153 - 1

/**
 * Load the session by firing off a dbd query.
 *
 * If the session is anonymous, the session key will be extracted from
 * the cookie specified. Failing that, the session key will be extracted
 * from the GET parameters.
 *
 * If the session is keyed by the username, the session will be extracted
 * by that.
 *
 * If no session is found, an empty session will be created.
 *
 * On success, this returns OK.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:248 - 1

/* don't cache pages with a session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:460 - 1

/* don't cache pages with a session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:84 - 1

/* we already have it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:137 - 1

/* we already have it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:239 - 1

/*
 * XXXX: if !AP_SLOTMEM_IS_PREGRAB, then still worry about
 * inuse for grab and return?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:138 - 1

/* Persisted file names are immutable... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:238 - 1

/* for successful return @ EOF */
 /*
 * if at EOF, don't bother checking md5
 * - backwards compatibility
 * */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:351 - 1

/* we already have it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:502 - 1

/* we already have it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:291 - 1

/* Deprecated directives. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:354 - 1

/* We must register the library in full, to ensure our configuration
 * code can successfully test the SSL environment.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:103 - 1

/** Limit on size of stored SCTs for a certificate (individual SCTs as well
 * as size of all.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:108 - 1

/** Limit on size of log URL list for a certificate
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:197 - 1

/* The APR other-child API doesn't tell us how the daemon exited
 * (SIGSEGV vs. exit(1)). The other-child maintenance function
 * needs to decide whether to restart the daemon after a failure
 * based on whether or not it exited due to a fatal startup error
 * or something that happened at steady-state. This exit status
 * is unlikely to collide with exit signals.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:333 - 1

/* Add in any SCTs that the administrator has configured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:383 - 1

/* Only now do we know that the SCT is valid to send, so
 * see if it has to be skipped by configured limit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:560 - 1

/* no need to print error string for file-not-found err */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:690 - 1

/* some garbage in the file? can't map to an auto-maintained SCT,
 * so just skip it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:720 - 1

/* can't tell what was trusted before; just remove everything
 * that was created automatically
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:854 - 1

/* specific issue already logged */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:936 - 1

/* If apache is not terminating or restarting,
 * restart the daemon
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:985 - 1

/* Ignoring SIGCHLD results in errno ECHILD returned from apr_proc_wait().
 * apr_signal(SIGCHLD, SIG_IGN);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1003 - 1

/* Fix up permissions of the directories written to by the daemon
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1047 - 1

/* SIGHUP at restart/stop will break out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1059 - 1

/* clear setting from previous generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1166 - 1

/* we may have already processed this cert for another
 * server_rec
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1345 - 1

/* WIN32-ism: ensure this is the parent by checking AP_PARENT_PID,
 * which is only set in WinNT children.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1373 - 1

/* umm, hard to tell if needed... must have server with
 * SSL proxy enabled and server-specific-sconf->proxy_awareness
 * != PROXY_OBLIVIOUS...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1584 - 1

/* Create hash of leaf certificate and any SCTs so that
 * we can determine whether or not we've seen this exact
 * info from the server before.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1816 - 1

/* Enqueue data from server for off-line audit (cert, SCT(s))
 * We already filtered out duplicate data being saved from this
 * process. (With reverse proxy it will be the same data over
 * and over.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1830 - 1

/* child init successful, no
 * subsequent error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1849 - 1

/* no error just occurred... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1915 - 1

/* an I/O error occurred; file is not usable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2047 - 1

/* Note: Peer certificate is not available in this callback via
 * SSL_get_peer_certificate(ssl)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2219 - 1

/* cached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2356 - 1

/* UNDOC */

 /* This callback is needed only to determine that the peer is CT-aware
 * when resuming a session. For an initial handshake, the callbacks
 * registered via SSL_CTX_set_custom_srv_ext() are sufficient.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2475 - 1

/* the normal cleanup was disabled in the call to apr_file_open */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2498 - 1

/* what, you think anybody cares? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2516 - 1

/* might crash otherwise due to lack of checking for initialized data
 * in all the right places, but this is going to skip pchild cleanup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2534 - 1

/* might crash otherwise due to lack of checking for initialized data
 * in all the right places, but this is going to skip pchild cleanup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2550 - 1

/* might crash otherwise due to lack of checking for initialized data
 * in all the right places, but this is going to skip pchild cleanup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2563 - 1

/* might crash otherwise due to lack of checking for initialized data
 * in all the right places, but this is going to skip pchild cleanup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2574 - 1

/* might crash otherwise due to lack of checking for initialized data
 * in all the right places, but this is going to skip pchild cleanup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2612 - 1

/* !PROXY_OBLIVIOUS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_log_config.c:53 - 1

/* is there a cheaper way? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_log_config.c:182 - 1

/* The log_config array should have already been allocated from p. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_log_config.c:418 - 1

/* The log could return us an SCT with an older timestamp which
 * is within the trusted time interval for the log, but for
 * simplicity let's just assume that if the log isn't still
 * within a trusted interval we won't send SCTs from the log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:122 - 1

/* XXX maybe do this only if log level is such that we'll
 * use it later?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:265 - 1

/* Force invalid signature error: orig_mem[0] = orig_mem[0] + 1; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:140 - 1

/* add to existing array if it already exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:610 - 1

/* all this deserialization crap is of course from
 * c-t/src/proto/serializer.cc
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:673 - 1

/* always disable null and export ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:724 - 1

/* Some (packaged) versions of OpenSSL do not support
 * compression by default. Enabling this directive would not
 * have the desired effect, so fail with an error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1108 - 1

/* Nothing to do; session cache will be off. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1118 - 1

/* Argument is of form 'name:args' or just 'name'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1133 - 1

/* Cache found; create it, passing anything beyond the colon. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1402 - 1

/* always disable null and export ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1701 - 1

/* Argument is of form 'name:args' or just 'name'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1716 - 1

/* Cache found; create it, passing anything beyond the colon. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1860 - 1

/* always disable null and export ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:53 - 1

/*
 * Grab well-defined DH parameters from OpenSSL, see the get_rfc*
 * functions in <openssl/bn.h> for all available primes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:162 - 1

/* We initialize mc->pid per-process in the child init,
 * but it should be initialized for startup before we
 * call ssl_rand_seed() below.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:178 - 1

/* just to avoid problems */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:210 - 1

/* Fix up stuff that may not have been set. If sc->enabled is
 * UNSET, then SSL is disabled on this vhost. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:287 - 1

/*
 * initialize session caching
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:304 - 1

/*
 * Either now skip this server when SSL is disabled for
 * it or give out some information about what we're
 * configuring.
 */

 /*
 * Read the server certificate and key
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:326 - 1

/*
 * Configuration consistency checks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:570 - 1

/* always disable SSLv2, as per RFC 6176 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:641 - 1

/* If httpd is configured to reduce mem usage, ask openssl to do so, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:715 - 1

/*
 * Configure Client Authentication details
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:751 - 1

/*
 * Give a warning when no CAs were configured but client authentication
 * should take place. This cannot work.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:777 - 1

/*
 * Configure SSL Cipher Suite. Always disable NULL and export ciphers,
 * see also ssl_engine_config.c:ssl_cmd_SSLCipherSuite().
 * OpenSSL's SSL_DEFAULT_CIPHER_LIST includes !aNULL:!eNULL from 0.9.8f,
 * and !EXP from 0.9.8zf/1.0.1m/1.0.2a, so append them while we support
 * earlier versions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:862 - 1

/*
 * Read a file that optionally contains the server certificate in PEM
 * format, possibly followed by a sequence of CA certificates that
 * should be sent to the peer in the SSL Certificate message.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:881 - 1

/* optionally skip a leading server certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:889 - 1

/* free a perhaps already configured extra chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:908 - 1

/* Make sure that only the error is just an EOF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1166 - 1

/* Workaround bug in SSL_get_certificate in OpenSSL 0.9.8y */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1614 - 1

/* Initialize the server if SSL is enabled or optional.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1647 - 1

/*
 * Give out warnings when a server has HTTPS configured
 * for the HTTP port or vice versa
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1913 - 1

/*
 * Drop the session cache and mutex
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:213 - 1

/* Use a transient bucket for the output data - any downstream
 * filter must setaside if necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:341 - 1

/*
 * this char_buffer api might seem silly, but we don't need to copy
 * any of this data and we need to remember the length.
 */

/* Copy up to INL bytes from the char_buffer BUFFER into IN. Note
 * that due to the strange way this API is designed/used, the
 * char_buffer object is used to cache a segment of inctx->buffer, and
 * then this function called to copy (part of) that segment to the
 * beginning of inctx->buffer. So the segments to copy cannot be
 * presumed to be non-overlapping, and memmove must be used. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:365 - 1

/* swallow remainder of the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:398 - 1

/* Justin points out this is an http-ism that might
 * not fit if brigade_consume is added to APR. Perhaps
 * apr_bucket_read(eos_bucket) should return APR_EOF?
 * Then this becomes mainline instead of a one-off.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:432 - 1

/* Assure we don't overflow. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:476 - 1

/* OpenSSL catches this case, so should we. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:510 - 1

/* Unexpected errors discard the brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:529 - 1

/* Unexpected errors and APR_EOF clean out the brigade.
 * Subsequent calls will return APR_EOF.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:630 - 1

/* Down to a nonblock pattern as we have some data already
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:646 - 1

/* SSL_read may not read because we haven't taken enough data
 * from the stack. This is where we want to consider all of
 * the blocking and SPECULATIVE semantics
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:666 - 1

/* Already read something, return APR_SUCCESS instead.
 * On win32 in particular, but perhaps on other kernels,
 * a blocking call isn't 'always' blocking.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:693 - 1

/*
 * If OpenSSL wants to read more, and we were nonblocking,
 * report as an EAGAIN. Otherwise loop, pulling more
 * data from network filter.
 *
 * (This is usually the case when the client forces an SSL
 * renegotiation which is handled implicitly by OpenSSL.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:715 - 1

/* Already read something, return APR_SUCCESS instead. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:730 - 1

/* if (ssl_err == SSL_ERROR_SSL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:731 - 1

/*
 * Log SSL errors and any unexpected conditions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:761 - 1

/*
 * in most cases we get all the headers on the first SSL_read.
 * however, in certain cases SSL_read will only get a partial
 * chunk of the headers, so we try to read until LF is seen.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:772 - 1

/* Save the part of the line we already got */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:827 - 1

/*
 * If OpenSSL wants to write more, and we were nonblocking,
 * report as an EAGAIN. Otherwise loop, pushing more
 * data at the network filter.
 *
 * (This is usually the case when the client forces an SSL
 * renegotiation which is handled implicitly by OpenSSL.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:838 - 1

/*
 * If OpenSSL wants to read during write, and we were
 * nonblocking, set the sense explicitly to read and
 * report as an EAGAIN.
 *
 * (This is usually the case when the client forces an SSL
 * renegotiation which is handled implicitly by OpenSSL.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:855 - 1

/* if (ssl_err == SSL_ERROR_SSL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:856 - 1

/*
 * Log SSL errors
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:871 - 1

/* XXX: probably a better way to determine this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:901 - 1

/* Custom apr_status_t error code, used when a plain HTTP request is
 * recevied on an SSL port. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:905 - 1

/* Custom apr_status_t error code, used when the proxy cannot
 * establish an outgoing SSL connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1173 - 1

/* ensure that the SSL structures etc are freed, etc: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1242 - 1

/* ensure that the SSL structures etc are freed, etc: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1293 - 1

/* if (ssl_err == SSL_ERROR_SSL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1294 - 1

/*
 * Log SSL errors and any unexpected conditions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1313 - 1

/*
 * Check for failed client authentication
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1440 - 1

/* XXX: we could actually move ssl_io_filter_handshake to an
 * ap_hook_process_connection but would still need to call it for
 * AP_MODE_INIT for protocols that may upgrade the connection
 * rather than have SSLEngine On configured.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1450 - 1

/* protocol module needs to handshake before sending
 * data to client (e.g. NNTP or FTP)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1468 - 1

/* Satisfy the read directly out of the buffer if possible;
 * invoking ssl_io_input_getline will mean the entire buffer
 * is copied once (unnecessarily) for each GETLINE call. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1487 - 1

/* We have no idea what you are talking about, so return an error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1491 - 1

/* It is possible for mod_ssl's BIO to be used outside of the
 * direct control of mod_ssl's input or output filter -- notably,
 * when mod_ssl initiates a renegotiation. Switching the BIO mode
 * back to "e;blocking"e; here ensures such operations don't fail with
 * SSL_ERROR_WANT_READ. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1498 - 1

/* Handle custom errors. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1567 - 1

/* Coalesce the prefix, if:
 * a) more than one bucket is found to coalesce, or
 * b) the brigade contains only a single data bucket, or
 * c) the data bucket is not last but we have buffered data already.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1576 - 1

/* If coalescing some bytes, ensure a context has been
 * created. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1708 - 1

/* Pass through metadata buckets untouched. EOC is
 * special; terminate the SSL layer first. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1735 - 1

/* No data available: flush... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1793 - 1

/* The request body is read from the protocol-level input
 * filters; the buffering filter will reinject it from that
 * level, allowing content/resource filters to run later, if
 * necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1842 - 1

/* Fail if this exceeds the maximum buffer size. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1868 - 1

/* This input filter supplies the buffered request body to the caller
 * from the brigade stored in f->ctx. Note that the placement of this
 * filter in the filter stack is important; it must be the first
 * r->proto_input_filter; lower-typed filters will not be preserved
 * across internal redirects (see PR 43738). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1892 - 1

/* Suprisingly (and perhaps, wrongly), the request body can be
 * pulled from the input filter stack more than once; a
 * handler may read it, and ap_discard_request_body() will
 * attempt to do so again after *every* request. So input
 * filters must be prepared to give up an EOS if invoked after
 * initially reading the request. The HTTP_IN filter does this
 * with its ->eos_sent flag. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1925 - 1

/* Unsplice the partitioned segment and move it into the
 * passed-in brigade; no convenient way to do this with
 * the APR_BRIGADE_* macros. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:2012 - 1

/* write is non blocking for the benefit of async mpm */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:44 - 1

/* Perform an upgrade-to-TLS for the given request, per RFC 2817. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:78 - 1

/* Perform initial SSL handshake. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:278 - 1

/*
 * Get the SSL connection structure and perform the
 * delayed interlinking from SSL back to request_rec
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:368 - 1

/* SetEnvIf ssl-*-shutdown flags can only be per-server,
 * so they won't change across keepalive requests
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:451 - 1

/*
 * We should have handshaken here (on handshakeserver),
 * otherwise we are being redirected (ErrorDocument) from
 * a renegotiation failure below. The access is still 
 * forbidden in the latter case, let ap_die() handle
 * this recursive (same) error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:469 - 1

/* This vhost was configured for optional SSL, just tell the
 * client that we need to upgrade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:488 - 1

/*
 * Check to see whether SSL is in use; if it's not, then no
 * further access control checks are relevant. (the test for
 * sc->enabled is probably strictly unnecessary)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:651 - 1

/* The request causes renegotiation on a slave connection.
 * This is not allowed since we might have concurrent requests
 * on this connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:724 - 1

/* The request causes renegotiation on a slave connection.
 * This is not allowed since we might have concurrent requests
 * on this connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:731 - 1

/* optimization */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:806 - 1

/* let it pass, possibly with an "e;incorrect"e; peer cert,
 * so make sure the SSL_CLIENT_VERIFY environment variable
 * will indicate partial success only, later on.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:855 - 1

/*
 * now do the renegotiation if anything was actually reconfigured
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:876 - 1

/* perform just a manual re-verification of the peer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:886 - 1

/* client cert is in the session cache, but there is
 * no chain, since ssl3_get_client_certificate()
 * sk_X509_shift-ed the peer cert out of the chain.
 * we put it back here for the purpose of quick_renegotiation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:967 - 1

/* Perform a full renegotiation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1035 - 1

/*
 * Finally check for acceptable renegotiation results
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1145 - 1

/*
 * Else access is granted from our point of view (except vendor
 * handlers override). But we have to return DECLINED here instead
 * of OK, because mod_auth and other modules still might want to
 * deny access.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1190 - 1

/*
 * Make sure the user is not able to fake the client certificate
 * based authentication by just entering an X.509 Subject DN
 * ("e;/XX=YYY/XX=YYY/.."e;) as the username and "e;password"e; as the
 * password.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1274 - 1

/* authorization phase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1386 - 1

/*
 * On-demand bloat up the SSI/CGI environment with certificate data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1502 - 1

/* _________________________________________________________________
**
** OpenSSL Callback Functions
** _________________________________________________________________
*/

/*
 * Hand out standard DH parameters, based on the authentication strength
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1518 - 1

/*
 * When multiple certs/keys are configured for the SSL_CTX: make sure
 * that we get the private key which is indeed used for the current
 * SSL connection (available in OpenSSL 1.0.2 or later only)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1550 - 1

/*
 * This OpenSSL callback function is called when OpenSSL
 * does client authentication and verifies the certificate chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1632 - 1

/*
 * Perform OCSP-based revocation checks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1656 - 1

/*
 * If we already know it's not ok, log the real reason
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1811 - 1

/* end loop through available certs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1849 - 1

/*
 * This callback function is executed by OpenSSL whenever a new SSL_SESSION is
 * added to the internal OpenSSL session cache. We use this hook to spread the
 * SSL_SESSION also to the inter-process disk-cache to make share it with our
 * other Apache pre-forked server processes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1899 - 1

/*
 * This callback function is executed by OpenSSL whenever a
 * SSL_SESSION is looked up in the internal OpenSSL cache and it
 * was not found. We use this to lookup the SSL_SESSION in the
 * inter-process disk-cache where it was perhaps stored by one
 * of our other Apache pre-forked server processes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1915 - 1

/*
 * Try to retrieve the SSL_SESSION from the inter-process cache
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1935 - 1

/*
 * This callback function is executed by OpenSSL whenever a
 * SSL_SESSION is removed from the internal OpenSSL cache.
 * We use this to remove the SSL_SESSION in the inter-process
 * disk-cache, too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1953 - 1

/* on server shutdown Apache is already gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1958 - 1

/*
 * Remove the SSL_SESSION from the inter-process cache
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2028 - 1

/*
 * Because SSL renegotiations can happen at any time (not only after
 * SSL_accept()), the best way to log the current connection details is
 * right after a finished handshake.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2043 - 1

/*
 * This callback function is executed while OpenSSL processes the SSL
 * handshake and does SSL record layer stuff. It's used to trap
 * client-initiated renegotiations, and for dumping everything to the
 * log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2102 - 1

/* already found the vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2273 - 1

/* should never happen, but better safe than sorry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2342 - 1

/* If the connection object is not available,
 * then there's nothing for us to do. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:81 - 1

/*
 * Prints the SSL library error information.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:111 - 1

/* Pop the error off the stack: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:200 - 1

/*
 * Wrappers for ap_log_error/ap_log_cerror/ap_log_rerror which log additional
 * details of the X509 cert. For ssl_log_xerror, a pool needs to be passed in
 * as well (for temporary allocation of the cert's subject/issuer name strings,
 * in the other cases we use the connection and request pool, respectively).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_mutex.c:38 - 1

/* A mutex is only needed if a session cache is configured, and
 * the provider used is not internally multi-process/thread
 * safe. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:61 - 1

/* Use default responder URL if forced by configuration, else use
 * certificate-specified responder, falling back to default if
 * necessary and possible. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:102 - 1

/* Create an OCSP request for the given certificate; returning the
 * certificate ID in *certid and *issuer on success. Returns the
 * request object on success, or NULL on error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:259 - 1

/* starting with OpenSSL 1.0, X509_STORE_CTX_get_current_cert()
 * may yield NULL. Return early, but leave the ctx error as is. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:74 - 1

/*
 * reuse vhost keys for asn1 tables where keys are allocated out
 * of s->process->pool to prevent "e;leaking"e; each time we format
 * a vhost key. since the key is stored in a table with lifetime
 * of s->process->pool, the key needs to have the same lifetime.
 *
 * XXX: probably seems silly to use a hash table with keys and values
 * being the same, but it is easier than doing a linear search
 * and will make it easier to remove keys if needed in the future.
 * also have the problem with apr_array_header_t that if we
 * underestimate the number of vhost keys when we apr_array_make(),
 * the array will get resized when we push past the initial number
 * of elts. this resizing in the s->process->pool means "e;leaking"e;
 * since apr_array_push() will apr_alloc arr->nalloc * 2 elts,
 * leaving the original arr->elts to waste.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:273 - 1

/* WIN32 */

 /*
 * Ok, anything else now means a fatal error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:466 - 1

/*
 * When remembered pass phrases are available use them...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:37 - 1

/* _________________________________________________________________
**
** Support for better seeding of SSL library's RNG
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:721 - 1

/* sanity check: number must be between 1 and 4 digits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1002 - 1

/* Check whether a variable with this nid was already
 * been used; if so, use the foo_N=bar syntax. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1037 - 1

/* Extract the server cert DNS -- note that the refcount does NOT
 * increase: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1045 - 1

/* Extract the client cert DNs -- note that the refcount DOES
 * increase: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1084 - 1

/* no need to free xs (refcount does not increase) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1215 - 1

/* default "e;NULL"e; already set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_scache.c:71 - 1

/*
 * Warn the user that he should use the session cache.
 * But we can operate without it, of course.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:184 - 1

/*
 * certain key data needs to survive restarts,
 * which are stored in the user data table of s->process->pool.
 * to prevent "e;leaking"e; of this data, we use malloc/free
 * rather than apr_palloc and these wrappers to help make sure
 * we do not leak the malloc-ed data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:250 - 1

/*
 * To ensure thread-safetyness in OpenSSL - work in progress
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:291 - 1

/*
 * We need a pool to allocate our mutex. Since we can't clear
 * allocated memory from a pool, create a subpool that we can blow
 * away in the destruction callback.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:317 - 1

/*
 * Dynamic locking and unlocking function
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:446 - 1

/* Set up dynamic locking scaffolding for OpenSSL to use at its
 * convenience.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:56 - 1

/* Send the OCSP request serialized into BIO 'request' to the
 * responder at given server given by URI. Returns socket object or
 * NULL on error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:130 - 1

/* Return a pool-allocated NUL-terminated line, with CRLF stripped,
 * read from brigade 'bbin' using 'bbout' as temporary storage. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:179 - 1

/* Read the OCSP response from the socket 'sd', using temporary memory
 * BIO 'bio', and return the decoded OCSP response object, or NULL on
 * error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:249 - 1

/* Ignore zero-length buckets (possible side-effect of
 * line splitting). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:308 - 1

/* Clear the BIO contents, ready for the response. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:142 - 1

/* Once the close notity is sent through the output filters,
 * ensure it is flushed through the socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:157 - 1

/* _________________________________________________________________
**
** Certificate Checks
** _________________________________________________________________
*/

/* retrieve basic constraints ingredients */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:279 - 1

/* 
 * Return an array of subjectAltName entries of type "e;type"e;. If idx is -1,
 * return all entries of the given type, otherwise return an array consisting
 * of the n-th occurrence of that type only. Currently supported types:
 * GEN_EMAIL (rfc822Name)
 * GEN_DNS (dNSName)
 * GEN_OTHERNAME (requires the otherName form ["e;onf"e;] argument to be supplied,
 * see parse_otherName_value for the currently supported forms)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:388 - 1

/*
 * At some day in the future, this might be replaced with X509_check_host()
 * (available in OpenSSL 1.0.2 and later), but two points should be noted:
 * 1) wildcard matching in X509_check_host() might yield different
 * results (by default, it supports a broader set of patterns, e.g.
 * wildcards in non-initial positions);
 * 2) we lose the option of logging each DNS- and CN-ID (until a match
 * is found).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:49 - 1

/* Cached info stored in the global stapling_certinfo hash. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:51 - 1

/* Index in session cache (SHA-1 digest of DER encoded certificate) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:122 - 1

/* 
 * We already parsed the certificate, and no OCSP URI was found.
 * The certificate might be used for multiple vhosts, though,
 * so we check for a ForceURL for this vhost.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:239 - 1

/* TODO: potential optimization; _timeout members as apr_interval_time_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:293 - 1

/* should-not-occur; must have at least valid-when-stored flag +
 * OCSPResponseStatus
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:379 - 1

/* If pok is not NULL response was direct from a responder and
 * the times should be valide. If pok is NULL the response was
 * retrieved from cache and it is expected to subsequently expire
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:547 - 1

/*
 * SSL stapling mutex operations. Similar to SSL mutex except mutexes are
 * mandatory if stapling is enabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:557 - 1

/* already init or stapling not enabled? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:562 - 1

/* need a cache mutex? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:691 - 1

/* Check to see if we already have a response for this certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:695 - 1

/* see if response is acceptable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:773 - 1

/* Maybe another request refreshed the OCSP response while this
 * thread waited for the mutex. Check again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_optional_fn_export.c:22 - 1

/* The alert will note a strange mirror-image style resemblance to
 * mod_optional_hook_import.c. Yes, I _did_ mean import. Think about it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_optional_fn_import.c:22 - 1

/* The alert will note a strange mirror-image style resemblance to
 * mod_optional_hook_export.c. Yes, I _did_ mean export. Think about it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:50 - 1

/* log the violation as a warning, but let it through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:58 - 1

/* optional name of the subprocess environment variable that
 * controls whether the policies are enforced.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:119 - 1

/* downgrade enforce to log? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:184 - 1

/**
 * Policy for Content-Type.
 *
 * - It must be present.
 * - It must match the optional regex (default .* / .*)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:362 - 1

/**
 * Policy for Vary.
 *
 * - If an element matches the optional regex (no default), the request is rejected.
 * Typically used to reject Varying on User-Agent.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:638 - 1

/* parse Cache-Control */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:712 - 1

/* test expires, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:764 - 1

/* no explicit maxage defined, so fail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:20 - 1

/*
 Initial Port for Apache-1.3 by <Martin.Kraemer Mch.SNI.De>

"e;BS2000 OSD"e; is a POSIX on a main frame. It is made by Siemens AG, Germany.
Within the POSIX subsystem, the same character set was chosen as in
"e;native BS2000"e;, namely EBCDIC.

EBCDIC Table. (Yes, in EBCDIC, the letters 'a'..'z' are not contiguous!)
This apr_table_t is bijective, i.e. there are no ambigous or duplicate characters
00 00 01 02 03 85 09 86 7f 87 8d 8e 0b 0c 0d 0e 0f *................*
10 10 11 12 13 8f 0a 08 97 18 19 9c 9d 1c 1d 1e 1f *................*
20 80 81 82 83 84 92 17 1b 88 89 8a 8b 8c 05 06 07 *................*
30 90 91 16 93 94 95 96 04 98 99 9a 9b 14 15 9e 1a *................*
40 20 a0 e2 e4 e0 e1 e3 e5 e7 f1 60 2e 3c 28 2b 7c * .........`.<(+|*
50 26 e9 ea eb e8 ed ee ef ec df 21 24 2a 29 3b 9f *&.........!$*);.*
60 2d 2f c2 c4 c0 c1 c3 c5 c7 d1 5e 2c 25 5f 3e 3f *-/........^,%_>?*
70 f8 c9 ca cb c8 cd ce cf cc a8 3a 23 40 27 3d 22 *..........:#@'="e;*
80 d8 61 62 63 64 65 66 67 68 69 ab bb f0 fd fe b1 *.abcdefghi......*
90 b0 6a 6b 6c 6d 6e 6f 70 71 72 aa ba e6 b8 c6 a4 *.jklmnopqr......*
a0 b5 af 73 74 75 76 77 78 79 7a a1 bf d0 dd de ae *..stuvwxyz......*
b0 a2 a3 a5 b7 a9 a7 b6 bc bd be ac 5b 5c 5d b4 d7 *...........[\]..*
c0 f9 41 42 43 44 45 46 47 48 49 ad f4 f6 f2 f3 f5 *.ABCDEFGHI......*
d0 a6 4a 4b 4c 4d 4e 4f 50 51 52 b9 fb fc db fa ff *.JKLMNOPQR......*
e0 d9 f7 53 54 55 56 57 58 59 5a b2 d4 d6 d2 d3 d5 *..STUVWXYZ......*
f0 30 31 32 33 34 35 36 37 38 39 b3 7b dc 7d da 7e *0123456789.{.}.~*
*/

/* The bijective ebcdic-to-ascii table: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:83 - 1

/* This apr_table_t is (almost) identical to the previous one. The only difference
 * is the fact that it maps every EBCDIC *except 0x0A* to its ASCII
 * equivalent. The reason for this apr_table_t is simple: Throughout the
 * server, protocol strings are used in the form
 * "e;Content-Type: text/plain\015\012"e;. Now all the characters in the string
 * are stored as EBCDIC, only the semantics of \012 is completely
 * different from LF (look it up in the apr_table_t above). \015 happens to be
 * mapped to \015 anyway, so there's no special case for it.
 *
 * In THIS table, EBCDIC-\012 is mapped to ASCII-\012.
 * This apr_table_t is therefore used wherever an EBCDIC to ASCII conversion is
 * needed in the server.
 */
/* ebcdic-to-ascii with \012 mapped to ASCII-\n */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:185 - 1

/* Translate a memory block from EBCDIC (host charset) to ASCII (net charset)
 * dest and srce may be identical, or separate memory blocks, but
 * should not overlap.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:50 - 1

/* have we checked the OS version before? If yes return the previous
 * result - the OS release isn't going to change suddenly!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:97 - 1

/* BS2000 requires a "e;special"e; version of fork() before a setuid() call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:95 - 1

/* if we aren't running as root, cannot increase max */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:420 - 1

/* If the socket has been closed in ap_close_listeners()
 * by the restart/stop action, we may get EBADF.
 * Do not print an error in this case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:458 - 1

/* have we checked the OS version before? If yes return the previous
 * result - the OS release isn't going to change suddenly!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:505 - 1

/* BS2000 requires a "e;special"e; version of fork() before a setuid() call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:153 - 1

/* We need to determine if subkeys exist on Win9x, to provide
 * consistent behavior with NT, which returns access denied
 * if subkeys exist when attempting to delete a key.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/util_win32.c:80 - 1

/* This code is stolen from misc/win32/misc.c and apr_private.h
 * This helper code resolves late bound entry points
 * missing from one or more releases of the Win32 API...
 * but it sure would be nice if we didn't duplicate this code
 * from the APR ;-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:83 - 1

/* expires, max-age */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:263 - 1

/* bad sequence: no terminating quote found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:312 - 1

/* XXX cheat: assume "e;$Version"e; => RFC Cookie header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:432 - 1

/* The format string must be large enough to accomodate all
 * of the cookie attributes. The current attributes sum to
 * ~90 characters (w/ 6-8 padding chars per attr), so anything
 * over 100 should be fine.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:492 - 1

/* ensure RFC attributes are always quoted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_error.c:20 - 1

/*
 * stuffbuffer - like apr_cpystrn() but returns the address of the
 * dest buffer instead of the address of the terminating '\0'
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_error.c:35 - 1

/* 0's: generic error status codes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_error.c:44 - 1

/* 10's: malformed input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_error.c:80 - 1

/* 30's: configuration conflicts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:31 - 1

/* system is unusable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:32 - 1

/* action must be taken immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:34 - 1

/* error conditions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:37 - 1

/* informational */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:43 - 1

/** Interactive patch:
 * TODO Don't use 65K buffer
 * TODO Handle empty/non-existant parameters
 * TODO Allow body elements to be files
 * TODO When running body/get/cookies all at once, include previous cached
 * values (and don't start at 0 in count)
 * TODO What happens if user does apreq_param, but needs POST value - we'll
 * never catch it now, as args param will match...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:152 - 1

/* Parenthesis level (for argument/text grouping) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:161 - 1

/* interpolate argument; curarg[plevel] => 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:174 - 1

/* Name can't be null :-) [If it can, we should 
 * immediately return NULL] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:190 - 1

/* TODO: Once null defaults are available, 
 * remove if and use nullstr if defval == NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:217 - 1

/* Null terminate current string */

 /* Move pointer to end of string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:231 - 1

/* Check next character for escape sequence 
 * (just ignore it for now) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:241 - 1

/* Null terminate the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:413 - 1

/* error status? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser.c:69 - 1

/*XXX this may need to check the parser's state before modifying the hook list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:161 - 1

/* prior (partial) strncmp failed,
 * so we can move previous buckets across
 * and retest buf against the full bdry.
 */

 /* give hints to GCC by making the brigade volatile, otherwise the
 * loop below will end up being endless. See:
 * https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=193740
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:67 - 1

/* XXX: what about overflow? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:103 - 1

/* done if matches up to capacity of buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:106 - 1

/* insufficient room for match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:139 - 1

/* Unicode notes: "e;bmp"e; refers to the 16-bit
 * Unicode Basic Multilingual Plane. Here we're
 * restricting our unicode internals to 16-bit
 * codepoints, to keep the code as simple as possible.
 * This should be sufficient for apreq itself, since
 * we really only need to validate RFC3986-encoded utf8.
 */

/* Converts Windows cp1252 to Unicode. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:436 - 1

/* optimize for src = dest case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:552 - 1

/* looks like src is already quoted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:635 - 1

/* Pass two --- copy the argument strings into the result space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:697 - 1

/*
 * This is intentionally not apr_file_writev()
 * note, this is iterative and not recursive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:754 - 1

/* incomplete write: must shift v */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:875 - 1

/* Must ensure first char isn't '=', so we can safely backstep. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:1055 - 1

/* Need to seek here, just in case our spool bucket
 * was read from between apreq_brigade_concat calls.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:47 - 1

/* for errors in parse_htaccess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:182 - 1

/* hooks with no args are implemented last, after disabling APR hook probes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:209 - 1

/* dynamic_modules is the number of modules that have been added
 * after the pre-loaded ones have been set up. It shouldn't be larger
 * than DYNAMIC_MODULE_LIMIT.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:215 - 1

/* The maximum possible value for total_modules, i.e. number of static
 * modules plus DYNAMIC_MODULE_LIMIT.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:220 - 1

/* The number of elements we need to alloc for config vectors. Before loading
 * of dynamic modules, we must be liberal and set this to max_modules. After
 * loading of dynamic modules, we can trim it down to total_modules. On
 * restart, reset to max_modules.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:254 - 1

/* Dealing with config vectors. These are associated with per-directory,
 * per-server, and per-request configuration, and have a void* pointer for
 * each modules. The nature of the structure pointed to is private to the
 * module in question... the core doesn't (and can't) know. However, there
 * are defined interfaces which allow it to create instances of its private
 * per-directory and per-server structures, and to merge the per-directory
 * structures of a directory and its subdirectory (producing a new one in
 * which the defaults applying to the base directory have been properly
 * overridden).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:362 - 1

/* Invoke the filter_init_func for all filters with FILTERS where f->r
 * matches R. Restricting to a matching R avoids re-running init
 * functions for filters configured for r->main where r is a
 * subrequest. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:388 - 1

/*
 * The new insert_filter stage makes the most sense here. We only use
 * it when we are going to run the request, so we must insert filters
 * if any are available. Since the goal of this phase is to allow all
 * modules to insert a filter if they want to, this filter returns
 * void. I just can't see any way that this filter can reasonably
 * fail, either your modules inserts something or it doesn't. rbb
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:420 - 1

/* exclude media type arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:664 - 1

/* Not the top module, find use. When found modp will
 * point to the module _before_ us in the list
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:680 - 1

/* Eliminate us from the module list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:688 - 1

/* simulate being unloaded, should
 * be unnecessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:852 - 1

/* Have we been provided a list of acceptable directives? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1165 - 1

/* Before walking *current to the end of the list,
 * set the head to *current.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1239 - 1

/* lower limit for .htaccess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1348 - 1

/* actually parse the command and execute the correct function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1373 - 1

/* lower limit for .htaccess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1378 - 1

/* If we have to traverse the whole tree again for every included
 * config file, the required time grows as O(n^2) with the number of
 * files. This can be a significant delay for large configurations.
 * Therefore we cache a pointer to the last node.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1394 - 1

/* update cached pointer to last node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1611 - 1

/* lower limit for .htaccess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1880 - 1

/*
 * Now recurse these... we handle errors and subdirectories
 * via the recursion, which is nice
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1925 - 1

/* optimisation - if the filename isn't a wildcard, process it directly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1977 - 1

/*
 * Now recurse these... we handle errors and subdirectories
 * via the recursion, which is nice
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2016 - 1

/* XXX: lstat() won't work on the wildcard pattern...
 */

 /* don't require conf/httpd.conf if we have a -C or -c switch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2105 - 1

/* firstly, search cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2166 - 1

/* cache it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2187 - 1

/* TODO: this crap belongs in http_core */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2241 - 1

/* Setting the main loglevel resets all per-module log levels.
 * I.e. if new->level has been set, we must ignore old->module_levels.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2370 - 1

/*
 * We have loaded all modules that are loaded by EXEC_ON_READ directives.
 * From now on we reduce the size of the config vectors to what we need,
 * plus what has been reserved (e.g. by mod_perl) for additional modules
 * loaded later on.
 * If max_modules is too small, ap_add_module() will abort.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2563 - 1

/* Show the preloaded configuration directives, the help string explaining
 * the directive arguments, in what module they are handled, and in
 * what parts of the configuration they are allowed. Used for httpd -L.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:154 - 1

/* Read available data from the client whilst it continues sending
 * it, for a maximum time of MAX_SECS_TO_LINGER. If the client
 * does not send any data within 2 seconds (a value pulled from
 * Apache 1.3 which seems to work well), give up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:162 - 1

/* The common path here is that the initial apr_socket_recv() call
 * will return 0 bytes read; so that case must avoid the expensive
 * apr_time_now() call and time arithmetic. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:77 - 1

/* valid in core-conf, but not in runtime r->used_path_info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:123 - 1

/* magic pointer for ErrorDocument xxx "e;default"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:176 - 1

/* Overriding all negotiation
 * Set NULL by apr_pcalloc:
 * conf->mime_type = NULL;
 * conf->handler = NULL;
 * conf->output_filters = NULL;
 * conf->input_filters = NULL;
 */

 /*
 * Flag for use of inodes in ETags.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:225 - 1

/* there was no explicit setting of new->opts, so we merge
 * preserve the invariant (opts_add & opts_remove) == 0
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:233 - 1

/* If Includes was enabled with exec in the base config, but
 * was enabled without exec in the new config, then disable
 * exec in the merged set. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:350 - 1

/* Overriding all negotiation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:508 - 1

/* XXX optimize to keep base->sec_ pointers if virt->sec_ array is empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:555 - 1

/* apr_array_append actually creates a new array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:752 - 1

/*
 * Optional function coming from mod_authn_core, used for
 * retrieving the type of autorization
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:838 - 1

/* Should probably just get rid of this... the only code that cares is
 * part of the core anyway (and in fact, it isn't publicised to other
 * modules).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:884 - 1

/* alas, duplication required as we return not-const */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:896 - 1

/* already done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:963 - 1

/* if failed, set it to the NULL string to indicate error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:995 - 1

/*
 * Optional function coming from mod_ident, used for looking up ident user
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1061 - 1

/*
 * Get the current server name from the request for the purposes
 * of using in a URL. If the server name is an IPv6 literal
 * address, it will be returned in URL format (e.g., "e;[fe80::1]"e;).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1071 - 1

/* IPv6 literal? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1205 - 1

/* EXEC_ON_READ must be NOT_IN_DIR_LOC_FILE, if not, it will
 * (deliberately) segfault below in the individual tests...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1265 - 1

/* well, actually something to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1428 - 1

/* cast with 64-bit warning avoidance */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1437 - 1

/* expect an argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1442 - 1

/* set message, strip off quotes if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1453 - 1

/* generate error or warning with a configuration file position.
 * the log is displayed on the terminal as no log file is opened yet.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1690 - 1

/* AI backcompat. Yuck */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1904 - 1

/* AI backcompat. Yuck */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1935 - 1

/* we ensure the invariant (d->opts_add & d->opts_remove) == 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2106 - 1

/*
 * Any setting at all will clear the 'None' and 'Unset' bits.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2166 - 1

/*
 * Report a missing-'>' syntax error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2175 - 1

/*
 * Report a missing args in '<Foo >' syntax error.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2216 - 1

/* method has not been registered yet, but resource restriction
 * is always checked before method handling, so register it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2250 - 1

/* XXX: Bogus - need to do this differently (at least OS2/Netware suffer
 * the same problem!!!
 * We use this in <DirectoryMatch> and <FilesMatch>, to ensure that
 * people don't get bitten by wrong-cased regex matches
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2310 - 1

/*
 * Ensure that the pathname is canonical, and append the trailing /
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2342 - 1

/* Make this explicit - the "e;/"e; root has 0 elements, that is, we
 * will always merge it, and it will always sort and merge first.
 * All others are sorted and tested by the number of slashes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2484 - 1

/* Ensure that the pathname is canonical, but we
 * can't test the case/aliases without a fixed path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2886 - 1

/*
 * The ServerName directive takes one argument with format
 * [scheme://]fully-qualified-domain-name[:port], for instance
 * ServerName www.example.com
 * ServerName www.example.com:80
 * ServerName https://www.example.com:443
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3324 - 1

/*
 * Handle a request to include the server's OS platform in the Server
 * response header field (the ServerTokens directive). Unfortunately
 * this requires a new global in order to communicate the setting back to
 * http_main so it can insert the information in the right place in the
 * string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3400 - 1

/*
 * This routine adds the real server base identity to the banner string,
 * and then locks out changes until the next reconfig.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3756 - 1

/*
 * check whether redirect limit is reached
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4194 - 1

/* Admin can define only "e;ErrorLog provider"e; and we should 
 * still handle that using the defined provider, but with empty
 * error_fname. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4656 - 1

/* Check for overrides with ForceType / SetHandler
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4691 - 1

/* No module knew better, and the user coded AcceptPathInfo */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4707 - 1

/* XXX if/when somebody writes a content-md5 filter we either need to
 * remove this support or coordinate when to use the filter vs.
 * when to use this code
 * The current choice of when to compute the md5 here matches the 1.3
 * support fairly closely (unlike 1.3, we don't handle computing md5
 * when the charset is translated).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4722 - 1

/* If filters intend to consume the request body, they must
 * register an InputFilter to slurp the contents of the POST
 * data from the POST input stream. It no longer exists when
 * the output filters are invoked by the default handler.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4739 - 1

/* Don't try to serve a dir. Some OSs do weird things with
 * raw I/O on a dir.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4826 - 1

/* no way to know what type of error occurred */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4858 - 1

/* Optional function coming from mod_logio, used for logging of output
 * traffic
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5020 - 1

/* ### temporarily enable script delivery as the default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5137 - 1

/* The core filter requires the timeout mode to be set, which
 * incidentally sets the socket to be nonblocking. If this
 * is not initialized correctly, Linux - for example - will
 * be initially blocking, while Solaris will be non blocking
 * and any initial read will fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5268 - 1

/* apr_random_insecure_bytes can only fail with APR_ENOTENOUGHENTROPY,
 * and we have ruled that out during initialization. Therefore we don't
 * need to check the return code.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5297 - 1

/* This triggers a gcc bug on sparc/64bit with gcc < 4.8, PR 52900 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5373 - 1

/* Not possible to perform an HTTP/1.1 upgrade from a slave
 * connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5416 - 1

/* first request on a master connection, if we have protocols other
 * than the current one enabled here, announce them to the
 * client. If the client is already talking a protocol with requests
 * on slave connections, leave it be. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5470 - 1

/* FIXME: I suspect we can eliminate the need for these do_nothings - Ben */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5512 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:133 - 1

/* check for empty brigade again *AFTER* BRIGADE_NORMALIZE()
 * If we have lost our socket bucket (see above), we are EOF.
 *
 * Ideally, this should be returning SUCCESS with EOS bucket, but
 * some higher-up APIs (spec. read_request_line via ap_rgetline)
 * want an error code. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:217 - 1

/* Since we've just added all potential buckets (which will most
 * likely simply be the socket bucket) we know this is the end,
 * so tack on an EOS too. */
 /* We have read until the brigade was empty, so we know that we
 * must be EOS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:237 - 1

/* getting EAGAIN for a blocking read is an error; for a
 * non-blocking read, return an empty brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:245 - 1

/* We wanted to read some bytes in blocking mode. We read
 * 0 bytes. Hence, we now assume we are EOS.
 *
 * When we are in normal mode, return an EOS bucket to the
 * caller.
 * When we are in speculative mode, leave ctx->b empty, so
 * that the next call returns an EOS bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:267 - 1

/* We already registered the data in e in len */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:271 - 1

/* Check for the availability of buckets with known length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:277 - 1

/*
 * Read from bucket, but non blocking. If there isn't any
 * more data, well than this is fine as well, we will
 * not wait for more since we already got some and we are
 * only checking if there isn't more.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:303 - 1

/* Must do move before CONCAT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:355 - 1

/* Optional function coming from mod_logio, used for logging of output
 * traffic
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:453 - 1

/* The client has aborted the connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:471 - 1

/* The client has aborted the connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:522 - 1

/* Use sendfile to send this file unless:
 * - the platform doesn't support sendfile,
 * - the file is too small for sendfile to be useful, or
 * - sendfile is disabled in the httpd config via "e;EnableSendfile off"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:549 - 1

/* APR_HAS_SENDFILE */
 /* didn't sendfile */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/eor_bucket.c:79 - 1

/*
 * Register a cleanup for the request pool as the eor bucket could
 * have been allocated from a different pool then the request pool
 * e.g. the parent pool of the request pool. In this case
 * eor_bucket_destroy might be called at a point of time when the
 * request pool had been already destroyed.
 * We need to use a pre-cleanup here because a module may create a
 * sub-pool which is still needed during the log_transaction hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:55 - 1

/* Determine once, at runtime, whether or not SO_REUSEPORT
 * is usable on this platform, and hence whether or not
 * listeners can be duplicated (if configured).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:130 - 1

/* not a fatal error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:140 - 1

/* not a fatal error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:482 - 1

/* What could happen is that we got an IPv6 address, but this system
 * doesn't actually support IPv6. Try the next address.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:509 - 1

/* Evaluates to true if the (apr_sockaddr_t *) addr argument is the
 * IPv4 match-any-address, 0.0.0.0. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:514 - 1

/* Evaluates to true if the (apr_sockaddr_t *) addr argument is the
 * IPv6 match-any-address, [::]. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:552 - 1

/* If we have the unspecified IPv4 address (0.0.0.0) and
 * the unspecified IPv6 address (::) is next, we need to
 * swap the order of these in the list. We always try to
 * bind to IPv6 first, then IPv4, since an IPv6 socket
 * might be able to receive IPv4 packets if V6ONLY is not
 * enabled, but never the other way around.
 * Note: In some configurations, the unspecified IPv6 address
 * could be even later in the list. This logic only corrects
 * the situation where it is next in the list, such as when
 * apr_sockaddr_info_get() returns an IPv4 and an IPv6 address,
 * in that order.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:581 - 1

/* If we are trying to bind to 0.0.0.0 and a previous listener
 * was :: on the same port and in turn that socket does not have
 * the IPV6_V6ONLY flag set; we must skip the current attempt to
 * listen (which would generate an error). IPv4 will be handled
 * on the established IPv6 socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:614 - 1

/* If we tried to bind to ::, and the next listener is
 * on 0.0.0.0 with the same port, don't give a fatal
 * error. The user will still get a warning from make_sock
 * though.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:643 - 1

/* fatal error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:121 - 1

/** The pipe between the server and the logging process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:297 - 1

/* Open the error log for the given server_rec. If IS_MAIN is
 * non-zero, s is the main server. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:409 - 1

/* We are done with stderr_pool, close it, killing
 * the previous generation's stderr logger
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:428 - 1

/* note that stderr may still need to be replaced with something
 * because it points to the old error log, or back to the tty
 * of the submitter.
 * XXX: This is BS - /dev/null is non-portable
 * errno-as-apr_status_t is also non-portable
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:849 - 1

/*
 * This is used if no error log format is defined and during startup.
 * It automatically omits the timestamp if logging using provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:908 - 1

/*
 * useragent_ip/client_ip can be client or backend server. If we have
 * a scoreboard handle, it is likely a client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:925 - 1

/* the actual error message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:975 - 1

/* the actual error message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1123 - 1

/* There is no file to send the log message to (or it is
 * redirected to /dev/null and therefore any formating done below
 * would be lost anyway) and there is no initialized log provider
 * available, so we just return here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1144 - 1

/* XXX: potential optimization: format common prefixes only once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1182 - 1

/* the actual error message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1235 - 1

/*
 * We don't call the error_log hook for per-request/per-conn
 * lines, and we only pass the actual log message, not the
 * prefix and suffix.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1248 - 1

/* For internal calls to log_error_core with self-composed arg lists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1404 - 1

/* bug in caller? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1471 - 1

/* Piece together the command line from the pieces
 * in process->argv, with spaces in between.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1629 - 1

/* unix assert does an abort leading to a core dump */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1674 - 1

/* procnew->in was dup2'd from pl->write_fd;
 * since the original fd is still valid, close the copy to
 * avoid a leak. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1720 - 1

/* what can we do? This could be the error log we're having
 * problems opening up... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:47 - 1

/* Not sure what absence of unistd would signify for tty. Treating it as a
 * big NO is safe, as we then won't try to write to stderr that's not a tty.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:57 - 1

/* WARNING: Win32 binds http_main.c dynamically to the server. Please place
 * extern functions and global data in another appropriate module.
 *
 * Most significant main() global data can be found in http_config.c
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:295 - 1

/* unreachable, hopefully. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:637 - 1

/* Note that we preflight the config file once
 * before reading it _again_ in the main loop.
 * This allows things, log files configuration
 * for example, to settle down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:132 - 1

/* Limit on the threads per process. Clients will be locked out if more than
 * this are needed.
 *
 * We keep this for one reason it keeps the size of the scoreboard file small
 * enough that we can read the whole thing without worrying too much about
 * the overhead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:367 - 1

/*
 * idle_spawn_rate is the number of children that will be spawned on the
 * next maintenance cycle if there aren't enough idle servers. It is
 * maintained per listeners bucket, doubled up to MAX_SPAWN_RATE, and
 * reset only when a cycle goes by without the need to spawn.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:428 - 1

/* The LISTENER_SIGNAL signal will be sent from the main thread to the
 * listener thread to wake it up for graceful termination (what a child
 * process from an old generation does when the admin does "e;apachectl
 * graceful"e;). This signal will be blocked in all threads of a child
 * process except for the listener thread.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:436 - 1

/* An array of socket descriptors in use by each thread used to
 * perform a non-graceful (forced) shutdown of the server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:636 - 1

/* Don't forget about this exiting child process, or we
 * won't be able to kill it if it doesn't exit by the
 * time the server is shut down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:736 - 1

/* Probably not an error - don't bother reporting it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:803 - 1

/* we want to ignore HUPs and AP_SIG_GRACEFUL while we're busy
 * processing one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:928 - 1

/*
 * Close our side of the connection, NOT flushing data to the client.
 * This should only be called if there has been an error or if we know
 * that our send buffers are empty.
 * Pre-condition: cs is not in any timeout queue and not in the pollset,
 * timeout_mutex is not locked
 * return: 0 if connection is fully closed,
 * 1 if connection is lingering
 * may be called by listener thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:974 - 1

/*
 * This runs before any non-MPM cleanup code on the connection;
 * if the connection is currently suspended as far as modules
 * know, provide notification of resumption.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1025 - 1

/* To preserve legacy behaviour (consistent with other MPMs), use
 * the keepalive timeout from the base server (first on this IP:port)
 * when none is explicitly configured on this server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1052 - 1

/* XXX: This will cause unbounded mem usage for long lasting connections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1214 - 1

/* It greatly simplifies the logic to use a single timeout value per q
 * because the new element can just be added to the end of the list and
 * it will stay sorted in expiration time sequence. If brand new
 * sockets are sent to the event thread for a readability check, this
 * will be a slight behavior change - they use the non-keepalive
 * timeout today. With a normal client, the socket will be readable in
 * a few milliseconds anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1323 - 1

/* XXX If specifying SIG_IGN is guaranteed to unblock a syscall,
 * then we don't need this goofy function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1507 - 1

/* oh yeah, and make locking smarter/fine grained. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1658 - 1

/* socket is already in non-blocking state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1682 - 1

/* call 'func' for all elements of 'q' with timeout less than 'timeout_time'.
 * Pre-condition: timeout_mutex must already be locked
 * Post-condition: timeout_mutex will be locked again
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1829 - 1

/* TOOD: what should do here? ugh. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2059 - 1

/* masquerade as a timer event that is firing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2084 - 1

/* while for processing poll */

 /* XXX possible optimization: stash the current time for use as
 * r->request_time for new requests
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2090 - 1

/* We only do this once per 0.1s (TIMEOUT_FUDGE_FACTOR), or on a clock
 * skew (if the system time is set back in the meantime, timeout_time
 * will exceed now + TIMEOUT_FUDGE_FACTOR, can't happen otherwise).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2098 - 1

/* handle timed out sockets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2229 - 1

/* We got some other error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2294 - 1

/* XXX under some circumstances not understood, children can get stuck
 * in start_threads forever trying to take over slots which will
 * never be cleaned up; for now there is an APLOG_DEBUG message issued
 * every so often when this condition occurs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2316 - 1

/* We must create the fd queues before we start up the listener
 * and worker threads. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2341 - 1

/* Create the timeout mutex and main pollset before the listener
 * thread starts.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2402 - 1

/* We let each thread update its own scoreboard entry. This is
 * done because it lets us deal with tid better.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2416 - 1

/* Start the listener only when there are workers available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2441 - 1

/* What state should this child_main process be listed as in the
 * scoreboard...?
 * ap_update_child_status_from_indexes(my_child_num, i, SERVER_STARTING,
 * (request_rec *) NULL);
 *
 * This state should be listed separately in the scoreboard, in some kind
 * of process_status, not mixed in with the worker threads' status.
 * "e;life_status"e; is almost right, but it's in the worker's structure, and
 * the name could be clearer. gla
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2473 - 1

/* listener has not stopped accepting yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2528 - 1

/* for benefit of any hooks that run as this
 * child initializes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2619 - 1

/* Block until we get a terminating signal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2766 - 1

/* start up a bunch of children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2885 - 1

/* Assume this is a transient error, even though it may not be. Leave
 * the server up in case it is able to serve some requests or the
 * problem will be resolved.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2901 - 1

/* the child already logged the failure details */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2915 - 1

/* terminate the free list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2983 - 1

/* fix race condition found in PR 39311
 * A child created at the same time as a graceful happens 
 * can find the lock missing and create a fatal error.
 * It is not fatal for the last generation to be in this state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3004 - 1

/* tell perform_idle_server_maintenance to check into this
 * on the next timer pop
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3036 - 1

/* already out of the scoreboard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3075 - 1

/* In any event we really shouldn't do the code below because
 * few of the servers we just started are in the IDLE state
 * yet, so we'd mistakenly create an extra server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3110 - 1

/* Don't thrash since num_buckets depends on the
 * system and the number of online CPU cores...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3558 - 1

/* you cannot change ServerLimit across a restart; ignore
 * any such attempts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3602 - 1

/* you cannot change ThreadLimit across a restart; ignore
 * any such attempts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3716 - 1

/* ap_daemons_to_start > ap_daemons_limit checked in ap_mpm_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3765 - 1

/* we need to set the MPM state before other pre-config hooks use MPM query
 * to retrieve it, so register as REALLY_FIRST
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3925 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:236 - 1

/*
 * Save queue_info->recycled_pool in local variable next because
 * new_recycle->next can be changed after apr_atomic_casptr
 * function call. For gory details see PR 44402.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:251 - 1

/* Atomically pop a pool from the recycled list */

 /* This function is safe only as long as it is single threaded because
 * it reaches into the queue and accesses "e;next"e; which can change.
 * We are OK today because it is only called from the listener thread.
 * cas-based pushes do not have the same limitation - any number can
 * happen concurrently with a single cas-based pop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:305 - 1

/**
 * Detects when the fd_queue_t is full. This utility function is expected
 * to be called from within critical sections, and is not threadsafe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:311 - 1

/**
 * Detects when the fd_queue_t is empty. This utility function is expected
 * to be called from within critical sections, and is not threadsafe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:450 - 1

/* If we wake up and it's still empty, then we were interrupted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:483 - 1

/* AP_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:474 - 1

/* TODO: Error check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:608 - 1

/* don't exit here... we have a connection to
 * process, after which point we'll see that the
 * generation changed and we'll exit cleanly
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:622 - 1

/* On some architectures it's safe to do unserialized accept()s in the single
 * Listen case. But it's never safe to do it in the case where there's
 * multiple Listen statements. Define SINGLE_LISTEN_UNSERIALIZED_ACCEPT
 * when it's safe in the single Listen case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:740 - 1

/* Probably not an error - don't bother reporting it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:793 - 1

/* we want to ignore HUPs and AP_SIG_GRACEFUL while we're busy
 * processing one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:854 - 1

/* for benefit of any hooks that run as this
 * child initializes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1025 - 1

/* now iterate any timers and push to worker pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1080 - 1

/* fork didn't succeed. Fix the scoreboard or else
 * it will say SERVER_STARTING forever and ever
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1111 - 1

/* Disable the parent's signal handlers and set up proper handling in
 * the child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1137 - 1

/* start up a bunch of children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1179 - 1

/* kill off one child... we use the pod because that'll cause it to
 * shut down gracefully, in case it happened to pick up a request
 * while we were counting
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1229 - 1

/* Don't thrash since num_buckets depends on the
 * system and the number of online CPU cores...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1291 - 1

/* fix race condition found in PR 39311
 * A child created at the same time as a graceful happens
 * can find the lock missing and create a fatal error.
 * It is not fatal for the last generation to be in this state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1353 - 1

/* In any event we really shouldn't do the code below because
 * few of the servers we just started are in the IDLE state
 * yet, so we'd mistakenly create an extra server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1382 - 1

/* Time to perform a graceful shut down:
 * Reap the inactive children, and ask the active ones
 * to close their listeners, then wait until they are
 * all done to exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1408 - 1

/* Allow each child which actually finished to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1474 - 1

/* This is mostly for debugging... so that we know what is still
 * gracefully dealing with existing request. This will break
 * in a very nasty way if we ever have the scoreboard totally
 * file-based (no shared memory)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1685 - 1

/* you cannot change ServerLimit across a restart; ignore
 * any such attempts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1732 - 1

/* ap_num_kids > ap_daemons_limit checked in motorz_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1778 - 1

/* we need to set the MPM state before other pre-config hooks use MPM query
 * to retrieve it, so register as REALLY_FIRST
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1853 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:65 - 1

/* Limit on the total number of threads per process
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:81 - 1

/* Keep track of a few interesting statistics */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:133 - 1

/* Set up a default listener if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:310 - 1

/* No child exited, lets sleep for a while.... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:315 - 1

/* Signal children to shut down, either gracefully or immediately */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:609 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:48 - 1

/* Limit on the total number of threads per process
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:159 - 1

/* Set up an OS/2 queue for passing connections & termination requests
 * to worker threads
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:331 - 1

/* Shut down process ASAP, it could be quite unhealthy & leaking resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:363 - 1

/* Trap exceptions in this thread so we don't take down the whole process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:294 - 1

/* Probably not an error - don't bother reporting it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:392 - 1

/*
 * Wait for an acceptable connection to arrive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:463 - 1

/* If we got a new socket, set it to non-blocking mode and process
 it. Otherwise handle the error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:522 - 1

/*
 * We now have a connection, so set it up with the appropriate
 * socket options, file descriptors, and read/write buffers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:565 - 1

/* create thread didn't succeed. Fix the scoreboard or else
 * it will say SERVER_STARTING forever and ever
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:585 - 1

/* start up a bunch of worker threads */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:602 - 1

/*
 * idle_spawn_rate is the number of children that will be spawned on the
 * next maintenance cycle if there aren't enough idle servers. It is
 * doubled up to MAX_SPAWN_RATE, and reset only when a cycle goes by
 * without the need to spawn.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:646 - 1

/* If it is already marked to die, skip it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:667 - 1

/* kill off one child... we use the pod because that'll cause it to
 * shut down gracefully, in case it happened to pick up a request
 * while we were counting
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:677 - 1

/* terminate the free list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1363 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:115 - 1

/*
 * idle_spawn_rate is the number of children that will be spawned on the
 * next maintenance cycle if there aren't enough idle servers. It is
 * doubled up to MAX_SPAWN_RATE, and reset only when a cycle goes by
 * without the need to spawn.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:271 - 1

/* don't exit here... we have a connection to
 * process, after which point we'll see that the
 * generation changed and we'll exit cleanly
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:284 - 1

/* On some architectures it's safe to do unserialized accept()s in the single
 * Listen case. But it's never safe to do it in the case where there's
 * multiple Listen statements. Define SINGLE_LISTEN_UNSERIALIZED_ACCEPT
 * when it's safe in the single Listen case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:396 - 1

/* Probably not an error - don't bother reporting it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:449 - 1

/* we want to ignore HUPs and AP_SIG_GRACEFUL while we're busy
 * processing one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:512 - 1

/* for benefit of any hooks that run as this
 * child initializes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:666 - 1

/* Single Unix documents select as returning errnos
 * EBADF, EINTR, and EINVAL... and in none of those
 * cases does it make sense to continue. In fact
 * on Linux 2.0.x we seem to end up with EFAULT
 * occasionally, and we'd loop forever due to it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:691 - 1

/* Grab a listener record from the client_data of the poll
 * descriptor, and advance our saved index to round-robin
 * the next fetch.
 *
 * ### hmm... this descriptor might have POLLERR rather
 * ### than POLLIN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:711 - 1

/* resource shortage or should-not-occur occured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:718 - 1

/*
 * We now have a connection, so set it up with the appropriate
 * socket options, file descriptors, and read/write buffers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:782 - 1

/* BS2000 requires a "e;special"e; version of fork() before a setuid() call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:789 - 1

/* fork didn't succeed. Fix the scoreboard or else
 * it will say SERVER_STARTING forever and ever
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:820 - 1

/* Disable the parent's signal handlers and set up proper handling in
 * the child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:846 - 1

/* start up a bunch of children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:912 - 1

/* kill off one child... we use the pod because that'll cause it to
 * shut down gracefully, in case it happened to pick up a request
 * while we were counting
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:921 - 1

/* terminate the free list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:997 - 1

/* Don't thrash since num_buckets depends on the
 * system and the number of online CPU cores...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1065 - 1

/* fix race condition found in PR 39311
 * A child created at the same time as a graceful happens 
 * can find the lock missing and create a fatal error.
 * It is not fatal for the last generation to be in this state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1133 - 1

/* In any event we really shouldn't do the code below because
 * few of the servers we just started are in the IDLE state
 * yet, so we'd mistakenly create an extra server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1162 - 1

/* Time to perform a graceful shut down:
 * Reap the inactive children, and ask the active ones
 * to close their listeners, then wait until they are
 * all done to exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1188 - 1

/* Allow each child which actually finished to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1254 - 1

/* This is mostly for debugging... so that we know what is still
 * gracefully dealing with existing request. This will break
 * in a very nasty way if we ever have the scoreboard totally
 * file-based (no shared memory)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1450 - 1

/* you cannot change ServerLimit across a restart; ignore
 * any such attempts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1497 - 1

/* ap_daemons_to_start > ap_daemons_limit checked in prefork_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1543 - 1

/* we need to set the MPM state before other pre-config hooks use MPM query
 * to retrieve it, so register as REALLY_FIRST
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1632 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:270 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_event.c:63 - 1

/* pqXXXXXX: skiplist would be a nice optimization here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:315 - 1

/* pqXXXXX: In theory, if we have non-blocking operations on the connection
 * we can do them here, before pushing to another thread, thats just
 * not implemented right now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:40 - 1

/**
 * Create Timers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:192 - 1

/* now iterate any timers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:288 - 1

/* XXXXX: Hack. Reseting parts of the simple core needs to be more
 * thought out than this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:86 - 1

/* Queue for managing the passing of winnt_conn_ctx_t between
 * the accept and worker threads.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:131 - 1

/* Recycle the completion context.
 * - clear the ptrans pool
 * - put the context on the queue to be consumed by the accept thread
 * Note:
 * context->accept_socket may be in a disconnected but reusable
 * state so -don't- close it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:191 - 1

/* Wait for a worker to free a context. Once per second, give
 * the caller a chance to check for shutdown. If the wait
 * succeeds, get the context off the queue. It must be
 * available, since there's only one consumer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:217 - 1

/* Allocate another context.
 * Note: Multiple failures in the next two steps will cause
 * the pchild pool to 'leak' storage. I don't think this
 * is worth fixing...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:276 - 1

/* Windows NT/2000 specific code...
 * Accept processing for on Windows NT uses a producer/consumer queue
 * model. An accept thread accepts connections off the network then issues
 * PostQueuedCompletionStatus() to awake a thread blocked on the ThreadDispatch
 * IOCompletionPort.
 *
 * winnt_accept()
 * One or more accept threads run in this function, each of which accepts
 * connections off the network and calls PostQueuedCompletionStatus() to
 * queue an io completion packet to the ThreadDispatch IOCompletionPort.
 * winnt_get_connection()
 * Worker threads block on the ThreadDispatch IOCompletionPort awaiting
 * connections to service.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:373 - 1

/* first, high priority event is an already accepted connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:475 - 1

/* We can get here when:
 * 1) the client disconnects early
 * 2) handshake was incomplete
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:487 - 1

/* We can get here when:
 * 1) TransmitFile does not properly recycle the accept socket (typically
 * because the client disconnected)
 * 2) there is VPN or Firewall software installed with
 * buggy WSAAccept or WSADuplicateSocket implementation
 * 3) the dynamic address / adapter has changed
 * Give five chances, then fall back on AcceptFilter 'none'
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:571 - 1

/* Potential optimization; consider handing off to the worker */

 /* Inherit the listen socket settings. Required for
 * shutdown() to work
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:585 - 1

/* Get the local & remote address
 * TODO; error check
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:657 - 1

/* A more serious error than 'retry', log it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:707 - 1

/* Restore the state corresponding to apr_os_sock_make's default
 * assumption of timeout -1 (really, a flaw of os_sock_make and
 * os_sock_put that it does not query to determine ->timeout).
 * XXX: Upon a fix to APR, these three statements should disappear.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:806 - 1

/*
 * worker_main()
 * Main entry point for the worker threads. Worker threads block in
 * win*_get_connection() awaiting a connection to service.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:932 - 1

/* Number of completion_contexts allowed in the system is
 * (ap_threads_per_child + num_listeners). We need the additional
 * completion contexts to prevent server hangs when ThreadsPerChild
 * is configured to something less than or equal to the number
 * of listeners. This is not a usual case, but people have
 * encountered it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1091 - 1

/* Start the listener only when workers are available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1212 - 1

/* Shutdown listener threads and pending AcceptEx sockets
 * but allow the worker threads to continue consuming from
 * the queue of accepted connections.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1223 - 1

/* Release the start_mutex to let the new process (in the restart
 * scenario) a chance to begin accepting and servicing requests
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1291 - 1

/* Fairness, on each iteration we will pick up with the thread
 * after the one we just removed, even if it's a single thread.
 * We don't block here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1333 - 1

/* Reset the scoreboard entry for the thread we just whacked */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:51 - 1

/* Because ap_setup_listeners() is skipped in the child, any merging
 * of [::]:80 and 0.0.0.0:80 for AP_ENABLE_V4_MAPPED in the parent
 * won't have taken place in the child, so the child will expect to
 * read two sockets for "e;Listen 80"e; but the parent will send only
 * one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:61 - 1

/* scoreboard.c does the heavy lifting; all we do is create the child
 * score by moving a handle down the pipe into the child's stdin.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:98 - 1

/* Only one of these, the pipe from our parent, meant only for
 * one child worker's consumption (not to be inherited!)
 * XXX: decorate this name for the trunk branch, was left simplified
 * only to make the 2.2 patch trivial to read.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:243 - 1

/* Um, problem, can't signal the parent, which means we can't
 * signal ourselves to die. Ignore for now...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:261 - 1

/*
 * Passed the following handles [in sync with send_handles_to_child()]
 *
 * ready event [signal the parent immediately, then close]
 * exit event [save to poll later]
 * start mutex [signal from the parent to begin accept()]
 * scoreboard shm handle [to recreate the ap_scoreboard]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:434 - 1

/*
 * get_listeners_from_parent()
 * The listen sockets are opened in the parent. This function, which runs
 * exclusively in the child process, receives them from the parent and
 * makes them availeble in the child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:448 - 1

/* Set up a default listener if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:575 - 1

/* Build the args array, only once since it won't change
 * for the lifetime of this parent process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:840 - 1

/* The child process exited prematurely due to a fatal error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:843 - 1

/* HUH? We did exit, didn't we? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:884 - 1

/* This shutdown is only marginally graceful. We will give the
 * child a bit of time to exit gracefully. If the time expires,
 * the child will be wacked.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1067 - 1

/* The parent gave us stdout of the NUL device,
 * and expects us to suck up stdin of all of our
 * shared handles and data from the parent.
 * Don't infect child processes with our stdin
 * handle, use another handle to NUL!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1080 - 1

/* This child needs the existing stderr opened for logging,
 * already
 */

 /* Read this child's generation number as soon as now,
 * so that further hooks can query it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1109 - 1

/* This behavior is voided by setting real_exit_code to 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1196 - 1

/* back up to capture the bad argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1206 - 1

/* Track the number of args actually entered by the user */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1232 - 1

/* Any other process has a console, so we don't to begin
 * a Win9x service until the configuration is parsed and
 * any command line errors are reported.
 *
 * We hold the return value so that we can die in pre_config
 * after logging begins, and the failure can land in the log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1248 - 1

/* Open a null handle to soak stdout in this process.
 * Windows service processes are missing any file handle
 * usable for stdin/out/err. This was the cause of later
 * trouble with invocations of apr_file_open_stdout()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1462 - 1

/* You cannot change ThreadLimit across a restart; ignore
 * any such attempts.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1624 - 1

/* Always reset our console handler to be the first, even on a restart
 * because some modules (e.g. mod_perl) might have set a console
 * handler to terminate the process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1721 - 1

/* The child process or in one_process (debug) mode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1783 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/nt_eventlog.c:143 - 1

/* Create a pipe to send stderr messages to the system error log.
 *
 * _dup2() duplicates the write handle inheritable for us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/nt_eventlog.c:166 - 1

/* The code above _will_ corrupt the StdHandle...
 * and we must do so anyways. We set this up only
 * after we initialized the posix stderr API.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:47 - 1

/* Todo; clear up statics */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:154 - 1

/* 30 or less, so can't overflow int */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:174 - 1

/* for Interrupt signals, shut down the server.
 * Tell the system we have dealt with the signal
 * without waiting for Apache to terminate.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:195 - 1

/* We should never get here, but this is (mostly) harmless */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:303 - 1

/* Cast is necessary, ChangeServiceConfig2 handles multiple
 * object types, some volatile, some not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:346 - 1

/* SHUTDOWN is offered before STOP, accept the first opportunity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:403 - 1

/* Report status, no errors, and buy 3 more seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:406 - 1

/* We need to append all the command arguments passed via StartService()
 * to our running service... which just got here via the SCM...
 * but we have no interest in argv[0] for the mpm_new_argv list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:474 - 1

/* Report status, no errors, and buy 3 more seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:477 - 1

/* We need to append all the command arguments passed via StartService()
 * to our running service... which just got here via the SCM...
 * but we have no interest in argv[0] for the mpm_new_argv list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:541 - 1

/* This is a genuine failure of the SCM. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:568 - 1

/* ### Needs improvement, on Win2K the user can _easily_
 * change the display name to a string that doesn't reflect
 * the internal service name + whitespace!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:597 - 1

/* Take the given literal name if there is no service entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:673 - 1

/* Cause the service_nt_main_fn to complete */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:719 - 1

/* Wait for controlling thread init or termination */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:867 - 1

/* RPCSS is the Remote Procedure Call (RPC) Locator required
 * for DCOM communication pipes. I am far from convinced we
 * should add this to the default service dependencies, but
 * be warned that future apache modules or ISAPI dll's may
 * depend on it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:882 - 1

// error control type 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:900 - 1

// error control type 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:96 - 1

/* Save queue_info->recycled_pool in local variable next because
 * new_recycle->next can be changed after apr_atomic_casptr
 * function call. For gory details see PR 44402.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:188 - 1

/* Atomically pop a pool from the recycled list */

 /* This function is safe only as long as it is single threaded because
 * it reaches into the queue and accesses "e;next"e; which can change.
 * We are OK today because it is only called from the listener thread.
 * cas-based pushes do not have the same limitation - any number can
 * happen concurrently with a single cas-based pop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:229 - 1

/**
 * Detects when the fd_queue_t is full. This utility function is expected
 * to be called from within critical sections, and is not threadsafe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:235 - 1

/**
 * Detects when the fd_queue_t is empty. This utility function is expected
 * to be called from within critical sections, and is not threadsafe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:344 - 1

/* If we wake up and it's still empty, then we were interrupted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:369 - 1

/* AP_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:160 - 1

/*
 * idle_spawn_rate is the number of children that will be spawned on the
 * next maintenance cycle if there aren't enough idle servers. It is
 * maintained per listeners bucket, doubled up to MAX_SPAWN_RATE, and
 * reset only when a cycle goes by without the need to spawn.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:242 - 1

/* The LISTENER_SIGNAL signal will be sent from the main thread to the
 * listener thread to wake it up for graceful termination (what a child
 * process from an old generation does when the admin does "e;apachectl
 * graceful"e;). This signal will be blocked in all threads of a child
 * process except for the listener thread.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:263 - 1

/* An array of socket descriptors in use by each thread used to
 * perform a non-graceful (forced) shutdown of the server. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:423 - 1

/* Don't forget about this exiting child process, or we
 * won't be able to kill it if it doesn't exit by the
 * time the server is shut down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:505 - 1

/* Probably not an error - don't bother reporting it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:572 - 1

/* we want to ignore HUPs and AP_SIG_GRACEFUL while we're busy
 * processing one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:610 - 1

/*****************************************************************
 * Here follows a long bunch of generic server bookkeeping stuff...
 */

/*****************************************************************
 * Child process main loop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:665 - 1

/* XXX If specifying SIG_IGN is guaranteed to unblock a syscall,
 * then we don't need this goofy function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:821 - 1

/* Grab a listener record from the client_data of the poll
 * descriptor, and advance our saved index to round-robin
 * the next fetch.
 *
 * ### hmm... this descriptor might have POLLERR rather
 * ### than POLLIN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:982 - 1

/* We got some other error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1038 - 1

/* XXX under some circumstances not understood, children can get stuck
 * in start_threads forever trying to take over slots which will
 * never be cleaned up; for now there is an APLOG_DEBUG message issued
 * every so often when this condition occurs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1058 - 1

/* We must create the fd queues before we start up the listener
 * and worker threads. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1097 - 1

/* We let each thread update its own scoreboard entry. This is
 * done because it lets us deal with tid better.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1110 - 1

/* Start the listener only when there are workers available */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1132 - 1

/* What state should this child_main process be listed as in the
 * scoreboard...?
 * ap_update_child_status_from_indexes(my_child_num, i, SERVER_STARTING,
 * (request_rec *) NULL);
 *
 * This state should be listed separately in the scoreboard, in some kind
 * of process_status, not mixed in with the worker threads' status.
 * "e;life_status"e; is almost right, but it's in the worker's structure, and
 * the name could be clearer. gla
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1236 - 1

/* for benefit of any hooks that run as this
 * child initializes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1332 - 1

/* Block until we get a terminating signal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1475 - 1

/* start up a bunch of children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1592 - 1

/* Assume this is a transient error, even though it may not be. Leave
 * the server up in case it is able to serve some requests or the
 * problem will be resolved.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1608 - 1

/* the child already logged the failure details */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1622 - 1

/* terminate the free list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1704 - 1

/* fix race condition found in PR 39311
 * A child created at the same time as a graceful happens 
 * can find the lock missing and create a fatal error.
 * It is not fatal for the last generation to be in this state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1725 - 1

/* tell perform_idle_server_maintenance to check into this
 * on the next timer pop
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1755 - 1

/* already out of the scoreboard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1794 - 1

/* In any event we really shouldn't do the code below because
 * few of the servers we just started are in the IDLE state
 * yet, so we'd mistakenly create an extra server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1829 - 1

/* Don't thrash since num_buckets depends on the
 * system and the number of online CPU cores...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2207 - 1

/* you cannot change ServerLimit across a restart; ignore
 * any such attempts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2251 - 1

/* you cannot change ThreadLimit across a restart; ignore
 * any such attempts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2365 - 1

/* ap_daemons_to_start > ap_daemons_limit checked in worker_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2414 - 1

/* we need to set the MPM state before other pre-config hooks use MPM query
 * to retrieve it, so register as REALLY_FIRST
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2534 - 1

/* hook to run before apache parses args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:133 - 1

/* hooks with no args are implemented last, after disabling APR hook probes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:160 - 1

/* yuck */

/* variables representing config directives implemented here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:188 - 1

/* number of calls to wait_or_timeout between writable probes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:454 - 1

/* differs from MPM generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:469 - 1

/* last child of generation already exited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:120 - 1

/* Ensure pid sanity. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:138 - 1

/* ok, now it's being annoying */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:202 - 1

/* index of action we decided to take this
 * iteration
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:324 - 1

/* Ensure pid sanity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:338 - 1

/* The child is already dead and reaped, or was a bogus pid -
 * log this either way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:348 - 1

/* Ensure pid sanity. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:355 - 1

/* Process already dead... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:446 - 1

/* close these before exec. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:518 - 1

/* close these before exec. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:605 - 1

/* This function connects to the server and sends enough data to
 * ensure the child wakes up and processes a new connection. This
 * permits the MPM to skip the poll when there is only one listening
 * socket, because it provides a alternate way to unblock an accept()
 * when the pod is used. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:890 - 1

/* back up to capture the bad argument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:976 - 1

/* XXX we can probably add some rudimentary cleanup code here,
 * like getting rid of the pid file. If any additional bad stuff
 * happens, we are protected from recursive errors taking down the
 * system since this function is no longer the signal handler GLA
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:983 - 1

/* At this point we've got sig blocked, because we're still inside
 * the signal handler. When we leave the signal handler it will
 * be unblocked, and we'll take the signal... and coredump or whatever
 * is appropriate for this particular Unix. In addition the parent
 * will see the real signal we received -- whereas if we called
 * abort() here, the parent would only see SIGABRT.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:45 - 1

/* For errors detected in basic auth common
 * support code... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:102 - 1

/*
 * Builds the content-type that should be sent to the client from the
 * content-type specified. The following rules are followed:
 * - if type is NULL or "e;"e;, return NULL (do not set content-type).
 * - if charset adding is disabled, stop processing and return type.
 * - then, if there are no parameters on type, add the default charset
 * - return type
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:134 - 1

/* already has parameter, do nothing */
 /* XXX we don't check the validity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:167 - 1

/*
 * Return the latest rational time from a request/mtime (modification time)
 * pair. We return the mtime unless it's in the future, in which case we
 * return the current time. We use the request time as a reference in order
 * to limit the number of calls to time(). We don't check for futurosity
 * unless the mtime is at least as new as the reference.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:268 - 1

/* no use attempting a zero-byte alloc (hurts when
 * using --with-efence --enable-pool-debug) or
 * doing any of the other logic either
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:298 - 1

/* Increase the buffer size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:308 - 1

/* Copy what we already had. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:330 - 1

/* Now NUL-terminate the string at the end of the line;
 * if the last-but-one character is a CR, terminate there */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:348 - 1

/* Clear the temp brigade for this filter read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:404 - 1

/* We're null terminated. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:423 - 1

/* Copy what we already had. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:455 - 1

/* on ASCII boxes, ap_rgetline is a macro which simply invokes
 * ap_rgetline_core with the same parms
 *
 * on EBCDIC boxes, each complete http protocol input line needs to be
 * translated into the code page used by the compiler. Since
 * ap_rgetline_core uses recursion, we do the translation in a wrapper
 * function to ensure that each input character gets translated only once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:556 - 1

/* set error status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:593 - 1

/* ensure ap_rgetline allocates memory each time thru the loop
 * if there are empty lines
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:664 - 1

/* If we deny 0.9, send error message with 1.x */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:675 - 1

/* Avoid sscanf in the common case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:836 - 1

/* This line is a continuation of the preceding line(s),
 * so append it to the line that we've set aside.
 * Note: this uses a power-of-two allocator to avoid
 * doing O(n) allocs and using O(n^2) space for
 * continuations that span many many lines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:977 - 1

/* Keep track of this line so that we can parse it on
 * the next loop iteration. (In the folded case, last_field
 * has been updated already.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:992 - 1

/* enforce LimitRequestFieldSize for merged headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1037 - 1

/* Must be set before we run create request hook */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1054 - 1

/* Begin by presuming any module can make its own path_info assumptions,
 * until some module interjects and changes the value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1103 - 1

/* We may have been in keep_alive_timeout mode, so toggle back
 * to the normal timeout mode as we fetch the header lines,
 * as necessary.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1150 - 1

/* http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-23
 * Section 3.3.3.3: "e;If a message is received with both a
 * Transfer-Encoding and a Content-Length header field, the
 * Transfer-Encoding overrides the Content-Length. ... A sender
 * MUST remove the received Content-Length field"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1161 - 1

/*
 * Client asked for headers only with HTTP/0.9, which doesn't send
 * headers! Have to dink things just to make sure the error message
 * comes through...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1201 - 1

/*
 * Client sent us an HTTP/1.1 or later request without telling us the
 * hostname, either with a full URL or a Host: header. We therefore
 * need to (as per the 1.1 spec) send an error. As a special case,
 * HTTP/1.1 mentions twice (S9, S14.23) that a request MUST contain
 * a Host: header, and the server MUST respond with 400 if it doesn't.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1272 - 1

/* if a request with a body creates a subrequest, remove original request's
 * input headers which pertain to the body which has already been read.
 * out-of-line helper function for ap_set_sub_req_protocol.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1370 - 1

/* finalize_request_protocol is called at completion of sending the
 * response. Its sole purpose is to send the terminating protocol
 * information for any wrappers around the response message body
 * (i.e., transfer encodings). It should have been named finalize_response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1388 - 1

/*
 * Support for the Basic authentication protocol, and a bit for Digest.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1436 - 1

/* Client tried to authenticate using wrong auth scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1457 - 1

/* true if the C-L filter has already sent at
 * least one bucket on to the next output filter
 * for this request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1543 - 1

/* If we've now seen the entire response and it's otherwise
 * okay to set the C-L in the response header, then do so now.
 *
 * We can only set a C-L in the response header if we haven't already
 * sent any buckets on to the next output filter for this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1615 - 1

/* no way to tell how many were actually sent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1672 - 1

/* future optimization: record some flags in the request_rec to
 * say whether we've added our filter, and whether it is first.
 */

 /* this will typically exit on the first test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1758 - 1

/* Flush callback for apr_vformatter; returns -1 on error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1931 - 1

/* if we send an interim response, we're no longer in a state of
 * expecting one. Also, this could feasibly be in a subrequest,
 * so we need to propagate the fact that we responded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2005 - 1

/* possibly more than one choice or one, but not the
 * existing. (TODO: maybe 426 and Upgrade then?) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/provider.c:71 - 1

/* just set it. no biggy if it was there before. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/provider.c:96 - 1

/* just set it. no biggy if it was there before. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:157 - 1

/* This is the master logic for processing requests. Do NOT duplicate
 * this logic elsewhere, or the security model will be broken by future
 * API changes. Each phase must be individually optimized to pick up
 * redundant/duplicate calls by subrequests, and redirects.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:168 - 1

/* Ignore embedded %2F's in path for proxy requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:190 - 1

/* OK --- shrinking transformations... */

 /* All file subrequests are a huge pain... they cannot bubble through the
 * next several steps. Only file subrequests are allowed an empty uri,
 * otherwise let translate_name kill the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:225 - 1

/* Rerun the location walk, which overrides any map_to_storage config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:252 - 1

/* Skip authn/authz if the parent or prior request passed the authn/authz,
 * and that configuration didn't change (this requires optimized _walk()
 * functions in map_to_storage that use the same merge results given
 * identical input.) If the config changes, we must re-auth.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:343 - 1

/* XXX Must make certain the ap_run_type_checker short circuits mime
 * in mod-proxy for r->proxyreq && r->parsed_uri.scheme
 * && !strcmp(r->parsed_uri.scheme, "e;http"e;)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:382 - 1

/* Prev cache of same call in this (sub)req */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:529 - 1

/*
 * As we walk the directory configuration, the merged config won't
 * be 'rooted' to a specific vhost until the very end of the merge.
 *
 * We need a very fast mini-merge to a real, vhost-rooted merge
 * of core.opts and core.override, the only options tested within
 * directory_walk itself.
 *
 * See core.c::merge_core_dir_configs() for explanation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:581 - 1

/*****************************************************************
 *
 * Getting and checking directory configuration. Also checks the
 * FollowSymlinks and FollowSymOwner stuff, since this is really the
 * only place that can happen (barring a new mid_dir_walk callout).
 *
 * We can't do it as an access_checker module function which gets
 * called with the final per_dir_config, since we could have a directory
 * with FollowSymLinks disabled, which contains a symlink to another
 * with a .htaccess file which turns FollowSymLinks back on --- and
 * access in such a case must be denied. So, whatever it is that
 * checks FollowSymLinks needs to know the state of the options as
 * they change, all the way down.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:684 - 1

/* If we have a file already matches the path of r->filename,
 * and the vhost's list of directory sections hasn't changed,
 * we can skip rewalking the directory_walk entries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:696 - 1

/* Well this looks really familiar! If our end-result (per_dir_result)
 * didn't change, we have absolutely nothing to do :)
 * Otherwise (as is the case with most dir_merged/file_merged requests)
 * we must merge our dir_conf_merged onto this new r->per_dir_config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:747 - 1

/* Is this a possibly acceptable symlink? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:793 - 1

/*
 * We must play our own mini-merge game here, for the few
 * running dir_config values we care about within dir_walk.
 * We didn't start the merge from r->per_dir_config, so we
 * accumulate opts and override as we merge, from the globals.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:864 - 1

/*
 * Bad assumption above? If the root's length is longer
 * than the canonical length, then it cannot be trusted as
 * a truename. So try again, this time more seriously.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:895 - 1

/* Working space for terminating null and an extra / is required.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:950 - 1

/* We will never skip '0' element components, e.g. plain old
 * <Directory >, and <Directory "e;/"e;> are classified as zero
 * so that Win32/Netware/OS2 etc all pick them up.
 * Otherwise, skip over the mismatches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1083 - 1

/* Now it's time for the next segment...
 * We will assume the next element is an end node, and fix it up
 * below as necessary...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1113 - 1

/* First optimization;
 * If...we knew r->filename was a file, and
 * if...we have strict (case-sensitive) filenames, or
 * we know the canonical_filename matches to _this_ name, and
 * if...we have allowed symlinks
 * skip the lstat and dummy up an APR_DIR value for thisinfo.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1158 - 1

/* If we hit ENOTDIR, we must have over-optimized, deny
 * rather than assume not found.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1180 - 1

/* Is this a possibly acceptable symlink?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1270 - 1

/* If we haven't already continue'd above, we have a match.
 *
 * Calculate our full-context core opts & override.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1370 - 1

/* Merge our cache->dir_conf_merged construct with the r->per_dir_configs,
 * and note the end result to (potentially) skip this step next time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1427 - 1

/* Well this looks really familiar! If our end-result (per_dir_result)
 * didn't change, we have absolutely nothing to do :)
 * Otherwise (as is the case with most dir_merged/file_merged requests)
 * we must merge our dir_conf_merged onto this new r->per_dir_config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1573 - 1

/* Merge our cache->dir_conf_merged construct with the r->per_dir_configs,
 * and note the end result to (potentially) skip this step next time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1638 - 1

/* Well this looks really familiar! If our end-result (per_dir_result)
 * didn't change, we have absolutely nothing to do :)
 * Otherwise (as is the case with most dir_merged requests)
 * we must merge our dir_conf_merged onto this new r->per_dir_config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1769 - 1

/* Merge our cache->dir_conf_merged construct with the r->per_dir_configs,
 * and note the end result to (potentially) skip this step next time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1901 - 1

/* Merge our cache->dir_conf_merged construct with the r->per_dir_configs,
 * and note the end result to (potentially) skip this step next time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2006 - 1

/* We have to run this after we fill in sub req vars,
 * or the r->main pointer won't be setup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2011 - 1

/* Begin by presuming any module can make its own path_info assumptions,
 * until some module interjects and changes the value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2074 - 1

/* have we found a morphing bucket? if so, force it to morph into something
 * safe to pass down to the connection filters without needing to be set
 * aside.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2251 - 1

/* We cannot return NULL without violating the API. So just turn this
 * subrequest into a 500 to indicate the failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2258 - 1

/* lookup_uri
 * If the content can be served by the quick_handler, we can
 * safely bypass request_internal processing.
 *
 * If next_filter is NULL we are expecting to be
 * internal_fast_redirect'ed to the subrequest, or the subrequest will
 * never be invoked. We need to make sure that the quickhandler is not
 * invoked by any lookups. Since an internal_fast_redirect will always
 * occur too late for the quickhandler to handle the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2304 - 1

/* strip path_info off the end of the uri to keep it in sync
 * with r->filename, which has already been stripped by directory_walk,
 * merge the dirent->name, and then, if the caller wants us to remerge
 * the original path info, do so. Note we never fix the path_info back
 * to r->filename, since dir_walk would do so (but we don't expect it
 * to happen in the usual cases)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2372 - 1

/*
 * Resolve this symlink. We should tie this back to dir_walk's cache
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2384 - 1

/* ap_make_full_path and ap_escape_uri overallocated the buffers
 * by one character to help us out here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2403 - 1

/* We cannot return NULL without violating the API. So just turn this
 * subrequest into a 500. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2489 - 1

/* fill in parsed_uri values */
 /*
 * XXX: this should be set properly like it is in the same-dir case
 * but it's actually sometimes to impossible to do it... because the
 * file may not have a uri associated with it -djg
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2498 - 1

/* We cannot return NULL without violating the API. So just turn this
 * subrequest into a 500. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2537 - 1

/*
 * Function to set the r->mtime field to the specified value if it's later
 * than what's already there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:114 - 1

/*
 * ToDo:
 * This function should be renamed to cleanup_shared
 * and it should handle cleaning up a scoreboard shared
 * between processes using any form of IPC (file, shared memory
 * segment, etc.). Leave it as is now because it is being used
 * by various MPMs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:188 - 1

/* The shared memory file must not exist before we create the
 * segment. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:203 - 1

/* ToDo: This function should be made to handle setting up
 * a scoreboard shared between processes using any IPC technique,
 * not just a shared memory segment
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:237 - 1

/* config didn't specify, we get to choose shmem type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:350 - 1

/* Routines called to deal with the scoreboard image
 * --- note that we do *not* need write locks, since update_child_status
 * only updates a *single* record in place, and only one process writes to
 * a given scoreboard slot at a time (either the child process owning that
 * slot, or the parent, noting that the child has died).
 *
 * As a final note --- setting the score entry to getpid() is always safe,
 * since when the parent is writing an entry, it's only noting SERVER_DEAD
 * anyway.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:433 - 1

/* Don't reveal the password in the server-status view */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:78 - 1

/* we assume the folks using this ensure 0 <= c < 256... which means
 * you need a cast to (unsigned char) first, you can't just plug a
 * char in here and get it to work, because if char is signed then it
 * will first be sign extended.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:135 - 1

/* Convert %Z to "e;GMT"e; and %z to "e;+0000"e;;
 * on hosts that do not have a time zone string in struct tm,
 * strftime must assume its argument is local time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:300 - 1

/*
 * Similar to standard strstr() but we ignore case in this version.
 * Based on the strstr() implementation further below.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:329 - 1

/* didn't find a match here, try starting at next character in s1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:335 - 1

/*
 * Returns an offsetted pointer in bigstring immediately after
 * prefix. Returns bigstring if bigstring doesn't start with
 * prefix or if prefix is longer than bigstring while still matching.
 * NOTE: pointer returned is relative to bigstring, so we
 * can use standard pointer comparisons in the calling function
 * (eg: test if ap_stripprefix(a,b) == a)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:442 - 1

/* Now actually fill in the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:496 - 1

/*
 * Parse .. so we don't compromise security
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:592 - 1

/*
 * copy at most n leading directories of s into d
 * d should be at least as large as s plus 1 extra byte
 * assumes n > 0
 * the return value is the ever useful pointer to the trailing \0 of d
 *
 * MODIFIED FOR HAVE_DRIVE_LETTERS and NETWARE environments,
 * so that if n == 0, "e;/"e; is returned in d with n == 1
 * and s == "e;e:/test.html"e;, "e;e:/"e; is returned in d
 * *** See also directory_walk in modules/http/http_request.c

 * examples:
 * /a/b, 0 ==> / (true for all platforms)
 * /a/b, 1 ==> /
 * /a/b, 2 ==> /a/
 * /a/b, 3 ==> /a/b/
 * /a/b, 4 ==> /a/b/
 *
 * c:/a/b 0 ==> /
 * c:/a/b 1 ==> c:/
 * c:/a/b 2 ==> c:/a/
 * c:/a/b 3 ==> c:/a/b
 * c:/a/b 4 ==> c:/a/b
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1024 - 1

/* Read one line from open ap_configfile_t, strip LF, increase line number */
/* If custom handler does not define a getstr() function, read char by char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1083 - 1

/* too small, assume caller is crazy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1143 - 1

/* Read one line from open ap_configfile_t, strip LF, increase line number */
/* If custom handler does not define a getstr() function, read char by char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1255 - 1

/* Retrieve an HTTP header field list item, as separated by a comma,
 * while stripping insignificant whitespace and lowercasing anything not in
 * a quoted string or comment. The return value is a new string containing
 * the converted list item (or NULL if none) and the address pointed to by
 * field is shifted to the next non-comma, non-whitespace.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1530 - 1

/* Non-separator character; we are finished with leading
 * whitespace. We must never have encountered any trailing
 * whitespace before the delimiter (comma) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1539 - 1

/* "e;Linear whitespace"e; only includes ASCII CRLF, space, and tab;
 * we can't get a CRLF since headers are split on them already,
 * so only look for a space or a tab */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1617 - 1

/* find token end, skipping over quoted strings.
 * (comments are already gone).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1708 - 1

/*
 * Newlines to Win32/OS2 CreateProcess() are ill advised.
 * Convert them to spaces since they are effectively white
 * space to most applications
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1752 - 1

/*
 * Unescapes a URL, leaving reserved characters intact.
 * Returns 0 on success, non-zero on error
 * Failure is due to
 * bad % escape returns HTTP_BAD_REQUEST
 *
 * decoding %00 or a forbidden character returns HTTP_NOT_FOUND
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1768 - 1

/* Initial scan for first '%'. Don't bother writing values before
 * seeing a '%' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1822 - 1

/* AllowEncodedSlashes (corrected) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2164 - 1

/* no need for this in error log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2169 - 1

/* break the for loop as well */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2212 - 1

/* in error condition, just return no */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2222 - 1

/* in error condition, just return no */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2235 - 1

/* allocate +3 for '/' delimiter, trailing NULL and overallocate
 * one extra byte to allow the caller to add a trailing '/'
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2270 - 1

/* If the first character is ':', it's broken, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2436 - 1

/*
 * Now copy the input string to the output string, inserting a slosh
 * in front of every "e; that doesn't already have one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2456 - 1

/*
 * Given a string, append the PID deliminated by delim.
 * Usually used to create a pid-appended filepath name
 * (eg: /a/b/foo -> /a/b/foo.6726). A function, and not
 * a macro, to avoid unistd.h dependency
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2856 - 1

/* at least double the size, to avoid repeated reallocations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3051 - 1

/* preload errored fields, we overwrite */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3100 - 1

/* preload errored fields, we overwrite */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:66 - 1

/* define AP_EXPR_DEBUG to log the parse tree when parsing an expression */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:72 - 1

/*
 * To reduce counting overhead, we only count calls to
 * ap_expr_eval_word() and ap_expr_eval(). The max number of
 * stack frames is larger by some factor.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:316 - 1

/*
 * $0 ... $9 may contain stuff the user wants to keep. Therefore
 * we only set them if there are capturing parens in the regex.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:411 - 1

/* additional error message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:740 - 1

/* AP_EXPR_DEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1330 - 1

/* avoid some infinite recursions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:88 - 1

/* Enabling verbose error messages. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:169 - 1

/* obsolescent; will be withdrawn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:262 - 1

/* This feature is available in gcc versions 2.5 and later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:297 - 1

/* The parser invokes alloca or malloc; define the necessary symbols. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:328 - 1

/* The OS might guarantee only one guard page at the bottom of the stack,
 and a page size can be as small as 4096 bytes. So we cannot safely
 invoke alloca (N) if N exceeds 4096. Use a slightly smaller number
 to allow for a few compiler-allocated temporary stack slots. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:332 - 1

/* reasonable circa 2006 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:377 - 1

/* The size of the maximum gap between one aligned stack and the next. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:407 - 1

/* Copy COUNT objects from SRC to DST. The source and destination do
 not overlap. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:424 - 1

/* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:720 - 1

/* This is here to suppress warnings from the GCC cpp's
 -Wunused-macros. Normally we don't worry about that warning, but
 some users do, and we want to make it easy for users to remove
 YYFAIL uses, which will produce warnings from Bison 2.5. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:745 - 1

/* Error token number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:756 - 1

/* YYLEX -- calling `yylex' with the right arguments. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:975 - 1

/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
 YYDEST. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1047 - 1

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
 about the unexpected token YYTOKEN for the state stack whose top is
 YYSSP.

 Return 0 if *YYMSG was successfully written. Return 1 if *YYMSG is
 not large enough to hold the message. In that case, also set
 *YYMSG_ALLOC to the required number of bytes. Return 2 if the
 required number of bytes is too large to store. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1064 - 1

/* Arguments of yyformat. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1249 - 1

/* Suppress an incorrect diagnostic about yylval being uninitialized. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1273 - 1

/* Number of syntax errors so far. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1308 - 1

/* Buffer for error messages, and its allocated size. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1329 - 1

/* Cause a token to be read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1424 - 1

/* Not known => get a lookahead token if don't already have one. */

 /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1491 - 1

/* yyn is the number of a rule to reduce with. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1885 - 1

/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1889 - 1

/* Make sure we have latest lookahead translation. See comments at
 user semantic actions for why this is necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1937 - 1

"/* If just tried and failed to reuse lookahead token after an
error, discard it. */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1954 - 1

/* Else will try to reuse lookahead token after shifting the error
 token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1959 - 1

/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR. |
`---------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1979 - 1

/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR. |
`-------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1999 - 1

/* Pop the current state because it cannot handle the error token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2016 - 1

/* Shift the error token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2038 - 1

/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here. |
`-------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2050 - 1

/* Make sure we have latest lookahead translation. See comments at
 user semantic actions for why this is necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:122 - 1

/* An opaque pointer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:128 - 1

/* For convenience, these vars (plus the bison vars far below)
 are macros in the reentrant scanner. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:351 - 1

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:363 - 1

/* This struct is not used in this scanner,
 but its presence is necessary. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:602 - 1

/*
 * XXX: It would be nice if we could recover somehow, e.g. via
 * XXX: longjmp. It is not clear if the scanner is in any state
 * XXX: to be cleaned up, though.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:650 - 1

/* Holds the entire state of the reentrant scanner. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:657 - 1

/* The rest are the same as the globals declared in the non-reentrant scanner. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:660 - 1

/**< capacity of stack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:729 - 1

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:830 - 1

/* Report a fatal error. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:974 - 1

"/* must back up */
	/* undo the effects of YY_DO_BEFORE_ACTION */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1520 - 1

/*
 * Anything else is an error
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1547 - 1

/* Undo the effects of YY_DO_BEFORE_ACTION. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1567 - 1

"/* Note that here we test for yy_c_buf_p "e;<="e; to the position
	* of the first EOB in the buffer, since yy_c_buf_p will
	* already have been incremented past the NUL character
	* (since all states make transitions on EOB to the
	* end-of-buffer state). Contrast this with the test
	* in input().
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1582 - 1

"/* Okay, we're now positioned to make the NUL
	* transition. We couldn't have
	* yy_get_previous_state() go ahead and do it
	* for us because it doesn't know how to deal
	* with the possibility of jamming (and we don't
	* want to build jamming into it because then it
	* will run more slowly).
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1597 - 1

/* Consume the NUL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1812 - 1

/* yy_get_previous_state - get the state just before the EOB char was reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1886 - 1

"/* yy_c_buf_p now points to the character we want to return.
	* If this occurs *before* the EOB characters, then it's a
	* valid NUL; if not, then we've hit the end of the buffer.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1902 - 1

"/* This happens because yy_g_n_b()
	* sees that we've accumulated a
	* token and flags that we need to
	* try matching the token before
	* proceeding. But for input(),
	* there's no matching to consider.
	* So convert the EOB_ACT_LAST_MATCH
	* to EOB_ACT_END_OF_FILE.
	*/

	/* Reset buffer status. */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1944 - 1

/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1993 - 1

"/* We don't actually know whether we did this switch during
	* EOF (ap_expr_yywrap()) processing, but the only time this flag
	* is looked at is after ap_expr_yywrap() is called, so it's safe
	* to go ahead and always set it.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2010 - 1

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2117 - 1

/** Pushes the new state onto the stack. The new state becomes
 * the current state. This function will allocate the stack
 * if necessary.
 * @param new_buffer The new state.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2181 - 1

"/* First allocation is just for 2 elements, since we don't know if this
	* scanner will even need a stack. We use 2 instead of 1 to avoid an
	* immediate realloc on the next call.
 */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2201 - 1

/* Increase the buffer to prepare for a possible push. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2202 - 1

/* arbitrary grow size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2253 - 1

/** Setup the input buffer state to scan a string. The next call to ap_expr_yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 * ap_expr_yy_scan_bytes() instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2571 - 1

/* Initialization is the same as for the non-reentrant scanner.
 * This function is called from ap_expr_yylex_destroy(), so don't allocate here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2595 - 1

/* For future reference: Set errno on error, since we are called by
 * ap_expr_yylex_init()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2625 - 1

/* Destroy the main struct (reentrant only). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:209 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:218 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:233 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:242 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:254 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:262 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:40 - 1

/*
** This macro returns true/false if a given filter should be inserted BEFORE
** another filter. This will happen when one of: 1) there isn't another
** filter; 2) that filter has a higher filter type (class); 3) that filter
** corresponds to a different request.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:588 - 1

/* This is only safe because HTTP_HEADER filter is always in
 * the filter stack. This ensures that there is ALWAYS a
 * request-based filter that we can attach this to. If the
 * HTTP_FILTER is removed, and another filter is not put in its
 * place, then handlers like mod_cgi, which attach their own
 * EOS bucket to the brigade will be broken, because we will
 * get two EOS buckets on the same request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:655 - 1

/* If have never stored any data in the filter, then we had better
 * create an empty bucket brigade so that we can concat. Register
 * a cleanup to zero out the pointer if the pool is cleared.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:684 - 1

/* Return an error but still save the brigade if
 * ->setaside() is really not implemented. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:763 - 1

/*
 * There are no more requests in the pipeline. We can just clear the
 * pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:794 - 1

/*
 * Determine if and up to which bucket we need to do a blocking write:
 *
 * a) The brigade contains a flush bucket: Do a blocking write
 * of everything up that point.
 *
 * b) The request is in CONN_STATE_HANDLER state, and the brigade
 * contains at least THRESHOLD_MAX_BUFFER bytes in non-file
 * buckets: Do blocking writes until the amount of data in the
 * buffer is less than THRESHOLD_MAX_BUFFER. (The point of this
 * rule is to provide flow control, in case a handler is
 * streaming out lots of data faster than the data can be
 * sent to the client.)
 *
 * c) The request is in CONN_STATE_HANDLER state, and the brigade
 * contains at least MAX_REQUESTS_IN_PIPELINE EOR buckets:
 * Do blocking writes until less than MAX_REQUESTS_IN_PIPELINE EOR
 * buckets are left. (The point of this rule is to prevent too many
 * FDs being kept open by pipelined requests, possibly allowing a
 * DoS).
 *
 * d) The request is being served by a connection filter and the
 * brigade contains a morphing bucket: If there was no other
 * reason to do a blocking write yet, try reading the bucket. If its
 * contents fit into memory before THRESHOLD_MAX_BUFFER is reached,
 * everything is fine. Otherwise we need to do a blocking write the
 * up to and including the morphing bucket, because ap_save_brigade()
 * would read the whole bucket into memory later on.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:858 - 1

/* this segment of the brigade MUST be sent before returning. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:880 - 1

/*
 * Defer the actual blocking write to avoid doing many writes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_md5.c:59 - 1

/*
 * Take the MD5 hash of the string argument.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:63 - 1

/* APR determines temporary filename unless overridden below,
 * we presume file indicates an mutexfile is a file path
 * unless the method sets mutexfile=file and NULLs file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:115 - 1

/* Unless the method above assumed responsibility for setting up
 * mutexfile and NULLing out file, presume it is a file we
 * are looking to use
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:265 - 1

/* in case this mod's pre-config ran before core's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:358 - 1

/* !true if dir not already set: mxcfg->set && defcfg->dir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:69 - 1

/* AP_REG_ASSERT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:127 - 1

/*************************************************
 * Compile a regular expression *
 *************************************************/

/*
 * Arguments:
 * preg points to a structure for recording the compiled expression
 * pattern the pattern to compile
 * cflags compilation flags
 *
 * Returns: 0 on success
 * various non-zero codes on failure
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:159 - 1

/*
 * There doesn't seem to be constants defined for compile time error
 * codes. 21 is "e;failed to get memory"e; according to pcreapi(3).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:228 - 1

/* All captured slots were filled in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:62 - 1

/* TODO: support perl's after/before */
 /* FIXME: fix these simplminded delims */

 /* we think there's a delimiter. Allow for it not to be if unmatched */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:83 - 1

/* If it's a substitution, we need the replacement string
 * TODO: possible future enhancement - support other parsing
 * in the replacement string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:90 - 1

/* missing replacement string is an error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:117 - 1

/* count size of memory required, starting at 1 for the whole-match
 * Simpleminded should be fine 'cos regcomp already checked syntax
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:157 - 1

/* FIXME - should we do more to handle error? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:156 - 1

/* use a temporary apr_table_t which we'll overlap onto
 * r->subprocess_env later
 * (exception: if r->subprocess_env is empty at the start,
 * write directly into it)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:189 - 1

/*
 * You really don't want to disable this check, since it leaves you
 * wide open to CGIs stealing passwords and people viewing them
 * in the environment with "e;ps -e"e;. But, if you must...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:286 - 1

/* Apache custom error responses. If we have redirected set two new vars */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:405 - 1

/*
 * To get PATH_TRANSLATED, treat PATH_INFO as a URI path.
 * Need to re-escape it for this, since the entire URI was
 * un-escaped before we determined where the PATH_INFO began.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:536 - 1

/* the cookies have already been copied to the cookie_table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:552 - 1

/* if we see a bogus header don't ignore it. Shout and scream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:646 - 1

/*
 * If the script gave us a Last-Modified header, we can't just
 * pass it on blindly because of restrictions on future values.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:698 - 1

/* leave room for terminating null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:794 - 1

/* ap_scan_script_header_err_strs() accepts additional const char* args...
 * each is treated as one or more header lines, and the first non-header
 * character is returned to **arg, **data. (The first optional arg is
 * counted as 0.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:37 - 1

/* please see comments in cached_explode() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:43 - 1

/* Note that AP_TIME_RECENT_THRESHOLD is defined to
 * be a power of two minus one in util_time.h, so that
 * we can replace a modulo operation with a bitwise AND
 * when hashing items into a cache of size
 * AP_TIME_RECENT_THRESHOLD+1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:311 - 1

/* If the TZ variable is unset, many operating systems,
 * such as Linux, will at runtime read from /etc/localtime
 * and call fstat on it.
 *
 * By forcing the time zone to UTC if it is unset, we gain
 * about 2% in raw requests/second (since we format log files
 * in the local time, if present)
 *
 * For more info, see:
 * <http://www.gnu.org/s/hello/manual/libc/TZ-Variable.html>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:110 - 1

/* Some parsers are stupid and return an error on blank documents. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:133 - 1

/* make sure the parser is terminated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:57 - 1

/* the record causing it to be in
 * this chain (needed for port comparisons) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:68 - 1

/* the record causing it to be in
 * this chain (need for both ip addr and port
 * comparisons) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:74 - 1

/* no runtime use, temporary storage of first
 * NVH'es names */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:100 - 1

/* whether a config error was seen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:107 - 1

/*
 * How it's used:
 *
 * The ip address determines which chain in iphash_table is interesting, then
 * a comparison is done down that chain to find the first ipaddr_chain whose
 * sar matches the address:port pair.
 *
 * If that ipaddr_chain has names == NULL then you're done, it's an ip-vhost.
 *
 * Otherwise it's a name-vhost list, and the default is the server in the
 * ipaddr_chain record. We tuck away the ipaddr_chain record in the
 * conn_rec field vhost_lookup_data. Later on after the headers we get a
 * second chance, and we use the name_chain to figure out what name-vhost
 * matches the headers.
 *
 * If there was no ip address match in the iphash_table then do a lookup
 * in the default_list.
 *
 * How it's put together ... well you should be able to figure that out
 * from how it's used. Or something like that.
 */


/* called at the beginning of the config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:139 - 1

/*
 * Parses a host of the form <address>[:port]
 * paddr is used to create a list in the order of input
 * **paddr is the ->next pointer of the last entry (or s->addrs)
 * *paddr is the variable used to keep track of **paddr between calls
 * port is the default port to assume
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:240 - 1

/* terminate the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:397 - 1

/* don't break, continue looking for an exact match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:418 - 1

/* don't break, continue looking for an exact match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:514 - 1

/*
 * When a second or later virtual host maps to the same IP chain,
 * add the relevant server names to the chain. Special care is taken
 * to avoid adding ic->names until we're sure there are multiple VH'es.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:527 - 1

/* iterating backwards, so each one we see becomes the current default server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:532 - 1

/* first pass, set these names aside in case we see another VH.
 * Until then, this looks like an IP-based VH to runtime.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:608 - 1

/* see if it matches something we've already got */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:626 - 1

/* Ok now we want to set up a server_hostname if the user was
 * silly enough to forget one.
 * XXX: This is silly we should just crash and burn.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:635 - 1

/* what else can we do? at this point this vhost has
 no configured name, probably because they used
 DNS in the VirtualHost statement. It's disabled
 anyhow by the host matching code. -djg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:651 - 1

/* again, what can we do? They didn't specify a
 ServerName, and their DNS isn't working. -djg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:771 - 1

/* also takes care of multiple Host headers by denying commas */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:833 - 1

/* apr_parse_addr_port will interpret a bare integer as a port
 * which is incorrect in this context. So treat it separately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:856 - 1

/* Don't throw the Host: header's port number away:
 save it in parsed_uri -- ap_get_server_port() needs it! */
 /* @@@ XXX there should be a better way to pass the port.
 * Like r->hostname, there should be a r->portno
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:984 - 1

/*
 * Even if the request has a Host: header containing a port we ignore
 * that port. We always use the physical port of the socket. There
 * are a few reasons for this:
 *
 * - the default of 80 or 443 for SSL is easier to handle this way
 * - there is less of a possibility of a security problem
 * - it simplifies the data structure
 * - the client may have no idea that a proxy somewhere along the way
 * translated the request to another ip:port
 * - except for the addresses from the VirtualHost line, none of the other
 * names we'll match have ports associated with them
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1114 - 1

/*
 * We cannot use ap_get_server_name/port here, because we must
 * ignore UseCanonicalName/Port.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1150 - 1

/*
 * If there was a host part in the Request-URI, ignore the 'Host'
 * header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1223 - 1

/* we've already done a callback for this vhost. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1243 - 1

/* Called for a new connection which has a known local_addr. Note that the
 * new connection is assumed to have conn->server == main server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1261 - 1

/* maybe there's a default server or wildcard name-based vhost
 * matching this port
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:115 - 1

/* Hmmm... This source code isn't being compiled in ASCII.
 * In order for data that flows over the network to make
 * sense, we need to translate to/from ASCII.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:122 - 1

/* affects include files on Solaris */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:254 - 1

/* between request and reading response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:268 - 1

/* ok to proceed after socket receive errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:277 - 1

/* Show confidence estimator and warnings */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:278 - 1

/* time limit in secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:288 - 1

/* optional cookie line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:289 - 1

/* optional (basic/uuencoded) auhentication */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:302 - 1

/* timeout value */

/* overrides for ab-generated common headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:305 - 1

/* was an optional "e;Host:"e; header specified? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:306 - 1

/* was an optional "e;User-Agent:"e; header specified? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:307 - 1

/* was an optional "e;Accept:"e; header specified? */
 /*
 * XXX - this is now a per read/write transact type of value
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:321 - 1

/* number of requests started, so no excess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:325 - 1

/* number of broken pipe writes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:328 - 1

/* requests failed due to broken read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:351 - 1

/* interesting percentiles */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:370 - 1

/* --------------------------------------------------------- */

/* simple little function to write an error string and exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:382 - 1

/* simple little function to write an APR error string and exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:477 - 1

/* --------------------------------------------------------- */
/* write out request to a connection - assumes we can write
 * (small) request out in one go into our new socket buffer
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:814 - 1

/* record final time if interrupted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:853 - 1

/* avoid divide by zero */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:904 - 1

/* calculating the sample variance: the sum of the squared deviations, divided by n-1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:958 - 1

/*
 * Reduce stats from apr time to milliseconds
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1147 - 1

/* avoid divide by zero */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1182 - 1

/*
 * Reduce stats from apr time to milliseconds
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1192 - 1

/* avoid division by zero (if 0 done) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1218 - 1

/* --------------------------------------------------------- */

/* start asnchronous non-blocking connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1344 - 1

/*
 * server has legitimately shut down an idle keep alive request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1409 - 1

/* connection closed cleanly: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1432 - 1

/* some fatal error: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1453 - 1

/* catch legitimate fatal apr_socket_recv errors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1507 - 1

/*
 * this next line is so that we talk to NCSA 1.5 which blatantly
 * breaks the http specifaction
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1535 - 1

/*
 * this is first time, extract some interesting info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1550 - 1

/*
 * XXX: this parsing isn't even remotely HTTP compliant... but in
 * the interest of speed it doesn't totally have to be, it just
 * needs to be extended to handle whatever servers folks want to
 * test against. -djg
 */

 /* check response code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1576 - 1

/* terminate at end of header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1579 - 1

/* for benefit of MSIIS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1699 - 1

/* add default headers if necessary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1701 - 1

/* Host: header not overridden, add default value to hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1709 - 1

/* User-Agent: header not overridden, add default value to hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1717 - 1

/* Accept: header not overridden, add default value to hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1760 - 1

/*
 * Combine headers and (optional) post file into one continuous buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1870 - 1

/* avoid apr_poll/EINPROGRESS loop on HP-UX, let recv discover ECONNREFUSED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2258 - 1

/*
 * assume username passwd already to be in colon separated form.
 * Ready to be uu-encoded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2274 - 1

/*
 * assume username passwd already to be in colon separated form.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2445 - 1

/* Ignore writes to connections that
 * have been closed at the other end. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/fcgistarter.c:67 - 1

/* Command line arguments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:311 - 1

/**
 * Process part of the fragment body, given the header parameters.
 *
 * Currently, we append it to a file named after the UUID of the connection.
 *
 * The file is opened on demand and closed when done, so that we are
 * guaranteed never to hit a file handle limit (within reason).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:410 - 1

/* overflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:419 - 1

/**
 * Parse what might be a fragment header line.
 *
 * If the parse doesn't match for any reason, an error is returned, otherwise
 * APR_SUCCESS.
 *
 * The header structure will be filled with the header values as parsed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:517 - 1

/* when the pipe is closed, the pipe disappears from the brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:571 - 1

/* must we ignore unknown uuids? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:660 - 1

/* lets get APR off the ground, and make sure it terminates cleanly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:86 - 1

/* cache entry exiration time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:87 - 1

/* cache entry time of last response to client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:101 - 1

/* flag: true means dry run, don't actually delete
 anything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:104 - 1

/* flag: true means list cached urls */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:105 - 1

/* flag: true means list cached urls */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:135 - 1

/*
 * fake delete for debug purposes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:143 - 1

/* stat and printing to simulate some deletion system load and to
 display what would actually have happened */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:168 - 1

/* be careful to call exit() only once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:276 - 1

/* If asked to delete dirs, do so now. We don't care if it fails.
 * If it fails, it likely means there was something else there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:355 - 1

/*
 * delete cache file set
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:403 - 1

/*
 * list the cache directory tree
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:471 - 1

/* ignore the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:490 - 1

/* ignore the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:496 - 1

/* ignore the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:546 - 1

/* ignore the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:552 - 1

/* ignore the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:592 - 1

/*
 * walk the cache directory tree
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:651 - 1

/* there may be temporary files which may be gone before
 * processing, always skip these if not in realclean mode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:661 - 1

/* this may look strange but apr_stat() may return an error which
 * is system dependent and there may be transient failures,
 * so just blindly retry for a short while
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:817 - 1

/* We didn't recognise the format, kill the files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:934 - 1

/* temp files may only be deleted in realclean mode which
 * is asserted above if a tempfile is in the hash array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:961 - 1

/*
 * purge cache entries
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:996 - 1

/* process all entries with a timestamp in the future, this may
 * happen if a wrong system time is corrected
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1024 - 1

/* process all entries with are expired */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1101 - 1

/* tolerate the directory not being empty, the cache may have
 * attempted to recreate the directory in the mean time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1213 - 1

/* If asked to delete dirs, do so now. We don't care if it fails.
 * If it fails, it likely means there was something else there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1227 - 1

/**
 * Delete a specific URL from the cache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1403 - 1

/* avoid compiler warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdbm.c:384 - 1

/*
 * Make sure we still have exactly the right number of arguments left
 * (the filename, the username, and possibly the password if -b was
 * specified).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:139 - 1

/*
 * Return true if the named file exists, regardless of permissions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:213 - 1

/*
 * Make sure we still have exactly the right number of arguments left
 * (the filename, the username, and possibly the password if -b was
 * specified).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:338 - 1

/*
 * Error out if -c was omitted for this non-existant file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:358 - 1

/*
 * All the file access checks (if any) have been made. Time to go to work;
 * try to create the record for the username in question. If that
 * fails, there's no need to waste any time on file manipulations.
 * Any error message text is returned in the record buffer, since
 * the mkrecord() routine doesn't have access to argv[].
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:228 - 1

/* Terminate the line at the next space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:236 - 1

/* See if we have it in our cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:254 - 1

/* This does not make much sense, but historically "e;resolves"e; means
 * "e;parsed as an IP address"e;. It does not mean we actually resolved
 * the IP address into a hostname.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:260 - 1

/* From here on our we cache each result, even if it was not
 * succesful
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:265 - 1

/* Try and perform a reverse lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:268 - 1

/* Could not perform a reverse lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:273 - 1

/* Add to cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:280 - 1

/* Perform a double lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:294 - 1

/* Add to cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:305 - 1

/* Store it in the cache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:175 - 1

/*
 * Make a password record from the given information. A zero return
 * indicates success; on failure, ctx->errstr points to the error message.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:300 - 1

/* Backward compatible behavior: Just print a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:310 - 1

/* Backward compatible behavior: Use MD5. OK since MD5 is more secure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:480 - 1

/* Uh-oh. Failed to open the new log file. Try to clear
 * the previous log file, note the lost log entries,
 * and keep on truckin'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:488 - 1

/* Try to keep this error message constant length
 * in case it occurs several times. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:541 - 1

/* rotation based on elapsed time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:547 - 1

/* rotation based on elapsed time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:696 - 1

/*
 * Immediately open the logfile as we start, if we were forced
 * to do so via '-f'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:205 - 1

/* 1 == is_error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:217 - 1

/* 0 == !is_error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:308 - 1

/*
 * Check existence/validity of the UID of the user
 * running this program. Error out if invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:317 - 1

/*
 * See if this is a 'how were you compiled' request, and
 * comply if so.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:325 - 1

/* User name comparisons are case insensitive on BS2000/OSD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:371 - 1

/*
 * Check to see if the user running this program
 * is the user allowed to do so as defined in
 * suexec.h. If not the allowed user, error out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:377 - 1

/* User name comparisons are case insensitive on BS2000/OSD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:387 - 1

/*_OSD_POSIX*/

 /*
 * Check for a leading '/' (absolute path) in the command to be executed,
 * or attempts to back up out of the current directory,
 * to protect against attacks. If any are
 * found, error out. Naughty naughty crackers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:411 - 1

/*
 * Error out if the target username is invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:427 - 1

/*
 * Error out if the target group name is invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:457 - 1

/* Error */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:486 - 1

/*
 * Log the transaction here to be sure we have an open log
 * before we setuid().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:495 - 1

/*
 * Error out if attempt is made to execute as root or as
 * a UID less than AP_UID_MIN. Tsk tsk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:504 - 1

/*
 * Error out if attempt is made to execute as root group
 * or as a GID less than AP_GID_MIN. Tsk tsk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:524 - 1

/*
 * setuid() to the target user. Error out on fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:568 - 1

/*
 * Stat the cwd and verify it is a directory, or error out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:576 - 1

/*
 * Error out if cwd is writable by others.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:584 - 1

/*
 * Error out if we cannot stat the program.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:592 - 1

/*
 * Error out if the program is writable by others.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:600 - 1

/*
 * Error out if the file is setuid or setgid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:608 - 1

/*
 * Error out if the target name/group is different from
 * the name/group of the cwd or the program.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:634 - 1

/*
 * umask() uses inverse logic; bits are CLEAR for allowed access.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:563 - 1

/* Avoid recursion of ImagePath NULL (from this Respawn) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1465 - 1

/* Perhaps we were short of permissions? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1491 - 1

/* This is ungraceful; close other Windows, with a lingering icon.
 * Since on terminal server it's not possible to post the message
 * to exit across sessions, we have to suffer this side effect
 * of a taskbar 'icon' which will evaporate the next time that
 * the user hovers over it or when the taskbar area is updated.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1508 - 1

/* Create main invisible window */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1647 - 1

/* To avoid recursion, pass ImagePath NULL (a noop on NT and later) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/cls.c:23 - 1

/*
 * Compare a string to a mask
 * Mask characters:
 * @ - uppercase letter
 * # - lowercase letter
 * & - hex digit
 * # - digit
 * * - swallow remaining characters
 * <x> - exact match for any other character
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_find.c:34 - 1

/*
 * Dummy a bunch of stuff just to get a compile
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_parser.c:34 - 1

/*
 * Dummy a bunch of stuff just to get a compile
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:474 - 1

/*
 * We must avoid leaving segments in the kernel's
 * (small) tables.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:64 - 0

/* things in the 'order' array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:73 - 0

/* for every method one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:176 - 0

/* looked nothing like an IP address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:225 - 0

/* Make sure we matched an *entire* subdomain --- if the user
 * said 'allow from good.com', we don't want people from nogood.com
 * to be able to get in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:231 - 0

/* matched whole thing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:301 - 0

/* do nothing? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:365 - 0

/* This can be access checker since we don't require r->user to be set. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:373 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:374 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:375 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:376 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_access_compat.c:378 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:37 - 0

/* provider name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:38 - 0

/* backend address, as configured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:47 - 0

/* provider name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:52 - 0

/* expr to evaluate to set r->user */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:53 - 0

/* fail request if user is rejected? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:72 - 0

/* fcgi://{hostname|IPv4|IPv6}:port[/] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:86 - 0

/* returned if no backend addr was provided
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:164 - 0

/* Connection hop-by-hop header to prevent the CGI from hanging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:245 - 0

/* short circuit out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:278 - 0

/* *NOT* AP_FCGI_KEEP_CONN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:324 - 0

/* Send envvars over in as many FastCGI records as it takes, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:325 - 0

/* starting with the first one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:343 - 0

/* skip this envvar and continue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:347 - 0

/* only an unused element at the end of the array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:359 - 0

/* we pre-compute, so we can't run out of space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:361 - 0

/* compute and encode must be in sync */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:381 - 0

/* Envvars sent, so say we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:391 - 0

/*
 * This header-state logic is from mod_proxy_fcgi.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:403 - 0

/* Try to find the end of the script headers in the response from the back
 * end fastcgi server. STATE holds the current header parsing state for this
 * request.
 *
 * Returns 0 if it can't find the end of the headers, and 1 if it found the
 * end of the headers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:462 - 0

/*
 * handle_response() is based on mod_proxy_fcgi's dispatch()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:528 - 0

/* if we need to keep reading more of a record's content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:536 - 0

/*
 * Now get the actual content of the record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:573 - 0

/* caller wants to see response body,
 * if any
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:605 - 0

/* We're still looking for the end of the
 * headers, so this part of the data will need
 * to persist. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:621 - 0

/* Text to log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:630 - 0

/* continue reading this record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:649 - 0

/*
 * Read/discard any trailing padding.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:676 - 0

/* almost from mod_fcgid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:766 - 0

/* some sort of mechanical problem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:783 - 0

/* not used to allocate
 * any values that end up
 * in r->(anything)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:805 - 0

/* extra byte for '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:911 - 0

/* apr_brigade_flatten() interface :( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:916 - 0

/* we reserved an extra byte for '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:917 - 0

/* API makes a copy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:955 - 0

/* combined authn and authz: FCGI_APACHE_ROLE not set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:983 - 0

/* get-realm-hash not supported */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1054 - 0

/* Allowed form: Require [not] registered-provider-name<EOS>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1156 - 0

/* AuthnzFcgiAuthDefineProvider {authn|authz|authnz} provider-name \
 * fcgi://backendhost:backendport/
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1319 - 0

/* to allow for custom response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1356 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1357 - 0

/* dir merger */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1358 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1359 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1360 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_fcgi.c:1361 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:44 - 0

/* Pool that this config is allocated from */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:46 - 0

/* Lock for this config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:49 - 0

/* These parameters are all derived from the AuthLDAPURL directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:50 - 0

/* String representation of the URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:52 - 0

/* Name of the LDAP server (or space separated list) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:53 - 0

/* Port of the LDAP server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:54 - 0

/* Base DN to do all searches from */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:55 - 0

/* Attribute to search for */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:56 - 0

/* Array of all the attributes to return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:57 - 0

/* Scope of the search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:59 - 0

/* how to handle alias dereferening */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:60 - 0

/* DN to bind to server (can be NULL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:61 - 0

/* Password to bind to server (can be NULL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:64 - 0

/* If true, r->user is replaced by DN during authn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:65 - 0

/* If set, r->user is replaced by this attribute during authn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:66 - 0

/* If true, will use server to do DN compare */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:68 - 0

/* Set if we have found an LDAP url */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:70 - 0

/* List of Group attributes identifying user members. Default:"e;member uniqueMember"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:71 - 0

/* If true, the group attribute is the DN, otherwise,
 it's the exact string passed by the HTTP client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:73 - 0

/* Array of strings constructed (post-config) from subgroupattrs. Last entry is NULL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:74 - 0

/* List of object classes of sub-groups. Default:"e;groupOfNames groupOfUniqueNames"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:75 - 0

/* Maximum recursive nesting depth permitted during subgroup processing. Default: 10 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:77 - 0

/* True if SSL connections are requested */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:78 - 0

/* Prefix for environment variables added during authz */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:79 - 0

/* true if we should try to bind (to lookup DN) directly with the basic auth username */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:80 - 0

/* basic auth -> bind'able username regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:81 - 0

/* basic auth -> bind'able username substitution */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:82 - 0

/* true if authz searches should be done with the users credentials (when we did authn) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:83 - 0

/* true if authz compares should be done with the users credentials (when we did authn) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:87 - 0

/* The saved dn from a successful search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:88 - 0

/* The username provided by the client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:89 - 0

/* The additional values pulled during the DN search*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:91 - 0

/* a short-lived pool to trigger cleanups on any acquired LDCs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:99 - 0

/* nested groups */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:102 - 0

/* maximum group elements supported */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:117 - 0

/* UTF-8 identifier derived from the charset.conv file */

/* Derive a code page ID give a language name or ID */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:124 - 0

/* our default codepage */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:179 - 0

/* Convert the password to UTF-8. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:232 - 0

/* Convert the user name to UTF-8. This is only valid for LDAP v3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:238 - 0

/*
 * Create the first part of the filter, which consists of the
 * config-supplied portions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:260 - 0

/* Don't write part of escape sequence if we can't write all of it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:298 - 0

/*
 * Append the closing parens of the filter, unless doing so would
 * overrun the buffer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:332 - 0

/*
 sec->authz_enabled = 1;
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:348 - 0

/*Initialize to unset*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:391 - 0

/* handle remote_user_attribute, if set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:534 - 0

/* There is a good AuthLDAPURL, right? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:557 - 0

/* Get the password that the client sent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:572 - 0

/* build the username filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:584 - 0

/* convert password to utf-8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:587 - 0

/* do the user search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:593 - 0

/* handle bind failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:635 - 0

/* mark the user and DN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:643 - 0

/* add environment variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:646 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:673 - 0

/* Build the username filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:681 - 0

/* Search for the user DN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:772 - 0

/*
 * First do a whole-line compare, in case it's something like
 * require user Babs Jensen
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:871 - 0

/*
 * If there are no elements in the group attribute array, the default should be
 * member and uniquemember; populate the array now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:889 - 0

/*
 * If there are no elements in the sub group classes array, the default
 * should be groupOfNames and groupOfUniqueNames; populate the array now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:983 - 0

/* nested groups need searches and compares, so grab a new handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1075 - 0

/* comparedn is a search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1081 - 0

/* comparedn is a search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1314 - 0

/* Build the username filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1322 - 0

/* Search for the user DN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1326 - 0

/* Make sure that the filtered search returned the correct user dn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1331 - 0

/* ldap-filter is the only authz that requires a search and a compare */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1416 - 0

/* Search for the user DN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1420 - 0

/* Make sure that the filtered search returned a single dn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1483 - 0

/* Set all the values, or at least some sane defaults */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1513 - 0

/*
 * Get rid of the surrounding parens; later on when generating the
 * filter, they'll be put back.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1544 - 0

/* "e;ldaps"e; indicates secure ldap connections desired
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1722 - 0

//host[:port]/basedn[?attrib[?scope[?filter]]].\n"e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1737 - 0

//ldap.airius.com/ou=People, o=Airius?uid?sub?(posixid=*)</b>. "e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1977 - 0

/* Register authn provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:1982 - 0

/* Register authz providers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:2017 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:2018 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:2019 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:2020 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:2021 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authnz_ldap.c:2022 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:77 - 0

/* just to illustrate the defaults really. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:98 - 0

/* squeeze in a record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:169 - 0

/* Now if the supplied user-ID was ok, grant access if:
 * (a) no passwd was sent and no password and no verification
 * were configured.
 * (b) password was sent and no verification was configured
 * (c) verification was configured and the password (sent or not)
 * looks like an email address
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:209 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:211 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:212 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:213 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_anon.c:214 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:46 - 0

/* TODO List

- Track down all of the references to r->ap_auth_type
 and change them to ap_auth_type()
- Remove ap_auth_type and ap_auth_name from the
 request_rec

*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:111 - 0

/* Look up the provider alias in the alias list */
 /* Get the dir_config and call ap_Merge_per_dir_configs() */
 /* Call the real provider->check_password() function */
 /* return the result of the above function call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:127 - 0

/* If we found the alias provider in the list, then merge the directory
 configurations and call the real provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:143 - 0

/* Look up the provider alias in the alias list */
 /* Get the dir_config and call ap_Merge_per_dir_configs() */
 /* Call the real provider->get_realm_hash() function */
 /* return the result of the above function call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:159 - 0

/* If we found the alias provider in the list, then merge the directory
 configurations and call the real provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:183 - 0

/* Only per-server directive we have is GLOBAL_ONLY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:232 - 0

/* Pull the real provider name and the alias name from the block header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:267 - 0

/* by the time they use it, the provider should be loaded and
 registered with us. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:274 - 0

/* Save off the new directory config along with the original provider name
 and function pointer data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:282 - 0

/* Register the fake provider so that we get called first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:420 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:421 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:422 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:423 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_core.c:425 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:85 - 0

/* save the label here for our own use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:152 - 0

/* add the rest of the columns to the environment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbd.c:248 - 0

/* add the rest of the columns to the environment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:37 - 0

/* for ap_hook_(check_user_id | auth_checker)*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:201 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:202 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:203 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:204 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:205 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_dbm.c:206 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:43 - 0

/* just to illustrate the default really */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:84 - 0

/* Skip # or blank lines. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:139 - 0

/* Skip # or blank lines. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:149 - 0

/* Remember that this is a md5 hash of user:realm:password. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:187 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:188 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:189 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:190 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:191 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_file.c:192 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:76 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:100 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:103 - 0

/* We have socache_provider, but do not have socache_instance. This should
 * happen only when using "e;default"e; socache_provider, so create default
 * socache_instance in this case. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:122 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:131 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:207 - 0

/* not sure we want this. Might be safer to document use-all-or-none */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:213 - 0

/* preserve context and timeout if not defaults */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:254 - 0

/* per-dir stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:268 - 0

/* handle "e;special"e; context values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:270 - 0

/* FIXME: are we at risk of this blowing up? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:284 - 0

/* basic auth */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:287 - 0

/* digest auth */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:318 - 0

/* OK, we're on. Grab mutex to do our business */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:321 - 0

/* don't wait around; just abandon it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:333 - 0

/* We have the mutex, so go ahead */
 /* first build our key and determine expiry time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:338 - 0

/* store it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:353 - 0

/* We're done with the mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:389 - 0

/* not found - just return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:395 - 0

/* OK, we got a value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:434 - 0

/* not found - just return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authn_socache.c:440 - 0

/* OK, we got a value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:76 - 0

/** true if this is not a real container but produced by AuthMerging;
 * only used for logging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:123 - 0

/* Only authz_forbidden_on_fail has been set in new. Don't treat
 * it as a new auth config w.r.t. AuthMerging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:171 - 0

/* Only per-server directive we have is GLOBAL_ONLY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:188 - 0

/* This is a fake authz provider that really merges various authz alias
 * configurations and then invokes them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:216 - 0

/* If we found the alias provider in the list, then merge the directory
 configurations and call the real provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:278 - 0

/* Pull the real provider name and the alias name from the block header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:304 - 0

/* Save off the new directory config along with the original
 * provider name and function pointer data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:315 - 0

/* by the time the config file is used, the provider should be loaded
 * and registered with us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:338 - 0

/* Register the fake provider so that we get called first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:403 - 0

/* by the time the config file is used, the provider should be loaded
 * and registered with us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:539 - 0

/* be associative */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:758 - 0

/*
 * Handling of AUTHZ_DENIED/AUTHZ_DENIED_NO_USER: Return
 * AUTHZ_DENIED_NO_USER if providing a user may change the
 * result, AUTHZ_DENIED otherwise.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:775 - 0

/* AUTHZ_LOGIC_OR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:929 - 0

/*
 * env authz provider
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:939 - 0

/* The 'env' provider will allow the configuration to specify a list of
 env variables to check rather than a single variable. This is different
 from the previous host based syntax. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:959 - 0

/*
 * all authz provider
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1002 - 0

/*
 * method authz provider
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1044 - 0

/*
 * expr authz provider
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1072 - 0

/* if the expression happens to be surrounded by quotes, skip them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1157 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1158 - 0

/* dir merger */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1159 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1160 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_core.c:1162 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbd.c:34 - 0

/* Export a hook for modules that manage clientside sessions
 * (e.g. mod_auth_cookie)
 * to deal with those when we successfully login/logout at the server
 *
 * XXX: WHY would this be specific to dbd_authz? Why wouldn't we track
 * this across all authz user providers in a lower level mod, such as
 * mod_auth_basic/digest?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbd.c:96 - 0

/* save the label here for our own use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbd.c:170 - 0

/* OK, this is non-critical; we can just not-redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbd.c:209 - 0

/* SELECT group FROM authz WHERE user = %s */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:29 - 0

/* for ap_hook_(check_user_id | auth_checker)*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:110 - 0

/* Try key2 only if key1 failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:161 - 0

/* fetch group data from dbm file only once. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:239 - 0

/* fetch group data from dbm file. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:330 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:331 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:332 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:333 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:334 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_dbm.c:335 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:45 - 0

/* apr_isspace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:154 - 0

/* If there is no group file - then we are not
 * configured. So decline.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:222 - 0

/* If there is no group file - then we are not
 * configured. So decline.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:325 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:326 - 0

/* dir merger -- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:327 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:328 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:329 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_groupfile.c:330 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:48 - 0

/*
 * To save memory if the same subnets are used in hundres of vhosts, we store
 * each subnet only once and use this temporary hash to find it again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:69 - 0

/* Make sure we matched an *entire* subdomain --- if the user
 * said 'allow from good.com', we don't want people from nogood.com
 * to be able to get in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:75 - 0

/* matched whole thing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:96 - 0

/* The 'ip' provider will allow the configuration to specify a list of
 ip addresses to check rather than a single address. This is different
 from the previous host based syntax. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:130 - 0

/* looked nothing like an IP address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:150 - 0

/* apr_ipsubnet_test should accept const but doesn't */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:195 - 0

/* The 'host' provider will allow the configuration to specify a list of
 host names to check rather than a single name. This is different
 from the previous host based syntax. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:200 - 0

/* '#' is not valid hostname character and admin could specify
 * 'Require host localhost# Add example.com later'. We should not
 * grant access to 'example.com' in that case. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:281 - 0

/* we only use this hash in the parse config phase, ptemp is enough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:298 - 0

/* make sure we don't use this during .htaccess parsing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:323 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:324 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:325 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:326 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_host.c:328 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:53 - 0

/* APR_HAS_USER */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:107 - 0

/* APR_HAS_USER */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:119 - 0

/* APR_HAS_USER */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:161 - 0

/* APR_HAS_USER */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:183 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:184 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:185 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:186 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:187 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_owner.c:188 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:31 - 0

/* just here to stop compiler warnings for now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:140 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:141 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:142 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:143 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:144 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_authz_user.c:145 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:18 - 0

/* for apr_isspace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:19 - 0

/* for apr_base64_decode et al */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:20 - 0

/* for strcasecmp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:38 - 0

/* unused variable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:52 - 0

/* Any failures are fatal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:102 - 0

/* by the time they use it, the provider should be loaded and
 registered with us. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:116 - 0

/* Add it to the list now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:272 - 0

/* Skip leading spaces. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:282 - 0

/* set the user, even though the user is unauthenticated at this point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:302 - 0

/* Are we configured to be Basic auth? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:335 - 0

/* For now, if a provider isn't set, we'll be nice and use the file
 * provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:366 - 0

/* We expect the password to be hash of user:realm:password */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:380 - 0

/* Something occured. Stop checking. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:385 - 0

/* If we're not really configured for providers, stop now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:426 - 0

/* If we're returning 401, tell them to try again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:505 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:506 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:507 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:508 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:509 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_basic.c:510 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:83 - 0

/* struct to hold the configuration info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:113 - 0

/* client list definitions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:116 - 0

/* the key for this entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:117 - 0

/* next entry in the bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:118 - 0

/* for nonce-count checking */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:119 - 0

/* for one-time nonce's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:150 - 0

/* the following fields are not (directly) from the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:160 - 0

/* (mostly) nonce stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:174 - 0

/* one-time-nonce counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:181 - 0

/* ~ 12 entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:191 - 0

/*
 * initialization code
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:241 - 0

/* set up client list */

 /* Create the shared memory segment */

 /*
 * Create a unique filename using our pid. This information is
 * stashed in the global variable so the children inherit it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:252 - 0

/* Use anonymous shm by default, fall back on name-based. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:255 - 0

/* For a name-based segment, remove it first in case of a
 * previous unclean shutdown. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:259 - 0

/* Now create that segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:319 - 0

/* setup one-time-nonce counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:327 - 0

/* no lock here */


 /* success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:334 - 0

/* APR_HAS_SHARED_MEMORY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:371 - 0

/* initialize_module() will be called twice, and if it's a DSO
 * then all static data from the first call will be lost. Only
 * set up our static data on the second call. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:391 - 0

/* Call cleanup_tables on exit or restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:393 - 0

/* APR_HAS_SHARED_MEMORY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:405 - 0

/* Get access to rmm in child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:431 - 0

/*
 * configuration code
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:460 - 0

/* check that we got random numbers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:475 - 0

/* we precompute the part of the nonce hash that is constant (well,
 * the host:port would be too, but that varies for .htaccess files
 * and directives outside a virtual host section)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:502 - 0

/* by the time they use it, the provider should be loaded and
 registered with us. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:516 - 0

/* Add it to the list now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:757 - 0

/* move entry to front of list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:778 - 0

/* A simple garbage-collecter to remove unused clients. It removes the
 * last entry in each bucket and updates the counters. Returns the
 * number of removed entries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:792 - 0

/* find last entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:797 - 0

/* cut list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:802 - 0

/* remove entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:808 - 0

/* update counters and log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:836 - 0

/* try to allocate a new entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:852 - 0

/* give up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:856 - 0

/* now add the entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:908 - 0

/* find key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:923 - 0

/* find value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:932 - 0

/* quoted string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:936 - 0

/* escaped char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:944 - 0

/* token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1050 - 0

/*
 apr_sha1_update_binary(&ctx, (const unsigned char *) server->server_hostname,
 strlen(server->server_hostname));
 apr_sha1_update_binary(&ctx, (const unsigned char *) &server->port,
 sizeof(server->port));
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1067 - 0

/* The nonce has the format b64(time)+hash .
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1080 - 0

/* this counter is not synch'd, because it doesn't really matter
 * if it counts exactly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1086 - 0

/* XXX: WHAT IS THIS CONSTANT? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1147 - 0

/* Setup qop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1164 - 0

/* new client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1174 - 0

/* client info was gc'd */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1182 - 0

/* ??? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1187 - 0

/* we're generating a new nonce, so reset the nonce-count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1198 - 0

/* Setup nonce */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1243 - 0

/* get the client response and mark */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1257 - 0

/* get our conf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1283 - 0

/* For now, if a provider isn't set, we'll be nice and use the file
 * provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1305 - 0

/* We expect the password to be md5 hash of user:realm:password */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1311 - 0

/* Something occured. Stop checking. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1316 - 0

/* If we're not really configured for providers, stop now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1339 - 0

/* Shouldn't happen, but just in case... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1351 - 0

/* qop is none, client must not send a nonce count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1358 - 0

/* qop is none, cannot check nonce count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1448 - 0

/* The actual MD5 code... whee */

/* RFC-2069 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1463 - 0

/* RFC-2617 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1550 - 0

/* do we require Digest auth for this URI? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1563 - 0

/* get the client response and mark */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1577 - 0

/* get our conf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1583 - 0

/* check for existence and syntax of Auth header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1597 - 0

/* else (resp->auth_hdr_sts == NO_HEADER) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1605 - 0

/* check the auth attributes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1641 - 0

/* check hostname matches, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1644 - 0

/* check port matches, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1646 - 0

/* check that server-port is default port if no port present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1649 - 0

/* check that path matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1651 - 0

/* either exact match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1654 - 0

/* or '*' matches empty path in scheme://host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1657 - 0

/* check that query matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1712 - 0

/* we have a password, so continue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1734 - 0

/* old (rfc-2069) style digest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1767 - 0

/* we failed to allocate a client struct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1784 - 0

/* Note: this check is done last so that a "e;stale=true"e; can be
 generated if the nonce is old */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1811 - 0

/* 2069-style entity-digest is not supported (it's too hard, and
 * there are no clients which support 2069 but not 2617). */

 /* setup nextnonce
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1817 - 0

/* send nextnonce if current nonce will expire in less than 30 secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1841 - 0

/* use only RFC-2069 format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1847 - 0

/* calculate rspauth attribute
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1912 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1913 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1914 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1915 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1916 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_digest.c:1917 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:18 - 0

/* for apr_isspace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:19 - 0

/* for apr_base64_decode et al */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:20 - 0

/* for strcasecmp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:89 - 0

/* Any failures are fatal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:92 - 0

/* form size defaults to 8k */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:95 - 0

/* default form field names */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:160 - 0

/*
 * by the time they use it, the provider should be loaded and
 * registered with us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:176 - 0

/* Add it to the list now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:192 - 0

/**
 * Sanity check a given string that it exists, is not empty,
 * and does not contain special characters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:430 - 0

/**
 * Set the auth username and password into the main request
 * notes table.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:441 - 0

/* find the main request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:445 - 0

/* find the first redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:468 - 0

/**
 * Get the auth username and password from the main request
 * notes table, if present.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:479 - 0

/* find the main request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:483 - 0

/* find the first redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:503 - 0

/* set the user, even though the user is unauthenticated at this point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:515 - 0

/**
 * Set the auth username and password into the session.
 *
 * If either the username, or the password are NULL, the username
 * and/or password will be removed from the session.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:542 - 0

/**
 * Get the auth username and password from the main request
 * notes table, if present.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:564 - 0

/* set the user, even though the user is unauthenticated at this point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:605 - 0

/* sanity check - are we a POST request? */

 /* find the username and password in the form */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:678 - 0

/* set the user, even though the user is unauthenticated at this point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:683 - 0

/* a missing username or missing password means auth denied */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:770 - 0

/*
 * For now, if a provider isn't set, we'll be nice and use the file
 * provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:801 - 0

/* Something occured. Stop checking. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:806 - 0

/* If we're not really configured for providers, stop now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:845 - 0

/* If we're returning 403, tell them to try again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:850 - 0

/* TODO: Flag the user somehow as to the reason for the failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:893 - 0

/* Are we configured to be Form auth? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:921 - 0

/* try get the username and password from the notes, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:925 - 0

/* otherwise try get the username and password from a session, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:933 - 0

/* first test whether the site passphrase matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:942 - 0

/* otherwise test for a normal password match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:983 - 0

/* create a subrequest of our current uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:992 - 0

/* parse the form by reading the subrequest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:998 - 0

/* make sure any user detected within the subrequest is saved back to
 * the main request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1029 - 0

/* check the authn in the main request, based on the username found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1057 - 0

/*
 * did the admin prefer to be redirected to the login page on failure
 * instead?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1075 - 0

/* did the user ask to be redirected on login success? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1163 - 0

/* did we prefer to be redirected to the login page on failure instead? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1182 - 0

/**
 * Handle a logout attempt.
 *
 * If an attempt is made to access this URL, any username and password
 * embedded in the session is deleted.
 *
 * This has the effect of logging the person out.
 *
 * If a logout URI has been specified, this function will create an
 * internal redirect to this page.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1214 - 0

/* if set, internal redirect to the logout page */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1251 - 0

/* get the method and mimetype from the notes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1327 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1328 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1329 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1330 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1331 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/aaa/mod_auth_form.c:1332 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:34 - 0

/* d == OR_ALL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:52 - 0

/* yes, min */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:118 - 0

/* Don't parse GET (this protects against subrequest body parsing). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:215 - 0

/* Don't parse GET (this protects against subrequest body parsing). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:239 - 0

/* else this is a protocol filter which may still be active.
 * if it is, we must deregister it now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:292 - 0

/* Adding "e;f"e; to the protocol filter chain ensures the
 * spooled data is preserved across internal redirects.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:341 - 0

/* only the modes above are supported */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:344 - 0

/* not worth supporting at this level */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:345 - 0

/* chunked trailers are b0rked in ap_http_filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:437 - 0

/* APR_HOOK_FIRST because we want other modules to be able to
 * register parsers in their post_config hook via APR_HOOK_MIDDLE.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:453 - 0

/** @} */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/filter.c:489 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/handle.c:155 - 0

/*loop*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/handle.c:199 - 0

/* Not seen yet, so we need to scan for
 param while prefetching the body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/apreq/handle.c:237 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:40 - 0

/* CGI map from file types to CGI modules */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:41 - 0

/* CGI module mode (spawn in same address space or not) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:42 - 0

/* Environment variables to be added to the CGI environment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:131 - 0

/* Figure out what the extension is so that we can match it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:134 - 0

/* If there isn't an extension then give it an empty string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:144 - 0

/* check if we have a registered command for the extension*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:153 - 0

/* If we have a registered command then add the file that was passed in as a
 parameter to the registered command. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:157 - 0

/* Run in its own address space if specified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:198 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:199 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:200 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:201 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:202 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_netware.c:203 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:110 - 0

/* local IP address and port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:112 - 0

/* Only used during restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:164 - 0

/*
 * Parses a host of the form <address>[:port]
 * :port is permitted if 'port' is not NULL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:262 - 0

/* note that because we're about to slack we don't use psocket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:310 - 0

/* SO_SSL_AUTH_CLIENT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:341 - 0

/* zero out buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:345 - 0

/* turn on ssl for the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:360 - 0

/* setup the socket for SSL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:366 - 0

/* the wallet provider defined in wdefs.h */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:367 - 0

/* array of certs in UNICODE format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:368 - 0

/* number of certs in TRList */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:371 - 0

/* setup the socket for SSL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:373 - 0

/* no client certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:376 - 0

/* the wallet provider defined in wdefs.h */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:379 - 0

/* make the IOCTL call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:384 - 0

/* make sure that it was successful */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:428 - 0

/* setup the tlsserveropts struct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:436 - 0

/* setup the nwtlsopts structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:515 - 0

/* If the specified addr:port was created previously, put the listen
 socket record back on the ap_listeners list so that the socket
 will be reused rather than recreated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:525 - 0

/* If both ports are equivalent, then if their names are equivalent,
 * then we will re-use the existing record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:545 - 0

/* If we found a pre-existing listen socket record, then there
 is no need to create a new secure listen socket record. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:618 - 0

/* Remove our secure listener from the listener list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:620 - 0

/* slr is at the head of the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:651 - 0

/* Pull all of the listeners that were created by mod_nw_ssl out of the
 ap_listeners list so that the normal listen socket processing does
 automatically close them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:667 - 0

/* If both ports are equivalent, then if their names are equivalent,
 * then we will re-use the existing record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:673 - 0

/* Move the listen socket from ap_listeners to nw_old_listeners */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:679 - 0

/* Move the secure socket record to ap_old_seclisterners */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:696 - 0

/* Restore the secure socket records list so that the post config can
 process all of the sockets normally */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:743 - 0

/* Walk the old listeners list and compare it to the secure
 listeners list and remove any secure listener records that
 are not being reused */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:756 - 0

/* If both ports are equivalent, then if their names are equivalent,
 * then we will re-use the existing record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:820 - 0

/* Check the listener list for a matching upgradeable listener */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:955 - 0

/* This function must remain safe to use for a non-SSL connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:966 - 0

/*
 * When no pool is given try to find one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:978 - 0

/*
 * Request dependent stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1006 - 0

/* all other headers from which we are still not know about */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1033 - 0

/* shortcut common case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1064 - 0

/*
 * Connection stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1068 - 0

/* XXX-Can't get specific SSL info from NetWare */
 /* SSLConnRec *sslconn = myConnConfig(c);
 if (strlen(var) > 4 && strcEQn(var, "e;SSL_"e;, 4)
 && sslconn && sslconn->ssl)
 result = ssl_var_lookup_ssl(p, c, var+4);*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1078 - 0

/*
 * Totally independent stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1084 - 0

/* XXX-Can't get specific SSL info from NetWare */
 /*result = ssl_var_lookup_ssl_version(p, var+12);*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1128 - 0

/* all other env-variables from the parent Apache process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1183 - 0

/* "e;Upgrade: TLS/1.0, ..."e; header not found, don't do Upgrade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1192 - 0

/* Send the interim 101 response. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1229 - 0

/* Now that we have initialized the ssl connection which added the ssl_io_filter,
 pass the brigade off to the connection based output filters so that the
 request can complete encrypted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1279 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1280 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1281 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1282 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/netware/mod_nw_ssl.c:1283 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:29 - 0

/* TODO - get rid of unixd dependency */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:43 - 0

/* #define BIG_SECURITY_HOLE 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:83 - 0

/* Start at basic privileges all round. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:87 - 0

/* By default, run in secure vhost mode.
 * That means dropping basic privileges we don't usually need.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:110 - 0

/* top-level default_priv wants the top-level cfg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:150 - 0

/* if either user or group are not the default, restore them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:166 - 0

/* restore default privileges */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:175 - 0

/* secure mode: fork a process to handle the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:188 - 0

/* first call: this is the vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:191 - 0

/* set breadcrumb */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:194 - 0

/* If we have per-dir config, defer doing anything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:196 - 0

/* Defer dropping privileges 'til we have a directory
 * context that'll tell us whether to fork.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:203 - 0

/* second call is for per-directory. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:229 - 0

/* The child has taken responsibility for reading all input
 * and sending all output. So we need to bow right out,
 * and even abandon "e;normal"e; housekeeping.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:236 - 0

/* Testing with ab and 100k requests reveals no nasties
 * so I infer we're not leaking anything like memory
 * or file descriptors. That's nice!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:243 - 0

/* now we'll drop privileges in the child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:251 - 0

/* OK, now drop privileges. */

 /* cleanup should happen even if something fails part-way through here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:256 - 0

/* set user and group if configured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:262 - 0

/* if we should be able to set these but can't, it could be
 * a serious security issue. Bail out rather than risk it!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:276 - 0

/* set vhost's privileges */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:283 - 0

/* ... including those of any subprocesses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:295 - 0

/* If we're in a child process, drop down PPERM too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:321 - 0

/* compute ppriv from the union of all the vhosts plus setid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:335 - 0

/* Our config stuff has set the privileges we need, so now
 * we just set them to those of the parent server_rec
 *
 * This has to happen after mod_unixd, 'cos mod_unixd needs
 * privileges we drop here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:343 - 0

/* defaults - the default vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:361 - 0

/* if we have dtrace enabled, merge it into everything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:377 - 0

/* set up priv_setid for per-request use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:392 - 0

/* refuse to work if the MPM is threaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:446 - 0

/* add basic privileges, excluding those covered by cgimode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:458 - 0

/* default - nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:461 - 0

/* drop fork+exec privs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:466 - 0

/* deny privileges to CGI procs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:503 - 0

/* In a directory context, set the per_dir_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_privileges.c:511 - 0

/* In a global or vhost context, set the server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_systemd.c:68 - 0

/* up_time in seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_systemd.c:86 - 0

/* Shutdown httpd when nothing is sent for shutdown_timer seconds. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_systemd.c:88 - 0

/* mpm_common.c: INTERVAL_OF_WRITABLE_PROBES is 10 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_systemd.c:112 - 0

/* We know the PID in this hook ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_systemd.c:114 - 0

/* Used to update httpd's status line using sd_notifyf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:36 - 0

/* XXX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:80 - 0

/* Set group privileges.
 *
 * Note that we use the username as set in the config files, rather than
 * the lookup of to uid --- the same uid may have multiple passwd entries,
 * with different sets of groups for each.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:92 - 0

/* Get username if passed as a uid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:124 - 0

/* Reset `groups' attributes. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:132 - 0

/* !defined(OS2) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:180 - 0

/* Only try to switch if we're running as root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:193 - 0

/* this applies to Linux 2.4+ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/unix/mod_unixd.c:307 - 0

/* none */

 /* Check for suexec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:56 - 0

/* Retry frequency for a failed-to-load isapi .dll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:59 - 0

/**********************************************************
 *
 * ISAPI Module Configuration
 *
 **********************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:69 - 0

/* Our isapi per-dir config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:129 - 0

/* ### Just an observation ... it would be terribly cool to be
 * able to use this per-dir, relative to the directory block being
 * defined. The hash result remains global, but shorthand of
 * <Directory "e;c:/webapps/isapi"e;>
 * ISAPICacheFile myapp.dll anotherapp.dll thirdapp.dll
 * </Directory>
 * would be very convienent.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:205 - 0

/* Our loaded isapi module description structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:248 - 0

/* We must force the module to unload, we are about
 * to lose the isapi structure's allocation entirely.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:268 - 0

/* Revision 5.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:269 - 0

/* microsecs, not used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:309 - 0

/* Run GetExtensionVersion() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:386 - 0

/* If last_load_time is unchanged, we still own this
 * retry, otherwise presume another thread provided
 * our retry (for good or ill). Relock the global
 * hash for updating last_load_ vars, so their update
 * is always atomic to the global lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:441 - 0

/* Now attempt to load the isapi on our own time,
 * allow other isapi processing to resume.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:469 - 0

/**********************************************************
 *
 * ISAPI Module request callbacks section
 *
 **********************************************************/

/* Our "e;Connection ID"e; structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:570 - 0

/* Not a special case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:585 - 0

/* Not Found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:643 - 0

/* Don't eat the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:681 - 0

/* Now decide if we follow the xxx message
 * or the http/x.x xxx message format
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:725 - 0

/* Set our status. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:744 - 0

/* Now we fall back on dwHttpStatusCode if it appears
 * ap_scan_script_header fell back on the default code.
 * Any other results set dwHttpStatusCode to the decoded
 * status value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:783 - 0

/* If only Status was passed, we consumed nothing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:790 - 0

/* If all went well, tell the caller we consumed the headers complete
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:795 - 0

/* Any data left must be sent directly by the caller, all we
 * give back is the size of the headers we consumed (which only
 * happens if the parser got to the head arg, which varies based
 * on whether we passed stat+head to scan, or only head.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:821 - 0

/* It appears that the foxisapi module and other clients
 * presume that WriteClient("e;headers\n\nbody"e;) will work.
 * Parse them out, or die trying.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:877 - 0

/* Set the status to be returned when the HttpExtensionProc()
 * is done.
 * WARNING: Microsoft now advertises HSE_REQ_SEND_URL_REDIRECT_RESP
 * and HSE_REQ_SEND_URL as equivalent per the Jan 2000 SDK.
 * They most definitely are not, even in their own samples.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:890 - 0

/* Soak up remaining input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:896 - 0

/* Reset the method to GET */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:900 - 0

/* Don't let anyone think there's still data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:903 - 0

/* AV fault per PR3598 - redirected path is lost! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:910 - 0

/* Parse them out, or die trying */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:950 - 0

/* Signal to resume the thread completing this request,
 * leave it to the pool cleanup to dispose of our mutex.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:968 - 0

/* Map a URL to a filename */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:992 - 0

/* We need to make this a real Windows path name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1010 - 0

/* Log buf_data, of buf_size bytes, in the URI Query (cs-uri-query) field
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1026 - 0

/* Emulates a completion port... Record callback address and
 * user defined arg, we will call this after any async request
 * (e.g. transmitfile) as if the request executed async.
 * Per MS docs... HSE_REQ_IO_COMPLETION replaces any prior call
 * to HSE_REQ_IO_COMPLETION, and buf_data may be set to NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1046 - 0

/* we do nothing with (tf->dwFlags & HSE_DISCONNECT_AFTER_SEND)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1065 - 0

/* Presume the handle was opened with the CORRECT semantics
 * for TransmitFile
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1085 - 0

/* apr_dupfile_oshandle (&fd, tf->hFile, r->pool); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1088 - 0

/* According to MS: if calling HSE_REQ_TRANSMIT_FILE with the
 * HSE_IO_SEND_HEADERS flag, then you can't otherwise call any
 * HSE_SEND_RESPONSE_HEADERS* fn, but if you don't use the flag,
 * you must have done so. They document that the pHead headers
 * option is valid only for HSE_IO_SEND_HEADERS - we are a bit
 * more flexible and assume with the flag, pHead are the
 * response headers, and without, pHead simply contains text
 * (handled after this case).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1143 - 0

/* Use tf->pfnHseIO + tf->pContext, or if NULL, then use cid->fnIOComplete
 * pass pContect to the HseIO callback.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1228 - 0

/* Added in ISAPI 4.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1239 - 0

/* Map a URL to a filename */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1259 - 0

/* roll forward over path_info's first slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1266 - 0

/* Add a trailing slash for directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1271 - 0

/* If the matched isn't a file, roll match back to the prior slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1281 - 0

/* Paths returned with back slashes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1315 - 0

/* Added in ISAPI 4.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1324 - 0

/* Added in ISAPI 4.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1364 - 0

/* Added after ISAPI 4.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1401 - 0

/**********************************************************
 *
 * ISAPI Module request invocation section
 *
 **********************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1444 - 0

/* default to accept */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1452 - 0

/* Set up variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1462 - 0

/* Set up connection structure and ecb,
 * NULL or zero out most fields.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1467 - 0

/* Fixup defaults for dconf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1489 - 0

/* TODO: are copies really needed here?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1497 - 0

/* Set up the callbacks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1503 - 0

/* Set up client input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1539 - 0

/* Although it's not to spec, IIS seems to null-terminate
 * its lpdData string. So we will too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1581 - 0

/* All right... try and run the sucker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1584 - 0

/* Check for a log message - and log it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1591 - 0

/* Strange, but MS isapi accepts this as success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1608 - 0

/* The completion port was locked prior to invoking
 * HttpExtensionProc(). Once we can regain the lock,
 * when ServerSupportFunction(HSE_REQ_DONE_WITH_SESSION)
 * is called by the extension to release the lock,
 * we may finally destroy the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1627 - 0

/* end response if we have yet to do so.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1644 - 0

/* Flush the response now, including headers-only responses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1663 - 0

/* NOT r->status, even if it has changed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1673 - 0

/* For all missing-response situations simply return the status,
 * and let the core respond to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1679 - 0

/**********************************************************
 *
 * ISAPI Module Setup Hooks
 *
 **********************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1721 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1722 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1723 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1724 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1725 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_isapi.c:1726 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:35 - 0

/*
 * CGI Script stuff for Win32...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:50 - 0

/* Where to find interpreter to run scripts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:138 - 0

/* Somewhat more exciting ... figure out where the registry has stashed the
 * ExecCGI or Open command - it may be nested one level deep (or more???)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:170 - 0

/* Retrieve the name of the script filetype extension */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:174 - 0

/* Open the key associated with the script filetype extension */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:179 - 0

/* Open the key for the script command path by:
 *
 * 1) the 'named' filetype key for ExecCGI/Command
 * 2) the extension's type key for ExecCGI/Command
 *
 * and if the strict arg is false, then continue trying:
 *
 * 3) the 'named' filetype key for Open/Command
 * 4) the extension's type key for Open/Command
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:249 - 0

/* Skip on through Deep Space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:253 - 0

/* One Arg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:271 - 0

/* Todo: Make short name!!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:312 - 0

/* Get 'em backslashes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:317 - 0

/* last unmatched '\' + '"e;' sequence is a '"e;' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:324 - 0

/* '"e;"e;' sequence within quotes is a '"e;' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:328 - 0

/* Flip quote state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:333 - 0

/* All other '"e;'s are Munched */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:336 - 0

/* Anything else is, well, something else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:416 - 0

/* Check the registry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:471 - 0

/* Script or executable, that is the question...
 * we check here also for '! so that .vbs scripts can work as CGI.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:494 - 0

/* Not a script, is it an executable? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:498 - 0

/* Ought to invoke this 16 bit exe by a stub, (cmd /c?) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:555 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:556 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:557 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:558 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:559 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:560 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/arch/win32/mod_win32.c:563 - 0

/* defined WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:80 - 0

/* This should never happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:221 - 0

/* This should never happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:292 - 0

/* both headers NULL, so a match - do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:295 - 0

/* both headers exist and are equal - do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:298 - 0

/* headers do not match, so Vary failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:307 - 0

/* no vary match, try next provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:349 - 0

/* set aside the stale entry for accessing later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:354 - 0

/* if no existing conditionals, use conditionals of our own */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:385 - 0

/*
 * Do not do Range requests with our own conditionals: If
 * we get 304 the Range does not matter and otherwise the
 * entity changed and we want to have the complete entity
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:396 - 0

/* ready to revalidate, pretend we were never here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:400 - 0

/* Okay, this response looks okay. Merge in our stuff and go. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:446 - 0

/*
 * Get the module configuration. We need this for the CacheIgnoreQueryString
 * option below.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:476 - 0

/* Use _default_ as the hostname if none present, as in mod_vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:484 - 0

/* Copy the parsed uri hostname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:491 - 0

/* We are a proxied request, with no hostname. Unlikely
 * to get very far - but just in case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:505 - 0

/* Copy the scheme and lower-case it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:556 - 0

/* Use the server port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:577 - 0

/*
 * Check that we have a parameter separator in the last segment
 * of the path and that the parameter matches our identifier
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:588 - 0

/*
 * Check if the identifier is in the querystring and cut it out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:592 - 0

/*
 * First check if the identifier is at the beginning of the
 * querystring and followed by a '='
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:609 - 0

/* If we found something we are sitting on the '&' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:630 - 0

/*
 * If querystring is not "e;"e;, then we have the case
 * that the identifier parameter we removed was the
 * last one in the original querystring. Hence we have
 * a trailing '&' which needs to be removed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:647 - 0

//"e;, hostname, port_str, path, "e;?"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:651 - 0

//"e;, hostname, port_str, path, "e;?"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:696 - 0

/* This should never happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:745 - 0

/* invalidate the request uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:754 - 0

/* invalidate the Location */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_storage.c:765 - 0

/* invalidate the Content-Location */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:24 - 0

/* -------------------------------------------------------------- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:30 - 0

/* Determine if "e;url"e; matches the hostname, scheme and port and path
 * in "e;filter"e;. All but the path comparisons are case-insensitive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:37 - 0

/* Scheme, hostname port and local part. The filter URI and the
 * URI we test may have the following shapes:
 * /<path>
 * <scheme>[:://<hostname>[:<port>][/<path>]]
 * That is, if there is no scheme then there must be only the path,
 * and we check only the path; if there is a scheme, we check the
 * scheme for equality, and then if present we match the hostname,
 * and then if present match the port, and finally the path if any.
 *
 * Note that this means that "e;/<path>"e; only matches local paths,
 * and to match proxied paths one *must* specify the scheme.
 */

 /* Is the filter is just for a local path or a proxy URI? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:57 - 0

/* The URI scheme must be present and identical except for case. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:62 - 0

/* If the filter hostname is null or empty it matches any hostname,
 * if it begins with a "e;*"e; it matches the _end_ of the URI hostname
 * excluding the "e;*"e;, if it begins with a "e;."e; it matches the _end_
 * of the URI * hostname including the "e;."e;, otherwise it must match
 * the URI hostname exactly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:96 - 0

/* If the filter port is empty it matches any URL port.
 * If the filter or URL port are missing, or the URL port is
 * empty, they default to the port for their scheme. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:101 - 0

/* NOTE: ap_port_of_scheme will return 0 if given NULL input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:125 - 0

/* Url has met all of the filter conditions so far, determine
 * if the paths match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:134 - 0

/* Fetch from global config and add to the list. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:187 - 0

/* Stop searching now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:212 - 0

/* do a HTTP/1.1 age calculation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:285 - 0

/* create the key if it doesn't exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:308 - 0

/* create a hashed filename from the key, and save it for later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:320 - 0

/* make the directories */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:332 - 0

/* is an existing lock file too old? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:349 - 0

/* try obtain a lock on the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:394 - 0

/* no eos found in brigade, don't delete anything just yet,
 * we are not done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:409 - 0

/* create the key if it doesn't exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:414 - 0

/* create a hashed filename from the key, and save it for later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:605 - 0

/* calculate age of object */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:608 - 0

/* extract s-maxage */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:611 - 0

/* extract max-age from request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:617 - 0

/*
 * extract max-age from response, if both s-maxage and max-age, s-maxage
 * takes priority
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:628 - 0

/*
 * if both maxage request and response, the smaller one takes priority
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:641 - 0

/* extract max-stale */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:662 - 0

/* extract min-fresh */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:670 - 0

/* override maxstale if must-revalidate, proxy-revalidate or s-maxage */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:676 - 0

/* handle expiration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:684 - 0

/* it's fresh darlings... */
 /* set age header on response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:689 - 0

/* add warning if maxstale overrode freshness calculation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:693 - 0

/* make sure we don't stomp on a previous warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:754 - 0

/* we obtained a lock, follow the stale path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:768 - 0

/* make sure we don't stomp on a previous warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:789 - 0

/* return each comma separated token, one at a time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:802 - 0

/* noop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:817 - 0

/*
 * Converts apr_time_t expressed as hex digits to
 * a true apr_time_t.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:838 - 0

/*
 * Converts apr_time_t to apr_time_t expressed as hex digits.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:870 - 0

/* encode 128 bits as 22 characters, using a modified uuencoding
 * the encoding is 3 bytes -> 4 characters* i.e. 128 bits is
 * 5 x 3 bytes + 1 byte -> 5 * 4 characters + 2 characters
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:882 - 0

/* one byte left */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:884 - 0

/* use up 6 bits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:887 - 0

/* now split into directory levels */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:915 - 0

/* subsequent call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:916 - 0

/* start where we left off */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:919 - 0

/* no more tokens */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:928 - 0

/* no more tokens */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1185 - 0

/* Short circuit the common case that there are not
 * (yet) any headers populated.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1192 - 0

/* Make a copy of the headers, and remove from
 * the copy any hop-by-hop headers, as defined in Section
 * 13.5.1 of RFC 2616
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/cache_util.c:1285 - 0

/**
 * The most common case is a single header, and this is covered by
 * a fast path that doesn't allocate any memory. On the second and
 * subsequent header, an array is created and the array concatenated
 * together to form the final value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:39 - 0

/**
 * Entity headers' names
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:98 - 0

/* only run if the quick handler is enabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:110 - 0

/* make space for the per request config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:115 - 0

/* save away the possible providers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:265 - 0

/* if we are a lookup, we are exiting soon one way or another; Restore
 * the headers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:288 - 0

/* If we're a lookup, we can exit now instead of serving the content. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:293 - 0

/* Serve up the content */

 /* We are in the quick handler hook, which means that no output
 * filters have been set. So lets run the insert_filter hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:331 - 0

/* kick off the filter stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:341 - 0

/**
 * If the two filter handles are present within the filter chain, replace
 * the last instance of the first filter with the last instance of the
 * second filter, and return true. If the second filter is not present at
 * all, the first filter is removed, and false is returned. If neither
 * filter is present, false is returned and this function does nothing.
 * If a stop filter is specified, processing will stop once this filter is
 * reached.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:374 - 0

/**
 * Find the given filter, and return it if found, or NULL otherwise.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:420 - 0

/* make space for the per request config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:425 - 0

/* save away the possible providers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:533 - 0

/* save away the save filter stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:627 - 0

/* kick off the filter stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:658 - 0

/* clean out any previous response up to EOS, if any */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:679 - 0

/* This filter is done once it has served up its content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:730 - 0

/* does the out brigade contain eos? if so, we're done, commit! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:752 - 0

/* oops, no data out, but not all data read in either, be
 * safe and stand down to prevent a spin.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:774 - 0

/**
 * Sanity check for 304 Not Modified responses, as per RFC2616 Section 10.3.5.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:909 - 0

/* add a revalidation warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:925 - 0

/* pass brigade to our morphed out filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:930 - 0

/* read expiry date; if a bad date, then leave it so the client can
 * read it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:944 - 0

/* read the last-modified date; if the date is bad, then delete it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:984 - 0

/* 304 does not contain Content-Type and mod_mime regenerates the
 * Content-Type based on the r->filename. This would lead to original
 * Content-Type to be lost (overwriten by whatever mod_mime generates).
 * We preserves the original Content-Type here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1038 - 0

/* noop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1206 - 0

/* remove this filter from the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1209 - 0

/* retry without the conditionals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1232 - 0

/* remove this filter from the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1235 - 0

/* remove the lock file unconditionally */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1238 - 0

/* ship the data up the stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1242 - 0

/* Make it so that we don't execute this path again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1245 - 0

/* Set the content length if known.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1259 - 0

/* if we don't get the content-length, see if we have all the
 * buckets and use their length to calculate the size
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1285 - 0

/* remember content length to check response size against later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1305 - 0

/* Oh, hey. It isn't that stale! Yay! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1311 - 0

/* Oh, well. Toss it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1313 - 0

/* Treat the request as if it wasn't conditional. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1328 - 0

/* We only set info->status upon the initial creation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1366 - 0

/* Read the date. Generate one if one is not supplied */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1379 - 0

/* No, or bad date */
 /* no date header (or bad header)! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1385 - 0

/* set response_time for HTTP/1.1 age calculations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1388 - 0

/* get the request time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1391 - 0

/* check last-modified date */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1393 - 0

/* if it's in the future, then replace by date */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1444 - 0

/* We found a stale entry which wasn't really stale. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1636 - 0

/* remove ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1700 - 0

/* remove ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1730 - 0

/* was the quick handler enabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1736 - 0

/* otherwise we may have been bypassed, nothing to see here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1744 - 0

/* we are just a marker, so let's just remove ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1886 - 0

/* add a revalidation warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1913 - 0

/* -------------------------------------------------------------- */
/* Setup configurable data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:1939 - 0

/* array of providers for this URL space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2011 - 0

/* by default, run in the quick handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2014 - 0

/* array of identifiers that should not be used for key calculation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2017 - 0

/* thundering herd lock defaults to off */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2200 - 0

/*
 * Only add identifier if no "e;None"e; has been found in identifier
 * list so far.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2501 - 0

/* This is the means by which unusual (non-unix) os's may find alternate
 * means to run a given command (e.g. shebang/registry parsing on Win32)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2684 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2685 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2686 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2687 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache.c:2688 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:60 - 0

/* Forward declarations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:70 - 0

/*
 * Local static functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:132 - 0

/* htcacheclean may remove directories underneath us.
 * So, we'll try renaming three times at a cost of 0.002 seconds.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:147 - 0

/* 1000 micro-seconds aka 0.001 seconds. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:192 - 0

/* clean up the temporary file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:232 - 0

/* Store it away so we can get it later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:251 - 0

/* check that we have the same URL */
 /* Would strncmp be correct? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:330 - 0

/* Sort it so that "e;Vary: A, B"e; and "e;Vary: B, A"e; are stored the same. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:360 - 0

/* Note, len is -1 if unknown so don't trust it too hard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:425 - 0

/* Look up entity keyed to 'url' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:441 - 0

/* Open the headers file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:499 - 0

/* oops, not vary as it turns out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:504 - 0

/* This wasn't a Vary Format file, so we must seek to the
 * start of the file again, so that later reads work.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:543 - 0

/* Open the data file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:547 - 0

/* When we are in the quick handler we don't have the per-directory
 * configuration, so this check only takes the global setting of
 * the EnableSendFile directive into account.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:567 - 0

/* Atomic check - does the body file belong to the header file? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:575 - 0

/* make the configuration stick */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:585 - 0

/* make the configuration stick */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:637 - 0

/* Delete headers file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:654 - 0

/* Delete data file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:681 - 0

/* remove filename */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:786 - 0

/* ### What about APR_EOF? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:794 - 0

/* Delete terminal (CR?)LF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:797 - 0

/* Indeed, the host's '\n':
 '\012' for UNIX; '\015' for MacOS; '\025' for OS/390
 -- whatever the script generates.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:816 - 0

/* Chances are that we received an ASCII header text instead of
 * the expected EBCDIC header lines. Try to auto-detect:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:870 - 0

/* This case should not happen... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:880 - 0

/* Call routine to read the header lines/status line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1122 - 0

/* flush and close */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1160 - 0

/* are we done completely? if so, pass any trailing buckets right through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1167 - 0

/* have we seen eos yet? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1176 - 0

/* honour flush buckets, we'll get called again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1183 - 0

/* metadata buckets are preserved as is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1210 - 0

/* Attempt to create the data file at the last possible moment, if
 * the body is empty, we don't write a file at all, and save an inode.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1283 - 0

/* Buffered write failed, abandon attempt to write */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1318 - 0

/* All checks were fine, we're good to go when the commit comes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1331 - 0

/* write the headers to disk at the last possible moment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1334 - 0

/* move header and data tempfiles to the final destination */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1377 - 0

/* mark the entity as invalidated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1417 - 0

/* XXX: Set default values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1576 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1577 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1578 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1579 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1580 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_disk.c:1581 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:71 - 0

/* pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:73 - 0

/* size of the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:74 - 0

/* brigade containing the body, if any */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:75 - 0

/* Input headers to save */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:76 - 0

/* Output headers to save */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:77 - 0

/* Header information. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:78 - 0

/* offset to the start of the body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:80 - 0

/* whether a new body is present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:81 - 0

/* when to expire the entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:83 - 0

/* Requested URI without vary bits - suitable for mortals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:84 - 0

/* On-disk prefix; URI with Vary bits (if present) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:85 - 0

/* Max size to set aside */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:86 - 0

/* Max time to set aside */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:114 - 0

/* maximum expiry time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:115 - 0

/* minimum expiry time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:129 - 0

/*
 * Local static functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:342 - 0

/* Sort it so that "e;Vary: A, B"e; and "e;Vary: B, A"e; are stored the same. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:459 - 0

/* Create a temporary pool for the buffer, and destroy it if something
 * goes wrong so we don't have large buffers of unused memory hanging
 * about for the lifetime of the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:595 - 0

/* Store it away so we can get it later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:634 - 0

/* Call routine to read the header lines/status line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:648 - 0

/* Retrieve the body if we have one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:663 - 0

/* large - use the brigade as is, we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:671 - 0

/* small - make a copy of the data... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:675 - 0

/* ...and get rid of the large memory buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:680 - 0

/* make the configuration stick */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:759 - 0

/* we recalled the headers during open_entity, so do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:969 - 0

/* are we done completely? if so, pass any trailing buckets right through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:976 - 0

/* have we seen eos yet? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:985 - 0

/* honour flush buckets, we'll get called again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:992 - 0

/* metadata buckets are preserved as is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1077 - 0

/* All checks were fine, we're good to go when the commit comes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1132 - 0

/* For safety, remove any existing entry on failure, just in case it could not
 * be revalidated successfully.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1162 - 0

/* mark the entity as invalidated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1217 - 0

/* socache server config only has one field */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1420 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1423 - 0

/* Register to handle mod_status status page generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1454 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1466 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1475 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1535 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1536 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1537 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1538 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1539 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_cache_socache.c:1540 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:109 - 0

/* big enough to hold any 64-bit file size + null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:173 - 0

/* MMAPFile directive. MMAP'ing the file
 * XXX: APR_HAS_LARGE_FILES issue; need to reject this request if
 * size is greater than MAX(apr_size_t) (perhaps greater than 1M?).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:211 - 0

/* Sendfile not supported by this OS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:222 - 0

/* MMAP not supported by this OS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:232 - 0

/* Hummm, anything to do here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:247 - 0

/* we only operate when at least one cachefile directive was used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:262 - 0

/* pass search results to handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:265 - 0

/* shortcircuit the get_path_info() stat() calls and stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:325 - 0

/* did xlat phase find the file? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:332 - 0

/* note that we would handle GET on this resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:335 - 0

/* This handler has no use for a request body (yet), but we still
 * need to read and discard it if the client sent one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:343 - 0

/* ap_set_last_modified() always converts the file mtime to a string
 * which is slow. Accelerate the common case.
 * ap_set_last_modified(r);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:408 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:409 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:410 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:411 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:412 - 0

/* command handlers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_file_cache.c:413 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:42 - 0

/* Use of the context structure must be thread-safe after the initial
 * create/init; callers must hold the mutex. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:46 - 0

/* Pool must only be used with the mutex held. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:52 - 0

/**
 * Support for DBM library
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:59 - 0

/* ### this should use apr_dbm_usednames. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:106 - 0

/* no gid change */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:126 - 0

/* for the DBM we need the data file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:141 - 0

/* open it once to create it and to make sure it _can_ be created */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:157 - 0

/*
 * We have to make sure the Apache child processes have access to
 * the DBM file. But because there are brain-dead platforms where we
 * cannot exactly determine the suffixes we try all possibilities.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:162 - 0

/* is superuser */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:179 - 0

/* the correct way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:182 - 0

/* the additional ways to be sure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:217 - 0

/* create DBM key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:221 - 0

/* create DBM value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:227 - 0

/* and store it to the DBM file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:249 - 0

/* free temporary buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:252 - 0

/* allow the regular expiring to occur */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:271 - 0

/* allow the regular expiring to occur */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:274 - 0

/* create DBM key and values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:301 - 0

/* parse resulting data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:332 - 0

/* create DBM key and values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:336 - 0

/* and delete it from the DBM file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:368 - 0

/*
 * make sure the expiration for still not-accessed
 * socache entries is done only from time to time
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:394 - 0

/* allocate the key array in a memory sub pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:401 - 0

/* pass 1: scan DBM database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dbm.c:483 - 0

/*
 * XXX - Check the return value of apr_dbm_firstkey, apr_dbm_fetch - TBD
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:36 - 0

/* Configured target server: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_dc.c:38 - 0

/* distcache client context: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:24 - 0

/* apr_memcache support requires >= 1.3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:37 - 0

/* The underlying apr_memcache system is thread safe.. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:67 - 0

/* strlen(tag) + 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:104 - 0

/* Find all the servers in the first run to get a total count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:120 - 0

/* Now add each server to the memcache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:183 - 0

/* noop. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:249 - 0

/* ### this could do with a subpool, but _getp looks like it will
 * eat memory like it's going out of fashion anyway. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:296 - 0

/* TODO: Make a mod_status handler. meh. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:320 - 0

/* HAVE_APU_MEMCACHE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:348 - 0

/* apr_memcache_server_create needs a ttl in usec. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:371 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:372 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:373 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:374 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:375 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_memcache.c:376 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:51 - 0

/*
 * Header structure - the start of the shared-mem segment
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:64 - 0

/* Number of subcaches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:66 - 0

/* How many indexes each subcache's queue has */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:68 - 0

/* How large each subcache is, including the queue and data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:76 - 0

/*
 * Subcache structure - the start of each subcache, followed by
 * indexes then data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:81 - 0

/* The start position and length of the cyclic buffer of indexes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:83 - 0

/* Same for the data area */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:87 - 0

/*
 * Index structure - each subcache has an array of these
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:93 - 0

/* location within the subcache's data area */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:97 - 0

/* length of the used data which contains the id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:99 - 0

/* Used to mark explicitly-removed socache entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:159 - 0

/* This macro takes a pointer to the header and an id and returns a
 * pointer to the corresponding subcache. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:169 - 0

/* This macro takes a pointer to a subcache and a zero-based index and returns
 * a pointer to the corresponding SHMCBIndex. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:176 - 0

/* This macro takes a pointer to the header and a subcache and returns a
 * pointer to the corresponding data area. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:181 - 0

/*
 * Cyclic functions - assists in "e;wrap-around"e;/modulo logic
 */

/* Addition modulo 'mod' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:194 - 0

/* A "e;normal-to-cyclic"e; memcpy. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:200 - 0

/* It be copied all in one go */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:203 - 0

/* Copy the two splits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:210 - 0

/* A "e;cyclic-to-normal"e; memcpy. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:216 - 0

/* It be copied all in one go */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:219 - 0

/* Copy the two splits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:226 - 0

/* A memcmp against a cyclic data buffer. Compares SRC of length
 * SRC_LEN against the contents of cyclic buffer DATA (which is of
 * size BUF_SIZE), starting at offset DEST_OFFSET. Got that? Good. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:235 - 0

/* It be compared all in one go */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:238 - 0

/* Compare the two splits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:251 - 0

/* Prototypes for low-level subcache operations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:254 - 0

/* Returns zero on success, non-zero on failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:260 - 0

/* Returns zero on success, non-zero on failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:264 - 0

/* Returns zero on success, non-zero on failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:268 - 0

/* Returns result of the (iterator)() call, zero is success (continue) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:280 - 0

/*
 * High-Level "e;handlers"e; as per ssl_scache.c
 * subcache internals are deferred to shmcb_subcache_*** functions lower down
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:292 - 0

/* Allocate the context. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:295 - 0

/* 512KB */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:298 - 0

/* Use defaults. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:351 - 0

/* Create shared memory segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:359 - 0

/* Use anonymous shm by default, fall back on name-based. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:372 - 0

/* For a name-based segment, remove it first in case of a
 * previous unclean shutdown. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:389 - 0

/* the segment is ridiculously small, bail out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:398 - 0

/* Discount the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:400 - 0

/* Select index size based on average object size hints, if given. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:415 - 0

/* we're still too small, bail out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:420 - 0

/* OK, we're sorted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:444 - 0

/* Output trace info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:465 - 0

/* Success ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:530 - 0

/* Get the entry corresponding to the id, if it exists. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:610 - 0

/* Generate Output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:724 - 0

/* Nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:730 - 0

/* We're expiring everything, piece of cake */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:734 - 0

/* There remain other indexes, so we can use idx to adjust 'data' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:738 - 0

/* Adjust the indexes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:741 - 0

/* Adjust the data area */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:760 - 0

/* Sanity check the input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:771 - 0

/* Loop until there is enough space to insert
 * XXX: This should first compress out-of-order expiries and
 * removed records, and then force-remove oldest-first
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:786 - 0

/* Adjust the indexes by one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:791 - 0

/* There's nothing left */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:795 - 0

/* Adjust the data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:800 - 0

/* Stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:802 - 0

/* Loop admin */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:826 - 0

/* Insert the data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:833 - 0

/* Insert the index */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:884 - 0

/* Find the offset of the data segment, after the id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:891 - 0

/* Copy out the data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:907 - 0

/* Increment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:929 - 0

/* Only consider 'idx' if the id matches, and the "e;removed"e;
 * flag isn't set. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:938 - 0

/* Found the matching entry, remove it quietly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:944 - 0

/* Increment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:949 - 0

/* failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:972 - 0

/* Only consider 'idx' if the "e;removed"e; flag isn't set. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:983 - 0

/* Find the offset of the data segment, after the id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:1004 - 0

/* Copy out the data, because it's potentially cyclic */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:1030 - 0

/* Increment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cache/mod_socache_shmcb.c:1057 - 0

/* Also register shmcb under the default provider name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartbeat.c:222 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartbeat.c:223 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartbeat.c:224 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartbeat.c:225 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartbeat.c:226 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:148 - 0

/* Split the string in two */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:149 - 0

/* Skip passed the = */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:168 - 0

/* Store in the slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:182 - 0

/* Read the id corresponding to the entry in the slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:194 - 0

/* update the entry or create it if not existing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:197 - 0

/* We call do_all (to try to update) otherwise grab + put */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:239 - 0

/* TODO: Update stats file (!) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:265 - 0

/* Read the file and update the line corresponding to the node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:300 - 0

/* copy things we can't process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:305 - 0

/* Update seen time according to the last file modification */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:394 - 0

/* Store in a file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:402 - 0

/* TODO: Update stats file (!) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:465 - 0

/* Store in a slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:479 - 0

/* remove it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:482 - 0

/* update it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:490 - 0

/* Store/update the stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:518 - 0

/* Process a message received from a backend node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:559 - 0

/* Read message from multicast socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:613 - 0

/* store in the slotmem or in the file depending on configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:616 - 0

/* TODO: Insted HN_UPDATE_SEC use
 * the ctx->interval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:680 - 0

/* Create the slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:682 - 0

/* this is the real thing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:714 - 0

/* Register a callback with zero interval. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:760 - 0

/* we can't use hm_processmsg because it uses hm_get_server() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:796 - 0

/* TODO: Add directive for tuning the update interval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:901 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:902 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:903 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:904 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/cluster/mod_heartmonitor.c:905 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:57 - 0

/* lower case name of the macro */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:58 - 0

/* of char*, macro parameter names */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:59 - 0

/* of char*, macro body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:63 - 0

/* configuration tokens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:70 - 0

/*
 Macros are kept globally...
 They are not per-server or per-directory entities.

 note: they are in a temp_pool, and there is a lazy initialization.
 ap_macros is reset to NULL in pre_config hook to not depend
 on static vs dynamic configuration.

 hash type: (char *) name -> (ap_macro_t *) macro
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:82 - 0

/*************************************************************** PARSE UTILS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:141 - 0

/* sorry, but this is expected by getline:-( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:148 - 0

/* skip comments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:153 - 0

/* detect nesting... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:169 - 0

/* check for proper closing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:172 - 0

/* this cannot happen if end_token contains '>' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:198 - 0

/* put EOL back? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:271 - 0

/* warn about common prefix, but only if non empty names */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:288 - 0

/*
 warn about empty strings in array. could be legitimate.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:304 - 0

/******************************************************** SUBSTITUTION UTILS */

/* could be switched to '\'' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:310 - 0

/*
 returns the number of needed escapes for the string
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:343 - 0

/* buf must starts with name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:355 - 0

/* could/should I reallocate? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:364 - 0

/* insert the replacement with escapes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:464 - 0

/* for each line of the macro body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:467 - 0

/* copy the line and subtitute macro parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:476 - 0

/* append substituted line to result array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:502 - 0

/* no need to further warnings... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:552 - 0

/* current element */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:553 - 0

/* current char in element */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:555 - 0

/* array of char * */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:556 - 0

/* next config once this one is processed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:560 - 0

/*
 Get next config if any.
 this may be called several times if there are continuations.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:574 - 0

/*
 returns next char if possible
 this may involve switching to enclosing config.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:604 - 0

/*
 returns a buf a la fgets.
 no more than a line at a time, otherwise the parsing is too much ahead...
 NULL at EOF.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:617 - 0

/* read chars from stream, stop on newline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:627 - 0

/* keep next line count in sync! the caller will update
 the current line_number, we need to forward to the next */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:632 - 0

/* else that is really all we can do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:641 - 0

/*
 close the array stream?
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:647 - 0

/* move index at end of stream... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:653 - 0

/*
 create an array config stream insertion "e;object"e;.
 could be exported.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:695 - 0

/* lazy initialization */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:719 - 0

/* get lowercase macro name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:737 - 0

/* allocate a new macro */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:760 - 0

/* get macro parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:787 - 0

/* store the new macro */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:793 - 0

/*
 handles: Use name value1 value2 ...
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:806 - 0

/* must be initialized, or no macros has been defined */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:811 - 0

/* get lowercase macro name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:819 - 0

/* get macro definition */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:868 - 0

/* the current "e;config file"e; is replaced by a string array...
 at the end of processing the array, the initial config file
 will be returned there (see next_one) so as to go on. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:882 - 0

/* must be initialized, or no macros has been defined */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:891 - 0

/* check that the macro is defined */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:896 - 0

/* could be a warning? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:901 - 0

/* free macro: cannot do that */
 /* remove macro from hash table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:914 - 0

/************************************************************* EXPORT MODULE */

/*
 macro module commands.
 configuration file macro stuff
 they are processed immediatly when found, hence the EXEC_ON_READ.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:948 - 0

/* common stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:949 - 0

/* create per-directory config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:950 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:951 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:952 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:953 - 0

/* configuration commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_macro.c:954 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:124 - 0

/*
 * This is the cleanup for a loaded shared object. It unloads the module.
 * This is called as a cleanup function from the core.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:133 - 0

/* only unload if module information is still existing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:137 - 0

/* remove the module pointer from the core structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:140 - 0

/* destroy the module information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:195 - 0

/* we need to setup this value for dummy to make sure that we don't try
 * to add a non-existant tree into the build when we return to
 * execute_now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:226 - 0

/* make sure we're comparing apples with apples
 * make sure name of preloaded module is mod_FOO.c
 * make sure name of structure being loaded is FOO_module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:260 - 0

/*
 * Load the file into the Apache address space
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:269 - 0

/*
 * Retrieve the pointer to the module structure through the module name:
 * First with the hidden variant (prefix `AP_') and then with the plain
 * symbol name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:286 - 0

/*
 * Make sure the found module structure is really a module structure
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:299 - 0

/*
 * Add this module to the Apache core structures
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:314 - 0

/*
 * Finally we need to run the configuration process for the module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:399 - 0

/* not NO_DLOPEN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:416 - 0

/* NO_DLOPEN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:436 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:437 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:438 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:439 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:440 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_so.c:441 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:82 - 0

/* Execute watchdog callback with STOPPING state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:95 - 0

/*--------------------------------------------------------------------------*/
/* */
/* Main watchdog worker thread. */
/* For singleton workers child thread that first obtains the process */
/* mutex is running. Threads in other child's are locked on mutex. */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:165 - 0

/* Execute watchdog callback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:178 - 0

/* Main execution loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:202 - 0

/* Execute watchdog callback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:216 - 0

/* This is hook mode watchdog
 * running on WatchogInterval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:224 - 0

/* Run watchdog step hook */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:235 - 0

/* Run the watchdog exit hooks.
 * If this was singleton watchdog the init hook
 * might never been called, so skip the exit hook
 * in that case as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:246 - 0

/* Execute watchdog callback with STOPPING state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:268 - 0

/* Create thread startup mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:274 - 0

/* Initialize singleton mutex in child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:287 - 0

/* Start the newly created watchdog */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:310 - 0

/* Parent threads are not supported for
 * forked mpm's
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:340 - 0

/* We have existing callback.
 * Update the interval and reset status, so the
 * callback and continue execution if stopped earlier.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:387 - 0

/*--------------------------------------------------------------------------*/
/* */
/* Pre config hook. */
/* Create default watchdogs for parent and child */
/* Parent watchdog executes inside parent process so it doesn't need the */
/* singleton mutex */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:411 - 0

/* Create parent process watchdog for
 * non forked mpm's only.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:428 - 0

/*--------------------------------------------------------------------------*/
/* */
/* Post config hook. */
/* Create watchdog thread in parent and initializes Watchdog module */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:443 - 0

/* First time config phase -- skip. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:474 - 0

/* One of the modules returned OK to this watchog.
 * Mark it as active
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:481 - 0

/* We have active watchdog.
 * Create the watchdog thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:520 - 0

/* One of the modules returned OK to this watchog.
 * Mark it as active
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:527 - 0

/* We have some callbacks registered.
 * Create mutexes for singleton watchdogs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:548 - 0

/*--------------------------------------------------------------------------*/
/* */
/* Child init hook. */
/* Create watchdog threads and initializes Mutexes in child */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:560 - 0

/* We don't have anything configured, bail out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:576 - 0

/* We have some callbacks registered.
 * Kick of the watchdog
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:582 - 0

/* No point to continue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:592 - 0

/*--------------------------------------------------------------------------*/
/* */
/* WatchdogInterval directive */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:615 - 0

/*--------------------------------------------------------------------------*/
/* */
/* List of directives specific to our module. */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:623 - 0

/* directive name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:624 - 0

/* config action routine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:632 - 0

/*--------------------------------------------------------------------------*/
/* */
/* Which functions are responsible for which hooks in the server. */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:640 - 0

/* Only the mpm_winnt has child init hook handler.
 * Make sure that we are called after the mpm child init handler
 * initializes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:646 - 0

/* Pre config handling
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:653 - 0

/* Post config handling
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:660 - 0

/* Child init hook
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:672 - 0

/*--------------------------------------------------------------------------*/
/* */
/* The list of callback routines and data structures that provide */
/* the static hooks into our module from the other parts of the server. */
/* */
/*--------------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:680 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:681 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:682 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:683 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:684 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/core/mod_watchdog.c:685 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:47 - 0

/************ svr cfg: manage db connection pool ****************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:101 - 0

/* don't risk segfault on misconfiguration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:147 - 0

/* some modules may call from within config directive handlers, and
 * if these are called in a server context that contains no mod_dbd
 * config directives, then we have to create our own server config
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:293 - 0

/* XXX: note that mod_proxy calls this "e;smax"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:298 - 0

/* XXX: note that mod_proxy calls this "e;ttl"e; (time to live) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:320 - 0

/* some modules may call from within config directive handlers, and
 * if these are called in a server context that contains no mod_dbd
 * config directives, then we have to create our own server config
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:508 - 0

/* an apr_reslist_constructor for SQL connections
 * Also use this for opening in non-reslist modes, since it gives
 * us all the error-handling in one place.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:716 - 0

/* several threads could be here at the same time, all trying to
 * initialize the reslist because dbd_setup_init failed to do so
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:800 - 0

/* If nothing is configured, we shouldn't be here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:808 - 0

/* Return a once-only connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:836 - 0

/* If we have a persistent connection and it's good, we'll use it;
 * since this is non-threaded, we can update without a mutex
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/database/mod_dbd.c:847 - 0

/* We don't have a connection right now, so we'll open one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:38 - 0

/* for ntohs and htons */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:43 - 0

/* for ap_server_conf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:51 - 0

/* when used as a property database: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:53 - 0

/* *minor* version of this db */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:55 - 0

/* table of namespace URIs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:56 - 0

/* number of entries in table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:57 - 0

/* ns_table was modified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:58 - 0

/* map URIs to (1-based) table indices */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:60 - 0

/* work buffer for dav_gdbm_key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:62 - 0

/* iteration key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:95 - 0

/* There might not be a <db> if we had problems creating it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:124 - 0

/* dav_dbm_open_direct: Opens a *dbm database specified by path.
 * ro = boolean read-only flag.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:140 - 0

/* ### do something with 'status' */

 /* we can't continue if we couldn't open the file
 and we need to write */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:149 - 0

/* we have an open database... return it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:165 - 0

/* Get directory and filename for resource */
 /* ### should test this result value... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:197 - 0

/* no key could be created (namespace not known) => no value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:245 - 0

/* -------------------------------------------------------------------------
 *
 * PROPERTY DATABASE FUNCTIONS
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:296 - 0

/*
** Internal function to build a key
**
** WARNING: returns a pointer to a "e;static"e; buffer holding the key. The
** value must be copied or no longer used if this function is
** called again.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:309 - 0

/*
 * Convert namespace ID to a string. "e;no namespace"e; is an empty string,
 * so the keys will have the form "e;:name"e;. Otherwise, the keys will
 * have the form "e;#:name"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:324 - 0

/* the namespace was not found(!) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:325 - 0

/* zeroed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:331 - 0

/* assemble: #:name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:337 - 0

/* build the database key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:351 - 0

/* skip past the xml:lang value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:355 - 0

/* the property is an empty value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:357 - 0

/* "e;no namespace"e; case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:366 - 0

/* "e;no namespace"e; case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:376 - 0

/* "e;no namespace"e; case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:413 - 0

/* ### push a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:439 - 0

/* initialize a new metadata structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:465 - 0

/* create db->uri_index */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:470 - 0

/* we must copy the key, in case ns_table.buf moves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:496 - 0

/* fill in the metadata that we store into the prop db. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:498 - 0

/* ### keep current minor version? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:517 - 0

/* within the prop values, we use "e;ns%d"e; for prefixes... register them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:520 - 0

/* Empty URIs signify the empty namespace. These do not get a
 namespace prefix. when we generate the value, we will simply
 leave off the prefix, which is defined by mod_dav to be the
 empty namespace. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:527 - 0

/* ns_table.buf can move, so copy its value (we want the values to
 last as long as the provided dav_xmlns_info). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:592 - 0

/* copy the uri in case the passed-in namespaces changes in
 some way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:626 - 0

/* generate a text blob for the xml:lang plus the contents */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:692 - 0

/* skip past the METADATA key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:707 - 0

/* skip past the METADATA key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:743 - 0

/* no rollback, nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:747 - 0

/* don't fail if the thing isn't really there. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/dbm.c:770 - 0

/* ctx */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:80 - 0

/* Stored lock_discovery prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:84 - 0

/*
 * not used anymore
 * #define DAV_TYPE_INODE 10
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:91 - 0

/* ack. forward declare. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:96 - 0

/*
** Use the opaquelock scheme for locktokens
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:128 - 0

/* owner field from activelock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:147 - 0

/* ################################################################# */


/*
** Stored direct lock info - full lock_discovery length:
** prefix + Fixed length + lock token + 2 strings + 2 nulls (one for each string)
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:160 - 0

/* Stored indirect lock info - lock token and apr_datum_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:182 - 0

/* for accessing the uuid state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:183 - 0

/* a pool to use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:184 - 0

/* where is the lock database? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:186 - 0

/* we opened the database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:187 - 0

/* if non-NULL, the lock database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:195 - 0

/*
** The private part of the lock structure.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:200 - 0

/* key into the lock database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:209 - 0

/*
** This must be forward-declared so the open_lockdb function can use it.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:237 - 0

/*
** dav_fs_parse_locktoken
**
** Parse an opaquelocktoken URI into a locktoken.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:268 - 0

/*
** dav_fs_format_locktoken
**
** Generate the URI for a locktoken
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:283 - 0

/*
** dav_fs_compare_locktoken
**
** Determine whether two locktokens are the same
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:295 - 0

/*
** dav_fs_really_open_lockdb:
**
** If the database hasn't been opened yet, then open the thing.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:319 - 0

/* all right. it is opened now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:325 - 0

/*
** dav_fs_open_lockdb:
**
** "e;open"e; the lock database, as specified in the global server configuration.
** If force is TRUE, then the database is opened now, rather than lazily.
**
** Note that only one can be open read/write.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:354 - 0

/* done initializing. return it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:358 - 0

/* ### add a higher-level comment? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:376 - 0

/*
** dav_fs_build_key: Given a resource, return a apr_datum_t key
** to look up lock information for this file.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:386 - 0

/* ### does this allocation have a proper lifetime? need to check */
 /* ### can we use a buffer for this? */

 /* size is TYPE + pathname + null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:409 - 0

/*
** dav_fs_save_lock_record: Saves the lock information specified in the
** direct and indirect lock lists about path into the lock database.
** If direct and indirect == NULL, the key is removed.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:439 - 0

/* If nothing to save, delete key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:463 - 0

/* Direct lock - lock_discovery struct follows */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:464 - 0

/* Fixed portion of struct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:487 - 0

/* Indirect lock prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:488 - 0

/* Locktoken */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:490 - 0

/* Expire time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:492 - 0

/* Size of key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:494 - 0

/* Key data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:561 - 0

/* Create and fill a dav_lock_discovery structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:591 - 0

/* Remove timed-out locknull fm .locknull list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:597 - 0

/* if we don't see the file, then it's a locknull */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:601 - 0

/* ### push a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:610 - 0

/* Create and fill a dav_lock_indirect structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:617 - 0

/* length of datum */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:628 - 0

/* A locknull resource will never be locked indirectly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:663 - 0

/* resolve <indirect>, returning <*direct> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:677 - 0

/* ### insert a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:729 - 0

/* ---------------------------------------------------------------
**
** General lock functions
**
*/

/* ---------------------------------------------------------------
**
** Functions dealing with lock-null resources
**
*/

/*
** dav_fs_load_locknull_list: Returns a dav_buffer dump of the locknull file
** for the given directory.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:761 - 0

/* reset this in case we leave w/o reading into the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:805 - 0

/*
** dav_fs_save_locknull_list: Saves contents of pbuf into the
** locknull file for dirpath.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:828 - 0

/* delete the file if cur_len == 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:859 - 0

/*
** dav_fs_remove_locknull_member: Removes filename from the locknull list
** for directory path.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:883 - 0

/* ### add a higher level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:901 - 0

/* ### add a higher level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:909 - 0

/* Note: used by dav_fs_repos.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:916 - 0

/* ### should test this result value... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:933 - 0

/* ### should test this result value... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:942 - 0

/* we want the null-term here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:967 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1016 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1031 - 0

/* hook into the result list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1043 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1055 - 0

/* DAV_GETLOCKS_PARTIAL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1059 - 0

/* hook into the result list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1084 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1107 - 0

/* ### nobody uses the resolving right now! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1115 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1177 - 0

/*
 ** ### when we store the lock more directly, we need to update
 ** ### lock->rectype and lock->is_locknull
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1185 - 0

/* ### this works for any <lock> rectype */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1188 - 0

/* ### shut off the const warning for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1198 - 0

/* create and link in the right kind of lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1207 - 0

/* ### shut off the const warning for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1215 - 0

/* DAV_LOCKREC_INDIRECT(_PARTIAL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1219 - 0

/* ### shut off the const warning for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1233 - 0

/* we have a special list for recording locknull resources */
 /* ### ack! this can add two copies to the locknull list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1363 - 0

/* the lock was refreshed. return the lock. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1387 - 0

/* for each indirect lock, find its direct lock and refresh it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1394 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1398 - 0

/* the lock was refreshed. return the lock. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1411 - 0

/* save the (resolved) direct lock back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1414 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1440 - 0

/* lookup_resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/lock.c:1442 - 0

/* ctx */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:27 - 0

/* per-server configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:71 - 0

/*
 * Command handler for the DAVLockDB directive, which is TAKE1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:92 - 0

/* per server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:113 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:114 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:115 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:116 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:117 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/mod_dav_fs.c:118 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:27 - 0

/* for getpid() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:32 - 0

/* for ap_set_* (in dav_fs_set_headers) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:33 - 0

/* for ap_update_mtime() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:39 - 0

/* to assist in debugging mod_dav's GET handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:42 - 0

/* copy 16k at a time */

/* context needed to identify a resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:46 - 0

/* memory storage pool associated with request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:47 - 0

/* full pathname to resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:48 - 0

/* filesystem info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:52 - 0

/* private context for doing a filesystem walk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:54 - 0

/* the input walk parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:57 - 0

/* reused as we walk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:65 - 0

/* MOVE/COPY need a secondary path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:75 - 0

/* is this a MOVE? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:76 - 0

/* handy buffer for copymove_file() */

 /* CALLBACK: this is a secondary resource managed specially for us */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:81 - 0

/* copied from dav_walk_params (they are invariant across the walk) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:87 - 0

/* an internal WALKTYPE to walk hidden files (the .DAV directory) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:90 - 0

/* an internal WALKTYPE to call collections (again) after their contents */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:93 - 0

/* a private call type */


/* pull this in from the other source file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:99 - 0

/* forward-declare the hook structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:103 - 0

/*
** The namespace URIs that we use. This list and the enumeration must
** stay in sync.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:110 - 0

//apache.org/dav/props/"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:112 - 0

/* sentinel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:115 - 0

/* the DAV: namespace URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:116 - 0

/* the namespace URI for our custom props */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:133 - 0

/* as above, but without APR_FINFO_PROT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:138 - 0

/*
** The single property that we define (in the DAV_FS_URI_MYPROPS namespace)
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:143 - 0

/*
 * prefix for temporary files
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:150 - 0

/* standard DAV properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:176 - 0

/* our custom properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:181 - 0

/* handled special in dav_fs_is_writable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:184 - 0

/* sentinel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:195 - 0

/* define the dav_stream structure for our use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:199 - 0

/* we may need to remove it at close time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:210 - 0

/* forward declaration for internal treewalkers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:218 - 0

/* --------------------------------------------------------------------
**
** PRIVATE REPOSITORY FUNCTIONS
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:260 - 0

/* remove trailing slash from dirpath, unless it's a root path
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:294 - 0

/* Note: picked up from ap_gm_timestr_822() */
/* NOTE: buf must be at least DAV_TIMEBUF_SIZE chars in size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:300 - 0

/* ### what to do if fails? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:304 - 0

/* ### should we use "e;-00:00"e; instead of "e;Z"e; ?? */

 /* 20 chars plus null term */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:313 - 0

/* RFC 822 date format; as strftime '%a, %d %b %Y %T GMT' */

 /* 29 chars plus null term */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:365 - 0

/* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:370 - 0

/* ### do we need to deal with the umask? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:401 - 0

/* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:409 - 0

/* write any bytes that were read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:441 - 0

/*
 * Something is wrong here but the result is what we wanted.
 * We definitely should not remove the destination file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:462 - 0

/* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:481 - 0

/* finfo for source file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:482 - 0

/* finfo for STATE directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:487 - 0

/* build the propset pathname for the source file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:490 - 0

/* the source file doesn't exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:496 - 0

/* build the pathname for the destination state dir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:505 - 0

/* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:511 - 0

/* get info about the state directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:514 - 0

/* Ack! Where'd it go? */
 /* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:522 - 0

/* ### try to recover by deleting this file? (and mkdir again) */
 /* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:528 - 0

/* append the target file to the state directory pathname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:531 - 0

/* copy/move the file now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:533 - 0

/* try simple rename first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:539 - 0

/* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:546 - 0

/* gotta copy (and delete) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:568 - 0

/* Get directory and filename for resources */
 /* ### should test these result values... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:573 - 0

/* Get the corresponding state files for each resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:621 - 0

/* Get directory, filename, and state-file names for the resource */
 /* ### should test this result value... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:626 - 0

/* build the propset pathname for the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:633 - 0

/* note: we may get ENOENT if the state dir is not present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:641 - 0

/* build the propset pathname for the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:661 - 0

/* --------------------------------------------------------------------
**
** REPOSITORY HOOK FUNCTIONS
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:686 - 0

/* ### this should go away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:689 - 0

/* Preserve case on OSes which fold canonical filenames */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:697 - 0

/*
 ** If there is anything in the path_info, then this indicates that the
 ** entire path was not used to specify the file/dir. We want to append
 ** it onto the filename so that we get a "e;valid"e; pathname for null
 ** resources.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:705 - 0

/* make sure the pathname does not have a trailing "e;/"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:712 - 0

/* Create resource descriptor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:719 - 0

/* make sure the URI does not have a trailing "e;/"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:733 - 0

/* unused info in the URL will indicate a null resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:737 - 0

/* only a trailing "e;/"e; is allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:740 - 0

/*
 ** This URL/filename represents a locknull resource or
 ** possibly a destination of a MOVE/COPY
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:761 - 0

/* retain proper integrity across the structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:783 - 0

/* If we're at the root of the URL space, then there is no parent. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:789 - 0

/* If given resource is root, then there is no parent.
 * Unless we can retrieve the filepath root, this is
 * intendend to fail. If we split the root and
 * no path info remains, then we also fail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:807 - 0

/* ### this should go away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:869 - 0

/* it is safe to use ctx2 now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:945 - 0

/* we have created a new file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:962 - 0

/* (APR registers cleanups for the fd with the pool) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1015 - 0

/* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1029 - 0

/* ### should check whether apr_file_seek set abs_pos was set to the
 * correct position? */
 /* ### use something besides 500? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1048 - 0

/* ### this function isn't really used since we have a get_pathname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1052 - 0

/* make sure the proper mtime is in the request record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1055 - 0

/* ### note that these use r->filename rather than <resource> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1059 - 0

/* we accept byte-ranges */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1062 - 0

/* set up the Content-Length header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1080 - 0

/* Check resource type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1140 - 0

/* update resource state to show it exists as a collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1165 - 0

/* copy/move of a collection. Create the new, target collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1180 - 0

/* ### push a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1199 - 0

/* ### use errno to generate DAV:responsedescription? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1233 - 0

/* params.walk_ctx is managed by dav_fs_internal_walk() */

 /* postfix is needed for MOVE to delete source dirs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1248 - 0

/* some multistatus responses exist. wrap them in a 207 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1257 - 0

/* not a collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1263 - 0

/* ### push a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1267 - 0

/* copy/move properties as well */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1294 - 0

/* update state of destination resource to show it exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1325 - 0

/* try rename first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1328 - 0

/* if we can't simply rename, then do it the hard way... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1332 - 0

/* update resource states */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1342 - 0

/* no multistatus response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1351 - 0

/* Rename did work. Update resource states and move properties as well */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1366 - 0

/* couldn't put it back! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1377 - 0

/* update resource states again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1399 - 0

/* do not attempt to remove a null resource,
 * or a collection with children
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1404 - 0

/* try to remove the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1459 - 0

/* some multistatus responses exist. wrap them in a 207 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1472 - 0

/* not a collection; remove the file and its properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1474 - 0

/* ### put a description in here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1478 - 0

/* update resource state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1482 - 0

/* remove properties and return its result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1512 - 0

/* put a trailing slash onto the directory, in preparation for appending
 * files to it as we discovery them within the directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1516 - 0

/* in pad area */

 /* if a secondary path is present, then do that, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1522 - 0

/* in pad area */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1530 - 0

/* a file is the default; we'll adjust if we hit a directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1534 - 0

/* open and scan the directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1569 - 0

/* append this file onto the path buffer (copy null term) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1581 - 0

/* copy the file to the URI, too. NOTE: we will pad an extra byte
 for the trailing slash later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1585 - 0

/* if there is a secondary path, then do that, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1590 - 0

/* set up the (internal) pathnames for the two resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1594 - 0

/* set up the URI for the current resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1597 - 0

/* ### for now, only process regular files (e.g. skip symlinks) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1599 - 0

/* call the function for the specified dir + file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1611 - 0

/* adjust length to incorporate the subdir name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1615 - 0

/* adjust URI length to incorporate subdir and a slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1620 - 0

/* switch over to a collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1631 - 0

/* put the various information back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1643 - 0

/* ### check the return value of this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1655 - 0

/* Include any lock null resources found in this collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1663 - 0

/* put a slash back on the end of the directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1666 - 0

/* these are all non-existant (files) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1675 - 0

/*
 ** Append the locknull file to the paths and the URI. Note that
 ** we don't have to pad the URI for a slash since a locknull
 ** resource is not a collection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1690 - 0

/* set up the (internal) pathnames for the two resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1694 - 0

/* set up the URI for the current resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1733 - 0

/* call the function for the specified dir + file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1744 - 0

/* reset the exists flag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1749 - 0

/* replace the dirs' trailing slashes with null terms */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1756 - 0

/* this is a collection which exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1787 - 0

/* ### zero out versioned, working, baselined? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1795 - 0

/* the pathname is stored in the path1 buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1800 - 0

/* internal call from the COPY/MOVE code. set it up. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1811 - 0

/* we don't track this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1820 - 0

/* the pathname is stored in the path2 buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1825 - 0

/* prep the URI buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1832 - 0

/* this will fall into the pad area */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1837 - 0

/* the current resource's URI is stored in the uri_buf buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1840 - 0

/* point the callback's resource at our structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1856 - 0

/* dav_fs_etag: Stolen from ap_make_etag. Creates a strong etag
 * for file path.
 * ### do we need to return weak tags sometimes?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1863 - 0

/* XXX: This should really honor the FileETag setting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1881 - 0

/* normally: special GET handling not required */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1918 - 0

/* an HTTP-date can be 29 chars plus a null term */
 /* a 64-bit size can be 20 chars plus a null term */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1922 - 0

/*
 ** None of FS provider properties are defined if the resource does not
 ** exist. Just bail for this case.
 **
 ** Even though we state that the FS properties are not defined, the
 ** client cannot store dead values -- we deny that thru the is_writable
 ** hook function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1947 - 0

/* our property, but not defined on collection resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1967 - 0

/* our property, but not defined on collection resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1971 - 0

/* our property, but not defined on this platform */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:1975 - 0

/* the files are "e;ours"e; so we only need to check owner exec privs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2012 - 0

/* we inserted what was asked for */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2021 - 0

/* if we have the executable property, and this isn't a collection,
 then the property is writable. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2059 - 0

/* DBG3("e;name=%s cdata=%s f_cdata=%s"e;,elem->name,cdata ? cdata->text : "e;[null]"e;,f_cdata ? f_cdata->text : "e;[null]"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2126 - 0

/* update the resource and set up the rollback context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2138 - 0

/* nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2164 - 0

/* restore the resource's state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2187 - 0

/* vsn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2188 - 0

/* binding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2189 - 0

/* search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2191 - 0

/* ctx */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2198 - 0

//apache.org/dav/propset/fs/1>"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2206 - 0

/* don't try to find any liveprops if this isn't "e;our"e; resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2215 - 0

/* don't insert any liveprops if this isn't "e;our"e; resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2239 - 0

/* Only insert this property if it is defined for this platform. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2244 - 0

/* ### we know the others aren't defined as liveprops */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2249 - 0

/* register the namespace URIs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/fs/repos.c:2252 - 0

/* register the repository provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:81 - 0

/* Stored lock_discovery prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:87 - 0

/* Use the opaquelock scheme for locktokens */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:117 - 0

/* owner field from activelock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:136 - 0

/* ################################################################# */

/*
 * Stored direct lock info - full lock_discovery length:
 * prefix + Fixed length + lock token + 2 strings + 2 nulls (one for each
 * string)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:149 - 0

/* Stored indirect lock info - lock token and apr_datum_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:171 - 0

/* for accessing the uuid state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:172 - 0

/* a pool to use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:173 - 0

/* where is the lock database? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:175 - 0

/* we opened the database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:176 - 0

/* if non-NULL, the lock database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:185 - 0

/*
 * The private part of the lock structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:190 - 0

/* key into the lock database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:199 - 0

/*
 * This must be forward-declared so the open_lockdb function can use it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:216 - 0

/* There might not be a <db> if we had problems creating it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:252 - 0

/*
 * dav_generic_parse_locktoken
 *
 * Parse an opaquelocktoken URI into a locktoken.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:282 - 0

/*
 * dav_generic_format_locktoken
 *
 * Generate the URI for a locktoken
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:296 - 0

/*
 * dav_generic_compare_locktoken
 *
 * Determine whether two locktokens are the same
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:307 - 0

/*
 * dav_generic_really_open_lockdb:
 *
 * If the database hasn't been opened yet, then open the thing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:335 - 0

/* all right. it is opened now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:341 - 0

/*
 * dav_generic_open_lockdb:
 *
 * "e;open"e; the lock database, as specified in the global server configuration.
 * If force is TRUE, then the database is opened now, rather than lazily.
 *
 * Note that only one can be open read/write.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:370 - 0

/* done initializing. return it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:374 - 0

/* ### add a higher-level comment? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:394 - 0

/*
 * dav_generic_build_key
 *
 * Given a pathname, build a DAV_TYPE_FNAME lock database key.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:405 - 0

/* ### does this allocation have a proper lifetime? need to check */
 /* ### can we use a buffer for this? */

 /* size is TYPE + pathname + null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:428 - 0

/*
 * dav_generic_save_lock_record: Saves the lock information specified in the
 * direct and indirect lock lists about path into the lock database.
 * If direct and indirect == NULL, the key is removed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:460 - 0

/* If nothing to save, delete key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:484 - 0

/* Direct lock - lock_discovery struct follows */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:486 - 0

/* Fixed portion of struct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:509 - 0

/* Indirect lock prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:595 - 0

/* Create and fill a dav_lock_discovery structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:599 - 0

/* Copy the dav_lock_discovery_fixed portion */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:603 - 0

/* Copy the lock token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:607 - 0

/* Do we have an owner field? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:636 - 0

/* Create and fill a dav_lock_indirect structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:643 - 0

/* length of datum */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:689 - 0

/* resolve <indirect>, returning <*direct> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:703 - 0

/* ### insert a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:755 - 0

/* ---------------------------------------------------------------
 *
 * General lock functions
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:764 - 0

/* We don't need to do anything. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:808 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:823 - 0

/* hook into the result list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:836 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:848 - 0

/* DAV_GETLOCKS_PARTIAL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:852 - 0

/* hook into the result list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:877 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:900 - 0

/* ### nobody uses the resolving right now! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:908 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:972 - 0

/*
 * ### when we store the lock more directly, we need to update
 * ### lock->rectype and lock->is_locknull
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:980 - 0

/* ### this works for any <lock> rectype */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:983 - 0

/* ### shut off the const warning for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:993 - 0

/* create and link in the right kind of lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1002 - 0

/* ### shut off the const warning for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1010 - 0

/* DAV_LOCKREC_INDIRECT(_PARTIAL) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1014 - 0

/* ### shut off the const warning for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1131 - 0

/* the lock was refreshed. return the lock. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1155 - 0

/* for each indirect lock, find its direct lock and refresh it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1162 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1166 - 0

/* the lock was refreshed. return the lock. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1179 - 0

/* save the (resolved) direct lock back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1182 - 0

/* ### push a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1208 - 0

/* lookup_resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/locks.c:1210 - 0

/* ctx */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:25 - 0

/* per-dir configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:62 - 0

/*
 * Command handler for the DAVGenericLockDB directive, which is TAKE1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:82 - 0

/* per server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:98 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:99 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:100 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:101 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:102 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/lock/mod_dav_lock.c:103 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:21 - 0

/* for apr_text_header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:51 - 0

/* start at 1, and count up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:91 - 0

/* first: locate the namespace in the namespace table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:96 - 0

/* not our property (the namespace matched none of ours) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:100 - 0

/* second: look for the property in the liveprop specs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:107 - 0

/* not our property (same namespace, but no matching prop name) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:121 - 0

/* map the provider-local NS into a global NS index */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/liveprop.c:134 - 0

/* register the namespace URIs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:46 - 0

/* for apr_is* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:68 - 0

/* used to denote that mod_dav will be handling this request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:79 - 0

/* per-dir configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:89 - 0

/* per-server configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:99 - 0

/* forward-declare for use in configuration lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:102 - 0

/* DAV methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:114 - 0

/* DBG0("e;dav_init_handler"e;); */

 /* Register DAV methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:129 - 0

/* ### this isn't used at the moment... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:143 - 0

/* ### nothing to merge right now... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:150 - 0

/* NOTE: dir==NULL creates the default per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:156 - 0

/* clean up the directory to remove any trailing slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:242 - 0

/*
 * Command handler for the DAV directive, which is TAKE1.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:265 - 0

/* by the time they use it, the provider should be loaded and
 registered with us. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:276 - 0

/*
 * Command handler for the DAVDepthInfinity directive, which is FLAG.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:291 - 0

/*
 * Command handler for DAVMinTimeout directive, which is TAKE1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:322 - 0

/* begin the response now... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:357 - 0

/* ### should move this namespace somewhere (with the others!) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:358 - 0

//apache.org/dav/xmlns\"e;"e;, r); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:373 - 0

/* here's our mod_dav specific tag: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:393 - 0

/*
 * Apache's URI escaping does not replace '&' since that is a valid character
 * in a URI (to form a query section). We must explicitly handle it so that
 * we can embed the URI into an XML document.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:402 - 0

/* check the easy case... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:459 - 0

/* assume this includes <propstat> and is quoted properly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:466 - 0

/*
 * We supply the description, so we know it doesn't have to
 * have any escaping/encoding applied to it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:481 - 0

/* Factorized helper function: prep request_rec R for a multistatus
 response and write <multistatus> tag into BB, destined for
 R->output_filters. Use xml NAMESPACES in initial tag, if
 non-NULL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:489 - 0

/* Set the correct status and Content-Type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:493 - 0

/* Send the headers and actual multistatus response now... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:509 - 0

/* Finish a multistatus response started by dav_begin_multistatus: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:517 - 0

/* indicate the end of the response body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:521 - 0

/* deliver whatever might be remaining in the brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:608 - 0

/* send the multistatus and tell Apache the request/response is DONE. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:626 - 0

/* Apache will supply a default message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:630 - 0

/* Per HTTP/1.1, S10.2.2: add a Location header to contain the
 * URI that was created. */

 /* Convert locn to an absolute URI, and return in Location header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:636 - 0

/* ### insert an ETag header? see HTTP/1.1 S10.2.2 */

 /* Apache doesn't allow us to set a variable body for HTTP_CREATED, so
 * we must manufacture the entire response. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:645 - 0

/* ### move to dav_util? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:664 - 0

/* The caller will return an HTTP_BAD_REQUEST. This will augment the
 * default message that Apache provides. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:676 - 0

/* default is "e;T"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:687 - 0

/* The caller will return an HTTP_BAD_REQUEST. This will augment the
 * default message that Apache provides. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:694 - 0

/* resolve a request URI to a resource descriptor.
 *
 * If label_allowed != 0, then allow the request target to be altered by
 * a Label: header.
 *
 * If use_checked_in is true, then the repository provider should return
 * the resource identified by the DAV:checked-in property of the resource
 * identified by the Request-URI.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:724 - 0

/* resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:734 - 0

/* Note: this shouldn't happen, but just be sure... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:761 - 0

/* open the thing lazily */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:793 - 0

/* detect invalid ranges */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:812 - 0

/* we now have a valid range */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:816 - 0

/* handle the GET method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:827 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:827 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:837 - 0

/* set up the HTTP headers for the response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:845 - 0

/* Handle conditional requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:855 - 0

/* okay... time to deliver the content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:873 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:874 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:874 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:879 - 0

/* Note: depth == 0. Implies no need for a multistatus response. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:882 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:889 - 0

/* handle the PUT method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:906 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:907 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:907 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:912 - 0

/* If not a file or collection resource, PUT not allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:921 - 0

/* Cannot PUT a collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:943 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:949 - 0

/* RFC 2616 14.16: If we receive an invalid Content-Range we must
 * not use the content.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:963 - 0

/* make sure the resource can be modified (if versioning repository) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:965 - 0

/* not parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:967 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:971 - 0

/* Create the new file in the repository */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:988 - 0

/* a range was provided. seek to the start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1062 - 0

/* commit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1075 - 0

/* restore modifiability of resources back to what they were */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1077 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1081 - 0

/* don't forget err2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1086 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1095 - 0

/* ### place the Content-Type and Content-Language into the propdb */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1111 - 0

/* notify lock system that we have created/replaced a resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1154 - 0

/* ### move this to dav_util? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1160 - 0

/* just drop some data into an dav_response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1173 - 0

/* handle the DELETE method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1184 - 0

/* We don't use the request body right now, so torch it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1189 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1190 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1190 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1205 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1212 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1246 - 0

/* if versioned resource, make sure parent is checked out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1247 - 0

/* parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1249 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1253 - 0

/* try to remove the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1256 - 0

/* restore writability of parent back to what it was */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1258 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1270 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1285 - 0

/* generate DAV:supported-method-set OPTIONS response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1301 - 0

/* show all supported methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1317 - 0

/* check for support of specific methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1323 - 0

/* go through attributes to find method name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1336 - 0

/* see if method is supported */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1352 - 0

/* generate DAV:supported-live-property-set OPTIONS response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1364 - 0

/* open lock database, to report on supported lock properties */
 /* ### should open read-only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1374 - 0

/* open the property database (readonly) for the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1389 - 0

/* show all supported live properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1396 - 0

/* check for support of specific live property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1403 - 0

/* go through attributes to find name and namespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1421 - 0

/* default namespace to DAV: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1425 - 0

/* check for support of property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1441 - 0

/* generate DAV:supported-report-set OPTIONS response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1469 - 0

/* show all supported reports */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1471 - 0

/* Note: we presume reports->namespace is
 * properly XML/URL quoted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1481 - 0

/* check for support of specific report */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1488 - 0

/* go through attributes to find name and namespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1504 - 0

/* default namespace to DAV: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1511 - 0

/* Note: we presume reports->nmspace is
 * properly XML/URL quoted
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1535 - 0

/* handle the SEARCH method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1543 - 0

/* If no search provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1551 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1551 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1561 - 0

/* set up the HTTP headers for the response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1573 - 0

/* okay... time to search the content */
 /* Let's validate XML and process walk function
 * in the hook function
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1578 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1582 - 0

/* We have results in multi_status */
 /* Should I pass namespace?? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1590 - 0

/* handle the OPTIONS method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1618 - 0

/* resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1619 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1619 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1624 - 0

/* parse any request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1628 - 0

/* note: doc == NULL if no request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1646 - 0

/* DAV header additions registered by external modules */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1671 - 0

/*
 * If there is a versioning provider, generate DAV headers
 * for versioning options.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1694 - 0

/* this tells MSFT products to skip looking for FrontPage extensions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1697 - 0

/*
 * Determine which methods are allowed on the resource.
 * Three cases: resource is null (3), is lock-null (7.4), or exists.
 *
 * All cases support OPTIONS, and if there is a lock provider, LOCK.
 * (Lock-) null resources also support MKCOL and PUT.
 * Lock-null supports PROPFIND and UNLOCK.
 * Existing resources support lots of stuff.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1709 - 0

/* ### take into account resource type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1713 - 0

/* resource exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1735 - 0

/* resource is lock-null. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1748 - 0

/* resource is null. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1762 - 0

/* If there is a versioning provider, add versioning methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1783 - 0

/* ### we might not support this DeltaV option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1795 - 0

/* If there is a bindings provider, see if resource is bindable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1801 - 0

/* If there is a search provider, set SEARCH in option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1806 - 0

/* additional methods registered by external modules */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1823 - 0

/* Generate the Allow header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1828 - 0

/* first, compute total length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1833 - 0

/* add 1 for comma or null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1853 - 0

/* If there is search set_option_head function, set head */
 /* DASL: <DAV:basicsearch>
 * DASL: <http://foo.bar.com/syntax1>
 * DASL: <http://akuma.com/syntax2>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1865 - 0

/* if there was no request body, then there is no response body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1869 - 0

/* ### this sends a Content-Type. the default OPTIONS does not. */

 /* ### the default (ap_send_http_options) returns OK, but I believe
 * ### that is because it is the default handler and nothing else
 * ### will run after the thing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1877 - 0

/* handle each options request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1879 - 0

/* check for something we recognize first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1910 - 0

/* send the options response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1914 - 0

/* send the headers and response body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1973 - 0

/* ### do something with err! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1978 - 0

/* some props were expected on this collection/resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1984 - 0

/* no props on this collection/resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:1991 - 0

/* ### what to do about closing the propdb on server failure? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2015 - 0

/* handle the PROPFIND method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2026 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2027 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2027 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2038 - 0

/* dav_get_depth() supplies additional information for the
 * default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2062 - 0

/* note: doc == NULL if no request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2065 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2071 - 0

/* ### validate that only one of these three elements is present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2074 - 0

/* note: no request body implies allprop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2084 - 0

/* "e;propfind"e; element must have one of the above three children */

 /* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2104 - 0

/* ### should open read-only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2114 - 0

/* if we have a lock database, then we can walk locknull resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2118 - 0

/* send <multistatus> tag, with all doc->namespaces attached. */

 /* NOTE: we *cannot* leave out the doc's namespaces from the
 initial <multistatus> tag. if a 404 was generated for an HREF,
 then we need to spit out the doc's namespaces for use by the
 404. Note that <response> elements will override these ns0,
 ns1, etc, but NOT within the <response> scope for the
 badprops. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2129 - 0

/* Have the provider walk the resource. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2153 - 0

/* the response has been sent. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2167 - 0

/* ### might be nice to sort by status code and description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2177 - 0

/* nothing was assigned here yet, so make it a 424 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2286 - 0

/* handle the PROPPATCH method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2302 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2303 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2303 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2315 - 0

/* note: doc == NULL if no request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2318 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2329 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2333 - 0

/* make sure the resource can be modified (if versioning repository) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2335 - 0

/* not parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2337 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2343 - 0

/* undo any auto-checkout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2344 - 0

/*undo*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2344 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2354 - 0

/* ### what to do about closing the propdb on server failure? */

 /* ### validate "e;live"e; properties */

 /* set up an array to hold property operation contexts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2374 - 0

/* make sure that a "e;prop"e; child exists for set/remove */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2378 - 0

/* undo any auto-checkout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2379 - 0

/*undo*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2379 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2381 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2406 - 0

/* ### should test that we found at least one set/remove */

 /* execute all of the operations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2413 - 0

/* generate a failure/success response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2423 - 0

/* make sure this gets closed! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2426 - 0

/* complete any auto-versioning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2427 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2434 - 0

/* ### should probably use something new to pass along this text... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2439 - 0

/* the response has been sent. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2453 - 0

/* make sure to set the Apache request fields properly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2476 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2499 - 0

/* handle the MKCOL method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2511 - 0

/* handle the request body */
 /* ### this may move lower once we start processing bodies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2517 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2518 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2518 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2548 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2552 - 0

/* if versioned resource, make sure parent is checked out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2553 - 0

/* parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2555 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2559 - 0

/* try to create the collection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2563 - 0

/* restore modifiability of parent back to what it was */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2565 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2572 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2595 - 0

/* notify lock system that we have created/replaced a resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2615 - 0

/* handle the COPY and MOVE methods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2637 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2638 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2639 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2648 - 0

/* If not a file or collection resource, COPY/MOVE not allowed */
 /* ### allow COPY/MOVE of DeltaV resource types */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2657 - 0

/* get the destination URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2660 - 0

/* Look in headers provided by Netscape's Roaming Profiles */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2665 - 0

//%s%s"e;, nscp_host, nscp_path); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2668 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2674 - 0

/* must_be_absolute */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2677 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2692 - 0

/* propagate the WWW-Authorization header up from the
 * subreq so the client sees it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2703 - 0

/* Resolve destination resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2704 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2705 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2709 - 0

/* are the two resources handled by the same repository? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2719 - 0

/* get and parse the overwrite header value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2721 - 0

/* dav_get_overwrite() supplies additional information for the
 * default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2726 - 0

/* quick failure test: if dest exists and overwrite is false. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2734 - 0

/* are the source and destination the same? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2744 - 0

/* get and parse the Depth header value. "e;0"e; and "e;infinity"e; are legal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2746 - 0

/* dav_get_depth() supplies additional information for the
 * default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2751 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2757 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2841 - 0

/* ### for now, we don't need anything in the body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2847 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2868 - 0

/* if this is a move, then the source parent collection will be modified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2870 - 0

/* parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2875 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2880 - 0

/*
 * Remember the initial state of the destination, so the lock system
 * can be notified as to how it changed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2886 - 0

/* In a MOVE operation, the destination is replaced by the source.
 * In a COPY operation, if the destination exists, is under version
 * control, and is the same resource type as the source,
 * then it should not be replaced, but modified to be a copy of
 * the source.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2903 - 0

/* If the destination must be created or replaced,
 * make sure the parent collection is writable
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2907 - 0

/*parent_only*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2909 - 0

/* could not make destination writable:
 * if move, restore state of source parent
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2913 - 0

/* undo */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2914 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2920 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2925 - 0

/* If source and destination parents are the same, then
 * use the same resource object, so status updates to one are reflected
 * in the other, when doing auto-versioning. Otherwise,
 * we may try to checkin the parent twice.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2955 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2959 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2979 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:2988 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3000 - 0

/* notify lock system that we have created/replaced a resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3054 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3055 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3055 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3060 - 0

/* Check if parent collection exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3062 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3079 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3086 - 0

/* ### add a higher-level description to err? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3145 - 0

/* ### add a higher-level description to err? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3149 - 0

/* New lock request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3156 - 0

/* apply lower bound (if any) from DAVMinTimeout directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3163 - 0

/* ### add a higher-level description to err? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3192 - 0

/* the response has been sent. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3230 - 0

/* ### should provide more specifics... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3236 - 0

/* ### should provide more specifics... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3253 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3254 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3254 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3277 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3308 - 0

/* if no versioning provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3312 - 0

/* ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3313 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3313 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3318 - 0

/* remember the pre-creation resource state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3321 - 0

/* parse the request body (may be a version-control element) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3325 - 0

/* note: doc == NULL if no request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3338 - 0

/* get the version URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3353 - 0

/* get version URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3376 - 0

/* cannot add resource to existing version history */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3383 - 0

/* resource must be unversioned and versionable, or version selector */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3391 - 0

/* the DeltaV spec says if resource is a version selector,
 * then VERSION-CONTROL is a no-op
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3398 - 0

/* no body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3414 - 0

/* if in versioned collection, make sure parent is checked out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3415 - 0

/* parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3420 - 0

/* attempt to version-control the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3422 - 0

/*undo*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3422 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3431 - 0

/* revert writability of parent directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3432 - 0

/*undo*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3432 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3434 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3443 - 0

/* if the resource is lockable, let lock system know of new resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3459 - 0

/* notify lock system that we have created/replaced a resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3479 - 0

/*replaced*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3482 - 0

/* handle the CHECKOUT method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3497 - 0

/* If no versioning provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3508 - 0

/* This supplies additional information for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3517 - 0

/* ### we want generic 403/409 XML reporting here */
 /* ### DAV:must-not-have-label-and-apply-to-version */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3545 - 0

/* strip_white */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3566 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3567 - 0

/*label_allowed*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3598 - 0

/*auto_checkout*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3613 - 0

/* if no working resource created, return OK,
 * else return CREATED with working resource URL in Location header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3617 - 0

/* no body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3625 - 0

/* handle the UNCHECKOUT method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3633 - 0

/* If no versioning provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3641 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3642 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3642 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3652 - 0

/* Check the state of the resource: must be a file or collection,
 * must be versioned, and must be checked out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3682 - 0

/* no body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3688 - 0

/* handle the CHECKIN method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3699 - 0

/* If no versioning provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3708 - 0

/* This supplies additional information for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3718 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3719 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3719 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3729 - 0

/* Check the state of the resource: must be a file or collection,
 * must be versioned, and must be checked out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3779 - 0

/* If no versioning provider, or UPDATE not supported,
 * decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3785 - 0

/* dav_get_depth() supplies additional information for the
 * default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3790 - 0

/* parse the request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3796 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3803 - 0

/* check for label-name or version element, but not both */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3807 - 0

/* get the href element */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3822 - 0

/* a depth greater than zero is only allowed for a label */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3829 - 0

/* get the target value (a label or a version URI) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3839 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3840 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3840 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3859 - 0

/* if target is a version, resolve the version resource */
 /* ### dav_lookup_uri only allows absolute URIs; is that OK? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3862 - 0

/* must_be_absolute */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3865 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3882 - 0

/* resolve version resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3883 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3884 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3888 - 0

/* NULL out target, since we're using a version resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3892 - 0

/* do the UPDATE operation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3907 - 0

/* no body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3913 - 0

/* context maintained during LABEL treewalk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3916 - 0

/* input: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3922 - 0

/* label operation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3928 - 0

/* version provider hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3955 - 0

/* do the label operation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3964 - 0

/* ### need utility routine to add response with description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3985 - 0

/* If no versioning provider, or the provider doesn't support
 * labels, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3990 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3991 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:3991 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4001 - 0

/* dav_get_depth() supplies additional information for the
 * default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4006 - 0

/* parse the request body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4012 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4019 - 0

/* check for add, set, or remove element */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4036 - 0

/* get the label string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4053 - 0

/* do the label operation walk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4092 - 0

/* no body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4107 - 0

/* If no versioning provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4114 - 0

/* This supplies additional information for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4120 - 0

/* Ask repository module to resolve the resource.
 * First determine whether a Target-Selector header is allowed
 * for this report.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4125 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4135 - 0

/* set up defaults for the report response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4139 - 0

/* run report hook */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4171 - 0

/* if no versioning provider, or the provider does not support workspaces,
 * decline the request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4177 - 0

/* ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4178 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4178 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4183 - 0

/* parse the request body (must be a mkworkspace element) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4225 - 0

/*replaced*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4235 - 0

/* if no versioning provider, or the provider does not support activities,
 * decline the request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4241 - 0

/* ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4242 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4242 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4247 - 0

/* MKACTIVITY does not have a defined request body. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4265 - 0

/* the provider must say whether the resource can be created as
 an activity, i.e. whether the location is ok. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4290 - 0

/*replaced*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4295 - 0

/* ### */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4315 - 0

/* If no versioning provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4323 - 0

/* This supplies additional information for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4331 - 0

/* This supplies additional information for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4338 - 0

/* This supplies additional information for the default msg. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4344 - 0

/* strip_white */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4346 - 0

/* get a subrequest for the source, so that we can get a dav_resource
 for that source. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4348 - 0

/* must_be_absolute */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4351 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4367 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4368 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4385 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4385 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4428 - 0

/* the response was fully generated by the merge() hook. */
 /* ### urk. does this prevent logging? need to check... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4446 - 0

/* If no bindings provider, decline the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4450 - 0

/* Ask repository module to resolve the resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4451 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4451 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4461 - 0

/* get the destination URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4464 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4470 - 0

/* must_be_absolute */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4473 - 0

/* This supplies additional information for the default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4500 - 0

/* resolve binding resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4501 - 0

/* label_allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4502 - 0

/* use_checked_in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4506 - 0

/* are the two resources handled by the same repository? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4515 - 0

/* get and parse the overwrite header value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4517 - 0

/* dav_get_overwrite() supplies additional information for the
 * default message. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4522 - 0

/* quick failure test: if dest exists and overwrite is false. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4529 - 0

/* are the source and destination the same? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4578 - 0

/* prepare the destination collection for modification */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4579 - 0

/* parent_only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4581 - 0

/* could not make destination writable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4595 - 0

/* restore parent collection states */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4598 - 0

/* unlock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4612 - 0

/* just log a warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4627 - 0

/*
 * Response handler for DAV resources
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4673 - 0

/*
 * These are the DAV methods we handle.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4685 - 0

/*
 * These are methods that we don't handle directly, but let the
 * server's default handler do for us as our agent.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4795 - 0

/* BIND method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4800 - 0

/* DASL method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4822 - 0

/* if DAV is not enabled, then we've got nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4849 - 0

/* ### this is wrong. We should only be setting the r->handler for the
 * requests that mod_dav knows about. If we set the handler for M_POST
 * requests, then CGI scripts that use POST will return the source for the
 * script. However, mod_dav DOES handle POST, so something else needs
 * to be fixed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4857 - 0

/* We are going to be handling the response for this resource. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4878 - 0

/*---------------------------------------------------------------------------
 *
 * Configuration info for the module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4885 - 0

/* per directory/location */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4889 - 0

/* per directory/location, or per server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4894 - 0

/* per directory/location, or per server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4905 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4906 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4907 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4908 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4909 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/mod_dav.c:4910 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:168 - 0

/* TWO null terms */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:171 - 0

/* the pool we should use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:172 - 0

/* the request record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:174 - 0

/* the target resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:176 - 0

/* open of db has been deferred */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:177 - 0

/* underlying database containing props */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:179 - 0

/* translation of an elem->ns to URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:180 - 0

/* namespace mapping */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:182 - 0

/* the lock database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:184 - 0

/* work buffer for lockdiscovery property */

 /* if we ever run a GET subreq, it will be stored here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:189 - 0

/* hooks we should use for processing (based on the target resource) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:193 - 0

/* NOTE: dav_core_props[] and the following enum must stay in sync. */
/* ### move these into a "e;core"e; liveprop provider? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:202 - 0

/* sentinel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:213 - 0

/*
** This structure is used to track information needed for a rollback.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:217 - 0

/* select one of the two rollback context structures based on the
 value of dav_prop_ctx.is_liveprop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:235 - 0

/* policy: liveprop providers cannot define no-namespace properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:239 - 0

/* check liveprop providers first, so they can define core properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:246 - 0

/* check for core property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:256 - 0

/* no provider for this property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:277 - 0

/* ### this test seems redundant... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:283 - 0

/* is the live property read/write? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:288 - 0

/*
 ** Check the liveprop provider (if this is a provider-defined prop)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:295 - 0

/* these are defined as read-only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:307 - 0

/* these are defined as read/write */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:315 - 0

/*
 ** We don't recognize the property, so it must be dead (and writable)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:321 - 0

/* do a sub-request to fetch properties for the target resource's URI. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:324 - 0

/* need to escape the uri that's in the resource struct because during
 * the property walker it's not encoded. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:345 - 0

/* fast-path the common case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:364 - 0

/* fast-path the no-locks case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:369 - 0

/*
 ** This may modify the buffer. value may point to
 ** wb_lock.pbuf or a string constant.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:376 - 0

/* make a copy to isolate it from changes to wb_lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:412 - 0

/* fall through to interpret as a dead property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:416 - 0

/* if something was supplied, then insert it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:421 - 0

/* use D: prefix to refer to the DAV: namespace URI,
 * and let the namespace attribute default to "e;DAV:"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:429 - 0

/* use D: prefix to refer to the DAV: namespace URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:434 - 0

/* use D: prefix to refer to the DAV: namespace URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:456 - 0

/* this is a "e;core"e; property that we define */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:461 - 0

/* ask the provider (that defined this prop) to insert the prop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:499 - 0

/* we're trying to open the db; turn off the 'deferred' flag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:502 - 0

/* ask the DB provider to open the thing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:512 - 0

/*
 ** NOTE: propdb->db could be NULL if we attempted to open a readonly
 ** database that doesn't exist. If we require read/write
 ** access, then a database was created and opened.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:553 - 0

/* ### what to do about closing the propdb on server failure? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:565 - 0

/* Currently, mod_dav's pool usage doesn't allow clearing this pool. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:582 - 0

/* if not just getting supported live properties,
 * scan all properties in the dead prop database
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:588 - 0

/*ro*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:591 - 0

/* initialize the result with some start tags... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:596 - 0

/* if there ARE properties, then scan them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:602 - 0

/* define (up front) any namespaces the db might need */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:605 - 0

/* get the first property name, beginning the scan */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:638 - 0

/* the value was not requested, so just add an empty
 tag specifying the property name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:647 - 0

/* all namespaces have been entered into xi. generate them into
 the output now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:651 - 0

/* propdb->db != NULL */

 /* add namespaces for all the liveprop providers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:657 - 0

/* ask the liveprop providers to insert their properties */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:713 - 0

/* ### NOTE: we should pass in TWO buffers -- one for keys, one for
 the marks */

 /* we will ALWAYS provide a "e;good"e; result, even if it is EMPTY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:721 - 0

/* ### the marks should be in a buffer! */
 /* allocate zeroed-memory for the marks. These marks indicate which
 liveprop namespaces we've generated into the output xmlns buffer */

 /* same for the liveprops */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:736 - 0

/*
 ** First try live property providers; if they don't handle
 ** the property, then try looking it up in the propdb.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:752 - 0

/* insert the property. returns 1 if an insertion was done. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:761 - 0

/*
 ** Add the liveprop's namespace URIs. Note that provider==NULL
 ** for core properties.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:783 - 0

/* property added. move on to the next property. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:787 - 0

/* nothing to do. fall thru to allow property to be handled
 as a dead property */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:803 - 0

/* The property wasn't a live property, so look in the dead property
 database. */

 /* make sure propdb is really open */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:809 - 0

/*ro*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:818 - 0

/* only bother to look if a database exists */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:825 - 0

/* ### what to do? continue doesn't seem right... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:832 - 0

/* if we haven't added the db's namespaces, then do so... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:841 - 0

/* not found as a live OR dead property. add a record to the "e;bad"e;
 propstats */

 /* make sure we've started our "e;bad"e; propstat */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:851 - 0

/* output this property's name (into the bad propstats) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:860 - 0

/* default to start with the good */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:863 - 0

/* we may not have any "e;bad"e; results */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:865 - 0

/* "e;close"e; the bad propstat */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:871 - 0

/* if there are no good props, then just return the bad */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:876 - 0

/* hook the bad propstat to the end of the good one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:881 - 0

/* add in all the various namespaces, and return them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:900 - 0

/* this is a "e;core"e; property that we define */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:958 - 0

/*
 ** The property is supposed to be stored into the dead-property
 ** database. Make sure the thing is truly open (and writable).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:963 - 0

/* ro */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:967 - 0

/*
 ** There should be an open, writable database in here!
 **
 ** Note: the database would be NULL if it was opened readonly and it
 ** did not exist.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:983 - 0

/*
 ** Prep the element => propdb namespace index mapping, inserting
 ** namespace URIs into the propdb that don't exist.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1026 - 0

/* save the old value so that we can do a rollback. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1034 - 0

/* Note: propdb->mapping was set in dav_prop_validate() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1077 - 0

/*
 ** Note that a commit implies ctx->err is NULL. The caller should assume
 ** a status of HTTP_OK for this case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/props.c:1095 - 0

/* do nothing if there is no rollback information. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:24 - 0

/* forward-declare */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:27 - 0

/*
** The namespace URIs that we use. There will only ever be "e;DAV:"e;.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:33 - 0

/* sentinel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:36 - 0

/*
** Define each of the core properties that this provider will handle.
** Note that all of them are in the DAV: namespace, which has a
** provider-local index of 0.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:49 - 0

/* sentinel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:72 - 0

/* additional type info provided by external modules ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:108 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:115 - 0

/* ### should we denote lock-null resources? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:117 - 0

/* becomes: <D:resourcetype/> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:132 - 0

/* ### bad juju */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:142 - 0

/*
 ** This property is known, but not defined as a liveprop. However,
 ** it may be a dead property.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:171 - 0

/* we inserted what was asked for */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:188 - 0

/* all of our writable props go in the dead prop database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:199 - 0

/* patch_exec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:200 - 0

/* patch_commit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:201 - 0

/* patch_rollback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/std_liveprop.c:224 - 0

/* register the namespace URIs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:121 - 0

/* NOTE: this does not retain prior contents */

 /* NOTE: this function is used to init the first pointer, too, since
 the PAD will be larger than alloc_len (0) for zeroed structures */

 /* grow if we don't have enough for the requested size plus padding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:128 - 0

/* set the new length; min of MINSIZE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:139 - 0

/* initialize a buffer and copy the specified (null-term'd) string into it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:147 - 0

/* append a string to the end of the buffer, adjust length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:158 - 0

/* place a string on the end of the buffer, do NOT adjust length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:168 - 0

/* place some memory on the end of a buffer; do NOT adjust length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:197 - 0

/* first thing to do is parse the URI into various components */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:204 - 0

/* the URI must be an absoluteURI (WEBDAV S9.3) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:211 - 0

/* the URI must not have a query (args) or a fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:230 - 0

/* ### not sure this works if the current request came in via https: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:235 - 0

/* insert a port if the URI did not contain one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:239 - 0

/* now, verify that the URI uses the same scheme as the current.
 request. the port must match our port.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:252 - 0

//hostname:%d)"e; APR_EOL_STR 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:253 - 0

//hostname:%d)"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:281 - 0

/* now, if a hostname was provided, then verify that it represents the
 same server as the current connection. note that we just use our
 port, since we've verified the URI matches ours */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:293 - 0

/* we have verified that the requested URI denotes the same server as
 the current request. Therefore, we can use ap_sub_req_lookup_uri() */

 /* reconstruct a URI as just the path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:309 - 0

/* ---------------------------------------------------------------
**
** XML UTILITY FUNCTIONS
*/

/* validate that the root element uses a given DAV: tagname (TRUE==valid) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:323 - 0

/* find and return the (unique) child with a given DAV: tagname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:335 - 0

/* gather up all the CDATA into a single string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:364 - 0

/* some fast-path cases:
 * 1) zero-length cdata
 * 2) a single piece of cdata with no whitespace to strip
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:398 - 0

/* trim leading whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:399 - 0

/* assume: return false for '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:404 - 0

/* trim trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:427 - 0

/* this "e;should"e; not overwrite a prefix mapping */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:430 - 0

/* note: this may overwrite an existing URI->prefix mapping, but it
 doesn't matter -- any prefix is usuable to specify the URI. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:479 - 0

/* ---------------------------------------------------------------
**
** Timeout header processing
**
*/

/* dav_get_timeout: If the Timeout: header exists, return a time_t
 * when this lock is expected to expire. Otherwise, return
 * a time_t of DAV_TIMEOUT_INFINITE.
 *
 * It's unclear if DAV clients are required to understand
 * Seconds-xxx and Infinity time values. We assume that they do.
 * In addition, for now, that's all we understand, too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:503 - 0

/* Use the first thing we understand, or infinity if
 * we don't understand anything.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:526 - 0

/* ---------------------------------------------------------------
**
** If Header processing
**
*/

/* add_if_resource returns a new if_header, linking it to next_ih.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:549 - 0

/* add_if_state adds a condition to an if_header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:568 - 0

/* If the state token cannot be parsed, treat it as an
 * unknown state; this will evaluate to "e;false"e; later
 * during If header validation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:626 - 0

/* scope of current production; NULL=no-tag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:643 - 0

/* Tagged-list production - following states apply to this uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:652 - 0

/* 2518 specifies this must be an absolute URI; just take the
 * relative part for later comparison against r->uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:660 - 0

/* note that parsed_uri.path is allocated; we can trash it */

 /* clean up the URI a bit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:665 - 0

/* the resources we will compare to have unencoded paths */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:683 - 0

/* List production */

 /* If a uri has not been encountered, this is a No-Tagged-List */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:706 - 0

/* List is the entire production (in a uri scope) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:835 - 0

/* dav_validate_resource_state:
 * Returns NULL if path/uri meets if-header and lock requirements
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:914 - 0

/* lock_list now determines whether we're in State 1, 2, or 3. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:936 - 0

/*
 ** Strictly speaking, we don't need this loop. Either the first
 ** (and only) lock will be EXCLUSIVE, or none of them will be.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1035 - 0

/* get the resource's etag; we may need it during the checks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1038 - 0

/* how many state_lists apply to this URI? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1041 - 0

/* If there are if-headers, fail if this resource
 * does not match at least one state_list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1048 - 0

/* DBG2("e;uri=<%s> if_uri=<%s>"e;, uri, ifhdr_scan->uri ? ifhdr_scan->uri : "e;(no uri)"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1053 - 0

/*
 ** A tagged-list's URI doesn't match this resource's URI.
 ** Skip to the next state_list to see if it will match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1060 - 0

/* this state_list applies to this resource */

 /*
 ** ### only one state_list should ever apply! a no-tag, or a tagged
 ** ### where S9.4.2 states only one can match.
 **
 ** ### revamp this code to loop thru ifhdr_scan until we find the
 ** ### matching state_list. process it. stop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1071 - 0

/* To succeed, resource must match *all* of the states
 * specified in the state_list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1084 - 0

/* Do a weak entity comparison function as defined in
 * RFC 2616 13.3.3.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1105 - 0

/*
 ** The specified entity-tag does not match the
 ** entity-tag on the resource. This state_list is
 ** not going to match. Bust outta here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1117 - 0

/*
 ** The specified entity-tag DOES match the
 ** entity-tag on the resource. This state_list is
 ** not going to match. Bust outta here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1134 - 0

/* the locktoken is definitely not there! (success) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1138 - 0

/* condition == DAV_IF_COND_NORMAL */

 /*
 ** If no lockdb is provided, then validation fails for
 ** this state_list (NORMAL means we were supposed to
 ** find the token, which we obviously cannot do without
 ** a lock database).
 **
 ** Go and try the next state list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1154 - 0

/* Resource validation 'fails' if:
 * ANY of the lock->locktokens match
 * a NOT state_list->locktoken,
 * OR
 * NONE of the lock->locktokens match
 * a NORMAL state_list->locktoken.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1185 - 0

/*
 ** This state requires that the specified locktoken
 ** is NOT present on the resource. But we just found
 ** it. There is no way this state-list can now
 ** succeed, so go try another one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1245 - 0

/* Request is predicated on some unknown state token,
 * which must be presumed to *not* match, so fail
 * unless this is a Not condition. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1256 - 0

/* switch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1269 - 0

/* woo hoo! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1279 - 0

/*
 ** This label is used when we detect that a state_list is not
 ** going to match this resource. We bust out and try the next
 ** state_list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1287 - 0

/* foreach ( ifhdr_scan ) */

 /*
 ** The above loop exits for one of two reasons:
 ** 1) a state_list matched and seen_locktoken is false.
 ** 2) all if_header structures were scanned, without (1) occurring
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1385 - 0

/*
 ** We found a match! We're set... we have a matching state list,
 ** and the If: header specified the locktoken somewhere. We're done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1417 - 0

/* dav_validate_walker: Walker callback function to validate resource state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1448 - 0

/* If-* header checking */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1454 - 0

/* If-Match '*' fix. Resource existence not checked by ap_meets_conditions.
 * If-Match '*' request should succeed only if the resource exists. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1463 - 0

/* If-None-Match '*' fix. If-None-Match '*' request should succeed
 * if the resource does not exist. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1466 - 0

/* Note. If if_none_match != NULL, if_none_match is the culprit.
 * Since, in presence of If-None-Match,
 * other If-* headers are undefined. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1529 - 0

/* Set the ETag header required by dav_meets_conditions() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1538 - 0

/* Do the standard checks for conditional requests using
 * If-..-Since, If-Match etc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1543 - 0

/*
 * If we have set an ETag to headers out above for
 * dav_meets_conditions() revert this here as we do not want to set
 * the ETag in responses to requests with methods where this might not
 * be desired.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1555 - 0

/* always parse (and later process) the If: header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1624 - 0

/* else: implies a 5xx status code occurred. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1631 - 0

/* (2) Validate the parent resource if requested */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1716 - 0

/* create the 424 response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1737 - 0

/* dav_get_locktoken_list:
 *
 * Sets ltl to a locktoken_list of all positive locktokens in header,
 * else NULL if no If-header, or no positive locktokens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1753 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1758 - 0

/* Beginning of the if_state linked list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1772 - 0

/* No nodes added */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1781 - 0

/* not needed right now... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1787 - 0

/* trim leading whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1788 - 0

/* assume: return false for '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1791 - 0

/* trim trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1808 - 0

/* dav_add_vary_header
 *
 * If there were any headers in the request which require a Vary header
 * in the response, add it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1819 - 0

/* ### this is probably all wrong... I think there is a function in
 ### the Apache API to add things to the Vary header. need to check */

 /* Only versioning headers require a Vary response header,
 * so only do this check if there is a versioning provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1827 - 0

/* If Target-Selector specified, add it to the Vary header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1899 - 0

/* see mod_dav.h for docco */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1910 - 0

/* Initialize results */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1913 - 0

/* if no versioning provider, just return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1917 - 0

/* check parent resource if requested or if resource must be created */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1936 - 0

/* if parent versioned and not checked out, see if it can be */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1953 - 0

/* Try to checkout the parent collection.
 * Note that auto-versioning can only be applied to a version selector,
 * so no separate working resource will be created.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1957 - 0

/*auto_checkout*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1970 - 0

/* remember that parent was checked out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1975 - 0

/* if only checking parent, we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1979 - 0

/* if creating a new resource, see if it should be version-controlled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1992 - 0

/* remember that resource was created */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:1996 - 0

/* if resource is versioned, make sure it is checked out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2012 - 0

/* Auto-versioning can only be applied to version selectors, so
 * no separate working resource will be created. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2014 - 0

/*auto_checkout*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2026 - 0

/* remember that resource was checked out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2032 - 0

/* make sure lock database is closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2038 - 0

/*undo*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2038 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2045 - 0

/* see mod_dav.h for docco */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2057 - 0

/* If no versioning provider, this is a no-op */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2061 - 0

/* If undoing auto-checkouts, then do uncheckouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2078 - 0

/* ### should we do anything with the response? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2105 - 0

/* If the resource was checked out, and auto-checkin is enabled,
 * then check it in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2117 - 0

/*keep_checked_out*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2128 - 0

/* If parent resource was checked out, and auto-checkin is enabled,
 * then check it in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util.c:2140 - 0

/*keep_checked_out*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:32 - 0

/* ---------------------------------------------------------------
**
** Property-related lock functions
**
*/

/*
** dav_lock_get_activelock: Returns a <lockdiscovery> containing
** an activelock element for every item in the lock_discovery tree
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:71 - 0

/* if a buffer was not provided, then use an internal buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:78 - 0

/* prep the buffer with a "e;good"e; size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:122 - 0

/*
 ** This contains a complete, self-contained <DAV:owner> element,
 ** with namespace declarations and xml:lang handling. Just drop
 ** it in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:165 - 0

/*
** dav_lock_parse_lockinfo: Validates the given xml_doc to contain a
** lockinfo XML element, then populates a dav_lock structure
** with its contents.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:202 - 0

/* Parse elements in the XML body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:226 - 0

/* quote all the values in the <DAV:owner> element */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:265 - 0

/* We don't want to set indirects on the target */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:274 - 0

/* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:278 - 0

/* add to the multistatus response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:349 - 0

/* implies a 5xx status code occurred. screw the multistatus */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:373 - 0

/* If no lock database, return empty result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:379 - 0

/* ### insert a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:393 - 0

/* ### get rid of this typecast */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:395 - 0

/*undo*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:395 - 0

/*unlock*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:404 - 0

/* ### should we stop or return a multistatus? looks like STOP */
 /* ### add a higher-level description? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:412 - 0

/*
** dav_get_direct_resource:
**
** Find a lock on the specified resource, then return the resource the
** lock was applied to (in other words, given a (possibly) indirect lock,
** return the direct lock's corresponding resource).
**
** If the lock is an indirect lock, this usually means traversing up the
** namespace [repository] hierarchy. Note that some lock providers may be
** able to return this information with a traversal.
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:446 - 0

/*
 ** Find the lock specified by <locktoken> on <resource>. If it is
 ** an indirect lock, then partial results are okay. We're just
 ** trying to find the thing and know whether it is a direct or
 ** an indirect lock.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:454 - 0

/* ### add a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:466 - 0

/* we found the direct lock. return this resource. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:472 - 0

/* the lock was indirect. move up a level in the URL namespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:475 - 0

/* ### add a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:536 - 0

/* ### add a higher-level desc? */
 /* ### should return err! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:541 - 0

/* At this point, lock_resource/locktoken refers to a direct lock (key), ie
 * the root of a depth > 0 lock, or locktoken is null.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:556 - 0

/* ### fix this! */
 /* ### do something with multi_status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:605 - 0

/* ### add a higher-level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:669 - 0

/* ### do something with multi_status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/dav/main/util_lock.c:774 - 0

/* ### add a higher level desc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:49 - 0

/* ^B */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:50 - 0

/* ^P */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:51 - 0

/* ^F */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:78 - 0

/* We're cool with filtering this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:95 - 0

/* Okay, we've seen the EOS.
 * Time to pass it along down the chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:111 - 0

/* metadata bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:118 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_bucketeer.c:153 - 0

/* XXX: really should append this to the next 'real' bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:167 - 0

/*
 * If we ever see an EOS, make sure to FLUSH.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:196 - 0

/*
 * We know that SSL is CONNECTION + 5
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:244 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:245 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:246 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:247 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:248 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_dumpio.c:249 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:206 - 0

/*
 * Insert the chunk header, specifying the number of bytes in
 * the chunk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:272 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:318 - 0

/* pass each bucket down */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:322 - 0

/*
 * If we ever see an EOS, make sure to FLUSH.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:337 - 0

/**
 * Create a firehose for each main request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:468 - 0

/* make sure we only open the files on the second pass for config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/debugging/mod_firehose.c:504 - 0

/*
 * We know that SSL is CONNECTION + 5
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:109 - 0

/* initial pass only, please - in the name of efficiency */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:121 - 0

/* each subsequent WRITE pass, let's update what we echoed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:150 - 0

/* Get a single line of input from the client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:176 - 0

/* Make sure the data is flushed to the client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:188 - 0

/* Announce our intent to loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:212 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:213 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:214 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:215 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:216 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/echo/mod_echo.c:217 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_case_filter.c:80 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_case_filter.c:83 - 0

/* write */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:108 - 0

/* Environment to which record applies
 * (directory, server, or combination).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:113 - 0

/* Shouldn't ever happen. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:114 - 0

/* Boolean: "e;Example"e; directive declared
 * here?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:117 - 0

/* Boolean: did we inherit an "e;Example"e;? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:118 - 0

/* Pointer to trace string. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:119 - 0

/* Location to which this record applies. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:122 - 0

/*
 * String pointer to hold the startup trace. No harm working with a global until
 * the server is (may be) multi-threaded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:128 - 0

/*
 * Declare ourselves so the configuration routines can find and know us.
 * We'll fill it in at the end of the module.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:292 - 0

/*
 * Locate our server configuration record for the specified server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:300 - 0

/*
 * Likewise for our configuration record for the specified request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:307 - 0

/* if 0 */

/*
 * Likewise for our configuration record for a connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:342 - 0

/*
 * This utility routine traces the hooks called when the server starts up.
 * It leaves a trace in a global variable, so it should not be called from
 * a hook handler that runs in a multi-threaded situation.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:358 - 0

/*
 * If we weren't passed a configuration record, we can't figure out to
 * what location this call applies. This only happens for co-routines
 * that don't operate in a particular directory or server context. If we
 * got a valid record, extract the location (directory or server) to which
 * it applies.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:377 - 0

/*
 * Make sure that we start with a valid string, even if we have never been
 * called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:425 - 0

/*
 * This utility routine traces the hooks called while processing a
 * Connection. Its trace is kept in the pool notes of the pool associated
 * with the Connection.
 */

/*
 * Key to get and set the userdata. We should be able to get away
 * with a constant key, since in prefork mode the process will have
 * the connection and its pool to itself entirely, and in
 * multi-threaded mode each connection will have its own pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:464 - 0

/* Find existing notes and copy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:468 - 0

/* Tack addon onto copy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:486 - 0

/*
 * Since we have no request or connection to trace, or any idea
 * from where this routine was called, there's really not much we
 * can do. If we are not logging everything by way of the
 * EXAMPLE_LOG_EACH constant, do nothing in this routine.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:526 - 0

/*
 * "e;Example Wuz Here"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:552 - 0

/*
 * Allocate the space for our record from the pool supplied.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:556 - 0

/*
 * Now fill in the defaults. If there are any `parent' configuration
 * records, they'll get merged as part of a separate callback.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:563 - 0

/*
 * Finally, add our trace to the callback list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:598 - 0

/*
 * Some things get copied directly from the more-specific record, rather
 * than getting merged.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:604 - 0

/*
 * Others, like the setting of the `congenital' flag, get ORed in. The
 * setting of that particular flag, for instance, is TRUE if it was ever
 * true anywhere in the upstream configuration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:617 - 0

/*
 * Now just record our being called in the trace list. Include the
 * locations we were asked to merge.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:628 - 0

/*
 * This function gets called to create a per-server configuration
 * record. It will always be called for the "e;default"e; server.
 *
 * The return value is a pointer to the created module-specific
 * structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:641 - 0

/*
 * As with the x_create_dir_config() reoutine, we allocate and fill
 * in an empty record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:649 - 0

/*
 * Note that we were called in the trace list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:680 - 0

/*
 * Our inheritance rules are our own, and part of our module's semantics.
 * Basically, just note whence we came.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:689 - 0

/*
 * Trace our call, including what we were asked to merge.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:741 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:762 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:799 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:819 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:826 - 0

/*
 * All our process-death routine does is add its trace to the log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:845 - 0

/*
 * All our process initialiser does is add its trace to the log.
 *
 * This is a VOID hook: all defined handlers get called.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:866 - 0

/*
 * The hook runner for ap_hook_http_scheme is aliased to ap_http_scheme(),
 * a routine that the core and other modules call when they need to know
 * the URL scheme for the request. For instance, mod_ssl returns "e;https"e;
 * if the server_rec associated with the request has SSL enabled.
 *
 * This hook was named 'ap_hook_http_method' in httpd 2.0.
 *
 * This is a RUN_FIRST hook: the first handler to return a non NULL
 * value aborts the handler chain. The http_core module inserts a
 * fallback handler (with APR_HOOK_REALLY_LAST preference) that returns
 * "e;http"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:881 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:886 - 0

/* We have no claims to make about the request scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:890 - 0

/*
 * The runner for this hook is aliased to ap_default_port(), which the
 * core and other modules call when they need to know the default port
 * for a particular server. This is used for instance to omit the
 * port number from a Redirect response Location header URL if the port
 * number is equal to the default port for the service (like 80 for http).
 *
 * This is a RUN_FIRST hook: the first handler to return a non-zero
 * value is the last one executed. The http_core module inserts a
 * fallback handler (with APR_HOOK_REALLY_LAST order specifier) that
 * returns 80.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:904 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:922 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:978 - 0

/*
 * Add our trace to the log, and whether we get to write
 * content for this request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:986 - 0

/* If it's not for us, get out as soon as possible. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1004 - 0

/*
 * Now send our actual output. Since we tagged this as being
 * "e;text/html"e;, we need to embed any HTML.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1098 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1118 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1175 - 0

/*
 * This routine gives our module an opportunity to translate the URI into an
 * actual filename. If we don't do anything special, the server's default
 * rules (Alias directives and the like) will continue to be followed.
 *
 * This is a RUN_FIRST hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1209 - 0

/*
 * this routine gives our module another chance to examine the request
 * headers and to take special action. This is the first phase whose
 * hooks' configuration directives can appear inside the <Directory>
 * and similar sections, because at this stage the URI has been mapped
 * to the filename. For example this phase can be used to block evil
 * clients, while little resources were wasted on these.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1254 - 0

/*
 * Don't do anything except log the call.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1282 - 0

/*
 * This routine is called to determine and/or set the various document type
 * information bits, like Content-type (via r->content_type), language, et
 * cetera.
 *
 * This is a RUN_FIRST hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1307 - 0

/*
 * Log the call and exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1328 - 0

/*
 * This routine is called to find out under which user id to run suexec
 * Unless our module runs CGI programs, there is no reason for us to
 * mess with this information.
 *
 * This is a RUN_FIRST hook. The return value is a pointer to an
 * ap_unix_identity_t or NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1343 - 0

/*
 * This routine is called to create a connection. This hook is implemented
 * by the Apache core: there is no known reason a module should override
 * it.
 *
 * This is a RUN_FIRST hook.
 *
 * Return NULL to decline, a valid conn_rec pointer to accept.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1368 - 0

/* We have nothing to do here but trace the call, and no context
 * in which to trace it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1375 - 0

/*
 * This routine gets called shortly after the request_rec structure
 * is created. It provides the opportunity to manipulae the request
 * at a very early stage.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1384 - 0

/*
 * We have a request_rec, but it is not filled in enough to give
 * us a usable configuration. So, add a trace without context.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1392 - 0

/*
 * This routine gets called during the startup of the MPM.
 * No known existing module implements this hook.
 *
 * This is a RUN_ALL hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1462 - 0

/* [1] post read_request handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1506 - 0

/* directive name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1507 - 0

/* config action routine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1510 - 0

/* directive description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1514 - 0

/*--------------------------------------------------------------------------*/
/* */
/* Finally, the list of callback routines and data structures that provide */
/* the static hooks into our module from the other parts of the server. */
/* */
/*--------------------------------------------------------------------------*/
/*
 * Module definition for configuration. If a particular callback is not
 * needed, replace its routine name below with the word NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1527 - 0

/* per-directory config creator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1528 - 0

/* dir config merger */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1529 - 0

/* server config creator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1530 - 0

/* server config merger */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1531 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_hooks.c:1532 - 0

/* set up other request processing hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:70 - 0

/* Number of microseconds to camp out on the mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:74 - 0

/* Number of microseconds the handler sits on the lock once acquired. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:77 - 0

/* Pointer to shared memory block */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:78 - 0

/* Shared memory file name, used on some systems */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:79 - 0

/* Lock around shared memory segment access */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:82 - 0

/* Data structure for shared memory block */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:88 - 0

/*
 * Clean up the shared memory block. This function is registered as
 * cleanup function for the configuration pool, which gets called
 * on restarts. It assures that the new children will not talk to a stale
 * shared memory segment.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:114 - 0

/*
 * This routine is called in the parent, so we'll set up the shared
 * memory segment and mutex here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:150 - 0

/* Create the shared memory segment */

 /*
 * Create a unique filename using our pid. This information is
 * stashed in the global variable so the children inherit it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:159 - 0

/* Now create that segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:169 - 0

/* Created it, now let's zero it out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:173 - 0

/* Create global mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:181 - 0

/*
 * Destroy the shm segment when the configuration pool gets destroyed. This
 * happens on server restarts. The parent will then (above) allocate a new
 * shm segment that the new children will bind to.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:191 - 0

/*
 * This routine gets called when a child inits. We use it to attach
 * to the shared memory segment, and reinitialize the mutex.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:200 - 0

/*
 * Re-open the mutex for the child. Note we're reusing
 * the mutex pointer global here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:211 - 0

/* There's really nothing else we can do here, since This
 * routine doesn't return a status. If this ever goes wrong,
 * it will turn Apache into a fork bomb. Let's hope it never
 * will.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:220 - 0

/* The sample content handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:234 - 0

/*
 * The main function of the handler, aside from sending the
 * status page to the client, is to increment the counter in
 * the shared memory segment. This action needs to be mutexed
 * out using the global mutex.
 */

 /*
 * First, acquire the lock. This code is a lot more involved than
 * it usually needs to be, because the process based trylock
 * routine is not implemented on unix platforms. I left it in to
 * show how it would work if trylock worked, and for situations
 * and platforms where trylock works.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:255 - 0

/* Get out of the loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:258 - 0

/* If it's not implemented, just hang in the mutex. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:264 - 0

/* Out of the loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:271 - 0

/* Out of the loop without having the lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:279 - 0

/* Out of the loop without having the lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:303 - 0

/* Increment the counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:306 - 0

/* Send a page with our pid and the new value of the counter. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:317 - 0

/*
 * Send a page saying that we couldn't get the lock. Don't say
 * what the counter is, because without the lock the value could
 * race.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:327 - 0

/* r->header_only */

 /* Release the lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:347 - 0

/* Dispatch list for API hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:350 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:351 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:352 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:353 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:354 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/examples/mod_example_ipc.c:355 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:67 - 0

/* check the IP is not banned */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:82 - 0

/* store this client IP for the monitor to pick up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:108 - 0

/* skip check if it's not due yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:115 - 0

/* alloc lots of stuff at start, so we don't leak memory per-call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:122 - 0

/* Get a per-client count of connections in READ state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:145 - 0

/* Now check the hash for clients with too many connections in READ state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:149 - 0

/* if this isn't a trusted proxy, we mark it as bad */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/experimental/mod_noloris.c:183 - 0

/* set up default config stuff here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:40 - 0

/* size of the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:41 - 0

/* has the size been set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:52 - 0

/**
 * Buffer buckets being written to the output filter stack.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:63 - 0

/* first time in? create a context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:80 - 0

/* Do nothing if asked to filter nothing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:85 - 0

/* Empty buffer means we can potentially optimise below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:97 - 0

/* EOS means we are done. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:100 - 0

/* should we add an etag? */

 /* pass the EOS across */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:106 - 0

/* pass what we have down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:111 - 0

/* A flush takes precedence over buffering */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:114 - 0

/* pass the flush bucket across */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:118 - 0

/* pass what we have down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:123 - 0

/* metadata buckets are preserved as is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:125 - 0

/*
 * Remove meta data bucket from old brigade and insert into the
 * new.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:134 - 0

/* is our buffer full?
 * If so, send what we have down the filter chain. If the buffer
 * gets full, we can no longer compute a content length.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:141 - 0

/* pass what we have down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:186 - 0

/**
 * Buffer buckets being read from the input filter stack.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:196 - 0

/* buffer on main requests only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:202 - 0

/* first time in? create a context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:210 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:215 - 0

/* if our buffer is empty, read off the network until the buffer is full */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:245 - 0

/* if we see an EOS, we are done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:261 - 0

/* pass metadata buckets through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:268 - 0

/* read the bucket in, pack it into the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:282 - 0

/* give the caller the data they asked for from the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:287 - 0

/* last bucket read, step out of the way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:302 - 0

/* unset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:303 - 0

/* default size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:347 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:348 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:349 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:350 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:351 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_buffer.c:352 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:44 - 0

/* size of translation buffer used on output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:45 - 0

/* size of translation buffer used on input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:47 - 0

/* flush once there is no more than this much
 * space left in the translation buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:60 - 0

/* built-in restriction encountered */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:63 - 0

/* something bad happened in a filter below xlate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:64 - 0

/* input data invalid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:67 - 0

/* registered name of the output translation filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:69 - 0

/* registered name of input translation filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:73 - 0

/* source encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:74 - 0

/* how to ship on wire */
 /** module does ap_add_*_filter()? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:77 - 0

/** treat all mimetypes as text? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:88 - 0

/* single-byte translation? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:92 - 0

/* we want to be able to build a complete char here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:94 - 0

/* should we pass brigades through unchanged? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:95 - 0

/* buffer for input filtering */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:96 - 0

/* input buckets we couldn't finish translating */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:97 - 0

/* used for passing downstream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:123 - 0

/* If it is defined in the current container, use it. Otherwise, use the one
 * from the enclosing container.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:138 - 0

/* CharsetSourceEnc charset
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:149 - 0

/* CharsetDefault charset
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:160 - 0

/* CharsetOptions optionflag...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:189 - 0

/* find_code_page() is a fixup hook that checks if the module is
 * configured and the input or output potentially need to be translated.
 * If so, context is initialized for the filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:208 - 0

/* S if subrequest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:209 - 0

/* R if redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:210 - 0

/* P if proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:213 - 0

/* If we don't have a full directory configuration, bail out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:223 - 0

/* catch proxy requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:228 - 0

/* mod_rewrite indicators */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:237 - 0

/* no translation when server and network charsets are set to the same value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:242 - 0

/* Get storage for the request data and the output filter context.
 * We rarely need the input filter context, so allocate that separately.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:261 - 0

/* Set up input translation. Note: A request body can be included
 * with the OPTIONS method, but for now we don't set up translation
 * of it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:316 - 0

/* Hey... don't be so quick to use reqinfo->dc here; reqinfo may be NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:378 - 0

/* send_downstream() is passed the translated data; it puts it in a single-
 * bucket brigade and passes the brigade to the next filter
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:423 - 0

/* we don't handle chars this wide which straddle
 * buckets
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:431 - 0

/* input buffer: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:434 - 0

/* output buffer: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:464 - 0

/* code isn't smart enough to handle chars
 * straddling more than two buckets
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:555 - 0

/* walk the filter chain; see if it makes sense for our filter to
 * do any translation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:651 - 0

/* set to NULL only to quiet some gcc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:654 - 0

/* total bytes read from current bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:655 - 0

/* bytes left in current bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:662 - 0

/* no bytes left to process in the current bucket... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:681 - 0

/* We've got data, so translate it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:705 - 0

/* partial character at end of input */
 /* We need to save the final byte(s) for next time; we can't
 * convert it until we look at the next bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:714 - 0

/* bad input byte or partial char too big to store */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:718 - 0

/* if any data remains in the current bucket, split there */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:731 - 0

/* Leave the eos bucket in the brigade for reporting to
 * subsequent filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:776 - 0

/* prevent SNAFU if user coded us twice
 * in the filter chain; we can't have two
 * instances using the same context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:781 - 0

/* no idea how to translate; don't do anything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:863 - 0

/* no bytes left to process in the current bucket... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:901 - 0

/* get ready for when we access the
 * next bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:904 - 0

/* Try to fill up our tmp buffer with translated data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:909 - 0

/* Rats... we need to finish a partial character from the previous
 * bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:928 - 0

/* partial character at end of input */
 /* We need to save the final byte(s) for next time; we can't
 * convert it until we look at the next bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:939 - 0

/* bad input byte or partial char too big to store */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:944 - 0

/* It is time to flush, as there is not enough space left in the
 * current output buffer to bother with converting more data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:952 - 0

/* tmp is now empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:958 - 0

/* gotta write out what we converted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:987 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:999 - 0

/* prevent SNAFU if user coded us twice
 * in the filter chain; we can't have two
 * instances using the same context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1004 - 0

/* no idea how to translate; don't do anything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1048 - 0

/* first use the leftovers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1055 - 0

/* move anything leftover into our context for next time;
 * we don't currently "e;set aside"e; since the data came from
 * down below, but I suspect that for long-term we need to
 * do that
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1062 - 0

/* do we have output? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1075 - 0

/* XXX need to get some more data... what if the last brigade
 * we got had only the first byte of a multibyte char? we need
 * to grab more data from the network instead of returning an
 * empty brigade
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_charset_lite.c:1081 - 0

/* If we have any metadata at the head of ctx->bb, go ahead and move it
 * onto the end of bb to be returned to our caller.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:72 - 0

/* first time in? create a context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:124 - 0

/* Do nothing if asked to filter nothing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:134 - 0

/* buffer big enough for 8000 encoded bytes (6000 raw bytes) and terminator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:140 - 0

/* EOS means we are done. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:143 - 0

/* write away the tail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:151 - 0

/* pass the EOS across */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:155 - 0

/* pass what we have down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:159 - 0

/* pass any stray buckets after the EOS down the stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:166 - 0

/* flush what we can, we can't flush the tail until EOS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:169 - 0

/* pass the flush bucket across */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:173 - 0

/* pass what we have down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:178 - 0

/* metadata buckets are preserved as is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:180 - 0

/*
 * Remove meta data bucket from old brigade and insert into the
 * new.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:189 - 0

/* make sure we don't read more than 6000 bytes at a time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:192 - 0

/* size will never be more than 6000 bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:208 - 0

/* write the main base64 chunk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:225 - 0

/* pass what we have down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:249 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:250 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:251 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:252 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:253 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_data.c:254 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:29 - 0

/* bit 0 set: file probably ascii text */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:30 - 0

/* bit 1 set: header CRC present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:31 - 0

/* bit 2 set: extra field present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:32 - 0

/* bit 3 set: original file name present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:33 - 0

/* bit 4 set: file comment present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:34 - 0

/* bits 5..7: reserved */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:81 - 0

/* RFC 1952 Section 2.3 defines the gzip header:
 *
 * +---+---+---+---+---+---+---+---+---+---+
 * |ID1|ID2|CM |FLG| MTIME |XFL|OS |
 * +---+---+---+---+---+---+---+---+---+---+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:89 - 0

/* mtime */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:90 - 0

/* Unix OS_CODE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:104 - 0

/* Check whether a request is gzipped, so we can un-gzip it.
 * If a request has multiple encodings, we need the gzip
 * to be the outermost non-identity encoding.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:115 - 0

/* the output filter has two tables and a content_encoding to check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:125 - 0

/* check the usual/simple case first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:137 - 0

/* If the outermost encoding isn't gzip, there's nothing
 * we can do. So only check the last non-identity token
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:144 - 0

/* gzip:identity or other:identity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:155 - 0

/* seen all tokens */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:171 - 0

/* strip the token and find the next one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:173 - 0

/* found a non-identity token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:189 - 0

/* Outputs a long in LSB order to the given file
 * only the bottom 4 bits are required for the deflate file format.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:200 - 0

/* Inputs a string and returns a long.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:403 - 0

/* sizeof(gzip_header) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:414 - 0

/* Number of validation bytes (CRC and length) after the compressed data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:416 - 0

/* Do not update ctx->crc, see comment in flush_libz_buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:418 - 0

/* Do update ctx->crc, see comment in flush_libz_buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:426 - 0

/*
 * Do we need to update ctx->crc? Usually this is the case for
 * inflate action where we need to do a crc on the output, whereas
 * in the deflate case we need to do a crc on the input
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:521 - 0

/* copy etag to newtag up to last quote */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:523 - 0

/* append dash to newtag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:527 - 0

/* copy transform to newtag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:529 - 0

/* append quote to newtag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:577 - 0

/* Do nothing if asked to filter nothing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:603 - 0

/* We have checked above that bb is not empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:633 - 0

/* 50 is for Content-Encoding and Vary headers and ETag suffix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:643 - 0

/*
 * Only work on main request, not subrequests,
 * that are not a 204 response with no content
 * and are not tagged with the no-gzip env variable
 * and not a partial response to a Range request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:666 - 0

/* Some browsers might have problems with content types
 * other than text/html, so set gzip-only-text/html
 * (with browsermatch) for them
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:710 - 0

/* stolen from mod_negotiation: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:720 - 0

/* Otherwise, skip token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:728 - 0

/* Even if we don't accept this request based on it not having
 * the Accept-Encoding, we need to note that we were looking
 * for this header and downstream proxies should be aware of that.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:739 - 0

/* if they don't have the line, then they can't play */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:748 - 0

/* skip parameters, XXX: ;q=foo evaluation? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:754 - 0

/* retrieve next token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:794 - 0

/*
 * Remove ourselves as it does not make sense to return:
 * We are not able to init libz and pass data down the chain
 * uncompressed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:809 - 0

/* Set the filter init flag so subsequent invocations know we are
 * active.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:838 - 0

/* For a 304 response, only change the headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:849 - 0

/* initialize deflate output buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:896 - 0

/* leave notes for logging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:924 - 0

/* No need for cleanup any longer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:927 - 0

/* Remove EOS from the old list, and insert into the new. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:931 - 0

/* Okay, we've seen the EOS.
 * Time to pass it along down the chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:940 - 0

/* flush the remaining data from the zlib buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:950 - 0

/* Remove flush bucket from old brigade anf insert into the new. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:962 - 0

/*
 * Remove meta data bucket from old brigade and insert into the
 * new.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:971 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:982 - 0

/* This crc32 function is from zlib. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:985 - 0

/* write */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:986 - 0

/* We just lost const-ness,
 * but we'll just have to
 * trust zlib */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:995 - 0

/* Send what we have right now to the next filter. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1063 - 0

/* .. and nul. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1079 - 0

/* .. and nul. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1109 - 0

/* This is the deflate input filter (inflates). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1125 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1137 - 0

/* only work on main request/no subrequests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1143 - 0

/* We can't operate on Content-Ranges */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1174 - 0

/* ap_get_brigade may return success with an empty brigade for
 * a non-blocking read which would block (an empty brigade for
 * a blocking read is an issue which is simply forwarded here).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1182 - 0

/* zero length body? step aside */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1241 - 0

/* initialize deflate output buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1285 - 0

/* Move everything to the returning brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1327 - 0

/* Flush everything so far in the returning brigade, but continue
 * reading should EOS/more follow (don't lose them).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1344 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1364 - 0

/* pass through zlib inflate. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1457 - 0

/* gzip stores original size only as 4 byte value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1484 - 0

/* If we are about to return nothing for a 'blocking' read and we have
 * some data in our zlib buffer, flush it out so we can return something.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1511 - 0

/* Filter to inflate for a content-transforming proxy. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1523 - 0

/* Do nothing if asked to filter nothing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1533 - 0

/*
 * Only work on main request, not subrequests,
 * that are not a 204 response with no content
 * and not a partial response to a Range request,
 * and only when Content-Encoding ends in gzip.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1558 - 0

/* For a 304 response, only change the headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1580 - 0

/*
 * Remove ourselves as it does not make sense to return:
 * We are not able to init libz and pass data down the chain
 * compressed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1596 - 0

/* initialize inflate output buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1617 - 0

/*
 * Flush the remaining data from the zlib buffers. It is correct
 * to use Z_SYNC_FLUSH in this case and not Z_FINISH as in the
 * deflate case. In the inflate case Z_FINISH requires to have a
 * large enough output buffer to put ALL data in otherwise it
 * fails, whereas in the deflate case you can empty a filled output
 * buffer and call it again until no more output can be created.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1640 - 0

/* gzip stores original size only as 4 byte value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1654 - 0

/* No need for cleanup any longer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1657 - 0

/* Remove EOS from the old list, and insert into the new. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1661 - 0

/*
 * Okay, we've seen the EOS.
 * Time to pass it along down the chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1671 - 0

/* flush the remaining data from the zlib buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1686 - 0

/* Remove flush bucket from old brigade anf insert into the new. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1698 - 0

/*
 * Remove meta data bucket from old brigade and insert into the
 * new.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1707 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1718 - 0

/* first bucket contains zlib header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1773 - 0

/* pass through zlib inflate. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1786 - 0

/* Saved copy_size bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1809 - 0

/* Send what we have right now to the next filter. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1826 - 0

/* Don't check length limits on inflate_out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1910 - 0

/* zlib can be built with #define deflate z_deflate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1916 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1917 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1918 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1919 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1920 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_deflate.c:1921 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:51 - 0

/* list of IMTs we process (well, just one for now) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:53 - 0

/* IMT of filtered output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:110 - 0

/* if admin coded something... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:117 - 0

/* if admin coded something... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:162 - 0

/* move past leading "e; */
 /* find true end of args string (accounting for escaped quotes) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:176 - 0

/* copy *just* the arg string for parsing, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:178 - 0

/* move past trailing "e; */

 /* parse and tokenize the args. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:188 - 0

/* simple path */
 /* Allocate space for two argv pointers and parse the args. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:192 - 0

/* end of args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:216 - 0

/* During request processing, we find information about the filter
 * by looking up the filter name provided by core server in our
 * hash table. But the core server has normalized the filter
 * name by converting it to lower case. Thus, when adding the
 * filter to our hash table we have to use lower case as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:241 - 0

/* Nasty parsing... I wish I could simply use ap_getword_white()
 * here and then look at the token, but ap_getword_white() doesn't
 * do the right thing when we have cmd="e;word word word"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:319 - 0

/* parsing is done... register the filter
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:330 - 0

/* we set the field wrong somehow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:341 - 0

/* same as SetInputFilter/SetOutputFilter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:373 - 0

/* otherwise, we're out of sync with APR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:377 - 0

/* otherwise, we're out of sync with APR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:381 - 0

/* otherwise, we're out of sync with APR */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:414 - 0

/* init_ext_filter_process: get the external filter process going
 * This is per-filter-instance (i.e., per-request) initialization.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:440 - 0

/* stderr in child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:454 - 0

/* add standard CGI variables as well as DOCUMENT_URI, DOCUMENT_PATH_INFO,
 * and QUERY_STRING_UNESCAPED
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:462 - 0

/* QUERY_STRING is added by ap_add_cgi_vars */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:475 - 0

/* environment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:494 - 0

/* other mechanism */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:528 - 0

/*"e; : filter->intype;
 const char *outtype_str = !filter->outtype ?
 "e;(unchanged)"e; : filter->outtype;

 return apr_psprintf(p,
 "e;ExtFilterOptions %s %s ExtFilterInType %s "e;
 "e;ExtFilterOuttype %s"e;,
 log_stderr_str, preserve_content_length_str,
 intype_str, outtype_str);
}

static ef_filter_t *find_filter_def(const server_rec *s, const char *fname)
{
 ef_server_t *sc;
 ef_filter_t *f;

 sc = ap_get_module_config(s->module_config, &ext_filter_module);
 f = apr_hash_get(sc->h, fname, APR_HASH_KEY_STRING);
 if (!f && s != main_server) {
 s = main_server;
 sc = ap_get_module_config(s->module_config, &ext_filter_module);
 f = apr_hash_get(sc->h, fname, APR_HASH_KEY_STRING);
 }
 return f;
}

static apr_status_t init_filter_instance(ap_filter_t *f)
{
 ef_ctx_t *ctx;
 ef_dir_t *dc;
 apr_status_t rv;

 f->ctx = ctx = apr_pcalloc(f->r->pool, sizeof(ef_ctx_t));
 dc = ap_get_module_config(f->r->per_dir_config,
 &ext_filter_module);
 ctx->dc = dc;
 /* look for the user-defined filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:588 - 0

/* wrong IMT for us; don't mess with the output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:603 - 0

/* an environment variable that disables the filter is set; bail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:694 - 0

/* XXX handle blocking conditions here... if we block, we need
 * to read data from the child process and pass it down to the
 * next filter!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:720 - 0

/* APR_FILES_AS_SOCKETS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:730 - 0

/* ef_unified_filter:
 *
 * runs the bucket brigade bb through the filter and puts the result into
 * bb, dropping the previous content of bb (the input)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:787 - 0

/* since we've seen eos and closed the child's stdin, set the proper pipe
 * timeout; we don't care if we don't return from apr_file_read() for a while...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:810 - 0

/* should not occur, because we have an APR timeout in place */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ext_filter.c:894 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:31 - 0

/**
 * @brief is a filter provider, as defined and implemented by mod_filter.
 *
 * The struct is a linked list, with dispatch criteria
 * defined for each filter. The provider implementation itself is a
 * (2.0-compatible) ap_filter_rec_t* frec.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:42 - 0

/** The filter that implements this provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:45 - 0

/** The next provider in the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:49 - 0

/** we need provider_ctx to save ctx values set by providers in filter_init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:83 - 0

/* normal, operational use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:85 - 0

/* mod_diagnostics level */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:122 - 0

/* the filter init function set a ctx - we need to record it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:149 - 0

/* Check registered providers in order */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:197 - 0

/* condition matches this provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:213 - 0

/* some specific things can't happen in a proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:216 - 0

/* can't use this provider; try next */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:225 - 0

/* can't use this provider; try next */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:236 - 0

/* things that are invalidated if the filter transforms content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:245 - 0

/* no-cache is for a filter that has different effect per-hit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:255 - 0

/* restore range header we saved earlier */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:270 - 0

/* No provider matched */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:319 - 0

/* call the content filter with its own context, then restore our
 * context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:353 - 0

/* Find provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:364 - 0

/* Now set flags from our args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:447 - 0

/* fname has been declared with DeclareFilter, so we can look it up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:450 - 0

/* or if provider is mod_filter itself, we can also look it up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:463 - 0

/* if provider has been registered, we can look it up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:503 - 0

/* add to end of chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:515 - 0

/* add to start of chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:522 - 0

/* remove from chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:546 - 0

/* initialise chain with this arg */
 /** IG: Prepend a NULL provider to the beginning as above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:555 - 0

/* add to end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:579 - 0

/* construct fname from name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:591 - 0

/* If it's the first time through, add to filterchain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:601 - 0

/* back compatibility, need to parse multiple components in filter name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:647 - 0

/** IG: Now that we've merged to the final config, go one last time
 * through the chain, and prune out the NULL filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_filter.c:716 - 0

/** Filter out merged chain resets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:44 - 0

/* helper for Latin1 <-> entity encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:49 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:51 - 0

/* !APR_CHARSET_EBCDIC */


/*
 * +-------------------------------------------------------+
 * | |
 * | Types and Structures
 * | |
 * +-------------------------------------------------------+
 */

/* sll used for string expansion */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:69 - 0

/* conditional expression parser stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:130 - 0

/* main parser states */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:178 - 0

/* quote character value (or \0) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:179 - 0

/* parse position of partial matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:188 - 0

/* name of the current directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:189 - 0

/* length of the current directive name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:194 - 0

/* NULL if there wasn't a regex yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:199 - 0

/* use ap_expr or legacy mod_include
 expression parser? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:202 - 0

/* NULL if there wasn't an ap_expr yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:203 - 0

/* for use by ap_expr_eval_ctx */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:204 - 0

/* for use by ap_expr_eval_ctx */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:214 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Debugging Utilities
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:341 - 0

/* it is possible to call this function within the parser loop, to see
 * how the tree is built. That way, we must cleanup after us to dump
 * always the whole tree
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:451 - 0

/* function handlers for include directives */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:454 - 0

/* forward declaration of handler registry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:463 - 0

/* default values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:509 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:510 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:511 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:512 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:514 - 0

/* 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:518 - 0

/* 5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:525 - 0

/* 6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:528 - 0

/* Do a fast scan through the string until we find anything
 * that needs more complicated handling
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:542 - 0

/* find end of entity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:547 - 0

/* treat as normal data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:552 - 0

/* is it numeric ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:560 - 0

/* no data to output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:569 - 0

/* wrong length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:571 - 0

/* skip it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:580 - 0

/* unknown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:674 - 0

/* This particular subpattern was not used by the regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:700 - 0

/* keep legacy "e;env"e; semantics */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:735 - 0

/*
 * Do variable substitution on strings
 *
 * (Note: If out==NULL, this function allocs a buffer for the resulting
 * string from ctx->pool. The return value is always the parsed string)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:751 - 0

/* sanity check, out && !length is not supported */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:761 - 0

/* fast exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:791 - 0

/* loop for specials */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:797 - 0

/* prepare next entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:805 - 0

/*
 * escaped character
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:821 - 0

/*
 * variable expansion
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:824 - 0

/* *p == '$' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:854 - 0

/* empty name results in a copy of '$' in the output string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:897 - 0

/* check the remainder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:919 - 0

/* assemble result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:954 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Conditional Expression Parser
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1001 - 0

/* Skip leading white space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1011 - 0

/* the default type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1038 - 0

/* if last token was ACCESS, this token is STRING */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1084 - 0

/* It's a string or regex token
 * Now search for the next token, which finishes this string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1181 - 0

/* Create Parse Tree */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1369 - 0

/* Evaluate Parse Tree */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1408 - 0

/* short circuit evaluation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1506 - 0

/* should not happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1542 - 0

/* 400 and higher are considered access denied */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1582 - 0

/* same as above, but use common ap_expr syntax / API */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1609 - 0

/* ap_expr_exec_ctx() does not care about re->have_match but only about
 * re->source
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1646 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Action Handlers
 * | |
 * +-------------------------------------------------------+
 */

/*
 * Extract the next tag name and value.
 * If there are no more tags, set the tag name to NULL.
 * The tag value is html decoded if dodecode is non-zero.
 * The tag value may be NULL if there is no tag value..
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1692 - 0

/* be safe; only files in this directory or below allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1702 - 0

/* note: it is okay to pass NULL for the "e;next filter"e; since
 we never attempt to "e;run"e; this sub request. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1732 - 0

/* note: it is okay to pass NULL for the "e;next filter"e; since
 we never attempt to "e;run"e; this sub request. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1818 - 0

/* be safe; only files in this directory or below allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1879 - 0

/* Do *not* destroy the subrequest here; it may have allocated
 * variables in this r->subprocess_env in the subrequest's
 * r->pool, so that pool must survive as long as this request.
 * Yes, this is a memory leak. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1893 - 0

/*
 * <!--#echo [decoding="e;..."e;] [encoding="e;..."e;] var="e;..."e; [decoding="e;..."e;]
 * [encoding="e;..."e;] var="e;..."e; ... -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1951 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:1987 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2046 - 0

/*
 * <!--#config [timefmt="e;..."e;] [sizefmt="e;..."e;] [errmsg="e;..."e;]
 * [echomsg="e;..."e;] -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2136 - 0

/*
 * <!--#fsize virtual|file="e;..."e; [virtual|file="e;..."e;] ... -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2182 - 0

/* omit the \0 terminator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2224 - 0

/*
 * <!--#flastmod virtual|file="e;..."e; [virtual|file="e;..."e;] ... -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2283 - 0

/*
 * <!--#if expr="e;..."e; -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2357 - 0

/*
 * <!--#elif expr="e;..."e; -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2433 - 0

/*
 * <!--#else -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2473 - 0

/*
 * <!--#endif -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2506 - 0

/*
 * <!--#set var="e;..."e; value="e;..."e; ... -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2537 - 0

/* we need to use the 'main' request pool to set notes as that is
 * a notes lifetime
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2589 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2625 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2672 - 0

/*
 * <!--#printenv -->
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2707 - 0

/* get key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2710 - 0

/* get value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2725 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Main Includes-Filter Engine
 * | |
 * +-------------------------------------------------------+
 */

/* This is an implementation of the BNDM search algorithm.
 *
 * Fast and Flexible String Matching by Combining Bit-parallelism and
 * Suffix Automata (2001)
 * Gonzalo Navarro, Mathieu Raffinot
 *
 * http://www-igm.univ-mlv.fr/~raffinot/ftp/jea2001.ps.gz
 *
 * Initial code submitted by Sascha Schumann.
 */

/* Precompile the bndm_t data structure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2763 - 0

/* Implements the BNDM search algorithm (as described above).
 *
 * h - the string to look in
 * hl - length of the string to look for
 * t - precompiled bndm structure against the pattern
 *
 * Returns the count of character that is the first match or hl if no
 * match is found.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2785 - 0

/* pi: p initial */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2786 - 0

/* compare window right to left. point to the first char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2814 - 0

/*
 * returns the index position of the first byte of start_seq (or the len of
 * the buffer as non-match)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2827 - 0

/* try partial match at the end of the buffer (below) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2830 - 0

/* try fast bndm search over the buffer
 * (hopefully the whole start sequence can be found in this buffer)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2841 - 0

/* ok, the pattern can't be found as whole in the buffer,
 * check the end for a partial match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2856 - 0

/* found a possible start_seq start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2866 - 0

/* partial match found. Store the info for the next round */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2874 - 0

/* we must try all combinations; consider (e.g.) SSIStartTag "e;--->"e;
 * and a string data of "e;--.-"e; and the end of the buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2880 - 0

/* no match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2884 - 0

/*
 * returns the first byte *after* the partial (or final) match.
 *
 * If we had to trick with the start_seq start, 'release' returns the
 * number of chars of the start_seq which appeared not to be part of a
 * full tag and may have to be passed down the filter chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2913 - 0

/* full match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2919 - 0

/* the whole buffer is a partial match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2925 - 0

/* No match so far, but again:
 * We must try all combinations, since the start_seq is a random
 * user supplied string
 *
 * So: look if the first char of start_seq appears somewhere within
 * the current partial match. If it does, try to start a match that
 * begins with this offset. (This can happen, if a strange
 * start_seq like "e;---->"e; spans buffers)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2948 - 0

/* if a matching beginning char was found, try to match the
 * remainder of the old buffer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2961 - 0

/* yeah, another partial match found in the *old*
 * buffer, now test the *current* buffer for
 * continuing match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:2984 - 0

/*
 * returns the position after the directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3011 - 0

/* found delimiter whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3028 - 0

/* full match, we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3036 - 0

/* partial match, the buffer is too small to match fully */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3042 - 0

/* no match. continue normal parsing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3068 - 0

/* normalize directive name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3077 - 0

/* get a rid of a gcc warning about unhandled enumerations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3094 - 0

/* skip leading WS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3099 - 0

/* buffer doesn't consist of whitespaces only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3129 - 0

/* bingo, full match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3135 - 0

/* partial match, the buffer is too small to match fully */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3148 - 0

/*
 * extract name=value from the buffer
 * A pcre-pattern could look (similar to):
 * name\s*(?:=\s*(["e;'`]?)value\1(?>\s*))?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3253 - 0

/* no value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3269 - 0

/* buffer doesn't consist of whitespaces only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3324 - 0

/*
 * The value is still the raw input string. Finally clean it up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3329 - 0

/* strip quote escaping \ from the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3358 - 0

/* get a rid of a gcc warning about unhandled enumerations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3362 - 0

/* partial match of something */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3365 - 0

/*
 * This is the main loop over the current bucket brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3390 - 0

/* All stuff passed along has to be put into that brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3393 - 0

/* initialization for this loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3398 - 0

/* loop over the current bucket brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3436 - 0

/* END OF STREAM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3451 - 0

/* enough is enough ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3467 - 0

/* read the current bucket data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3490 - 0

/* zero length bucket, fetch next one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3501 - 0

/* no current tag; search for start sequence */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3519 - 0

/* now delete the start_seq stuff from the remaining bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3520 - 0

/* full match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3522 - 0

/* pass pre-tag stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3534 - 0

/* we're currently looking for the end of the start sequence */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3547 - 0

/* any match */
 /* now delete the start_seq stuff from the remaining bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3549 - 0

/* final match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3551 - 0

/* pass pre-tag stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3560 - 0

/* we're currently grabbing the directive name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3580 - 0

/* time for cleanup? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3594 - 0

/* skip WS and find out what comes next (arg or end_seq) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3598 - 0

/* skipped whitespaces */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3609 - 0

/* currently parsing name[=val] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3633 - 0

/* time for cleanup? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3647 - 0

/* try to match end_seq at current pos. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3653 - 0

/* full match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3660 - 0

/* no match */
 /* PARSE_ARG must reparse at the beginning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3666 - 0

/* partial match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3677 - 0

/* now execute the parsed directive, cleanup the space and
 * start again with PARSE_PRE_HEAD
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3715 - 0

/* cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3719 - 0

/* Oooof. Done here, start next round */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3723 - 0

/* switch(ctx->state) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3725 - 0

/* while (brigade) */

 /* End of stream. Final cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3755 - 0

/* cleanup our temporary memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3759 - 0

/* don't forget to finally insert the EOS bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3763 - 0

/* if something's left over, pass it along */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3788 - 0

/* When our xbithack value isn't set to full or our platform isn't
 * providing group-level protection bits or our group-level bits do not
 * have group-execite on, we will set the no_local_copy value to 1 so
 * that we will not send 304s.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3832 - 0

/* create context for this filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3881 - 0

/* we're not a nested include, so we create an initial
 * environment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3887 - 0

/* Always unset the content-length. There is no way to know if
 * the content will be modified at some point by send_parsed_content.
 * It is very possible for us to not find any content in the first
 * 9k of the file, but still have to modify the content of the file.
 * If we are going to pass the file through send_parsed_content, then
 * the content-length should just be unset.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3896 - 0

/* Always unset the Last-Modified field - see RFC2616 - 13.3.4.
 * We don't know if we are going to be including a file or executing
 * a program which may change the Last-Modified header or make the
 * content completely dynamic. Therefore, we can't support these
 * headers.
 *
 * Exception: XBitHack full means we *should* set the
 * Last-Modified field.
 *
 * SSILastModified on means we *should* set the Last-Modified field
 * if not present, or respect an existing value if present.
 */

 /* Must we respect the last modified header? By default, no */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3923 - 0

/* Assure the platform supports Group protections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3960 - 0

/* These OS's don't support xbithack. This is being worked on. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:3994 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Configuration Handling
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4067 - 0

/* be consistent. (See below in set_default_end_tag) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4087 - 0

/* sanity check. The parser may fail otherwise */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4129 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Module Initialization and Configuration
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4210 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4211 - 0

/* dir config merger */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4212 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4213 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4214 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_include.c:4215 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:32 - 0

/* libxml2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:48 - 0

/* globals set once at startup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:123 - 0

//W3C//DTD HTML 4.01//EN\"e;>\n"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:125 - 0

//W3C//DTD HTML 4.01 Transitional//EN\"e;>\n"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:127 - 0

//W3C//DTD XHTML 1.0 Strict//EN\"e; \"e;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"e;>\n"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:129 - 0

//W3C//DTD XHTML 1.0 Transitional//EN\"e; \"e;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"e;>\n"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:133 - 0

/*#define DEFAULT_DOCTYPE fpi_html */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:156 - 0

/* This is always utf-8 on entry. We can convert charset within FLUSH */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:218 - 0

/* append null byte */
 /* parse the text for URLs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:289 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:299 - 0

//W3C//DTD XHTML "e;, 18)) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:319 - 0

/* not sure if this should force-flush
 * (i.e. can one cdata section come in multiple calls?)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:362 - 0

/* TODO - implement HTML "e;allowed here"e; using the stack */
 /* nah. Keeping the stack is too much overhead */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:367 - 0

/* having dumped it, we can re-use the memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:430 - 0

/* TODO - implement HTML "e;allowed here"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:457 - 0

/* cross off the number still needed */
 /* fallthrough - required implies valid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:542 - 0

/* it fits in the existing space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:557 - 0

/* reset here since we're working per-rule */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:652 - 0

/* write the attribute, using pcharacters to html-escape
 anything that needs it in the value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:694 - 0

/* find content=... string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:703 - 0

/* XXX Should we search for another content= pattern? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:794 - 0

/* condition is unsatisfied */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:803 - 0

/* don't use empty from-pattern */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:812 - 0

/* evaluate p->cond; continue if unsatisfied */
 /* create new urlmap with memcpy and append to map */
 /* interpolate from if flagged to do so */
 /* interpolate to if flagged to do so */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:875 - 0

/* defer dealing with charset_out until after sniffing charset_in
 * so we can support setting one to t'other.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:941 - 0

/* if we wanted a non-default charset_out, insert the
 * xml2enc filter now that we've sniffed it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:953 - 0

/* Normal case, everything worked, utf-8 output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1005 - 0

/* ret->interp = 1; */
 /* don't initialise links and events until they get set/used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1016 - 0

/* don't merge declarations - just use the most specific */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1105 - 0

/* we got a substitution. Check for the case (3) above
 * that the regexp gets wrong: a negation without a comparison.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1145 - 0

/* the args look OK, so let's use them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1163 - 0

/* activates pinternalSubset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_proxy_html.c:1295 - 0

/* old_expr only needs to last the life of the config phase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:79 - 0

/* no subrequests. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:92 - 0

/* rl is in kilo bytes / second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:95 - 0

/* remove ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:100 - 0

/* first run, init stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:299 - 0

/* run after mod_deflate etc etc, but not at connection level, ie, mod_ssl. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:306 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:307 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:308 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:309 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_ratelimit.c:310 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:82 - 0

/* copy headers from in to out if configured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:85 - 0

/* last modified defaults to now, unless otherwise set on the way in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:92 - 0

/* reflect the content length, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:101 - 0

/* reflect the content type, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reflector.c:134 - 0

/* These are metadata buckets. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:41 - 0

/* timeout for reading the req hdrs in secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:42 - 0

/* max timeout for req hdrs in secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:43 - 0

/* min rate for reading req hdrs in bytes/s */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:45 - 0

/* timeout for reading the req body in secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:46 - 0

/* max timeout for req body in secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:47 - 0

/* min rate for reading req body in bytes/s */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:51 - 0

/* this struct is used both as conn_config and as filter context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:191 - 0

/* For this read[_request line()], wait for the first byte using the
 * normal keep-alive timeout (hence don't take this expected idle time
 * into account to setup the connection expiry below).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:204 - 0

/* set new timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:214 - 0

/* no timeout set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:281 - 0

/* Haven't got a whole line yet, save what we have ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:290 - 0

/* ... and wait for more */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:319 - 0

/* mode != AP_MODE_GETLINE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:337 - 0

/*
 * If we allow a normal lingering close, the client may keep this
 * process/thread busy for another 30s (MAX_SECS_TO_LINGER).
 * Therefore we tell ap_lingering_close() to shorten this period to
 * 2s (SECONDS_TO_LINGER).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:375 - 0

/* we are not handling the connection, we just do initialization */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:386 - 0

/* not configured for this connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:394 - 0

/* (Re)set the state for this new request, but ccfg->socket and
 * ccfg->tmpbb which have the lifetime of the connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:640 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:641 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:642 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:643 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_reqtimeout.c:644 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:36 - 0

/* Handles for core filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:61 - 0

/**
 * This is the KEEP_BODY_INPUT filter for HTTP requests, for times when the
 * body should be set aside for future use by other modules.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:83 - 0

/* must we step out of the way? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:127 - 0

/* get the brigade from upstream, and read it in to get its length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:156 - 0

/* all is well, set aside the buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:196 - 0

/**
 * Filter to handle a kept body on subrequests.
 *
 * If a body has been previously kept by the request, and if a subrequest wants
 * to re-insert the body into the request, this input filter makes it happen.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:213 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:225 - 0

/* kept_body is finished, send next filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:230 - 0

/* send all of the kept_body, but no more */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:235 - 0

/* send part of the kept_body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:317 - 0

/**
 * Remove the kept_body and keep body filters from this specific request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:337 - 0

/* unset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:338 - 0

/* don't by default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:391 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:392 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:393 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:394 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:395 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_request.c:396 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:44 - 0

/* Context for filter invocation for single HTTP request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:91 - 0

/* alloc_outbuf
 * allocate output buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:100 - 0

/* append_bucket
 * Allocate a new bucket from buf and sz and append to ctx->bb
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:108 - 0

/* We are not using transient bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:114 - 0

/* We are using transient bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:130 - 0

/*
 * flush_output_buffer
 * Flush the output data (stored in ctx->outbuf)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:147 - 0

/* This is a call back function. When libsed wants to generate the output,
 * this function will be invoked.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:152 - 0

/* dummy is basically filter context. Context is passed during invocation
 * of sed_eval_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:169 - 0

/* buffer is now full */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:171 - 0

/* old buffer is now used so allocate new buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:173 - 0

/* if size is bigger than the allocated buffer directly add to output
 * brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:195 - 0

/* Compile a sed expression. Compiled context is saved in sed_cfg->sed_cmds.
 * Memory required for compilation context is allocated from cmd->pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:223 - 0

/* sed eval cleanup function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:231 - 0

/* Initialize sed filter context. If successful then context is set in f->ctx
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:266 - 0

/* Entry function for Sed output filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:278 - 0

/* No sed expressions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:286 - 0

/* no need to run sed filter for Head requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:323 - 0

/* Now clean up the internal sed buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:329 - 0

/* Move the eos bucket to ctx->bb brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:338 - 0

/* Move the flush bucket to ctx->bb brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:371 - 0

/* Entry function for Sed input filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:390 - 0

/* No sed expression */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:397 - 0

/* XXX : Should we filter the sub requests too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:431 - 0

/* read the bytes from next level filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:451 - 0

/* What should we do with flush bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:519 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:520 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:521 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:522 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:523 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_sed.c:524 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:159 - 0

/*
 * we should NEVER see this, because we should never
 * be passed any, but "e;handle"e; it just in case.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:171 - 0

/*
 * space_left counts how many bytes we have left until the
 * line length reaches max_line_length.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:180 - 0

/* get offset into buff for pattern */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:183 - 0

/*
 * We are flattening the buckets here, meaning
 * that we don't do the fast bucket splits.
 * Instead we copy over what the buckets would
 * contain and use them. This is slow, since we
 * are constanting allocing space and copying
 * strings.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:212 - 0

/*
 * Finally, we create a bucket that contains the
 * replacement...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:219 - 0

/* ... and insert it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:222 - 0

/* now we need to adjust buff for all these changes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:229 - 0

/* XXX: we should check for AP_MAX_BUCKETS here and
 * XXX: call ap_pass_brigade accordingly
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:300 - 0

/*
 * reset to past what we just did. pos now maps to b
 * again
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:309 - 0

/* Copy result plus the part after the last match into
 * a bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:366 - 0

/*
 * Everything to be passed to the next filter goes in
 * here, our pass brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:371 - 0

/* Create our temporary pool only once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:376 - 0

/*
 * Shortcircuit processing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:410 - 0

/*
 * if we see the EOS, then we need to pass along everything we
 * have. But if the ctx->linebb isn't empty, then we need to add
 * that to the end of what we'll be passing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:436 - 0

/*
 * No need to handle FLUSH buckets separately as we call
 * ap_pass_brigade anyway at the end of the loop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:445 - 0

/*
 * We have actual "e;data"e; so read in as much as we can and start
 * scanning and splitting from our read buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:459 - 0

/* split *after* the newline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:468 - 0

/*
 * we need b to be updated for future potential
 * splitting
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:474 - 0

/*
 * Hey, we found a newline! Don't forget the old
 * stuff that needs to be added to the front. So we
 * add the split bucket to the end, flatten the whole
 * bb, morph the whole shebang into a bucket which is
 * then added to the tail of the newline bb.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:501 - 0

/*
 * Count how many buckets we have in ctx->passbb
 * so far. Yes, this is correct we count ctx->passbb
 * and not ctx->pattbb as we do not reset num on every
 * iteration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:536 - 0

/*
 * no newline in whatever is left of this buffer so
 * tuck data away and get next bucket
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:556 - 0

/* Anything left we want to save/setaside for the next go-around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:591 - 0

/// pattern"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:617 - 0

/// pattern"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:622 - 0

/* re-use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:632 - 0

///[infq] are supported"e;; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:637 - 0

/* first see if we can compile the regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:645 - 0

/* init the new entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:689 - 0

/* neither empty nor [Bb] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:725 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:726 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:727 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:728 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:729 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_substitute.c:730 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:26 - 0

/* libxml2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:86 - 0

/* set up a ready-initialised ctx to convert to enc, and insert filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:100 - 0

/* we'll initialise later by sniffing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:124 - 0

/* This needs to operate only when we're using htmlParser */
/* Different modules may apply different rules here. Ho, hum. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:166 - 0

/* initialise to shut compiler warnings up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:179 - 0

/* If we've got it in the HTTP headers, there's nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:191 - 0

/* to sniff, first we look for BOM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:202 - 0

/* If none of the above, look for a META-thingey */
 /* also we're probably about to invalidate it, so we remove it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:205 - 0

/* get markers on the start and end of the match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:210 - 0

/* now set length of useful buf for start-of-data hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:233 - 0

/* and leave a string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:264 - 0

/* Use configuration default as a last resort */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:320 - 0

/* only act if starts-with "e;text/"e; or contains "e;xml"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:330 - 0

/* append to any data left over from last time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:334 - 0

/* some kind of initialisation required */
 /* Turn all this off when post-processing */

 /* if we don't have enough data to sniff but more's to come, wait */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:347 - 0

/* not enough data to sniff. Wait for more */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:359 - 0

/* flatten it into a NULL-terminated string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:367 - 0

/* FIXME: hook here for rewriting start-of-data? */
 /* nah, we only have one action here - call it inline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:371 - 0

/* we might change the Content-Length, so let's force its re-calculation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:390 - 0

/* move the data back to bb */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:398 - 0

/* send remaining data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:406 - 0

/* data bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:433 - 0

/* remove the data we've just read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:446 - 0

/* can't destroy until finished with the data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:451 - 0

/* OK, we've got some input we can use in [buf,bytes] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:495 - 0

/* try skipping one bad byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/mod_xml2enc.c:501 - 0

/* Erk! What's this?
 * Bail out, flush, and hope to eat the buf raw
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:68 - 0

/*
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:144 - 0

/* used for non-ascii characters in brackets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:259 - 0

/* make nulls match so test fails */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:312 - 0

/* get 2'nd number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:317 - 0

/* one number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:339 - 0

/* Drop through to default to use \ to turn off special chars */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:353 - 0

/* XXX : Basant : what extra */
 /* int reglength = (int)(ep - expbuf); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:367 - 0

/* fast check for first character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:380 - 0

/* regular algorithm */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:397 - 0

/* int value of *ep */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:497 - 0

/* 32 + 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/regexp.c:518 - 0

/* 16 + 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:56 - 0

/*
 * sed_init_commands
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:89 - 0

/*
 * sed_destroy_commands
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:96 - 0

/*
 * sed_compile_string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:115 - 0

/*
 * sed_compile_file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:134 - 0

/* Empty branch chain is not a issue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:149 - 0

/*
 * sed_canbe_finalized
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:157 - 0

/*
 * check_finalized
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:167 - 0

/* Empty branch chain is not a issue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:176 - 0

/*
 * dechain
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:196 - 0

/*
 * fcomp
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:711 - 0

/*
 * rline
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:809 - 0

/*
 * address
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:866 - 0

/*
 * text
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:876 - 0

/*
 * Strip off indentation from text to be inserted.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:892 - 0

/*
 * Strip off indentation from text to be inserted.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:904 - 0

/*
 * search
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:923 - 0

/*
 * ycomp
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:929 - 0

/* integer value of char c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:984 - 0

/*
 * comple
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed0.c:999 - 0

/*
 * alloc_reptr
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:91 - 0

/*
 * grow_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:108 - 0

/* Align it to 4 KB boundary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:124 - 0

/*
 * grow_line_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:133 - 0

/*
 * grow_hold_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:142 - 0

/*
 * grow_gen_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:156 - 0

/*
 * appendmem_to_linebuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:169 - 0

/*
 * append_to_linebuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:175 - 0

/* Copy string including null character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:177 - 0

/* lspend will now point to NULL character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:180 - 0

/*
 * copy_to_linebuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:189 - 0

/*
 * append_to_holdbuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:200 - 0

/* hspend will now point to NULL character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:204 - 0

/*
 * copy_to_holdbuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:213 - 0

/*
 * append_to_genbuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:224 - 0

/* *gspend will now point to NULL character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:228 - 0

/*
 * copy_to_genbuf
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:240 - 0

/*
 * sed_init_eval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:251 - 0

/*
 * sed_reset_eval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:295 - 0

/* assume we're evaluating only one file/stream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:313 - 0

/*
 * sed_destroy_eval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:319 - 0

/* eval->linebuf, eval->holdbuf, eval->genbuf and eval->inar are allocated
 * on pool. It will be freed when pool will be freed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:329 - 0

/*
 * sed_eval_file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:352 - 0

/*
 * sed_eval_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:363 - 0

/* Commands were not finalized properly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:373 - 0

/* Process leftovers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:393 - 0

/* This might be the last line; delay its processing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:400 - 0

/* replace new line character with NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:411 - 0

/* Save the leftovers for later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:419 - 0

/*
 * sed_finalize_eval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:432 - 0

/* Process leftovers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:440 - 0

/* Code can probably reach here when last character in output
 * buffer is not a newline.
 */
 /* Assure space for NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:458 - 0

/*
 * execute
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:579 - 0

/*
 * match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:600 - 0

/*
 * substitute
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:609 - 0

/* Flags if any substitution was made */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:623 - 0

/*
 * dosub
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:672 - 0

/*
 * place
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:688 - 0

/*
 * command
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:698 - 0

/* 32 bytes enough to store 64 bit integer in decimal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:966 - 0

/*
 * arout
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/filters/sed1.c:1007 - 0

/*
 * wline
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:67 - 0

/* Internal redirect -- fake-up a pseudo-request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:70 - 0

/* This redirect needs to be a GET no matter what the original
 * method was.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:122 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:123 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:124 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:125 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:126 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_asis.c:127 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:50 - 0

/****************************************************************
 *
 * Handling configuration directives...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:55 - 0

/* Indexing options */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:81 - 0

/*
 * Define keys for sorting.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:84 - 0

/* Sort by file name (default) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:85 - 0

/* Last modification date */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:86 - 0

/* Size (absolute, not as displayed) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:87 - 0

/* Description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:88 - 0

/* String containing _all_ valid K_ opts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:92 - 0

/* String containing _all_ valid D_ opts */

/*
 * These are the dimensions of the default icons supplied with Apache.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:100 - 0

/*
 * Other default dimensions.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:163 - 0

/*
 * This routine puts the standard HTML header at the top of the index page.
 * We include the DOCTYPE because we may be using features therefrom (i.e.,
 * HEIGHT and WIDTH attributes on the icons if we're FancyIndexing).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:177 - 0

//www.w3.org/1999/xhtml\"e;>\n"e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:256 - 0

/* Lose closing paren */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:674 - 0

/*
 * If there were any nonincremental options selected for
 * this directory, they dominate and we don't inherit *anything.*
 * Contrariwise, we *do* inherit if the only settings here are
 * incremental ones.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:686 - 0

/*
 * We may have incremental settings, so make sure we don't
 * inadvertently inherit an IndexOptions None from above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:706 - 0

/*
 * Inherit the NameWidth settings if there aren't any specific to
 * the new location; otherwise we'll end up using the defaults set in the
 * config-rec creation routine.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:720 - 0

/*
 * Likewise for DescriptionWidth.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:768 - 0

/* Special cased for ^^DIRECTORY^^ and ^^BLANKICON^^ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:813 - 0

/*
 * Look through the list of pattern/description pairs and return the first one
 * if any) that matches the filename in the request. If multiple patterns
 * match, only the first one is used; since the order in the array is the
 * same as the order in which directives were processed, earlier matching
 * directives will dominate.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:834 - 0

/*
 * If the filename includes a path, extract just the name itself
 * for the simple matches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:848 - 0

/*
 * Only use the full-path filename if the pattern contains '/'s.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:899 - 0

/* !CASE_BLIND_FILESYSTEM */
 /*
 * On some platforms, the match must be case-blind. This is really
 * a factor of the filesystem involved, but we can't detect that
 * reliably - so we have to granularise at the OS level.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:909 - 0

/* !CASE_BLIND_FILESYSTEM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1010 - 0

/*
 * If there's a header file, send a subrequest to look for it. If it's
 * found and html do the subrequest, otherwise handle it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1029 - 0

/*
 * Check for the two specific cases we allow: text/html and
 * text/anything-else. The former is allowed to be processed for
 * SSIs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1037 - 0

/* Hope everything will work... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1109 - 0

/* Insert style id if stylesheet used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1137 - 0

/*
 * If there's a readme file, send a subrequest to look for it. If it's
 * found and a text file, handle it -- otherwise fall through and
 * pretend there's nothing there.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1147 - 0

/*
 * Check for the two specific cases we allow: text/html and
 * text/anything-else. The former is allowed to be processed for
 * SSIs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1161 - 0

/* worked... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1167 - 0

/*
 * If we can open the file, suppress the signature.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1223 - 0

/* Scan for line breaks for Tanmoy's secretary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1272 - 0

/* IndexIgnore has always compared "e;/thispath/.."e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1315 - 0

/*
 * On some platforms, the match must be case-blind. This is really
 * a factor of the filesystem involved, but we can't detect that
 * reliably - so we have to granularise at the OS level.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1378 - 0

/* omit the trailing slash (1.3 compat) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1403 - 0

/*
 * We don't need to take any special action for the file size key.
 * If we did, it would go here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1449 - 0

/* entities like &auml; count as one character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1463 - 0

/* Grump. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1464 - 0

/* Double Grump! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1469 - 0

/*
 * Emit the anchor for the specified field. If a field is the key for the
 * current request, the link changes its meaning to reverse the order when
 * selected again. Non-active fields always start in ascending order.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1488 - 0

/* reverse? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1551 - 0

/* Emit table with style id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1635 - 0

/*
 * Emit the guaranteed-at-least-one-space-between-columns byte.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1851 - 0

/*Length="e;1975-04-07 01:23 "e; (see 4 lines above) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1906 - 0

/*
 * First, see if either of the entries is for the parent directory.
 * If so, that *always* sorts lower than anything else.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:1916 - 0

/*
 * Now see if one's a directory and one isn't, if we're set
 * isdir for FOLDERS_FIRST.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2062 - 0

/*
 * If there is no specific ordering defined for this directory,
 * default to ascending by filename.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2090 - 0

/* C= First Sort key Column (N, M, S, D) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2099 - 0

/* O= Sort order (A, D) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2109 - 0

/* F= Output Format (0 plain, 1 fancy (pre), 2 table) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2129 - 0

/* V= Version sort (0, 1) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2145 - 0

/* P= wildcard pattern (*.foo) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2147 - 0

/* for efficiency */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2164 - 0

/* be correct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2185 - 0

/* Spew HTML preamble */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2196 - 0

/*
 * Since we don't know how many dir. entries there are, put them into a
 * linked list and then arrayificate them so qsort can use them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2220 - 0

/* We want to explode symlinks here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2224 - 0

/* We *must* have FNAME. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2231 - 0

/* Something bad happened, skip this file. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2270 - 0

/* The formal handler... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2334 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2335 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2336 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2337 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2338 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_autoindex.c:2339 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:32 - 0

/* for RLIMIT stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:69 - 0

/* Read and discard the data in the brigade produced by a CGI script */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:84 - 0

/* Configuration stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:175 - 0

/* XXX Very expensive mainline case! Open, then getfileinfo! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:186 - 0

/* "e;%% [Wed Jun 19 10:53:21 1996] GET /cgi-bin/printenv HTTP/1.0"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:190 - 0

/* "e;%% 500 /usr/local/apache/cgi-bin */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:237 - 0

/* XXX Very expensive mainline case! Open, then getfileinfo! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:245 - 0

/* Soak up script output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:251 - 0

/* "e;%% [Wed Jun 19 10:53:21 1996] GET /cgi-bin/printenv HTTP/1.0"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:255 - 0

/* "e;%% 500 /usr/local/apache/cgi-bin"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:320 - 0

/* This is the special environment used for running the "e;exec cmd="e;
 * variety of SSI directives.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:359 - 0

/* Escape the logged string because it may be something that
 * came in over the network.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:396 - 0

/* Under OS/2 need to use device con. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:450 - 0

/* Something bad happened, tell the world. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:460 - 0

/* Bad things happened. Everyone should have cleaned up. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:500 - 0

/* Do not process r->args if they contain an '=' assignment
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:511 - 0

/* count the number of keywords */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:518 - 0

/* Everything is - 1 to account for the first parameter
 * which is the program name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:522 - 0

/* Truncate args to prevent overrun */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:559 - 0

/* A CGI bucket type is needed to catch any output to stderr from the
 * script; see PR 22030. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:568 - 0

/* Create a CGI bucket using pipes from script stdout 'out'
 * and stderr 'err', for request 'r'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:586 - 0

/* Create the pollset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:597 - 0

/* script's stdout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:606 - 0

/* script's stderr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:620 - 0

/* Create a duplicate CGI bucket using given bucket data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:635 - 0

/* Handle stdout from CGI child. Duplicate of logic from the _read
 * method of the real APR pipe bucket implementation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:645 - 0

/* XXX: check for failure? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:658 - 0

/* Change the current bucket to refer to what we read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:661 - 0

/* note the real buffer size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:712 - 0

/* stdout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:719 - 0

/* stderr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:793 - 0

/* default to accept */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:820 - 0

/* build the command line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:828 - 0

/* run the script in its own process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:875 - 0

/* We can't do much with this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:880 - 0

/* If the child stopped, we still must read to EOS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:885 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:907 - 0

/* silly script stopped reading, soak up remaining message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:918 - 0

/* Is this flush really needed? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:938 - 0

/* Handle script return... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:980 - 0

/* For a redirect whether internal or not, discard any
 * remaining stdout from the script, and log any remaining
 * stderr output, as normal. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:990 - 0

/* This redirect needs to be a GET no matter what the original
 * method was.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1006 - 0

/* XXX: Note that if a script wants to produce its own Redirect
 * body, it now has to explicitly *say* "e;Status: 302"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1014 - 0

/* nph */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1017 - 0

/* get rid of all filters up through protocol... since we
 * haven't parsed off the headers, there is no way they can
 * work
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1042 - 0

/* NOT r->status, even if it has changed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1045 - 0

/*============================================================================
 *============================================================================
 * This is the beginning of the cgi filter code moved from mod_include. This
 * is the code required to handle the "e;exec"e; SSI directive.
 *============================================================================
 *============================================================================*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1063 - 0

/* No hardwired path info or query allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1073 - 0

/* Script gets parameters of the *document*, for back compatibility */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1074 - 0

/* hard to get right; see mod_cgi.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1077 - 0

/* Force sub_req to be treated as a CGI request, even if ordinary
 * typing rules would have called it something else.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1082 - 0

/* Run it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1136 - 0

/* run the script in its own process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1236 - 0

/*============================================================================
 *============================================================================
 * This is the end of the cgi filter code moved from mod_include.
 *============================================================================
 *============================================================================*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1251 - 0

/* Required by mod_include filter. This is how mod_cgi registers
 * with mod_include to provide processing of the exec directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1257 - 0

/* This is the means by which unusual (non-unix) os's may find alternate
 * means to run a given command (e.g. shebang/registry parsing on Win32)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1277 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1278 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1279 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1280 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1281 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgi.c:1282 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:71 - 0

/* for sockaddr_un */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:113 - 0

/* Read and discard the data in the brigade produced by a CGI script */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:116 - 0

/* This doer will only ever be called when we are sure that we have
 * a valid ugid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:137 - 0

/* Configuration stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:145 - 0

/* get the pid of script created for prior request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:202 - 0

/* request type (CGI_REQ, SSI_REQ, etc.) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:203 - 0

/* connection id; daemon uses this as a hash value
 * to find the script pid when it is time for that
 * process to be cleaned up
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:207 - 0

/* sanity check for config problems leading to
 * wrong cgid socket use
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:216 - 0

/* to stuff in server_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:243 - 0

/* count the number of keywords */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:253 - 0

/* Truncate args to prevent overrun */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:291 - 0

/* if MPM doesn't support query,
 * assume we shouldn't restart daemon
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:311 - 0

/* don't do anything; server is stopping or restarting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:315 - 0

/* Restart the child cgid daemon process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:320 - 0

/* we get here when pcgi is cleaned up; pcgi gets cleaned
 * up when pconf gets cleaned up
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:361 - 0

/* unexpected */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:371 - 0

/* deal with signals
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:423 - 0

/* read the request header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:430 - 0

/* no more data sent for this request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:434 - 0

/* handle module indexes and such */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:442 - 0

/* Read the filename, argv0, uri, and args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:452 - 0

/* empty string if no args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:459 - 0

/* read the environment variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:510 - 0

/* Write the request header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:530 - 0

/* write the environment variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:594 - 0

/* sure we got r, but don't call ap_log_rerror() because we don't
 * have r->headers_in and possibly other storage referenced by
 * ap_log_rerror()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:615 - 0

/* Close our copy of the listening sockets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:618 - 0

/* cgid should use its own suexec doer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:629 - 0

/* so that only Apache can use socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:639 - 0

/* Not all flavors of unix use the current umask for AF_UNIX perms */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:666 - 0

/* if running as root, switch to configured user/group */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:697 - 0

/* The network has been shut down, no need to continue. Die gracefully */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:799 - 0

/* no process to clean up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:817 - 0

/* We have a valid identity, and can be sure that
 * cgid_suexec_id_doer will return a valid ugid
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:838 - 0

/* no process to clean up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:952 - 0

/* Required by mod_include filter. This is how mod_cgid registers
 * with mod_include to provide processing of the exec directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1028 - 0

/* Make sure the pid is appended to the sockname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1078 - 0

/* XXX Very expensive mainline case! Open, then getfileinfo! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1087 - 0

/* "e;%% [Wed Jun 19 10:53:21 1996] GET /cgid-bin/printenv HTTP/1.0"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1091 - 0

/* "e;%% 500 /usr/local/apache/cgid-bin */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1117 - 0

/* XXX Very expensive mainline case! Open, then getfileinfo! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1123 - 0

/* Soak up script output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1133 - 0

/* "e;%% [Wed Jun 19 10:53:21 1996] GET /cgid-bin/printenv HTTP/1.0"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1137 - 0

/* "e;%% 500 /usr/local/apache/cgid-bin"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1214 - 0

/* 100 milliseconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1223 - 0

/* Save errno for later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1225 - 0

/* ECONNREFUSED means the listen queue is full; ENOENT means that
 * the cgid server either hasn't started up yet, or we're pointing
 * at the wrong socket file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1248 - 0

/* we got connected! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1261 - 0

/* gotta try again, but make sure the cgid daemon is still around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1292 - 0

/****************************************************************
 *
 * Actual cgid handling...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1305 - 0

/* 10 ms */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1333 - 0

/* in case it isn't dead yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1377 - 0

/* wait for pid of script */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1456 - 0

/* default to accept */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1488 - 0

/* We are putting the socket discriptor into an apr_file_t so that we can
 * use a pipe bucket to send the data to the client. APR will create
 * a cleanup for the apr_file_t which will close the socket, so we'll
 * get rid of the cleanup we registered when we created the socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1543 - 0

/* We can't do much with this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1548 - 0

/* If the child stopped, we still must read to EOS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1553 - 0

/* read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1575 - 0

/* silly script stopped reading, soak up remaining message */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1597 - 0

/* Handle script return... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1647 - 0

/* Soak up all the script output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1650 - 0

/* This redirect needs to be a GET no matter what the original
 * method was.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1666 - 0

/* XXX: Note that if a script wants to produce its own Redirect
 * body, it now has to explicitly *say* "e;Status: 302"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1684 - 0

/* get rid of all filters up through protocol... since we
 * haven't parsed off the headers, there is no way they can
 * work
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1703 - 0

/* NOT r->status, even if it has changed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1709 - 0

/*============================================================================
 *============================================================================
 * This is the beginning of the cgi filter code moved from mod_include. This
 * is the code required to handle the "e;exec"e; SSI directive.
 *============================================================================
 *============================================================================*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1727 - 0

/* No hardwired path info or query allowed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1737 - 0

/* Script gets parameters of the *document*, for back compatibility */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1738 - 0

/* hard to get right; see mod_cgi.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1741 - 0

/* Force sub_req to be treated as a CGI request, even if ordinary
 * typing rules would have called it something else.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1746 - 0

/* Run it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1769 - 0

/* This is the special environment used for running the "e;exec cmd="e;
 * variety of SSI directives.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1833 - 0

/* We are putting the socket discriptor into an apr_file_t so that we can
 * use a pipe bucket to send the data to the client. APR will create
 * a cleanup for the apr_file_t which will close the socket, so we'll
 * get rid of the cleanup we registered when we created the socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1933 - 0

/*============================================================================
 *============================================================================
 * This is the end of the cgi filter code moved from mod_include.
 *============================================================================
 *============================================================================*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1951 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1952 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1953 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1954 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1955 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_cgid.c:1956 - 0

/* register_handlers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:71 - 0

/* matching module name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:72 - 0

/* additional info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:82 - 0

/* current file name when doing -DDUMP_CONFIG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:84 - 0

/* file handle when doing -DDUMP_CONFIG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:274 - 0

/*XXX: should get something from apr_hooks.h instead */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:275 - 0

/* just to get the right size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:499 - 0

/* TODO: Not all of these defines are getting set like they do in main.c.
 * Missing some headers?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:598 - 0

/* This list displays the compiled in default paths: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:789 - 0

//www.w3.org/1999/xhtml\"e;>\n"e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:967 - 0

/* Done, turn off timeout, close file and return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:1011 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:1012 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:1013 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:1014 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_info.c:1015 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:92 - 0

/* Implement 'ap_run_status_hook'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:106 - 0

/* Format the number of bytes nicely */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:153 - 0

/* Main handler for x-httpd-status requests */

/* ID values for command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:168 - 0

/* see #defines above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:176 - 0

/* add another state for slots above the MaxRequestWorkers setting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:260 - 0

/*
 * Simple table-driven form data set parser that lets you alter the header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:340 - 0

/* XXX what about the counters for quiescing/seg faulted
 * processes? should they be counted or not? GLA
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:371 - 0

/* HAVE_TIMES */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:392 - 0

/* up_time in seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:466 - 0

/* Allow for OS/2 not having CPU stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:487 - 0

/* !short_report */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:493 - 0

/* Allow for OS/2 not having CPU stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:518 - 0

/* short_report */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:519 - 0

/* ap_extended_status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:587 - 0

/* send the scoreboard 'table' out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:695 - 0

/* MPM sets per-worker pid and generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:788 - 0

/* !no_table_report */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:872 - 0

/* no_table_report */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:873 - 0

/* for (j...) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:874 - 0

/* for (i...) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:896 - 0

/* if (ap_extended_status && !short_report) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:907 - 0

/* Run extension hooks to insert extra content. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:926 - 0

/* When mod_status is loaded, default our ExtendedStatus to 'on'
 * other modules which prefer verbose scoreboards may play a similar game.
 * If left to their own requirements, mpm modules can make do with simple
 * scoreboard entries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:938 - 0

/* We don't want to assume these are in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:939 - 0

/* any particular order in scoreboard.h */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:981 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:982 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:983 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:984 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:985 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_status.c:986 - 0

/* register_hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:29 - 0

/*
 * Create a configuration specific to this module for a server or directory
 * location, and fill it with the default settings.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:41 - 0

/*
 * Respond to a callback to create configuration record for a server or
 * vhost environment.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:50 - 0

/*
 * Respond to a callback to create a config record for a specific directory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:111 - 0

/*
 * Define the directives specific to this module. This structure is referenced
 * later by the 'module' structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:133 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:134 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:135 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:136 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:137 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/generators/mod_suexec.c:138 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:28 - 0

/* for sscanf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:44 - 0

/* For apr_date_parse_http and APR_DATE_BAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:77 - 0

/*
 * Returns: number of ranges (merged) or -1 for no-good
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:119 - 0

/*
 * Check the If-Range header for Etag or Date.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:156 - 0

/* In the form "e;-5"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:181 - 0

/* "e;5-"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:212 - 0

/* new set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:242 - 0

/* new set again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:258 - 0

/* If all ranges are unsatisfiable, we should return 416 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:267 - 0

/*
 * create the merged table now, now that we know we need it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:300 - 0

/*
 * Once we know that start and end are >= 0 convert everything to apr_uint64_t.
 * See the comments in apr_brigade_partition why.
 * In short apr_off_t (for values >= 0)and apr_size_t fit into apr_uint64_t.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:316 - 0

/* we know that no bucket has undefined length (-1) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:432 - 0

/*
 * Iterate through the brigade until reaching EOS or a bucket with
 * unknown length.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:467 - 0

/* this brigade holds what we will be sending */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:474 - 0

/* Is ap_make_content_type required here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:516 - 0

/*
 * For single range requests, we must produce Content-Range header.
 * Otherwise, we need to produce the multipart boundaries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:563 - 0

/* add the final boundary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:574 - 0

/* we're done with the original content - all of our data is in bsend. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/byterange_filter.c:578 - 0

/* send our multipart output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:22 - 0

/* for RLIMIT stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:31 - 0

/* For index_of_response(). Grump. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:60 - 0

/* XXX: chunk_hdr must remain at this scope since it is used in a
 * transient bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:63 - 0

/* enough space for the snprintf below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:71 - 0

/* there shouldn't be anything after the eos */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:93 - 0

/* unknown amount of data (e.g. a pipe) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:102 - 0

/*
 * There may be a new next bucket representing the
 * rest of the data stream on which a read() may
 * block so we pass down what we have so far.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:112 - 0

/* If there was nothing in this bucket then we can
 * safely move on to the next one without pausing
 * to pass down what we have counted up so far.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:124 - 0

/*
 * XXX: if there aren't very many bytes at this point it may
 * be a good idea to set them aside and return for more,
 * unless we haven't finished counting this brigade yet.
 */
 /* if there are content bytes, then wrap them in a chunk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:132 - 0

/*
 * Insert the chunk header, specifying the number of bytes in
 * the chunk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:180 - 0

/* XXX: (2) trailers ... does not yet exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:182 - 0

/* <trailers> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/chunk_filter.c:187 - 0

/* pass the brigade to the next filter. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:18 - 0

/* for RLIMIT stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:27 - 0

/* For index_of_response(). Grump. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:37 - 0

/* Handles for core filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:46 - 0

/* If we are using an MPM That Supports Async Connections,
 * use a different processing function
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:60 - 0

/* Stolen from mod_proxy.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:115 - 0

/*
 * The http module shouldn't return anything other than
 * "e;http"e; (the default) or "e;https"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:167 - 0

/* Something went wrong; close the connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:171 - 0

/* ap_read_request failed - client may have closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:186 - 0

/*
 * Read and process each request found on our connection
 * until no requests are left or we decide to close.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:239 - 0

/* Go straight to select() to wait for the next request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:324 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:325 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:326 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:327 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:328 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_core.c:329 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:18 - 0

/* for RLIMIT stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:27 - 0

/* For index_of_response(). Grump. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:30 - 0

/* Generate the human-readable hex representation of an apr_uint64_t
 * (basically a faster version of 'sprintf("e;%llx"e;)')
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:112 - 0

/*
 * ETag gets set to [W/]"e;inode-size-mtime"e;, modulo any
 * FileETag keywords.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:147 - 0

/*
 * Not a file document, so just use the mtime: [W/]"e;mtime"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:176 - 0

/* If we get a blank etag back, don't set the header. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:203 - 0

/* If we get a blank etag back, don't append vlv and stop now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_etag.c:208 - 0

/* merge variant_etag and vlv into a structured etag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:27 - 0

/* for sscanf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:44 - 0

/* For apr_date_parse_http and APR_DATE_BAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:70 - 0

/* streamed data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:71 - 0

/* data constrained by content length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:72 - 0

/* chunk expected */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:73 - 0

/* chunk digits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:74 - 0

/* chunk extension */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:75 - 0

/* got space(s) after digits, expect [CR]LF or ext */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:76 - 0

/* got CR after digits or ext, expect LF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:77 - 0

/* data constrained by chunked encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:79 - 0

/* got CR after data, expect LF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:80 - 0

/* trailers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:103 - 0

/* handle CRLF after the chunk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:113 - 0

/*
 * LF expected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:122 - 0

/* handle start of the chunk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:125 - 0

/*
 * Detect invalid character at beginning. This also works for
 * empty chunk size lines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:149 - 0

/*
 * LF expected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:161 - 0

/*
 * Control chars (but tabs) are invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:169 - 0

/* Be lenient up to 10 BWS (term from rfc7230 - 3.2.3).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:177 - 0

/*
 * ';', CR or LF expected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:207 - 0

/* bogus character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:218 - 0

/* Should not happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:225 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:276 - 0

/* This is the HTTP_INPUT filter for HTTP requests and responses from
 * proxied servers (mod_proxy). It handles chunked and content-length
 * bodies. This can only be inserted/used after the headers
 * are successfully parsed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:294 - 0

/* just get out of the way of things we don't want. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:320 - 0

/* fast path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:325 - 0

/* http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-23
 * Section 3.3.3.3: "e;If a Transfer-Encoding header field is
 * present in a response and the chunked transfer coding is not
 * the final encoding, the message body length is determined by
 * reading the connection until it is closed by the server."e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:376 - 0

/* If we don't have a request entity indicated by the headers, EOS.
 * (BODY_NONE is a valid intermediate state due to trailers,
 * but it isn't a valid starting state.)
 *
 * RFC 2616 Section 4.4 note 5 states that connection-close
 * is invalid for a request entity - request bodies must be
 * denoted by C-L or T-E: chunked.
 *
 * Note that since the proxy uses this filter to handle the
 * proxied *response*, proxy responses MUST be exempt.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:394 - 0

/* Since we're about to read data, send 100-Continue if needed.
 * Only valid on chunked and C-L bodies where the C-L is > 0. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:433 - 0

/* sanity check in case we're read twice */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:442 - 0

/* until further notice */

 /* read and handle the brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:456 - 0

/* for timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:494 - 0

/* come around again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:517 - 0

/* for timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:533 - 0

/* How many bytes did we just read? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:550 - 0

/* next chunk please */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:575 - 0

/* If we have no more bytes remaining on a C-L request,
 * save the caller a round trip to discover EOS.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:590 - 0

/* for timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:604 - 0

/* Should not happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:621 - 0

/* check a single header, to be used with apr_table_do() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:650 - 0

/**
 * Check headers for HTTP conformance
 * @return 1 if ok, 0 if bad
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:662 - 0

/* problem has been logged by check_header() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:667 - 0

/*
 * Check that the URI has a valid scheme and is absolute
 * XXX Should we do a full uri parse here?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:723 - 0

/* !APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:727 - 0

/* This routine is called by apr_table_do and merges all instances of
 * the passed field values into a single array that will be further
 * processed by some later routine. Originally intended to help split
 * and recombine multiple Vary fields, though it is generic to any field
 * consisting of comma/space-separated tokens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:746 - 0

/* Find a non-empty fieldname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:771 - 0

/* if not found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:797 - 0

/* If we found any, replace old Vary fields with unique-ified value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:805 - 0

/* Send a request's HTTP response headers to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:826 - 0

/* For each field, generate
 * name "e;: "e; value CRLF
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:867 - 0

/* Confirm that the status line is well-formed and matches r->status.
 * If they don't match, a filter may have negated the status line set by a
 * handler.
 * Zap r->status_line if bad.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:885 - 0

/* Since we passed the above check, we know that length three
 * is equivalent to only a 3 digit numeric http status.
 * RFC2616 mandates a trailing space, let's add it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:898 - 0

/*
 * Determine the protocol to use for the response. Potentially downgrade
 * to HTTP/1.0 in some situations and/or turn off keepalives.
 *
 * also prepare r->status_line.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:910 - 0

/* no such thing as a response protocol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:919 - 0

/* Status line is OK but our own reason phrase
 * would be preferred if defined
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:947 - 0

/* fill "e;bb"e; with a barebones/initial HTTP response header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:959 - 0

/* there are no headers to send */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:963 - 0

/* Output the HTTP/1.x Status-Line and the Date and Server fields */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:988 - 0

/*
 * keep the set-by-proxy server and date headers, otherwise
 * generate a new server header / date header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1035 - 0

/* unset so we don't send them again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1077 - 0

/* Get the original request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1090 - 0

/* XXX: should be = REQUEST_CHUNKED_PASS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1110 - 0

/* always 32 extra bytes to catch chunk header exceptions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1114 - 0

/* Add an extra 8192 for chunk headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1120 - 0

/* only while we have enough for a chunked header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1128 - 0

/* discard_rest_of_request_body into our buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1143 - 0

/* Now we recreate the request, and echo it back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1164 - 0

/* If configured to accept a body, echo the body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1214 - 0

/*
 * If we see an EOC bucket it is a signal that we should get out
 * of the way doing nothing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1238 - 0

/*
 * Now that we are ready to send a response, we need to combine the two
 * header field tables into a single table. If we don't do this, our
 * later attempts to set or unset a given fieldname might be bypassed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1274 - 0

/*
 * Now remove any ETag response header field if earlier processing
 * says so (such as a 'FileETag None' directive).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1282 - 0

/* determine the protocol and whether we should use keepalives. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1368 - 0

/* Whatever follows is real body stuff... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1479 - 0

/* These are metadata buckets. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1630 - 0

/* We lose the failure code here. This is why ap_get_client_block should
 * not be used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1671 - 0

/* If this fails, it means that a filter is written incorrectly and that
 * it needs to learn how to properly handle APR_BLOCK_READ requests by
 * returning data when requested.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1677 - 0

/* Check to see if EOS in the brigade.
 *
 * If so, we have to leave a nugget for the *next* ap_get_client_block
 * call to return 0.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1697 - 0

/* XXX yank me? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1704 - 0

/* Context struct for ap_http_outerror_filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1717 - 0

/* Create context if none is present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_filters.c:1738 - 0

/* Detect EOC buckets and memorize this in the context. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:30 - 0

/* for sscanf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:46 - 0

/* For apr_date_parse_http and APR_DATE_BAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:88 - 0

/* 209 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:89 - 0

/* 210 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:90 - 0

/* 211 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:91 - 0

/* 212 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:92 - 0

/* 213 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:93 - 0

/* 214 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:94 - 0

/* 215 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:95 - 0

/* 216 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:96 - 0

/* 217 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:97 - 0

/* 218 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:98 - 0

/* 219 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:99 - 0

/* 220 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:100 - 0

/* 221 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:101 - 0

/* 222 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:102 - 0

/* 223 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:103 - 0

/* 224 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:104 - 0

/* 225 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:113 - 0

/* 306 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:136 - 0

/* 419 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:137 - 0

/* 420 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:142 - 0

/* 425 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:144 - 0

/* 427 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:147 - 0

/* 430 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:159 - 0

/* 509 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:246 - 0

/* THIS CODE IS CORRECT, see above. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:263 - 0

/* If they sent a Keep-Alive token, send one back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:314 - 0

/* A server MUST use the strong comparison function (see section 13.3.3)
 * to compare the entity tags in If-Match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:342 - 0

/* All of our comparisons must be in seconds, because that's the
 * highest time resolution the HTTP specification allows.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:360 - 0

/* weak matches not allowed with Range requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:391 - 0

/* See section 13.3.3 for rules on how to determine if two entities tags
 * match. The weak comparison function can only be used with GET or HEAD
 * requests.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:430 - 0

/* All of our comparisons must be in seconds, because that's the
 * highest time resolution the HTTP specification allows.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:451 - 0

/* weak matches not allowed with Range requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:492 - 0

/* All of our comparisons must be in seconds, because that's the
 * highest time resolution the HTTP specification allows.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:512 - 0

/* weak matches not allowed with Range requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:530 - 0

/* unset by default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:548 - 0

/* If an If-Match request-header field was given
 * AND the field value is not "e;*"e; (meaning match anything)
 * AND if our strong ETag does not match any entity tag in that field,
 * respond with a status of 412 (Precondition Failed).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:558 - 0

/* Else if a valid If-Unmodified-Since request-header field was given
 * AND the requested resource has been modified since the time
 * specified in this field, then the server MUST
 * respond with a status of 412 (Precondition Failed).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:571 - 0

/* If an If-None-Match request-header field was given
 * AND the field value is "e;*"e; (meaning match anything)
 * OR our ETag matches any of the entity tags in that field, fail.
 *
 * If the request method was GET or HEAD, failure means the server
 * SHOULD respond with a 304 (Not Modified) response.
 * For all other request methods, failure means the server MUST
 * respond with a status of 412 (Precondition Failed).
 *
 * GET or HEAD allow weak etag comparison, all other methods require
 * strong comparison. We can only use weak if it's not a range request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:598 - 0

/* If a valid If-Modified-Since request-header field was given
 * AND it is a GET or HEAD request
 * AND the requested resource has not been modified since the time
 * specified in this field, then the server MUST
 * respond with a status of 304 (Not Modified).
 * A date later than the server's current request time is invalid.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:617 - 0

/* If an If-Range and an Range header is present, we must return
 * 200 OK. The byterange filter will convert it to a range response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:643 - 0

/* internal function to register one method/number pair */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:714 - 0

/* Check if the method was previously registered. If it was
 * return the associated method number.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:723 - 0

/* The method registry has run out of dynamically
 * assignable method numbers. Log this and return M_INVALID.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:921 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:939 - 0

/* check if the method has been dynamically registered */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:951 - 0

/*
 * Turn a known method number into a name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:958 - 0

/* scan through the hash table, looking for a value that matches
 the provided method number. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:969 - 0

/* it wasn't found in the hash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:986 - 0

/* Below 100 is illegal for HTTP status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:998 - 0

/* status unknown (falls in gap) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1002 - 0

/* 600 or above is also illegal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1010 - 0

/* Build the Allow field-value from the request handler method mask.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1017 - 0

/* For TRACE below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1037 - 0

/* TRACE is tested on a per-server basis */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1060 - 0

/* the request finalization will send an EOS, which will flush all
 * the headers out (including the Allow header)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1277 - 0

//\n"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1382 - 0

/* At this point, we are starting the response over, so we have to reset
 * this value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1395 - 0

/*
 * It's possible that the Location field might be in r->err_headers_out
 * instead of r->headers_out; use the latter if possible, else the
 * former.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1403 - 0

/* We need to special-case the handling of 204 and 304 responses,
 * since they have specific HTTP requirements and do not include a
 * message body. Note that being assbackwards here is not an option.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1493 - 0

/* Accept a status_line set by a module, but only if it begins
 * with the correct 3 digit status code
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1504 - 0

/* Since we passed the above check, we know that length three
 * is equivalent to only a 3 digit numeric http status.
 * RFC2616 mandates a trailing space, let's add it.
 * If we have an empty reason phrase, we also add "e;Unknown Reason"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1521 - 0

/* can't count on a charset filter being in place here,
 * so do ebcdic->ascii translation explicitly (if needed)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1547 - 0

/*
 * Create a new method list with the specified number of preallocated
 * extension slots.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1580 - 0

/*
 * Return true if the specified HTTP method is in the provided
 * method list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1588 - 0

/*
 * If it's one of our known methods, use the shortcut and check the
 * bitmask.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1596 - 0

/*
 * Otherwise, see if the method name is in the array of string names.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1614 - 0

/*
 * If it's one of our known methods, use the shortcut and use the
 * bitmask.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1623 - 0

/*
 * Otherwise, see if the method name is in the array of string names.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1634 - 0

/*
 * Remove the specified method from a method list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1643 - 0

/*
 * If it's a known methods, either builtin or registered
 * by a module, use the bitmask.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1652 - 0

/*
 * Otherwise, see if the method name is in the array of string names.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_protocol.c:1672 - 0

/*
 * Reset a method list to be completely empty.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:100 - 0

/*
 * If next != NULL then we left the while above because of
 * next->frec == ap_http_header_filter
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:144 - 0

/* Do NOT retry the custom thing! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:171 - 0

/*
 * Two types of custom redirects --- plain text, and URLs. Plain text has
 * a leading '"e;', so the URL code, here, is triggered on its absence
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:315 - 0

/* Enough blank lines with this connection?
 * Stop and don't recycle it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:331 - 0

/* Send an EOR bucket through the output filter chain. When
 * this bucket is destroyed, the request will be logged and
 * its pool will be freed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:339 - 0

/* Find the last request, taking into account internal
 * redirects. We want to send the EOR bucket at the end of
 * all the buckets so it does not jump the queue.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:414 - 0

/* Not a look-up request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:423 - 0

/* TODO: Should move these steps into a generic function, so modules
 * working on a suspended request can also call _ENTRY again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:540 - 0

/* Inherit the rest of the protocol info... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:572 - 0

/* We can only read it once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:672 - 0

/* copy output headers from subrequest, but leave negotiation headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:686 - 0

/* If any filters pointed at the now-defunct rr, we must point them
 * at our "e;new"e; instance of r. In particular, some of rr's structures
 * will now be bogus (say rr->headers_out). If a filter tried to modify
 * their f->r structure when it is pointing to rr, the real request_rec
 * will not get updated. Fix that here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:743 - 0

/* Not a look-up request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:753 - 0

/* This function is designed for things like actions or CGI scripts, when
 * using AddHandler, and you want to preserve the content type across
 * an internal redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:781 - 0

/*
 * Get rid of any current settings if requested; not just the
 * well-known methods but any extensions as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/http_request.c:802 - 0

/*
 * Get rid of any current settings if requested; not just the
 * well-known methods but any extensions as well.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:59 - 0

/* Information to which an extension can be mapped
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:62 - 0

/* Additional AddTyped stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:63 - 0

/* Added with AddEncoding... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:64 - 0

/* Added with AddLanguage... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:65 - 0

/* Added with AddHandler... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:66 - 0

/* Added with AddCharset... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:67 - 0

/* Added with AddInputFilter... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:68 - 0

/* Added with AddOutputFilter... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:78 - 0

/* Map from extension name to
 * extension_info structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:81 - 0

/* A simple list, walked once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:83 - 0

/* Language if no AddLanguage ext found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:85 - 0

/* Extensions to include in multiview matching
 * for filenames, e.g. Filters and Handlers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:172 - 0

/* Member is the offset within an extension_info of the pointer to reset
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:213 - 0

/* We may not be merging the tables, but if we potentially will change
 * an exinfo member, then we are about to trounce it anyways.
 * We must have a copy for safety.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:286 - 0

/*
 * Note handler names are un-added with each per_dir_config merge.
 * This keeps the association from being inherited, but not
 * from being re-added at a subordinate level.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:309 - 0

/* The sole bit of server configuration that the MIME module has is
 * the name of its config file, so...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:486 - 0

/* skip prefixed white space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:551 - 0

/* initialize ctp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:559 - 0

/* getting a type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:591 - 0

/* skip the '/' */

 /* getting a subtype */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:615 - 0

/* getting parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:616 - 0

/* skip the ';' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:774 - 0

/* If use_path_info is explicitly set to on (value & 1 == 1), append. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:782 - 0

/* Always drop the path leading up to the file name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:814 - 0

/* Parse filename extensions which can be in any order
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:847 - 0

/* empty string is treated as special case for RemoveType */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:884 - 0

/* The following extensions are not 'Found'. That is, they don't
 * make any contribution to metadata negotiation, so they must have
 * been explicitly requested by name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:985 - 0

/* Set default language, if none was specified by the extensions
 * and we have a DefaultLanguage setting in force
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1020 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1021 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1022 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1023 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1024 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http/mod_mime.c:1025 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:37 - 0

/**
 * Parse an Alt-Svc specifier as described in "e;HTTP Alternative Services"e;
 * (https://tools.ietf.org/html/draft-ietf-httpbis-alt-svc-04)
 * with the following changes:
 * - do not percent encode token values
 * - do not use quotation marks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:58 - 0

/* must be a port number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_alt_svc.c:81 - 0

/* Only announce Alt-Svc on the first response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_bucket_eoc.c:40 - 0

/*
 * If bucket_destroy is called after us, this prevents
 * bucket_destroy from trying to destroy the pool again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_bucket_eoc.c:96 - 0

/* all is gone now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_bucket_eos.c:40 - 0

/*
 * If bucket_destroy is called after us, this prevents
 * bucket_destroy from trying to destroy the pool again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:45 - 0

/* max_streams */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:46 - 0

/* window_size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:47 - 0

/* min workers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:48 - 0

/* max workers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:49 - 0

/* max workers idle secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:50 - 0

/* stream max mem size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:51 - 0

/* no alt-svcs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:52 - 0

/* alt-svc max age */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:53 - 0

/* serialize headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:54 - 0

/* h2 direct mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:55 - 0

/* # session extra files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:56 - 0

/* modern TLS only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:57 - 0

/* HTTP/1 Upgrade support */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:58 - 0

/* TLS warmup size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:59 - 0

/* TLS cooldown secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:60 - 0

/* HTTP/2 server push enabled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:61 - 0

/* map of content-type to priorities */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:62 - 0

/* connection timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:63 - 0

/* keepalive timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:64 - 0

/* stream timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:65 - 0

/* push diary size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:396 - 0

/* default AFTER weight */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:406 - 0

/* 2 args only, but which one? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:409 - 0

/* default dependency */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_config.c:424 - 0

/* default INTERLEAVED weight */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:93 - 0

/* some MPMs do not implemnent this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:233 - 0

/* Replace these */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:250 - 0

/* TODO: these should be unique to this thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:264 - 0

/* all fine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:270 - 0

/* fingers crossed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:287 - 0

/** APR_RING of expiration timeouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:289 - 0

/** the expiration time of the next keepalive timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:291 - 0

/** connection record this struct refers to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:293 - 0

/** request record (if any) this struct refers to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:295 - 0

/** is the current conn_rec suspended? (disassociated with
 * a particular MPM thread; for suspend_/resume_connection
 * hooks)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:300 - 0

/** memory pool to allocate from */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:302 - 0

/** bucket allocator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:304 - 0

/** poll file descriptor information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn.c:306 - 0

/** public parts of the connection state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:40 - 0

/* Calculated like this: max TLS record size 16*1024
 * - 40 (IP) - 20 (TCP) - 40 (TCP options) 
 * - TLS overhead (60-100) 
 * which seems to create less TCP packets overall
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:68 - 0

/* That is where we start with, 
 * see https://issues.apache.org/jira/browse/TS-2503 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:141 - 0

/* long time not written, reset write size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:150 - 0

/* connection is hot, use max size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:261 - 0

/* something in the buffer, put it in the output brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:275 - 0

/* Send it out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_conn_io.c:281 - 0

/* no more access after this, as we might have flushed an EOC bucket
 * that de-allocated us all. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:54 - 0

/* we do nothing regarding any meta here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:67 - 0

/* We have data left in the bucket. Split it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:133 - 0

/* We only do a blocking read when we have no streams to process. So,
 * in httpd scoreboard lingo, we are in a KEEPALIVE connection state.
 * When reading non-blocking, we do have streams to process and update
 * child with NULL request. That way, any current request information
 * in the scoreboard is preserved.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:171 - 0

/*******************************************************************************
 * http2 connection status handler + stream out source
 ******************************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:191 - 0

/* We need to handle the actual output on the main thread, as
 * we need to access h2_session information. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_filter.c:243 - 0

/* try the reverse for testing purposes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:88 - 0

/* We are ready to be sent to the client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:105 - 0

/* not well formed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:111 - 0

/* new header line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:134 - 0

/* we assume a non-0 containing line and remove
 * trailing crlf. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:160 - 0

/* The httpd core HTTP_HEADER filter has or will install the 
 * "e;CHUNK"e; output transcode filter, which appears further down 
 * the filter chain. We do not want it for HTTP/2.
 * Once we successfully deinstalled it, this filter has no
 * further function and we remove it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:190 - 0

/* instead of parsing, just take it directly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:195 - 0

/* end of headers, create the h2_response and
 * pass the rest of the brigade down the filter
 * chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:222 - 0

/* This routine is called by apr_table_do and merges all instances of
 * the passed field values into a single array that will be further
 * processed by some later routine. Originally intended to help split
 * and recombine multiple Vary fields, though it is generic to any field
 * consisting of comma/space-separated tokens.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:242 - 0

/* Find a non-empty fieldname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:267 - 0

/* if not found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:293 - 0

/* If we found any, replace old Vary fields with unique-ified value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:308 - 0

/*
 * keep the set-by-proxy server and date headers, otherwise
 * generate a new server header / date header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:355 - 0

/*
 * Now that we are ready to send a response, we need to combine the two
 * header field tables into a single table. If we don't do this, our
 * later attempts to set or unset a given fieldname might be bypassed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:380 - 0

/*
 * Now remove any ETag response header field if earlier processing
 * says so (such as a 'FileETag None' directive).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:388 - 0

/* determine the protocol and whether we should use keepalives. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:493 - 0

/* throw away any data after we have compiled the response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:506 - 0

/*
 * If we see an EOC bucket it is a signal that we should get out
 * of the way doing nothing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:545 - 0

/* Whatever follows is real body stuff... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_from_h1.c:566 - 0

/* Detect the EOR bucket and forward any trailers that may have
 * been set to our h2_response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:62 - 0

/*******************************************************************************
 * SSL var lookup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:78 - 0

/* 0x0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:83 - 0

/* 0x5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:88 - 0

/* 0xa */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:102 - 0

/*******************************************************************************
 * Check connection security requirements of RFC 7540
 */

/*
 * Black Listed Ciphers from RFC 7549 Appendix A
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:111 - 0

/* ciphers with NULL encrpytion */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:112 - 0

/* TLS_NULL_WITH_NULL_NULL */
 /* same */ /* TLS_RSA_WITH_NULL_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:114 - 0

/* TLS_RSA_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:115 - 0

/* TLS_RSA_WITH_NULL_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:116 - 0

/* TLS_PSK_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:117 - 0

/* TLS_DHE_PSK_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:118 - 0

/* TLS_RSA_PSK_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:119 - 0

/* TLS_PSK_WITH_NULL_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:120 - 0

/* TLS_PSK_WITH_NULL_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:121 - 0

/* TLS_DHE_PSK_WITH_NULL_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:122 - 0

/* TLS_DHE_PSK_WITH_NULL_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:123 - 0

/* TLS_RSA_PSK_WITH_NULL_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:124 - 0

/* TLS_RSA_PSK_WITH_NULL_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:125 - 0

/* TLS_ECDH_ECDSA_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:126 - 0

/* TLS_ECDHE_ECDSA_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:127 - 0

/* TLS_ECDH_RSA_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:128 - 0

/* TLS_ECDHE_RSA_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:129 - 0

/* TLS_ECDH_anon_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:130 - 0

/* TLS_ECDHE_PSK_WITH_NULL_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:131 - 0

/* TLS_ECDHE_PSK_WITH_NULL_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:132 - 0

/* TLS_ECDHE_PSK_WITH_NULL_SHA384 */

 /* DES/3DES ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:135 - 0

/* TLS_PSK_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:136 - 0

/* TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:137 - 0

/* TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:138 - 0

/* TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:139 - 0

/* TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:140 - 0

/* TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:141 - 0

/* TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:142 - 0

/* TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:143 - 0

/* TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:144 - 0

/* TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:145 - 0

/* TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:146 - 0

/* TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:147 - 0

/* TLS_RSA_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:148 - 0

/* TLS_RSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:149 - 0

/* TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:150 - 0

/* TLS_DHE_RSA_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:151 - 0

/* TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:152 - 0

/* TLS_DH_anon_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:153 - 0

/* TLS_DH_anon_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:154 - 0

/* TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:155 - 0

/* TLS_DH_DSS_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:156 - 0

/* TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:157 - 0

/* TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:158 - 0

/* TLS_DH_RSA_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:159 - 0

/* TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA */

 /* blacklisted EXPORT ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:162 - 0

/* TLS_RSA_EXPORT_WITH_RC4_40_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:163 - 0

/* TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:164 - 0

/* TLS_RSA_EXPORT_WITH_DES40_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:165 - 0

/* TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:166 - 0

/* TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:167 - 0

/* TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:168 - 0

/* TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 */

 /* blacklisted RC4 encryption */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:171 - 0

/* TLS_RSA_WITH_RC4_128_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:172 - 0

/* TLS_RSA_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:173 - 0

/* TLS_DH_anon_WITH_RC4_128_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:174 - 0

/* TLS_KRB5_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:175 - 0

/* TLS_KRB5_WITH_RC4_128_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:176 - 0

/* TLS_KRB5_EXPORT_WITH_RC4_40_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:177 - 0

/* TLS_KRB5_EXPORT_WITH_RC4_40_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:178 - 0

/* TLS_PSK_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:179 - 0

/* TLS_DHE_PSK_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:180 - 0

/* TLS_RSA_PSK_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:181 - 0

/* TLS_ECDH_ECDSA_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:182 - 0

/* TLS_ECDHE_ECDSA_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:183 - 0

/* TLS_ECDH_RSA_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:184 - 0

/* TLS_ECDHE_RSA_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:185 - 0

/* TLS_ECDH_anon_WITH_RC4_128_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:186 - 0

/* TLS_ECDHE_PSK_WITH_RC4_128_SHA */

 /* blacklisted AES128 encrpytion ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:189 - 0

/* TLS_RSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:190 - 0

/* TLS_DH_DSS_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:191 - 0

/* TLS_DH_RSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:192 - 0

/* TLS_DHE_DSS_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:193 - 0

/* TLS_DHE_RSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:194 - 0

/* TLS_DH_anon_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:195 - 0

/* TLS_RSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:196 - 0

/* TLS_DH_DSS_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:197 - 0

/* TLS_DH_RSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:198 - 0

/* TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:199 - 0

/* TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:200 - 0

/* TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:201 - 0

/* TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:202 - 0

/* TLS_ECDH_RSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:203 - 0

/* TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:204 - 0

/* TLS_ECDH_anon_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:205 - 0

/* TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:206 - 0

/* TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:207 - 0

/* TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:208 - 0

/* TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:209 - 0

/* TLS_DH_anon_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:210 - 0

/* TLS_PSK_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:211 - 0

/* TLS_DHE_PSK_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:212 - 0

/* TLS_RSA_PSK_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:213 - 0

/* TLS_PSK_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:214 - 0

/* TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:215 - 0

/* TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:216 - 0

/* TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:217 - 0

/* TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:218 - 0

/* TLS_RSA_WITH_AES_128_CCM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:219 - 0

/* TLS_RSA_WITH_AES_128_CCM_8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:220 - 0

/* TLS_PSK_WITH_AES_128_CCM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:221 - 0

/* TLS_PSK_WITH_AES_128_CCM_8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:222 - 0

/* TLS_RSA_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:223 - 0

/* TLS_DH_RSA_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:224 - 0

/* TLS_DH_DSS_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:225 - 0

/* TLS_DH_anon_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:226 - 0

/* TLS_PSK_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:227 - 0

/* TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:228 - 0

/* TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:229 - 0

/* TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:230 - 0

/* TLS_SRP_SHA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:231 - 0

/* TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:232 - 0

/* TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA */

 /* blacklisted AES256 encrpytion ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:235 - 0

/* TLS_RSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:236 - 0

/* TLS_DH_DSS_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:237 - 0

/* TLS_DH_RSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:238 - 0

/* TLS_DHE_DSS_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:239 - 0

/* TLS_DHE_RSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:240 - 0

/* TLS_DH_anon_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:241 - 0

/* TLS_RSA_WITH_AES_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:242 - 0

/* TLS_DH_DSS_WITH_AES_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:243 - 0

/* TLS_DH_RSA_WITH_AES_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:244 - 0

/* TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:245 - 0

/* TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:246 - 0

/* TLS_DH_anon_WITH_AES_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:247 - 0

/* TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:248 - 0

/* TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:249 - 0

/* TLS_ECDH_RSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:250 - 0

/* TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:251 - 0

/* TLS_ECDH_anon_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:252 - 0

/* TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:253 - 0

/* TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:254 - 0

/* TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:255 - 0

/* TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:256 - 0

/* TLS_PSK_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:257 - 0

/* TLS_DHE_PSK_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:258 - 0

/* TLS_RSA_PSK_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:259 - 0

/* TLS_PSK_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:260 - 0

/* TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:261 - 0

/* TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:262 - 0

/* TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:263 - 0

/* TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:264 - 0

/* TLS_SRP_SHA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:265 - 0

/* TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:266 - 0

/* TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:267 - 0

/* TLS_RSA_WITH_AES_256_CCM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:268 - 0

/* TLS_RSA_WITH_AES_256_CCM_8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:269 - 0

/* TLS_PSK_WITH_AES_256_CCM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:270 - 0

/* TLS_PSK_WITH_AES_256_CCM_8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:271 - 0

/* TLS_RSA_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:272 - 0

/* TLS_DH_RSA_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:273 - 0

/* TLS_DH_DSS_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:274 - 0

/* TLS_DH_anon_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:275 - 0

/* TLS_PSK_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:276 - 0

/* TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:277 - 0

/* TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:278 - 0

/* TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 */

 /* blacklisted CAMELLIA128 encrpytion ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:281 - 0

/* TLS_RSA_WITH_CAMELLIA_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:282 - 0

/* TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:283 - 0

/* TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:284 - 0

/* TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:285 - 0

/* TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:286 - 0

/* TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:287 - 0

/* TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:288 - 0

/* TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:289 - 0

/* TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:290 - 0

/* TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:291 - 0

/* TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:292 - 0

/* TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:293 - 0

/* TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:294 - 0

/* TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:295 - 0

/* TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:296 - 0

/* TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:297 - 0

/* TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:298 - 0

/* TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:299 - 0

/* TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:300 - 0

/* TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:301 - 0

/* TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:302 - 0

/* TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:303 - 0

/* TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:304 - 0

/* TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:305 - 0

/* TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:306 - 0

/* TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:307 - 0

/* TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:308 - 0

/* TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 */

 /* blacklisted CAMELLIA256 encrpytion ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:311 - 0

/* TLS_RSA_WITH_CAMELLIA_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:312 - 0

/* TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:313 - 0

/* TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:314 - 0

/* TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:315 - 0

/* TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:316 - 0

/* TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:317 - 0

/* TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:318 - 0

/* TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:319 - 0

/* TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:320 - 0

/* TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:321 - 0

/* TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:322 - 0

/* TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:323 - 0

/* TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:324 - 0

/* TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:325 - 0

/* TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:326 - 0

/* TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:327 - 0

/* TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:328 - 0

/* TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:329 - 0

/* TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:330 - 0

/* TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:331 - 0

/* TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:332 - 0

/* TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:333 - 0

/* TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:334 - 0

/* TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:335 - 0

/* TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:336 - 0

/* TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:337 - 0

/* TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:338 - 0

/* TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 */

 /* The blacklisted ARIA encrpytion ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:341 - 0

/* TLS_RSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:342 - 0

/* TLS_RSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:343 - 0

/* TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:344 - 0

/* TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:345 - 0

/* TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:346 - 0

/* TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:347 - 0

/* TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:348 - 0

/* TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:349 - 0

/* TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:350 - 0

/* TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:351 - 0

/* TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:352 - 0

/* TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:353 - 0

/* TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:354 - 0

/* TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:355 - 0

/* TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:356 - 0

/* TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:357 - 0

/* TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:358 - 0

/* TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:359 - 0

/* TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:360 - 0

/* TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:361 - 0

/* TLS_RSA_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:362 - 0

/* TLS_RSA_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:363 - 0

/* TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:364 - 0

/* TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:365 - 0

/* TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:366 - 0

/* TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:367 - 0

/* TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:368 - 0

/* TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:369 - 0

/* TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:370 - 0

/* TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:371 - 0

/* TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:372 - 0

/* TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:373 - 0

/* TLS_PSK_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:374 - 0

/* TLS_PSK_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:375 - 0

/* TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:376 - 0

/* TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:377 - 0

/* TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:378 - 0

/* TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:379 - 0

/* TLS_PSK_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:380 - 0

/* TLS_PSK_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:381 - 0

/* TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:382 - 0

/* TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:383 - 0

/* TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:384 - 0

/* TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 */

 /* blacklisted SEED encryptions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:387 - 0

/*TLS_RSA_WITH_SEED_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:388 - 0

/* TLS_DH_DSS_WITH_SEED_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:389 - 0

/* TLS_DH_RSA_WITH_SEED_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:390 - 0

/* TLS_DHE_DSS_WITH_SEED_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:391 - 0

/* TLS_DHE_RSA_WITH_SEED_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:392 - 0

/* TLS_DH_anon_WITH_SEED_CBC_SHA */

 /* blacklisted KRB5 ciphers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:395 - 0

/* TLS_KRB5_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:396 - 0

/* TLS_KRB5_WITH_3DES_EDE_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:397 - 0

/* TLS_KRB5_WITH_IDEA_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:398 - 0

/* TLS_KRB5_WITH_DES_CBC_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:399 - 0

/* TLS_KRB5_WITH_3DES_EDE_CBC_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:400 - 0

/* TLS_KRB5_WITH_IDEA_CBC_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:401 - 0

/* TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:402 - 0

/* TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:403 - 0

/* TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:404 - 0

/* TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 */

 /* blacklisted exoticas */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:407 - 0

/* TLS_DHE_DSS_WITH_DES_CBC_SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:408 - 0

/* TLS_RSA_WITH_IDEA_CBC_SHA */

 /* not really sure if the following names are correct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:411 - 0

/* TLS_EMPTY_RENEGOTIATION_INFO_SCSV */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:439 - 0

/*******************************************************************************
 * Hooks for processing incoming connections:
 * - process_conn take over connection in case of h2
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:478 - 0

/* Check TLS connection for modern TLS parameters, as defined in
 * RFC 7540 and https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:486 - 0

/* unable to check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:490 - 0

/* Need Tlsv1.2 or higher, rfc 7540, ch. 9.2
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:509 - 0

/* Check TLS cipher blacklist
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:552 - 0

/*******************************************************************************
 * Register various hooks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:589 - 0

/* our stream pseudo connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:663 - 0

/* slave connection? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:673 - 0

/* setup the correct output filters to process the response
 * on the proper mod_http2 way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:680 - 0

/* replace the core http filter that formats response headers
 * in HTTP/1 with our own that collects status and headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_h2.c:686 - 0

/* trailers processing. Incoming trailers are added to this
 * request via our h2 input filter, outgoing trailers
 * in a special h2 out filter. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:51 - 0

/* gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:160 - 0

/* if someone is waiting, wake him up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:181 - 0

/* trailers passed in, transfer directly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:188 - 0

/* no trailers passed in, transfer via chunked */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:224 - 0

/* the reader expects HTTP/1.1 chunked encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:375 - 0

/* someone tries to write real data after EOS, that
 * does not look right. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:379 - 0

/* cleanup, as if we had moved the data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:403 - 0

/* track # file buckets moved into our pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io.c:416 - 0

/* EOS has not been read yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io_set.c:67 - 0

/* we keep the array sorted by id, so lookup can be done
 * by bsearch.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_io_set.c:114 - 0

/* Close the hole in the array by moving the upper
 * parts down one step.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:219 - 0

/* cleanup any buffered input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:227 - 0

/* The pool is cleared/destroyed which also closes all
 * allocated file handles. Give this count back to our
 * file handle pool. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:249 - 0

/* Remove io from ready set, we will never submit it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:258 - 0

/* cleanup once task is done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:282 - 0

/* iterate until all ios have been orphaned or destroyed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:314 - 0

/* all gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:389 - 0

/* hang around until the stream deregisteres */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:394 - 0

/* someone wants another request, if we have */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:398 - 0

/* No request to hand back to the worker, NULLify reference
 * and decrement count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:626 - 0

/* hang around until the h2_task is done, but
 * shutdown input and send out any events (e.g. window
 * updates) asap. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_mplx.c:699 - 0

/* we might see some file buckets in the output, see
 * if we have enough handles reserved. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:41 - 0

/*******************************************************************************
 * link header handling 
 ******************************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:186 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:216 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:288 - 0

/* so, we have read a Link header and need to decide
 * if we transform it into a push.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:330 - 0

/* atm, we do not push on pushes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:391 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:412 - 0

/* Collect push candidates from the request/response pair.
 * 
 * One source for pushes are "e;rel=preload"e; link headers
 * in the response.
 * 
 * TODO: This may be extended in the future by hooks or callbacks
 * where other modules can provide push information directly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:456 - 0

/* nothing known found in this header, go by default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:467 - 0

/*******************************************************************************
 * push diary 
 ******************************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:494 - 0

//"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:556 - 0

/* grows by doubling, start with a power of 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:565 - 0

/* ifdef H2_OPENSSL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:587 - 0

/* search from the end, where the last accessed digests are */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:604 - 0

/* move entry[idx] to the end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:618 - 0

/* append a new diary entry at the end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:623 - 0

/* replace content with new digest. keeps memory usage constant once diary is full */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:687 - 0

/* h2_log2(n) iff n is a power of 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:744 - 0

/* in golomb bit stream encoding, bit 0 is the 8th of the first char, or
 * more generally: 
 * char(bit/8) & cbit_mask[(bit % 8)]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:837 - 0

/* should not happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:843 - 0

/* Now log2p is the max number of relevant bits, so that
 * log2p + log2n == mask_bits. We can uise a lower log2p
 * and have a shorter set encoding...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:980 - 0

/* at least this should be there */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:987 - 0

/* cannot handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:991 - 0

/* whatever is in the digest, it replaces the diary entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:1012 - 0

/* Determine effective N we use for storage */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:1021 - 0

/* Store not more than diary is configured to hold. We open us up
 * to DOS attacks otherwise. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_push.c:1034 - 0

/* the data may have less than N values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:93 - 0

/* Cookie header come separately in HTTP/2, but need
 * to be merged by "e;; "e; (instead of default "e;, "e;)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:157 - 0

/* port info missing and port is not default for scheme: append */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:171 - 0

//%s%s"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:188 - 0

/* pseudo header, see ch. 8.1.2.3, always should come first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:224 - 0

/* non-pseudo header, append to work bucket of stream */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:240 - 0

/* Always set the "e;Host"e; header from :authority, see rfc7540, ch. 8.1.2.3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:257 - 0

/* no content-length given */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:260 - 0

/* We have not seen a content-length and have no eos,
 * simulate a chunked encoding for our HTTP/1.1 infrastructure,
 * in case we have "e;H2SerializeHeaders on"e; here
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:334 - 0

/* keep the dst id */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:382 - 0

/* bytect isn't for body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:387 - 0

/* Until further notice */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:401 - 0

/* Time to populate r with the data we have. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:404 - 0

/* Provide quick information about the request method as soon as known */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_request.c:425 - 0

/* we may have switched to another server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_response.c:49 - 0

/* not valid format, abort */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_response.c:144 - 0

/* This request triggered a TLS renegotiation that is now allowed 
 * in HTTP/2. Tell the client that it should use HTTP/1.1 for this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:131 - 0

/* stream 1 closer to root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:135 - 0

/* stream 2 closer to root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:161 - 0

/* ifdef H2_NG2_STREAM_API */

/* In absence of nghttp2_stream API, which gives information about
 * priorities since nghttp2 1.3.x, we just sort the streams by
 * their identifier, aka. order of arrival.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:173 - 0

/* (ifdef else) H2_NG2_STREAM_API */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:183 - 0

/*
 * Callback when nghttp2 wants to send bytes back to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:314 - 0

/* We may see HEADERs at the start of a stream or after all DATA
 * streams to carry trailers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:319 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:362 - 0

/**
 * nghttp2 session has received a complete frame. Most, it uses
 * for processing of internal state. HEADER and DATA frames however
 * we need to handle ourself.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:388 - 0

/* This can be HEADERS for a new stream, defining the request,
 * or HEADER may come after DATA at the end of a stream as in
 * trailers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:715 - 0

/* On a controlled connection shutdown, this gets never
 * called as we deregister and destroy our pool manually.
 * However when we have an async mpm, and handed it our idle
 * connection, it will just cleanup once the connection is closed
 * from the other side (and sometimes even from out side) and
 * here we arrive then.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:839 - 0

/* Install the connection input filter that feeds the session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:864 - 0

/* We need to handle window updates ourself, otherwise we
 * get flooded by nghttp2. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:936 - 0

/* Start the conversation by submitting our SETTINGS frame */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:943 - 0

/* 'h2c' mode: we should have a 'HTTP2-Settings' header with
 * base64 encoded client settings. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:972 - 0

/* Now we need to auto-open stream 1 for the request we got. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1016 - 0

/* use maximum possible value for connection window size. We are only
 * interested in per stream flow control. which have the initial window
 * size configured above.
 * Therefore, for our use, the connection window can only get in the
 * way. Example: if we allow 100 streams with a 32KB window each, we
 * buffer up to 3.2 MB of data. Unless we do separate connection window
 * interim updates, any smaller connection window will lead to blocking
 * in DATA flow.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1195 - 0

/**
 * Start submitting the response to a stream request. This is possible
 * once we have all the response headers. The response body will be
 * read by the session using the callback we supply.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1250 - 0

/* no showstopper if that fails for some reason */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1332 - 0

/* try to tell the client that it should not wait. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1375 - 0

/* parent of parent does not exist, 
 * only possible if parent == root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1382 - 0

/* PUSHed stream is to be interleaved with initiating stream.
 * It is made a sibling of the initiating stream and gets a
 * proportional weight [1, MAX_WEIGHT] of the initiaing
 * stream weight.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1415 - 0

/* The PUSHed stream is to be sent after the initiating stream.
 * Give if the specified weight and let it depend on the intiating
 * stream.
 */
 /* fall through, it's the default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1550 - 0

/* iff we can and they can */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1604 - 0

/* H2_IN filter handles all incoming data against the session.
 * We just pull at the filter chain to make it happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1610 - 0

/* get rid of any possible data we do not expect to get */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1618 - 0

/* successfull blocked read, try unblocked to
 * get more. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1629 - 0

/* first attempt failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1635 - 0

/* common status for a client that has left */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1640 - 0

/* uncommon status, log on INFO so that we see this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1648 - 0

/* subsequent failure after success(es), return initial
 * status. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1665 - 0

/* If we have responses ready, submit them now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1690 - 0

/* H2_SESSION_ST_INIT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1691 - 0

/* H2_SESSION_ST_DONE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1692 - 0

/* H2_SESSION_ST_IDLE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1693 - 0

/* H2_SESSION_ST_BUSY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1694 - 0

/* H2_SESSION_ST_WAIT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1695 - 0

/* H2_SESSION_ST_LOCAL_SHUTDOWN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1696 - 0

/* H2_SESSION_ST_REMOTE_SHUTDOWN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1735 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1748 - 0

/* all done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1765 - 0

/* all done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1780 - 0

/* just leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1797 - 0

/* just leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1826 - 0

/* nothing for input and output to do. If we remain
 * in this state, we go into a tight loop and suck up
 * CPU cycles. Ideally, we'd like to do a blocking read, but that
 * is not possible if we have scheduled tasks and wait
 * for them to produce something. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1832 - 0

/* When we have no streams, no task event are possible,
 * switch to blocking reads */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1838 - 0

/* none of our streams is waiting for a response or
 * new output data from task processing, 
 * switch to blocking reads. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1844 - 0

/* Unable to do blocking reads, as we wait on events from
 * task processing in other threads. Do a busy wait with
 * backoff timer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1851 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1863 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1875 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1886 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1888 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1897 - 0

/* nop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:1996 - 0

/* nothing to read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:2019 - 0

/* nothing to read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:2033 - 0

/* Submit any responses/push_promises that are ready */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_session.c:2043 - 0

/* send out window updates for our inputs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:52 - 0

/* ID OP RL RR CI CO CL */
/*ID*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:54 - 0

/*OP*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:55 - 0

/*RL*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:56 - 0

/*RR*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:57 - 0

/*CI*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:58 - 0

/*CO*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:59 - 0

/*CL*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:83 - 0

/* both closed now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:87 - 0

/* everything else we jump to here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:112 - 0

/* both closed now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:116 - 0

/* everything else we jump to here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:185 - 0

/* stream is gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:292 - 0

/* Seeing the end-of-headers, we have everything we need to 
 * start processing it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:310 - 0

//%s%s"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:318 - 0

//%s%s"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:532 - 0

/* FIXME: Not good enough, config needs to come from request->server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_stream.c:539 - 0

/*******************************************************************************
 * h2_sos_mplx
 ******************************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:59 - 0

/* We do not know how to switch from anything else but http/1.1.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:73 - 0

/* So far, this indicates an HTTP/1 Upgrade header initiated
 * protocol switch. For that, the HTTP2-Settings header needs
 * to be present and valid for the connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:97 - 0

/* We also allow switching only for requests that have no body.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:148 - 0

/* Switching in the middle of a request means that
 * we have to send out the response to this one in h2
 * format. So we need to take over the connection
 * right away.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_switch.c:157 - 0

/* Ok, start an h2_conn on this one. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task.c:88 - 0

/*******************************************************************************
 * Register various hooks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task.c:137 - 0

/* Add our own, network level in- and output filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:124 - 0

/* Get more data for our stream from mplx.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:132 - 0

/* Although we sometimes get called with APR_NONBLOCK_READs, 
 we seem to fill our buffer blocking. Otherwise we get EAGAIN,
 return that to our caller and everyone throws up their hands,
 never calling us again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:166 - 0

/* return all we have */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:175 - 0

/* return not more than was asked for */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_input.c:180 - 0

/* we are reading a single LF line, e.g. the HTTP headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_output.c:69 - 0

/* This happens currently when ap_die(status, r) is invoked
 * by a read request filter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_output.c:120 - 0

/* Bring the data from the brigade (which represents the result of the
 * request_rec out filter chain) into the h2_mplx for further sending
 * on the master connection. 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_queue.c:60 - 0

/* bubble it to the front of the queue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_queue.c:93 - 0

/* Start at the end of the queue and create a tail of sorted
 * entries. Make that tail one element longer in each iteration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_queue.c:102 - 0

/* i bubbled one up, bubble the new i down, which
 * keeps all tasks below i sorted. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_task_queue.c:137 - 0

/* elts wrapped, append elts in [0, remain] to nq */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:86 - 0

/* 0 1 2 3 4 5 6 7 8 9 a b c d e f */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:87 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:88 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:89 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:90 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:91 - 0

/* 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:92 - 0

/* 5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:93 - 0

/* 6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:94 - 0

/* 7 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:95 - 0

/* 8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:96 - 0

/* 9 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:97 - 0

/* a */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:98 - 0

/* b */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:99 - 0

/* c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:100 - 0

/* d */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:101 - 0

/* e */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:102 - 0

/* f */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:105 - 0

/* 0 - 9 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:106 - 0

/* 10 - 19 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:107 - 0

/* 20 - 29 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:108 - 0

/* 30 - 39 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:109 - 0

/* 40 - 49 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:110 - 0

/* 50 - 59 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:111 - 0

/* 60 - 69 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:155 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:189 - 0

/* the simple life */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:195 - 0

/* seeing the token? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:198 - 0

/* skip parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:201 - 0

/* need comma separation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:222 - 0

/* skip parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:225 - 0

/* need comma separation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:257 - 0

/* Find the bucket, up to which we reach maxlen/mem bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:263 - 0

/* included */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:281 - 0

/* we like it move it, always */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:338 - 0

/* both brigades use the same bucket_alloc and auto-cleanups
 * have the same life time. It's therefore safe to just move
 * directly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:582 - 0

/* empty brigade, does it have an EOS bucket somwhere? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:609 - 0

/* Pass data in our brigade through the callback until the length
 * is satisfied or we encounter an EOS.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:633 - 0

/* read to determine length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:785 - 0

/* If the bucket type does not implement setaside, then
 * (hopefully) morph it into a bucket type which does, and set
 * *that* aside... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:816 - 0

/*******************************************************************************
 * h2_ngheader
 ******************************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:822 - 0

/* never forward, ch. 8.1.2.2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_util.c:923 - 0

/*******************************************************************************
 * header HTTP/1 <-> HTTP/2 conversions
 ******************************************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_worker.c:40 - 0

/* Other code might want to see a socket for this connection this
 * worker processes. Allocate one without further function...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_worker.c:58 - 0

/* Get a h2_mplx + h2_request from the main workers queue. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_worker.c:156 - 0

/* worker is gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:120 - 0

/* Need to wait for a new mplx to arrive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:127 - 0

/* waited long enough without getting a task. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:153 - 0

/* Here, we either have gotten task and mplx for the worker or
 * needed to give up with more than enough workers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:236 - 0

/* let's have our own pool that will be parent to all h2_worker
 * instances we create. This happens in various threads, but always
 * guarded by our lock. Without this pool, all subpool creations would
 * happen on the pool handed to us, which we do not guard.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/h2_workers.c:314 - 0

/* workers is gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:49 - 0

/* func to create per server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:50 - 0

/* func to merge per server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:51 - 0

/* command handlers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:96 - 0

/* all fine, we know these ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:99 - 0

/* ok, we now know how to handle that one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:102 - 0

/* ??? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:125 - 0

/* Set up our connection processing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:136 - 0

/* Install this module into the apache2 infrastructure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:148 - 0

/* Run once after a child process has been created.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:162 - 0

/* test http2 connection status handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:199 - 0

/* should be set in r->subprocess_env */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/http2/mod_http2.c:221 - 0

/* If the # of vars grow, we need to put definitions in a hash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:45 - 0

/* Default define for ldap functions that need a SIZELIMIT but
 * do not have the define
 * XXX This should be removed once a supporting #define is
 * released through APR-Util.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:154 - 0

/* We leave bound LDAP connections floating around in our pool,
 * but always check/fix the binddn/bindpw when we take them out
 * of the pool
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:193 - 0

/* forget the rebind info for this conn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:203 - 0

/* not presently used, not part of the API */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:205 - 0

/*
 * util_ldap_connection_remove frees all storage associated with the LDAP
 * connection and removes it completely from the per-virtualhost list of
 * connections
 *
 * The caller should hold the lock for this connection
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:227 - 0

/* Remove ldc from the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:253 - 0

/* Destory the pool associated with this connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:303 - 0

/* something really bad happened */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:332 - 0

/* Now that we have an ldap struct, add it to the referral list for rebinds. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:343 - 0

/* always default to LDAP V3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:346 - 0

/* set client certificates */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:357 - 0

/* switch on SSL/TLS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:360 - 0

/* See comments near apr_ldap_init() above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:373 - 0

/* Set the alias dereferencing option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:378 - 0

/* Set options for rebind and referrals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:422 - 0

/*XXX All of the #ifdef's need to be removed once apr-util 1.2 is released */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:435 - 0

/* This is not a per-connection setting so just pass NULL for the
 Ldap connection handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:517 - 0

/* -1 is LDAP_SERVER_DOWN in openldap, use something else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:549 - 0

/* sanity check for NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:562 - 0

/* create the ldap session handle
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:623 - 0

/* leave rc as the initial bind return code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:646 - 0

/*
 * Compare client certificate arrays.
 *
 * Returns 1 on compare failure, 0 otherwise.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:657 - 0

/* arrays both NULL? if so, then equal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:662 - 0

/* arrays different length or either NULL? If so, then not equal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:667 - 0

/* run an actual comparison */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:673 - 0

/* One is passwordless? If so, then not equal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:681 - 0

/* if we got here, the cert arrays were identical */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:701 - 0

/* To traverse the linked list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:712 - 0

/* mutex lock this function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:720 - 0

/* Search for an exact connection match in the list that is not
 * being used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:742 - 0

/* Go ahead (by falling through) and use it, so we don't create more just to unbind some other old ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:760 - 0

/* If nothing found, search again, but we don't care about the
 * binddn and bindpw this time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:780 - 0

/* Go ahead (by falling through) and use it, so we don't create more just to unbind some other old ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:787 - 0

/* the bind credentials have changed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:853 - 0

/* save away a copy of the client cert list that is presently valid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:856 - 0

/* whether or not to keep this connection in the pool when it's returned */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:923 - 0

/* a simple compare? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:925 - 0

/* unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:937 - 0

/* no - it's a server side compare */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:951 - 0

/* unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:964 - 0

/* make a server connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:966 - 0

/* connect to server failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:970 - 0

/* search for reqdn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:984 - 0

/*
 * we are reusing a connection that doesn't seem to be active anymore
 * (firewall state drop?), let's try a new connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:996 - 0

/* search for reqdn failed - no match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1052 - 0

/* silence gcc -Wall */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1084 - 0

/* found it... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1086 - 0

/* ...but it is too old */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1090 - 0

/* ...and it is good */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1106 - 0

/* record the result code to return with the reason... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1108 - 0

/* and unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1117 - 0

/* unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1140 - 0

/* connection failed - try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1148 - 0

/*
 * we are reusing a connection that doesn't seem to be active anymore
 * (firewall state drop?), let's try a new connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1172 - 0

/* If the node doesn't exist then insert it, otherwise just update
 * it with the last results
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1262 - 0

/* try to do the search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1275 - 0

/*
 * we are reusing a connection that doesn't seem to be active anymore
 * (firewall state drop?), let's try a new connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1295 - 0

/*
 * Get values for the provided sub-group attributes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1305 - 0

/* Get *all* matching "e;member"e; values from this group. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1310 - 0

/*
 * Now we are going to pare the subgroup members of this group
 * to *just* the subgroups, add them to the compare_nodep, and
 * then proceed to check the new level of subgroups.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1316 - 0

/* Check if this entry really is a group. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1331 - 0

/* It's a group, so add it to the array. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1347 - 0

/* We need to fill in tmp_local_subgroups using the data from LDAP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1438 - 0

/*
 * 1. Check the "e;groupiness"e; of the specified basedn. Stopping at the first
 * TRUE return.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1480 - 0

/*
 * Found the generic group entry... but the user isn't in this
 * group or we wouldn't be here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1486 - 0

/* Make a local copy of the subgroup list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1567 - 0

/* We looked up an SGL for a group and found it to be empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1616 - 0

/*
 * 4.A. We found the user in the subgroup. Return
 * LDAP_COMPARE_TRUE.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1697 - 0

/* ...but entry is too old */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1704 - 0

/* ...and entry is valid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1718 - 0

/* unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1742 - 0

/* try do the search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1790 - 0

/* Grab the dn, copy it into the pool, and free it again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1808 - 0

/*
 * Attempt to bind with the retrieved dn and the password. If the bind
 * fails, it means that the password is wrong (the dn obviously
 * exists, since we just retrieved it)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1830 - 0

/* failure? if so - return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1847 - 0

/*
 * Get values for the provided attributes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1860 - 0

/* get values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1970 - 0

/* ...but entry is too old */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1974 - 0

/* ...and entry is valid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:1988 - 0

/* unlock this read lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2012 - 0

/* try do the search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2051 - 0

/* Grab the dn, copy it into the pool, and free it again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2056 - 0

/*
 * Get values for the provided attributes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2069 - 0

/* get values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2107 - 0

/*
 * Don't update lastbind on entries with bindpw because
 * we haven't verified that password. It's OK to update
 * the entry if there is no password in it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2125 - 0

/*
 * Reports if ssl support is enabled
 *
 * 1 = enabled, 0 = not enabled
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2139 - 0

/* ---------------------------------------- */
/* config directives */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2282 - 0

/**
 * Parse the certificate type.
 *
 * The type can be one of the following:
 * CA_DER, CA_BASE64, CA_CERT7_DB, CA_SECMOD, CERT_DER, CERT_BASE64,
 * CERT_KEY3_DB, CERT_NICKNAME, KEY_DER, KEY_BASE64
 *
 * If no matches are found, APR_LDAP_CA_TYPE_UNKNOWN is returned.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2293 - 0

/* Authority file in binary DER format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2298 - 0

/* Authority file in Base64 format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2303 - 0

/* Netscape certificate database file/directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2308 - 0

/* Netscape secmod file/directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2313 - 0

/* Client cert file in DER format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2318 - 0

/* Client cert file in Base64 format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2323 - 0

/* Client cert file in PKCS#12 format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2328 - 0

/* Netscape client cert database file/directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2333 - 0

/* Netscape client cert nickname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2338 - 0

/* Client cert key file in DER format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2343 - 0

/* Client cert key file in Base64 format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2348 - 0

/* Client cert key file in PKCS#12 format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2392 - 0

/* handle the certificate type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2412 - 0

/* add the certificate to the global array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2418 - 0

/* if file is a file or path, fix the path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2463 - 0

/* handle the certificate type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2496 - 0

/* add the certificate to the client array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2502 - 0

/* if file is a file or path, fix the path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2525 - 0

/**
 * Set LDAPTrustedMode.
 *
 * This directive sets what encryption mode to use on a connection:
 * - None (No encryption)
 * - SSL (SSL encryption)
 * - STARTTLS (TLS encryption)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2688 - 0

/* defaults are AP_LDAP_CHASEREFERRALS_ON and AP_LDAP_DEFAULT_HOPLIMIT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2750 - 0

/* reserve -1 for default value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2809 - 0

/* Create a per vhost pool for mod_ldap to use, serialized with
 * st->mutex (also one per vhost). both are replicated by fork(),
 * no shared memory managed by either.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2834 - 0

/* no delay */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2865 - 0

/* not known until post-config and re-merged */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2936 - 0

/* util_ldap_post_config() will be called twice. Don't bother
 * going through all of the initialization on the first call
 * because it will just be thrown away.*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:2975 - 0

/* merge config in all vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3003 - 0

/* log the LDAP SDK used
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3027 - 0

/* MICROSOFT_LDAPSDK uses Microsoft Management Console (MMC) for that */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3048 - 0

/* ssl_supported is really a global setting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3059 - 0

/* Initialize the rebind callback's cross reference list. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3221 - 0

/* create dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3222 - 0

/* merge dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3223 - 0

/* create server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3224 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3225 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap.c:3226 - 0

/* set up request processing hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:32 - 0

/* ------------------------------------------------------------------ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:152 - 0

/* safety check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:155 - 0

/* copy vals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:236 - 0

/* ------------------------------------------------------------------ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:341 - 0

/* ------------------------------------------------------------------ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:397 - 0

/* ------------------------------------------------------------------ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:425 - 0

/* Remove any existing shm segment with this name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:436 - 0

/* Determine the usable size of the shm segment. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:439 - 0

/* This will create a rmm "e;handler"e; to get into the shared memory area */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache.c:464 - 0

/* APR_HAS_LDAP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:34 - 0

/* only here until strdup is gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:37 - 0

/* here till malloc is gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:84 - 0

/* Free in shared memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:104 - 0

/* allocate from shared memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:121 - 0

/* allocate from shared memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:141 - 0

/*
 * Duplicate a subgroupList from one compare entry to another.
 * Returns: ptr to a new copy of the subgroupList or NULL if allocation failed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:161 - 0

/* We ran out of SHM, delete the strings we allocated for the SGL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:171 - 0

/* We were able to allocate new strings for all the subgroups */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:181 - 0

/*
 * Delete an entire subgroupList.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:456 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:461 - 0

/* check if we are full - if so, try purge */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:529 - 0

/* populate the entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:563 - 0

/* If p is null, it means that we couldn't find the node, so just return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:568 - 0

/* We found the node, and it's the first in the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:572 - 0

/* We found the node and it's not the first in the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ldap/util_ldap_cache_mgr.c:882 - 0

/* APR_HAS_LDAP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_journald.c:46 - 0

/* We don't use EMERG here, because journald broadcasts EMERG messages
 * to all terminals. APLOG_EMERG is usually not used in this context.
 * in httpd code. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_journald.c:105 - 0

/* We were not able to create subpool, log at least what we have. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_journald.c:112 - 0

/* Adds new entry to iovec if previous additions were successful. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_journald.c:142 - 0

/* anything non-NULL is success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_journald.c:158 - 0

/* We don't have any pool, so at least log the message without
 * any additional data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:43 - 0

/*
 * Logging of input and output config...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:96 - 0

/*
 * Format items...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:135 - 0

/*
 * Reset counters after logging...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:144 - 0

/* need to save byte count of last request for ap_increment_counts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:151 - 0

/*
 * Logging of input filter...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:175 - 0

/*
 * The hooks...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:278 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:279 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:280 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:281 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:282 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_logio.c:283 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:162 - 0

/* For REMOTE_NAME */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:205 - 0

/* default unbuffered */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:223 - 0

/*
 * multi_log_state is our per-(virtual)-server configuration. We store
 * an array of the logs we are going to use, each of type config_log_state.
 * If a default log format is given by LogFormat, store in default_format
 * (backward compat. with mod_log_config). We also store for each virtual
 * server a pointer to the logs specified for the main server, so that if this
 * vhost has no logs defined, we can use the main server's logs instead.
 *
 * So, for the main server, config_logs contains a list of the log files
 * and server_config_logs is empty. For a vhost, server_config_logs
 * points to the same array as config_logs in the main server, and
 * config_logs points to the array of logs defined inside this vhost,
 * which might be empty.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:275 - 0

/*
 * log_request_state holds request specific log data that is not
 * part of the request_rec.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:283 - 0

/*
 * Format items...
 * Note that many of these could have ap_sprintfs replaced with static buffers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:296 - 0

/*
 * errorlog_provider_data holds pointer to provider and its handle
 * generated by provider initialization. It is used when logging using
 * ap_errorlog_provider.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:306 - 0

/*
 * Type of the log_writer created by ap_default_log_writer_init.
 * It is used by ap_default_log_writer to determine the type of
 * the log_writer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:316 - 0

/*
 * Abstract struct to allow multiple types of log writers to be created
 * by ap_default_log_writer_init function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:496 - 0

/* \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:506 - 0

/* "e;, "e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:591 - 0

/* last2 points to the next char following an '=' delim,
 or the trailing NUL char of the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:596 - 0

/* Move past leading WS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:604 - 0

/* last1 points to the next char following the ';' delim,
 or the trailing NUL char of the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:607 - 0

/* Move past leading WS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:617 - 0

/* Iterate the remaining tokens using apr_strtok(NULL, ...) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:726 - 0

/* Absolute (micro-/milli-)second time
 * or msec/usec fraction
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:820 - 0

/* bogus format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:848 - 0

/* bogus format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:871 - 0

/* APR will format "e;0"e; anyway but an arg is needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:875 - 0

/* APR can format a thread id in hex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:878 - 0

/* APR is missing the feature, so always use decimal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:883 - 0

/* bogus format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:906 - 0

/*****************************************************************
 *
 * Parsing the log format string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:924 - 0

/*
 * This might allocate a few chars extra if there's a backslash
 * escape in the format string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:956 - 0

/* copy verbatim */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:958 - 0

/*
 * Allow the loop to deal with this *s in the normal
 * fashion so that it handles end of string etc.
 * properly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:995 - 0

/* For safety's sake... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1046 - 0

/* check for '^' + two character format first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1103 - 0

/* First, see if we need to process this thing at all... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1123 - 0

/* We do. Do it... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1224 - 0

/*
 * Initialize per request state
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1230 - 0

/*
 * Log this transaction..
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1256 - 0

/*****************************************************************
 *
 * Module glue...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1276 - 0

/*
 * Use the merger to simply add a pointer from the vhost log state
 * to the log of logs specified for the non-vhost configuration. Make sure
 * vhosts inherit any globally-defined format names.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1297 - 0

/*
 * Set the default logfile format, or define a nickname for a format string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1388 - 0

/* Add a custom log through the normal channel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1441 - 0

/* virtual config shared w/main server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1445 - 0

/* Leave it NULL to decline. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1553 - 0

/* First init the buffered logs array, which is needed when opening the logs. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1558 - 0

/* Next, do "e;physical"e; server, which gets default log fd and format
 * for the virtual servers, if they don't override...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1563 - 0

/* Then, virtual servers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1578 - 0

/* Now register the last buffer flush with the cleanup engine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1651 - 0

/*
 * We do this memcpy dance because write() is atomic for len < PIPE_BUF,
 * while writev() need not be.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1693 - 0

/* We support *Log "e;errorlog_provider:arg"e; syntax now, so get the provider
 * name from the name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1723 - 0

/* provider must log something to the console */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1797 - 0

/*
 * We do this memcpy dance because write() is atomic for
 * len < PIPE_BUF, while writev() need not be.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1865 - 0

/* reset to default conditions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1884 - 0

/* Don't check this config_log_state again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1905 - 0

/*
 * We don't need to check mls->server_config_logs because it just
 * points to the parent server's mls->config_logs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1945 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1946 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1947 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1948 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1949 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_config.c:1950 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:40 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:41 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:42 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:43 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:44 - 0

/* 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:45 - 0

/* 5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:46 - 0

/* 6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:47 - 0

/* 7 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:48 - 0

/* 8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:49 - 0

/* 9 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:50 - 0

/* 10 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:51 - 0

/* 11 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:276 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:277 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:278 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:279 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:280 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_debug.c:281 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:172 - 0

/* note that we don't have to check h->pos here, coz its been done
 for us by log_escape */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:281 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:282 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:283 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:284 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:285 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_log_forensic.c:286 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/loggers/mod_syslog.c:110 - 0

/* anything non-NULL is success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:81 - 0

/* Change to use ap_lua_map_handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:144 - 0

/*static int cfg_root(lua_State *L)
{
 ap_lua_dir_cfg *cfg = check_dir_config(L, 1);
 lua_pushstring(L, cfg->root_path);
 return 1;
}*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:154 - 0

/* {"e;root"e;, cfg_root}, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:158 - 0

/* helper function for the logging functions below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:263 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:267 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_config.c:274 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:54 - 0

/*
 =============================================================================
 db:close(): Closes an open database connection.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:61 - 0

/*~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:64 - 0

/*~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:96 - 0

/*~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:98 - 0

/*~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:120 - 0

/*
 =============================================================================
 db:active(): Returns true if the connection to the db is still active.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:127 - 0

/*~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:130 - 0

/*~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:154 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:159 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:174 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:176 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:188 - 0

/*
 =============================================================================
 db:escape(string): Escapes a string for safe use in the given database type.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:195 - 0

/*~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:200 - 0

/*~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:225 - 0

/*
 =============================================================================
 resultset(N): Fetches one or more rows from a result set.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:243 - 0

/* Fetch all rows at once? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:274 - 0

/* Just fetch a single row */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:310 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:315 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:323 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:327 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:355 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:357 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:376 - 0

/*
 =============================================================================
 statement:select(var1, var2, var3...): Injects variables into a prepared 
 statement and returns the number of rows matching the query.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:384 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:389 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~*/

 /* Fetch the prepared statement and the vars passed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:397 - 0

/* Check if we got enough variables passed on to us.
 * This, of course, only works for prepared statements made through lua. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:412 - 0

/* Fire off the query */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:415 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:418 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:424 - 0

/*~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:426 - 0

/*~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:447 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:449 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:475 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:480 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~*/

 /* Fetch the prepared statement and the vars passed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:488 - 0

/* Check if we got enough variables passed on to us.
 * This, of course, only works for prepared statements made through lua. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:503 - 0

/* Fire off the query */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:506 - 0

/*~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:508 - 0

/*~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:518 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:520 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:537 - 0

/*
 =============================================================================
 db:prepare(statement): Prepares a statement for later query/select.
 Returns a table with a :query and :select function, same as the db funcs.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:545 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:552 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:560 - 0

/* Count number of variables in statement */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:577 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:579 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:589 - 0

/* Push the prepared statement table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:610 - 0

/*
 =============================================================================
 db:prepared(statement): Fetches a prepared statement made through 
 DBDPrepareSQL.
 =============================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:618 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:623 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:632 - 0

/* Look for the statement */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:644 - 0

/* Push the prepared statement table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:648 - 0

/* we don't know :( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:727 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:736 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_dbd.c:740 - 0

/* Defaults to mod_dbd */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_passwd.c:100 - 0

/* XXX out >= 28 + strlen(sha1) chars - fixed len SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_passwd.c:143 - 0

/* CRYPT_ALGO_SUPPORTED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_passwd.c:166 - 0

/* BCRYPT_ALGO_SUPPORTED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:125 - 0

/* ------------------ request methods -------------------- */
/* helper callback for req_parseargs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:131 - 0

/* [table<s,t>, table<s,s>] */
 /* rstack_dump(L, RRR, "e;start of cb"e;); */
 /* L is [table<s,t>, table<s,s>] */
 /* build complex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:136 - 0

/* [VALUE, table<s,t>, table<s,s>] */
 /* rstack_dump(L, RRR, "e;after getfield"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:142 - 0

/* [table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:143 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:144 - 0

/* [1, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:145 - 0

/* [string, 1, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:146 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:147 - 0

/* [table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:151 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:153 - 0

/* [#, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:154 - 0

/* [string, #, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:155 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:156 - 0

/* [table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:161 - 0

/* L is [table<s,t>, table<s,s>] */
 /* build simple */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:163 - 0

/* [VALUE, table<s,s>, table<s,t>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:165 - 0

/* [table<s,s>, table<s,t>]] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:166 - 0

/* [string, table<s,s>, table<s,t>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:167 - 0

/* [table<s,s>, table<s,t>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:175 - 0

/* helper callback for req_parseargs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:180 - 0

/* [table<s,t>, table<s,s>] */
 /* rstack_dump(L, RRR, "e;start of cb"e;); */
 /* L is [table<s,t>, table<s,s>] */
 /* build complex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:185 - 0

/* [VALUE, table<s,t>, table<s,s>] */
 /* rstack_dump(L, RRR, "e;after getfield"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:191 - 0

/* [table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:192 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:193 - 0

/* [1, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:194 - 0

/* [string, 1, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:195 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:196 - 0

/* [table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:201 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:203 - 0

/* [#, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:204 - 0

/* [string, #, array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:205 - 0

/* [array, table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:206 - 0

/* [table<s,t>, table<s,s>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:211 - 0

/* L is [table<s,t>, table<s,s>] */
 /* build simple */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:213 - 0

/* [VALUE, table<s,s>, table<s,t>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:215 - 0

/* [table<s,s>, table<s,t>]] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:216 - 0

/* [string, table<s,s>, table<s,t>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:217 - 0

/* [table<s,s>, table<s,t>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:226 - 0

/*
 =======================================================================================================================
 lua_read_body(request_rec *r, const char **rbuf, apr_off_t *size): Reads any additional form data sent in POST/PUT
 requests. Used for multipart POST data.
 =======================================================================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:242 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:246 - 0

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:270 - 0

/*
 * =======================================================================================================================
 * lua_write_body: Reads any additional form data sent in POST/PUT requests
 * and writes to a file.
 * =======================================================================================================================
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:309 - 0

/* r:parseargs() returning a lua table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:315 - 0

/* [table, table] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:318 - 0

/* [table<string, string>, table<string, array<string>>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:321 - 0

/* ap_lua_binstrstr: Binary strstr function for uploaded data with NULL bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:336 - 0

/* r:parsebody(): Parses regular (url-enocded) or multipart POST data and returns two tables*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:351 - 0

/* [table, table] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:404 - 0

/* [table<string, string>, table<string, array<string>>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:408 - 0

/*
 * lua_ap_requestbody; r:requestbody([filename]) - Reads or stores the request
 * body
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:465 - 0

/* wrap ap_rputs as r:puts(String) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:479 - 0

/* wrap ap_rwrite as r:write(String) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:492 - 0

/* r:addoutputfilter(name|function) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:503 - 0

/* wrap ap_construct_url as r:construct_url(String) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:512 - 0

/* wrap ap_escape_html r:escape_html(String) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:532 - 0

/* BEGIN dispatch mathods for request_rec fields */

/* not really a field, but we treat it like one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:814 - 0

/*
 * lua_apr_b64encode; r:encode_base64(string) - encodes a string to Base64
 * format
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:840 - 0

/*
 * lua_apr_b64decode; r:decode_base64(string) - decodes a Base64 string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:865 - 0

/*
 * lua_ap_unescape; r:unescape(string) - Unescapes an URL-encoded string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:887 - 0

/*
 * lua_ap_escape; r:escape(string) - URL-escapes a string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:904 - 0

/*
 * lua_apr_md5; r:md5(string) - Calculates an MD5 digest of a string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:922 - 0

/*
 * lua_apr_sha1; r:sha1(string) - Calculates the SHA1 digest of a string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:947 - 0

/*
 * lua_apr_htpassword; r:htpassword(string [, algorithm [, cost]]) - Creates
 * a htpassword hash from a string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:974 - 0

/*
 * lua_apr_touch; r:touch(string [, time]) - Sets mtime of a file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1032 - 0

/*
 * lua_apr_rmdir; r:rmdir(string) - Removes a directory
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1049 - 0

/*
 * lua_apr_date_parse_rfc; r.date_parse_rfc(string) - Parses a DateTime string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1066 - 0

/*
 * lua_ap_mpm_query; r:mpm_query(info) - Queries for MPM info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1080 - 0

/*
 * lua_ap_expr; r:expr(string) - Evaluates an expr statement.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1121 - 0

/*
 * lua_ap_regex; r:regex(string, pattern [, flags])
 * - Evaluates a regex and returns captures if matched
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1188 - 0

/*
 * lua_ap_scoreboard_process; r:scoreboard_process(a) - returns scoreboard info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1240 - 0

/*
 * lua_ap_scoreboard_worker; r:scoreboard_worker(proc, thread) - Returns thread
 * info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1335 - 0

/*
 * lua_ap_clock; r:clock() - Returns timestamp with microsecond precision
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1346 - 0

/*
 * lua_ap_add_input_filter; r:add_input_filter(name) - Adds an input filter to
 * the chain
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1370 - 0

/*
 * lua_ap_module_info; r:module_info(mod_name) - Returns information about a
 * loaded module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1414 - 0

/*
 * lua_ap_set_document_root; r:set_document_root(path) - sets the current doc
 * root for the request
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1431 - 0

/*
 * lua_ap_getdir; r:get_direntries(directory) - Gets all entries of a
 * directory and returns the directory info as a table
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1471 - 0

/*
 * lua_ap_stat; r:stat(filename [, wanted]) - Runs stat on a file and
 * returns the file info as a table
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1526 - 0

/*
 * lua_ap_loaded_modules; r:loaded_modules() - Returns a list of loaded modules
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1541 - 0

/*
 * lua_ap_server_info; r:server_info() - Returns server info, such as the
 * executable filename, server root, mpm etc
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1569 - 0

/*
 * === Auto-scraped functions ===
 */


/**
 * ap_set_context_info: Set context_prefix and context_document_root.
 * @param r The request
 * @param prefix the URI prefix, without trailing slash
 * @param document_root the corresponding directory on disk, without trailing
 * slash
 * @note If one of prefix of document_root is NULL, the corrsponding
 * property will not be changed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1599 - 0

/**
 * ap_os_escape_path (apr_pool_t *p, const char *path, int partial)
 * convert an OS path to a URL in an OS dependant way.
 * @param p The pool to allocate from
 * @param path The path to convert
 * @param partial if set, assume that the path will be appended to something
 * with a '/' in it (and thus does not prefix "e;./"e;)
 * @return The converted URL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1626 - 0

/**
 * ap_escape_logitem (apr_pool_t *p, const char *str)
 * Escape a string for logging
 * @param p The pool to allocate from
 * @param str The string to escape
 * @return The escaped string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1676 - 0

/**
 * ap_set_keepalive (request_rec *r)
 * Set the keepalive status for this request
 * @param r The current request
 * @return 1 if keepalive can be set, 0 otherwise
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1737 - 0

/**
 * ap_custom_response (request_rec *r, int status, const char *string)
 * Install a custom response handler for a given status
 * @param r The current request
 * @param status The status for which the custom response should be used
 * @param string The custom response. This can be a static string, a file
 * or a URL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1761 - 0

/**
 * ap_exists_config_define (const char *name)
 * Check for a definition from the server command line
 * @param name The define to check for
 * @return 1 if defined, 0 otherwise
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1789 - 0

/* ap_state_query (int query_code) item starts a new field */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1815 - 0

/* END dispatch methods for request_rec fields */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1885 - 0

/* helper function for the logging functions below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:1986 - 0

/* add trailing \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2023 - 0

/* New >= 2.4.8 method: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2026 - 0

/* key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2032 - 0

/* value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2038 - 0

/* expiry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2044 - 0

/* secure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2052 - 0

/* httponly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2060 - 0

/* path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2066 - 0

/* domain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2072 - 0

/* Old <= 2.4.7 method: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2083 - 0

/* Calculate expiry if set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2091 - 0

/* Create path segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2096 - 0

/* Create domain segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2102 - 0

/* URL-encode key/value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2106 - 0

/* Create the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2250 - 0

/* Get opcode and FIN bit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2260 - 0

/* fin bit is the first bit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2262 - 0

/* opcode is the last four bits (there's 3 reserved bits we don't care about) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2265 - 0

/* Get the payload length and mask bit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2274 - 0

/* Mask is the first bit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2276 - 0

/* Payload is the last 7 bits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2280 - 0

/* Extended payload? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2284 - 0

/* XXX: apr_socket_recv does not receive len bits, only up to len bits! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2300 - 0

/* Super duper extended payload? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2370 - 0

/* push to stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2371 - 0

/* push FIN bit to stack as boolean */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2376 - 0

/* Decide if we need to react to the opcode or not */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2377 - 0

/* ping */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2410 - 0

/* text frame, FIN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2424 - 0

/* ntoh doubles as hton */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2452 - 0

/* Send a header that says: socket is closing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2453 - 0

/* closing socket opcode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2454 - 0

/* zero length frame */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2457 - 0

/* Close up tell the MPM and filters to back off */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2473 - 0

/* Send a header that says: PING. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2474 - 0

/* ping opcode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2530 - 0

/* handle r.status = 201 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2534 - 0

/* request_rec* r = lua_touserdata(L, lua_upvalueindex(1)); */
 /* const char* key = luaL_checkstring(L, -2); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2597 - 0

/* helper function for walking config trees */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2665 - 0

/* {"e;__newindex"e;, req_set_field}, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2956 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2960 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2964 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2968 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2972 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_request.c:2976 - 0

/* [metatable] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:47 - 0

/* global IVM mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:54 - 0

/* bah :( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:57 - 0

/* Server pool mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:63 - 0

/* forward dec'l from this file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:133 - 0

/* BEGIN modules*/

/* BEGIN apache lmodule */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:146 - 0

/* empty stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:229 - 0

/* END apache2 lmodule */

/* END library functions */

/* callback for cleaning up a lua vm when pool is closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:251 - 0

/*
 munge_path(L, 
 "e;path"e;, 
 "e;?.lua"e;, 
 "e;./?.lua"e;, 
 lifecycle_pool,
 spec->package_paths, 
 spec->file);
*/
/**
 * field -> "e;path"e; or "e;cpath"e;
 * sub_pat -> "e;?.lua"e;
 * rep_pat -> "e;./?.lua"e;
 * pool -> lifecycle pool for allocations
 * paths -> things to add
 * file -> ???
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:304 - 0

/* pop "e;package"e; off the stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:320 - 0

/* drop module table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/lua_vmprep.c:510 - 0

/* On first visit, modified will be zero, but that's fine - The file is 
 loaded in the vm_construct function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:36 - 0

/* getpid for *NIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:44 - 0

/* getpid for Windows */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:263 - 0

/* If no replacement was made, just return the original string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:272 - 0

/**
 * "e;main"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:292 - 0

/* XXX: This seems wrong because it may generate wrong headers for HEAD requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:303 - 0

/* TODO annotate spec with failure reason */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:332 - 0

/* ------------------- Input/output content filters ------------------- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:349 - 0

/* Find the filter that was called.
 * XXX: If we were wired with mod_filter, the filter (mod_filters name)
 * and the provider (our underlying filters name) need to have matched.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:409 - 0

/* Not wired by mod_filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:434 - 0

/* Set up the initial filter context and acquire the function.
 * The corresponding Lua function should yield here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:448 - 0

/* We've got a willing lua filter, setup and check for a prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:469 - 0

/* While the Lua function is still yielding, pass in buckets to the coroutine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:479 - 0

/* read the bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:482 - 0

/* Push the bucket onto the Lua stack as a global var */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:486 - 0

/* If Lua yielded, it means we have something to pass on */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:513 - 0

/* If we've safely reached the end, do a final call to Lua to allow for any 
 finishing moves by the script, such as appending a tail. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:539 - 0

/* Clean up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:559 - 0

/* Set up the initial filter context and acquire the function.
 * The corresponding Lua function should yield here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:580 - 0

/* If the Lua script broke or denied serving the request, just pass the buckets through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:591 - 0

/* While the Lua function is still yielding, pass buckets to the coroutine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:605 - 0

/* read the bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:610 - 0

/* Push the bucket onto the Lua stack as a global var */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:615 - 0

/* If Lua yielded, it means we have something to pass on */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:632 - 0

/* If we've safely reached the end, do a final call to Lua to allow for any 
 finishing moves by the script, such as appending a tail. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:744 - 0

/* Fix for making sure that LuaMapHandler works when FallbackResource is set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:747 - 0

/* If there is no handler set yet, this might be a LuaMapHandler request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:942 - 0

/*fprintf(stderr, "e;buf read: %s\n"e;, ctx->buf); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1059 - 0

/* This lua State is used only to compile the input strings -> bytecode, so we don't need anything extra. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1089 - 0

/* Here, we have to replace our current config node for the next pass */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1174 - 0

/* TODO: Make it work on other types than just AP_FTYPE_RESOURCE? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1258 - 0

/* ap_log_rerror(APLOG_MARK, APLOG_WARNING, 0, r, "e;LuaHookInsertFilter not yet implemented"e;); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1538 - 0

/**
 * Called for config directive which looks like
 * LuaPackagePath /lua/package/path/mapped/thing/like/this/?.lua
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1550 - 0

/**
 * Called for config directive which looks like
 * LuaPackageCPath /lua/package/path/mapped/thing/like/this/?.so
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1674 - 0

/* ap_lua_dir_cfg* cfg = (ap_lua_dir_cfg*)_cfg; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1696 - 0

/*******************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1860 - 0

/* todo: test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1869 - 0

/* todo: test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1878 - 0

/* todo: test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1886 - 0

/* todo: test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1895 - 0

/* todo: test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:1903 - 0

/* todo: test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2005 - 0

/* Create ivm mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2012 - 0

/* Create shared memory space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2092 - 0

/* ap_register_output_filter("e;luahood"e;, luahood, NULL, AP_FTYPE_RESOURCE); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2097 - 0

/* http_request.h hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2109 - 0

/* XXX: Does not work :( 
 * ap_hook_check_user_id(lua_check_user_id_harness_first, NULL, NULL,
 AP_LUA_HOOK_FIRST);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2115 - 0

/* XXX: Does not work :(
 * ap_hook_check_user_id(lua_check_user_id_harness_last, NULL, NULL,
 AP_LUA_HOOK_LAST);
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2154 - 0

/* providers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2157 - 0

/* Logging catcher */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2164 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2165 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2166 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2167 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2168 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/lua/mod_lua.c:2169 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:53 - 0

/* Added with Action... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:54 - 0

/* Added with Script... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:55 - 0

/* True if Action or Script has been
 * called at least once
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:116 - 0

/* In .htaccess, we can't globally register new methods. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:161 - 0

/* Note that this handler handles _all_ types, so handler is unchecked */

 /* Set allowed stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:169 - 0

/* First, check for the method-handling scripts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:180 - 0

/* Check for looping, which can happen if the CGI script isn't */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:184 - 0

/* Second, check for actions (which override the method scripts) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:196 - 0

/* propagate the handler name to the script
 * (will be REDIRECT_HANDLER there)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:220 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:221 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:222 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:223 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:224 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_actions.c:225 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:45 - 0

/* 301, 302, 303, 410, etc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:60 - 0

/* 301, 302, 303, 410, etc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:147 - 0

/* XXX This may be optimized, but we must know that new->real
 * exists. If so, we can dir merge later, trusing new->real
 * and just canonicalizing the remainder. Not till I finish
 * cleaning out the old ap_canonical stuff first.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:282 - 0

/* <Location> context only for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:409 - 0

/* any number of '/' in the alias matches any number in
 * the supplied URI, but there must be at least one...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:423 - 0

/* Other characters are compared literally */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:429 - 0

/* Check last alias path component matched all the way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:458 - 0

/* Set handler, and leave a note for mod_cgi */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:496 - 0

/* Do not escape the query string or fragment. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:537 - 0

/* Do not escape the query string or fragment. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:559 - 0

/* need something non-null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:581 - 0

/* Set handler, and leave a note for mod_cgi */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:668 - 0

/* It may have changed since last time, so try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:720 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:721 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:722 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:723 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:724 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_alias.c:725 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:220 - 0

/* nothing for us to do, pass on through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:232 - 0

/* In case mod_mime wasn't present, and no handler was assigned. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:237 - 0

/* Never tolerate path_info on dir requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:254 - 0

/* Only redirect non-get requests if we have no note to warn
 * that this browser cannot handle redirs on non-GET requests
 * (such as Microsoft's WebFolders).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:309 - 0

/* XXX: Is this name_ptr considered escaped yet, or not??? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:348 - 0

/* If the request returned a redirect, propagate it to the client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:391 - 0

/* nothing for us to do, pass on through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:398 - 0

/* serve up a directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:402 - 0

/* No handler and nothing in the filesystem - use fallback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:415 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:416 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:417 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:418 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:419 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_dir.c:420 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:57 - 0

/* for sscanf() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:181 - 0

/* just counting the vertexes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:217 - 0

/* if this is the first point or is the closest yet
 set 'closest' equal to this distance^2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:221 - 0

/* if it's not the first or closest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:227 - 0

/* we want it non-null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:228 - 0

/* -1 is returned if no coordinate is given */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:231 - 0

/* in case we aren't passed anything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:235 - 0

/* jump to the first digit, but not past
 a comma or end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:241 - 0

/* if a conversion was made */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:245 - 0

/* else if no conversion was made,
 or if no args was given */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:251 - 0

/* we want it non-null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:256 - 0

/* in case we aren't passed anything */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:259 - 0

/* the comma */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:263 - 0

/* start looking at the character after
 the comma */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:267 - 0

/* jump to the first digit, but not
 past the end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:278 - 0

/* if no conversion was made, or
 no comma was found in args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:294 - 0

/* assume there's no quoted part */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:298 - 0

/* go along string until non-whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:301 - 0

/* if that character is a double quote */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:302 - 0

/* step over it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:303 - 0

/* note where the quoted part begins */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:306 - 0

/* skip the quoted portion */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:309 - 0

/* end the string with a NUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:311 - 0

/* step over the last double quote */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:316 - 0

/*
 * returns the mapped URL or NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:321 - 0

/* translates a value into a URL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:334 - 0

/* these are handled elsewhere,
 so just copy them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:350 - 0

/* if 'referer' but no referring page,
 null the value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:357 - 0

/* go along the URL from the map
 until a non-letter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:361 - 0

/* if letters and then a colon (like http:) */
 /* it's an absolute URL, so use it! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:368 - 0

/* no base: use what is given */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:370 - 0

/* no base, no value: pick a simple default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:374 - 0

/* must be a relative URL to be combined with base */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:385 - 0

/* if there are two slashes, jump over them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:388 - 0

/* the first single slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:391 - 0

/* if the URL from the map starts from root,
 end the base URL string at the first single
 slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:395 - 0

/* save the start of
 the directory portion */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:398 - 0

/* now reuse
 string_pos */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:400 - 0

/* step over that last slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:402 - 0

/* but if the map url is relative, leave the
 slash on the base (if there is one) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:406 - 0

/* until we get to the end of my_base without
 finding a slash by itself */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:433 - 0

/* jump over the '..' that we found in the
 value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:443 - 0

/* step over the '/' if there are more '..'
 to do. This way, we leave the starting
 '/' on value after the last '..', but get
 rid of it otherwise */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:449 - 0

/* by this point, value does not start
 with '..' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:465 - 0

/* tell the client to keep the page it has */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:469 - 0

/* must be a URL, so redirect to it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:508 - 0

/* print just a newline if 'formatted' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:522 - 0

/* don't print such lines, these aren't
 really href's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:546 - 0

/* don't print such lines, as this isn't
 really an href */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:568 - 0

/* finish the menu */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:612 - 0

/* set base according
 to default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:617 - 0

/* and default to
 global default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:628 - 0

/* if either is -1 or if both are zero (new Lynx) */
 /* we don't have valid coordinates */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:633 - 0

/* show the menu _unless_ ImapMenu is
 'none' or 'no' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:638 - 0

/* send start of imagemap menu if
 we're going to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:667 - 0

/* need at least two fields */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:672 - 0

/* past directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:675 - 0

/* need at least two fields */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:680 - 0

/* need at least two fields */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:683 - 0

/* past whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:688 - 0

/* past value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:695 - 0

/* end of input, don't advance past it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:699 - 0

/* base, base_uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:704 - 0

/* base is never printed to a menu */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:709 - 0

/* default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:714 - 0

/* print the default if there's a menu */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:729 - 0

/* Now skip what we just read... we can't use ANSIism %n */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:730 - 0

/* past whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:733 - 0

/* and the 1st number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:736 - 0

/* skip the ',' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:737 - 0

/* past any more whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:740 - 0

/* 2nd number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:744 - 0

/* so long as there are more vertices to
 read, and we have room, read them in.
 We start where we left off of the last
 sscanf, not at the beginning. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:749 - 0

/* signals the end of vertices */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:753 - 0

/* href text could
 be here instead */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:764 - 0

/* note that we don't make it past here if we are making a menu */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:767 - 0

/* don't try the following tests if testpoints
 are invalid, or if there are no
 coordinates */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:772 - 0

/* poly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:785 - 0

/* circle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:798 - 0

/* rect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:811 - 0

/* point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:818 - 0

/* move on to next line whether it's
 closest or not */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:821 - 0

/* nothing matched, so we get another line! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:823 - 0

/* we are done with the map file; close it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:826 - 0

/* finish the menu and we are done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:830 - 0

/* if a 'point' directive has been seen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:838 - 0

/* a default should be defined, even if
 only 'nocontent' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:847 - 0

/* If we make it this far,
 we failed. They lose! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:854 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:891 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:892 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:893 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:894 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:895 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_imagemap.c:896 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:53 - 0

/* forcelangpriority flags
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:57 - 0

/* Use language_priority rather than MC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:58 - 0

/* Use language_priority rather than NA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:62 - 0

/* env evaluation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:64 - 0

/* no-gzip */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:65 - 0

/* gzip-only-text/html */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:86 - 0

/* give priority to the config in the subdirectory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:176 - 0

/* MUST be lowercase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:179 - 0

/* for content-type only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:203 - 0

/* May be NULL (is, for map files) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:204 - 0

/* MUST be lowercase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:205 - 0

/* Set to 'this' (for map file body content) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:206 - 0

/* Only for map file body content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:208 - 0

/* list of lang. for this variant */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:221 - 0

/* quality of this variant's language */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:222 - 0

/* ditto encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:223 - 0

/* ditto charset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:224 - 0

/* ditto media type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:225 - 0

/* source quality for this variant */

 /* Now some special values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:228 - 0

/* Auxiliary to content-type... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:229 - 0

/* content length, if known */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:230 - 0

/* Index into LanguagePriority list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:242 - 0

/* Something to carry around the state of negotiation (and to keep
 * all of this thread-safe)...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:251 - 0

/* 1 if an Accept item has a q= param */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:252 - 0

/* fiddle lang q for variants with no lang */

 /* the array pointers below are NULL if the corresponding accept
 * headers are not present
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:257 - 0

/* accept_recs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:258 - 0

/* accept_recs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:259 - 0

/* accept_recs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:260 - 0

/* accept_recs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:264 - 0

/* number of variants found on disk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:266 - 0

/* 1 if this resource is trans. negotiable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:268 - 0

/* 1 if we may not fiddle with accept hdrs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:269 - 0

/* 1 if ua supports trans negotiation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:270 - 0

/* 1 if we want to send an Alternates header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:271 - 0

/* 1 if we may choose a variant for the client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:272 - 0

/* 1 if we must use RVSA/1.0 negotiation algo */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:305 - 0

/* Initializing the relevant fields of a variant record from the
 * accept_info read out of its content-type, one way or another.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:321 - 0

/* Create a variant list validator in r using info from vlistr. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:333 - 0

/* ap_set_etag will later take r->vlist_validator into account
 * when creating the etag header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:447 - 0

/* Parameters ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:456 - 0

/* Look for 'var = value' --- and make sure the var is in lcase. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:466 - 0

/* Delimit var */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:481 - 0

/* strip ending quote or return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:504 - 0

/*****************************************************************
 *
 * Dealing with header lines ...
 *
 * Accept, Accept-Charset, Accept-Language and Accept-Encoding
 * are handled by do_header_line() - they all have the same
 * basic structure of a list of items of the format
 * name; q=N; charset=TEXT
 *
 * where charset is only valid in Accept.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:535 - 0

/* Given the text of the Content-Languages: line from the var map file,
 * return an array containing the languages of this variant
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:560 - 0

/*****************************************************************
 *
 * Handling header lines from clients...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:582 - 0

/* calculate new->accept_q value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:647 - 0

/* An empty Negotiate would require 300 response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:657 - 0

/* The user agent supports transparent negotiation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:660 - 0

/* Send-alternates could be configurable, but note
 * that it must be 1 if we have 'vlist' in the
 * negotiate header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:667 - 0

/* we may use the RVSA/1.0 algorithm, configure for it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:673 - 0

/* we may use any variant selection algorithm, configure
 * to use the Apache algorithm
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:750 - 0

/* Get a noncommented line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:758 - 0

/* If blank, just return it --- this ends information on this variant */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:768 - 0

/* If non-blank, go looking for header lines, but note that we still
 * have to treat comments specially...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:774 - 0

/* We need to shortcut the rest of this block following the Body:
 * tag - we will not look for continutation after this line.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:782 - 0

/* Comment line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:788 - 0

/* Leading whitespace. POSSIBLE continuation line
 * Also, possibly blank --- if so, we ungetc() the final newline
 * so that we will pick up the blank line the next time 'round.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:802 - 0

/* Blank line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:805 - 0

/* Continuation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:818 - 0

/* Line beginning with something other than whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:841 - 0

/* Reserve space for '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:853 - 0

/* Skip all the trailing cruft after the end tag to the next line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:867 - 0

/* Give the caller back the actual body's file offset and length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:873 - 0

/* Stripping out RFC822 comments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:903 - 0

/* Getting to a header body from the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:948 - 0

/* We are not using multiviews */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1062 - 0

/* Sort function used by read_types_multi. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1065 - 0

/* First key is the source quality, sort in descending order. */

 /* XXX: note that we currently implement no method of setting the
 * source quality for multiviews variants, so we are always comparing
 * 1.0 to 1.0 for now
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1076 - 0

/* Second key is the variant name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1080 - 0

/*****************************************************************
 *
 * Same as read_type_map, except we use a filtered directory listing
 * as the map...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1107 - 0

/* Only absolute paths here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1125 - 0

/* Do we have a match? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1154 - 0

/* See if it's something which we have access to, and which
 * has a known type and encoding.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1160 - 0

/* Double check, we still don't multi-resolve non-ordinary files
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1167 - 0

/* If it has a handler, we'll pretend it's a CGI script,
 * since that's a good indication of the sort of thing it
 * might be doing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1227 - 0

/* Something you don't know is, something you don't know...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1234 - 0

/*
 * If we failed the subrequest, or don't
 * know what we are serving, then continue.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1243 - 0

/* If it's a map file, we use that instead of the map
 * we're building...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1283 - 0

/* We found some file names that matched. None could be served.
 * Rather than fall out to autoindex or some other mapper, this
 * request must die.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1335 - 0

/* Anything matches star/star */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1398 - 0

/* The result of the above if statements is that, if we get to
 * here, both variants have the same mime_type or both are
 * pseudo-html.
 */

 /* Take highest level that matched, if either did match. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1421 - 0

/* Tied */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1539 - 0

/* This variant has no content-language, so use the default
 * quality factor for variants with no content-language
 * (previously set by set_default_lang_quality()).
 * Leave the factor alone (it remains at 1.0) when we may not fiddle
 * with the headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1549 - 0

/* no accept-language header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1567 - 0

/* There is an accept-language with 0 or more items */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1582 - 0

/* lang is the variant's language-tag, which is the one
 * we are allowed to use the prefix of in HTTP/1.1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1629 - 0

/* The next bit is a fiddle. Some browsers might
 * be configured to send more specific language
 * ranges than desirable. For example, an
 * Accept-Language of en-US should never match
 * variants with languages en or en-GB. But US
 * English speakers might pick en-US as their
 * language choice. So this fiddle checks if the
 * language range has a prefix, and if so, it
 * matches variants which match that prefix with a
 * priority of 0.001. So a request for en-US would
 * match variants of types en and en-GB, but at
 * much lower priority than matches of en-US
 * directly, or of any other language listed on
 * the Accept-Language header. Note that this
 * fiddle does not handle multi-level prefixes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1662 - 0

/* See if the tag matches on a * in the Accept-Language
 * header. If so, record this fact for later use
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1700 - 0

/* lang is the variant's language-tag, which is the one
 * we are allowed to use the prefix of in HTTP/1.1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1706 - 0

/* If we wish to fallback or
 * we use our own LanguagePriority index.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1808 - 0

/* did match - see if there were less or more stars than
 * in previous match
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1812 - 0

/* more stars => not as good a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1841 - 0

/* For a given variant, find the 'q' value of the charset given
 * on the Accept-Charset line. If no charsets are listed,
 * assume value of '1'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1852 - 0

/* if no Accept-Charset: header, leave quality alone (will
 * remain at the default value of 1)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1864 - 0

/* Charset of variant not known */

 /* if not a text / * type, leave quality alone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1880 - 0

/* The default charset for HTTP text types */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1906 - 0

/* If this variant is in charset iso-8859-1, the default is 1.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:1916 - 0

/* is_identity_encoding is included for back-compat, but does anyone
 * use 7bit, 8bin or binary in their var files??
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2002 - 0

/*************************************************************
 * Possible results of the variant selection algorithm
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2006 - 0

/* choose variant */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2007 - 0

/* list variants */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2096 - 0

/* Negotiation algorithm as used by previous versions of Apache
 * (just about).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2163 - 0

/* language */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2172 - 0

/* if language qualities were equal, try the LanguagePriority stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2183 - 0

/* content-type level (sometimes used with text/html, though we
 * support it on other types too)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2195 - 0

/* charset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2214 - 0

/* Prefer the highest value for encoding_quality.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2224 - 0

/* content length if all else equal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2229 - 0

/* ok, to get here means every thing turned out equal, except
 * we have a shorter content length, so use this variant
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2236 - 0

/* figure out, whether a variant is in a specific language
 * it returns also false, if the variant has no language.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2241 - 0

/* fast exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2287 - 0

/* no-gzip: do not send encoded documents */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2292 - 0

/* gzip-only-text/html: send encoded documents only
 * if they are text/html. (no-gzip has a higher priority).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2320 - 0

/* if this variant is encoded somehow and there are special
 * variables set, we do not negotiate it. see above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2328 - 0

/* if a language is preferred, but the current variant
 * is not in that language, then drop it for now
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2343 - 0

/* accept the preferred language, even when it's not listed within
 * the Accept-Language header
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2392 - 0

/* calculate result for Apache negotiation algorithm */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2465 - 0

/* Put headers into err_headers_out, since send_http_header()
 * outputs both headers_out and err_headers_out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2517 - 0

/* Generate the string components for this Alternates entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2526 - 0

/* Strip trailing zeros (saves those valuable network bytes) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2561 - 0

/* Note that the Alternates specification (in rfc2295) does
 * not require that we include {length x}, so we could omit it
 * if determining the length is too expensive. We currently
 * always include it though.
 *
 * If the variant is a CGI script, find_content_length would
 * return the length of the script, not the output it
 * produces, so we check for the presence of a handler and if
 * there is one we don't add a length.
 *
 * XXX: TODO: This check does not detect a CGI script if we
 * get the variant from a type map. This needs to be fixed
 * (without breaking things if the type map specifies a
 * content-length, which currently leads to the correct result).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2586 - 0

/* trimmed below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2590 - 0

/* remove last comma */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2606 - 0

/* Create TCN response header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2612 - 0

/**********************************************************************
 *
 * Return an HTML list of variants. This is output as part of the
 * choice response or 406 status body.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2640 - 0

/* The format isn't very neat, and it would be nice to make
 * the tags human readable (eg replace 'language en' with 'English').
 * Note that if you change the number of substrings pushed, you also
 * need to change the calculation of max_vlist_array above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2785 - 0

/* Move the subreq Vary header into the main request to
 * prevent having two Vary headers in the response, which
 * would be legal but strange.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2803 - 0

/****************************************************************
 *
 * Executive...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2812 - 0

/* result of variant selection algorithm */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2816 - 0

/* Decide if resource is transparently negotiable */

 /* GET or HEAD? (HEAD has same method number as GET) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2826 - 0

/* We can't be transparent if we are a map file in the middle
 * of the request URI.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2855 - 0

/* configure negotiation on non-transparent resource */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2871 - 0

/* always include Alternates header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2899 - 0

/* Variant selection chose a variant */

 /* XXX todo: merge the two cases in the if statement below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2985 - 0

/* XXX: ?
 * if (r->method_number == M_OPTIONS) {
 * return ap_send_http_options(r);
 *}
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:2994 - 0

/* ### These may be implemented by adding some 'extra' info
 * of the file offset onto the etag
 * ap_update_mtime(r, r->finfo.mtime);
 * ap_set_last_modified(r);
 * ap_set_etag(r);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3003 - 0

/* set MIME type and charset as negotiated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3017 - 0

/* set Content-language(s) as negotiated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3023 - 0

/* set Content-Encoding as negotiated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3090 - 0

/* free all allocated memory from subrequests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3126 - 0

/* now do a "e;fast redirect"e; ... promotes the sub_req into the main req */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3129 - 0

/* give no advise for time on this subrequest. Perhaps we
 * should tally the last mtime amoung all variants, and date
 * the most recent, but that could confuse the proxies.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3135 - 0

/* clean up all but our favorite variant, since that sub_req
 * is now merged into the main request!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3217 - 0

/* dir config creator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3218 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3219 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3220 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3221 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_negotiation.c:3222 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:69 - 0

/* XXX: Do we really need these headers? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:175 - 0

/* return code of the rewrite rule
 * the result may be escaped - or not
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:209 - 0

/* max cookie size in rfc 2109 */
/* XXX: not used at all. We should do a check somewhere and/or cut the cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:213 - 0

/* max line length (incl.\n) in text rewrite maps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:218 - 0

/* buffer length for prg rewrite maps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:227 - 0

/*
 * expansion result items on the stack to save some cycles
 *
 * (5 == about 2 variables like "e;foo%{var}bar%{var}baz"e;)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:247 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Types and Structures
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:256 - 0

/* filename for map data files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:257 - 0

/* dbm type for dbm map data files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:258 - 0

/* filename to check for map existence */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:260 - 0

/* the type of the map */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:261 - 0

/* in file pointer for program maps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:262 - 0

/* out file pointer for program maps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:263 - 0

/* err file pointer for program maps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:264 - 0

/* function pointer for internal maps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:266 - 0

/* argv of the external rewrite map */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:267 - 0

/* SQL SELECT statement for rewritemap */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:268 - 0

/* filename to check for map existence
 NULL if only one file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:270 - 0

/* run RewriteMap program as this user */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:271 - 0

/* run RewriteMap program as this group */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:274 - 0

/* special pattern types for RewriteCond */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:298 - 0

/* Input string of RewriteCond */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:299 - 0

/* the RegExp pattern string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:300 - 0

/* the precompiled regexp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:301 - 0

/* the compiled ap_expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:302 - 0

/* Flags which control the match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:303 - 0

/* pattern type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:304 - 0

/* back-index to display pattern */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:307 - 0

/* single linked list for env vars and cookies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:314 - 0

/* the corresponding RewriteCond entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:315 - 0

/* the RegExp pattern string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:316 - 0

/* the RegExp pattern compilation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:317 - 0

/* the Substitution string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:318 - 0

/* Flags which control the substitution */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:319 - 0

/* forced MIME type of substitution */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:320 - 0

/* forced content handler of subst. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:321 - 0

/* forced HTTP response status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:322 - 0

/* added environment variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:323 - 0

/* added cookies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:324 - 0

/* number of next rules to skip */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:326 - 0

/* specific backref escapes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:330 - 0

/* the RewriteEngine state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:331 - 0

/* the RewriteOption state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:332 - 0

/* the RewriteMap entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:333 - 0

/* the RewriteCond entries (temp.) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:334 - 0

/* the RewriteRule entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:335 - 0

/* the corresponding server indicator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:341 - 0

/* the RewriteEngine state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:342 - 0

/* the RewriteOption state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:343 - 0

/* the RewriteCond entries (temp.) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:344 - 0

/* the RewriteRule entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:345 - 0

/* the directory where it applies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:346 - 0

/* the base-URL where it applies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:371 - 0

/* the regex structure for the
 * substitution of backreferences
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:379 - 0

/* single linked list used for
 * variable expansion
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:388 - 0

/* context structure for variable lookup and expansion
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:400 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | static module data
 * | |
 * +-------------------------------------------------------+
 */

/* the global module structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:411 - 0

/* rewritemap int: handler function registry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:429 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | rewriting logfile support
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:520 - 0

/* fast exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:528 - 0

//"e;, 5)) { /* ajp:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:544 - 0

//"e;, 5)) { /* ftp:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:547 - 0

//"e;, 6)) { /* fcgi:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:555 - 0

//"e;, 8)) { /* gopher:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:562 - 0

//"e;, 6)) { /* http:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:566 - 0

//"e;, 7)) { /* https:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:574 - 0

//"e;, 6)) { /* ldap:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:581 - 0

/* mailto: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:589 - 0

/* news: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:592 - 0

//"e;, 6)) { /* nntp:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:599 - 0

//"e;, 6)) { /* scgi:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:607 - 0

//"e;, 4)) { /* ws:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:611 - 0

//"e;, 5)) { /* wss:// */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:628 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:635 - 0

/*
 * Escapes a backreference in a similar way as php's urlencode does.
 * Based on ap_os_escape_path in server/util.c
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:681 - 0

/*
 * escape absolute uri, which may or may not be path oriented.
 * So let's handle them differently.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:689 - 0

/* be safe.
 * NULL should indicate elsewhere, that something's wrong
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:698 - 0

/* scheme with authority part? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:700 - 0

/* skip host part */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:705 - 0

/* nothing after the hostpart. ready! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:710 - 0

/* remember the hostname stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:713 - 0

/* special thing for ldap.
 * The parts are separated by question marks. From RFC 2255:
 * ldapurl = scheme "e;://"e; [hostport] ["e;/"e;
 * [dn ["e;?"e; [attributes] ["e;?"e; [scope]
 * ["e;?"e; [filter] ["e;?"e; extensions]]]]]]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:746 - 0

/* Nothing special here. Apply normal escaping. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:751 - 0

/*
 * split out a QUERY_STRING part from
 * the current URI string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:760 - 0

/* don't touch, unless it's a scheme for which a query string makes sense.
 * See RFC 1738 and RFC 2368.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:765 - 0

/* forget the query that's still flying around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:770 - 0

/* Discard query string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:803 - 0

/*
 * strip 'http[s]://ourhost/' from URI
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:822 - 0

/* our scratchpad */

 /* cut the hostname and port out of the URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:825 - 0

/* 3 == strlen("e;://"e;) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:830 - 0

/* additional port given */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:844 - 0

/* default port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:865 - 0

/*
 * add 'http[s]://ourhost[:ourport]/' to URI
 * if URI is still not fully qualified
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:885 - 0

//%s%s%s%s"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:894 - 0

/*
 * stat() only the first segment of a path
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:938 - 0

/*
 * substitute the prefix path 'match' in 'input' with 'subst' (RewriteBase)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:963 - 0

/* don't forget the \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1025 - 0

/* Now we should have a valid map->entries hash, where we
 * can store our value.
 *
 * We need to copy the key and the value into OUR pool,
 * so that we don't leave it during the r->pool cleanup.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1056 - 0

/* if this map is outdated, forget it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1142 - 0

/* count number of distinct values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1151 - 0

/* extract it from the whole string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1156 - 0

/* should not be NULL, but ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1167 - 0

/* child process code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1224 - 0

/* If the engine isn't turned on,
 * don't even try to do anything.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1264 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Lookup functions
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1275 - 0

/* +1 for \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1309 - 0

/* jump to the value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1319 - 0

/* extract the value and return. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1398 - 0

/* randomise crudely amongst multiple results */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1453 - 0

/* take the lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1464 - 0

/* write out the request key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1484 - 0

/* read in the response value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1492 - 0

/* remove eol from the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1506 - 0

/* only partial (invalid) eol sequence -> reset the counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1511 - 0

/* catch binary mode, e.g. on Win32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1521 - 0

/* well, if there wasn't a newline yet, we need to read further */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1548 - 0

/* concat the stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1552 - 0

/* \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1567 - 0

/* give the lock back */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1578 - 0

/* catch the "e;failed"e; case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1586 - 0

/*
 * generic map lookup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1597 - 0

/* get map configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1601 - 0

/* map doesn't exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1607 - 0

/*
 * Text file map (perhaps random)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1649 - 0

/*
 * DBM file map
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1744 - 0

/*
 * Program file map
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1759 - 0

/*
 * Internal Map
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1778 - 0

/*
 * lookup a HTTP header and set VARY note
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1795 - 0

/*
 * lookahead helper function
 * Determine the correct URI path in perdir context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1814 - 0

/*
 * generic variable lookup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1823 - 0

/* fast exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1830 - 0

/* fast tests for variable length variables (sic) first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1909 - 0

/* well, do it the hard way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:1913 - 0

/* can't do this above, because of the getenv call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2168 - 0

/* same as request_filename (16) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2191 - 0

/* same as script_filename (15) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2210 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Expansion functions
 * | |
 * +-------------------------------------------------------+
 */

/*
 * Bracketed expression handling
 * s points after the opening bracket
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2278 - 0

/* fast exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2292 - 0

/* loop for specials */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2294 - 0

/* prepare next entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2305 - 0

/* escaped character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2319 - 0

/* variable or map lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2331 - 0

/* variable lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2342 - 0

/* map lookup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2343 - 0

/* *p == '$' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2346 - 0

/*
 * To make rewrite maps useful, the lookup key and
 * default values must be expanded, so we make
 * recursive calls to do the work. For security
 * reasons we must never expand a string that includes
 * verbatim data from the network. The recursion here
 * isn't a problem because the result of expansion is
 * only passed to lookup_map() so it cannot be
 * re-expanded, only re-looked-up. Another way of
 * looking at it is that the recursion is entirely
 * driven by the syntax of the nested curly brackets.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2377 - 0

/* reuse of key variable as result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2396 - 0

/* backreference */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2401 - 0

/* see ap_pregsub() in server/util.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2406 - 0

/* escape the backreference */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2426 - 0

/* not for us, just copy it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2433 - 0

/* check the remainder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2452 - 0

/* assemble result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2453 - 0

/* don't forget the \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2456 - 0

/* XXX: can be removed after
 * extensive testing and
 * review
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2520 - 0

/* long-standing default, but can't use ':' in a cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2523 - 0

/* opt-in to ; separator if first character is a ; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2614 - 0

/*
 * Expand tilde-paths (/~user) through Unix /etc/passwd
 * database information (or other OS-specific database)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2634 - 0

/* reuse of user variable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2651 - 0

/* if APR_HAS_USER */


/*
 * +-------------------------------------------------------+
 * | |
 * | rewriting lockfile support
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2681 - 0

/* destroy the rewritelock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2834 - 0

/*
 * local directives override
 * and anything else is inherited
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2848 - 0

/*
 * local directives override
 * and anything else is inherited (preserving order)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2860 - 0

/*
 * local directives override
 * and anything else gets defaults
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2888 - 0

/* make sure it has a trailing slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2956 - 0

/* server command? set both global scope and base directory scope */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:2963 - 0

/* directory command? set directory scope only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3020 - 0

/* server command? set both global scope and base directory scope */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3021 - 0

/* is server command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3032 - 0

/* directory command? set directory scope only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3033 - 0

/* is per-directory command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3212 - 0

/*
 * generic lexer for RewriteRule and RewriteCond flags.
 * The parser will be passed in as a function pointer
 * and called if a flag was found
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3231 - 0

/* for simpler parsing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3235 - 0

/* skip leading spaces */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3240 - 0

/* NULL should not
 * happen, but ...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3246 - 0

/* strip trailing spaces */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3253 - 0

/* split key and val */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3309 - 0

/* make a new entry in the internal temporary rewrite rule list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3310 - 0

/* is server command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3313 - 0

/* is per-directory command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3328 - 0

/* arg1: the input string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3343 - 0

/* arg2: the pattern */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3350 - 0

/* determine the pattern type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3427 - 0

/* "e;"e; represents an empty string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3495 - 0

/* chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3499 - 0

/* cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3528 - 0

/* env */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3545 - 0

/* end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3555 - 0

/* forbidden */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3566 - 0

/* gone */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3577 - 0

/* handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3586 - 0

/* last */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3597 - 0

/* noescape */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3600 - 0

/* next */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3608 - 0

/* nosubreq */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3612 - 0

/* nocase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3622 - 0

/* proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3626 - 0

/* passthrough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3637 - 0

/* qsappend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3640 - 0

/* qsdiscard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3650 - 0

/* redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3691 - 0

/* skip */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3701 - 0

/* type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3733 - 0

/* make a new entry in the internal rewrite rule list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3734 - 0

/* is server command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3737 - 0

/* is per-directory command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3764 - 0

/* arg1: the pattern
 * try to compile the regexp to test if is ok
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3784 - 0

/* arg2: the output string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3794 - 0

/* is server command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3799 - 0

/* is per-directory command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3809 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | the rewriting engine
 * | |
 * +-------------------------------------------------------+
 */

/* Lexicographic Compare */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3838 - 0

/*
 * Apply a single rewriteCond
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3908 - 0

/* double-check that file exists since default result is 200 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3949 - 0

/* Note: the only type where the operator is dropped from p->pattern */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3977 - 0

/* update briRC backref info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3985 - 0

/* it is really a regexp pattern, so apply it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:3988 - 0

/* update briRC backref info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4008 - 0

/* check for forced type and handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4043 - 0

/*
 * Apply a single RewriteRule
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4061 - 0

/*
 * Proxy request?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4067 - 0

/* Since we want to match against the (so called) full URL, we have
 * to re-add the PATH_INFO postfix
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4076 - 0

/* Additionally we strip the physical path from the url to match
 * it independent from the underlaying filesystem.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4127 - 0

/*
 * Reset vary_this if the novary flag is set for this condition.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4135 - 0

/* One condition is false, but another can be still true. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4140 - 0

/* skip the rest of the chained OR conditions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4151 - 0

/* If some HTTP header was involved in the condition, remember it
 * for later use
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4163 - 0

/* expand the result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4170 - 0

/* expand [E=var:val] and [CO=<cookie>] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4174 - 0

/* non-substitution rules ('RewriteRule <pat> -') end here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4188 - 0

/* Now adjust API's knowledge about r->filename and r->args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4197 - 0

/* Add the previously stripped per-directory location prefix, unless
 * (1) it's an absolute URL path and
 * (2) it's a full qualified URL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4209 - 0

/* If this rule is forced for proxy throughput
 * (`RewriteRule ... ... [P]') then emulate mod_proxy's
 * URL-to-filename handler to be sure mod_proxy is triggered
 * for this URL later in the Apache API. But make sure it is
 * a fully-qualified URL. (If not it is qualified with
 * ourself).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4240 - 0

/* If this rule is explicitly forced for HTTP redirection
 * (`RewriteRule .. .. [R]') then force an external HTTP
 * redirect. But make sure it is a fully-qualified URL. (If
 * not it is qualified with ourself).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4265 - 0

/* If this rule is still implicitly forced for HTTP
 * redirection (`RewriteRule .. <scheme>://...') then
 * directly force an external HTTP redirect.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4277 - 0

/* Finally remember the forced mime-type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4280 - 0

/* Puuhhhhhhhh... WHAT COMPLICATED STUFF ;_)
 * But now we're done for this particular rule.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4286 - 0

/*
 * Apply a complete rule set,
 * i.e. a list of rewrite rules
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4306 - 0

/*
 * Iterate over all existing rules
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4326 - 0

/*
 * Apply the current rule.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4333 - 0

/* Regardless of what we do next, we've found a match. Check to see
 * if any of the request header fields were involved, and add them
 * to the Vary field of the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4341 - 0

/*
 * The rule sets the response code (implies match-only)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4348 - 0

/*
 * Indicate a change if this was not a match-only rule.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4376 - 0

/*
 * Stop processing also on proxy pass-through and
 * last-rule and new-round flags.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4384 - 0

/*
 * On "e;new-round"e; flag we just start from the top of
 * the rewriting ruleset again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4401 - 0

/*
 * If we are forced to skip N next rules, do it now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4414 - 0

/*
 * If current rule is chained with next rule(s),
 * skip all this next rule(s)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4429 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Module Initialization Hooks
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4445 - 0

/* register int: rewritemap handlers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4476 - 0

/* if we are not doing the initial config, step through the servers and
 * open the RewriteMap prg:xxx programs,
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4540 - 0

/*
 * retrieve the config structures
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4568 - 0

/* END flag was used as a RewriteRule flag on this request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4588 - 0

/*
 * add the SCRIPT_URL variable to the env. this is a bit complicated
 * due to the fact that apache uses subrequests and internal redirects
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4607 - 0

/*
 * create the SCRIPT_URI variable for the env
 */

 /* add the canonical URI of this URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4622 - 0

/* set the variable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4623 - 0

//"e;, thisserver, thisport, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4628 - 0

/* if filename was not initially set,
 * we start with the requested URI
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4641 - 0

/*
 * now apply the rules ...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4684 - 0

/* make sure the QUERY_STRING and
 * PATH_INFO parts get incorporated
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4694 - 0

/* see proxy_http:proxy_http_canon() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4699 - 0

/* now make sure the request gets handled by the proxy handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4712 - 0

/* it was finally rewritten to a remote URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4720 - 0

/* append the QUERY_STRING part */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4729 - 0

/* determine HTTP redirect response code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4732 - 0

/* make Apache kernel happy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4738 - 0

/* now do the redirection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4758 - 0

/* it was finally rewritten to a local path */

 /* expand "e;/~user"e; prefix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4766 - 0

/* the filename must be either an absolute local path or an
 * absolute local URL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4823 - 0

/*
 * Fixup hook
 * [RewriteRules in directory context]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4862 - 0

/*
 * Proxy request?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4883 - 0

/* END flag was used as a RewriteRule flag on this request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4890 - 0

/*
 * Do the Options check after engine check, so
 * the user is able to explicitely turn RewriteEngine Off.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4920 - 0

/*
 * now apply the rules ...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4944 - 0

/* see proxy_http:proxy_http_canon() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4949 - 0

/* now make sure the request gets handled by the proxy handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:4967 - 0

/* skip 'scheme://' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5009 - 0

/* now prepare the redirect... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5016 - 0

/* append the QUERY_STRING part */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5034 - 0

/* determine HTTP redirect response code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5037 - 0

/* make Apache kernel happy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5043 - 0

/* now do the redirection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5063 - 0

/* the filename must be either an absolute local path or an
 * absolute local URL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5073 - 0

/* if there is a valid base-URL then substitute
 * the per-dir prefix with this base-URL if the
 * current filename still is inside this per-dir
 * context. If not then treat the result as a
 * plain URL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5094 - 0

/* strip trailing slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5110 - 0

/* No base URL, or r->filename wasn't still under dconf->directory
 * or, r->filename wasn't still under the document root. 
 * If there's a context document root AND a context prefix, and 
 * the context document root is a prefix of r->filename, replace.
 * This allows a relative substitution on a path found by mod_userdir 
 * or mod_alias without baking in a RewriteBase.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5131 - 0

/* Check for deadlooping:
 * At this point we KNOW that at least one rewriting
 * rule was applied, but when the resulting URL is
 * the same as the initial URL, we are not allowed to
 * use the following internal redirection stuff because
 * this would lead to a deadloop.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5145 - 0

/* now initiate the internal redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5160 - 0

/*
 * MIME-type hook
 * [T=...,H=...] execution
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5168 - 0

/* type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5177 - 0

/* handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5190 - 0

/*
 * "e;content"e; handler for internal redirects
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5199 - 0

/* just make sure that we are really meant! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5204 - 0

/* now do the internal redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5208 - 0

/* and return gracefully */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5213 - 0

/*
 * +-------------------------------------------------------+
 * | |
 * | Module paraphernalia
 * | |
 * +-------------------------------------------------------+
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5266 - 0

/* the main config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5269 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5270 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5271 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5272 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5273 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5274 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_rewrite.c:5277 - 0

/*EOF*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:64 - 0

/*
 * Create a configuration specific to this module for a server or directory
 * location, and fill it with the default settings.
 *
 * The API says that in the absence of a merge function, the record for the
 * closest ancestor is used exclusively. That's what we want, so we don't
 * bother to have such a function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:83 - 0

/*
 * Respond to a callback to create configuration record for a server or
 * vhost environment.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:92 - 0

/*
 * Respond to a callback to create a config record for a specific directory.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:100 - 0

/*
 * Define the directives specific to this module. This structure is referenced
 * later by the 'module' structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:167 - 0

/* exact match (sans case) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:175 - 0

/* transposition */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:178 - 0

/* 1 char mismatch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:182 - 0

/* extra character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:186 - 0

/* missing character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:188 - 0

/* distance too large to fix. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:221 - 0

/* Not a file request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:226 - 0

/* This is a sub request - don't mess with it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:240 - 0

/*
 * Don't do anything if the request doesn't contain a slash, or
 * requests "e;/"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:248 - 0

/* good = /correct-file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:258 - 0

/* Check to see if the URL pieces add up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:263 - 0

/* url = /correct-url */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:266 - 0

/* Now open the directory and do ourselves a check... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:268 - 0

/* Oops, not a directory... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:429 - 0

/* Generate the response text. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:445 - 0

/* The format isn't very neat... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:482 - 0

/* If we know there was a referring page, add a note: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:493 - 0

/* Pass our apr_table_t to http_protocol.c (see mod_negotiation): */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:522 - 0

/* create per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:523 - 0

/* merge per-dir config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:524 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:525 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:526 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_speling.c:527 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:72 - 0

/* Contains the suexec_identity hook used on Unix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:126 - 0

/* not merged */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:150 - 0

/*
 * Let's do the comparisons once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:172 - 0

/*
 * If the first (only?) value isn't one of our keywords, just copy
 * the string to the userdir string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:207 - 0

/*
 * If the URI doesn't match our basic pattern, we've nothing to do with
 * it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:224 - 0

/*
 * The 'dname' funny business involves backing it up to capture the '/'
 * delimiting the "e;/~user"e; part from the rest of the URL, in case there
 * was one (the case where there wasn't being just "e;GET /~user HTTP/1.0"e;,
 * for which we don't want to tack on a '/' onto the filename).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:249 - 0

/*
 * If there's a global interdiction on UserDirs, check to see if this
 * name is one of the Blessed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:258 - 0

/*
 * Special cases all checked, onward to normal substitution processing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:284 - 0

/* HAVE_DRIVE_LETTERS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:315 - 0

/*
 * Now see if it exists, or we're at the last entry. If we are at the
 * last entry, then use the filename generated (if there is one)
 * anyway, in the hope that some handler might handle it. This can be
 * used, for example, to run a CGI script for the user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:329 - 0

/* XXX: Does this walk us around FollowSymLink rules?
 * When statbuf contains info on r->filename we can save a syscall
 * by copying it to r->finfo
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:336 - 0

/* For use in the get_suexec_identity phase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:369 - 0

/* HAVE_UNIX_SUEXEC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:384 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:385 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:386 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:387 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:388 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_userdir.c:389 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:47 - 0

/* for ap_hook_translate_name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:53 - 0

/*
 * basic configuration things
 * we abbreviate "e;mod_vhost_alias"e; to "e;mva"e; for shorter names
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:62 - 0

/*
 * Per-server module config record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:111 - 0

/*
 * These are just here to tell us what vhost_alias_set should do.
 * We don't put anything into them; we just use the cell addresses.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:163 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:169 - 0

/* we just found a '%' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:178 - 0

/* digit N */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:189 - 0

/* do we end here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:198 - 0

/* digit M */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:256 - 0

/* 0..9 9..0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:271 - 0

/* slightly naughty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:284 - 0

/* normal characters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:289 - 0

/* we are in a format specifier */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:291 - 0

/* %% -> % */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:298 - 0

/* port number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:301 - 0

/* no. of decimal digits in a short plus one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:307 - 0

/* value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:308 - 0

/* is there a plus? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:309 - 0

/* is there a dash? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:323 - 0

/* note that N and M are one-based indices, not zero-based */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:324 - 0

/* ptr to the first character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:325 - 0

/* ptr to the character after the last one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:367 - 0

/* no double slashes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:431 - 0

/* see is_scriptaliased() in mod_cgi */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:450 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:451 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:452 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:453 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:454 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/mappers/mod_vhost_alias.c:455 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:218 - 0

/* Delete terminal (CR?)LF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:245 - 0

/* Nuke trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:286 - 0

/* if ./.web/$1.meta exists then output 'asis' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:292 - 0

/* is this a directory? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:297 - 0

/* what directory is this file in? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:303 - 0

/* skip over last slash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:309 - 0

/* no last slash, buh?! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:350 - 0

/* read the headers in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:365 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:366 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:367 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:368 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:369 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_cern_meta.c:370 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:129 - 0

/* Always UnsetEnv FOO in the same context as {Set,Pass}Env FOO
 * only if this UnsetEnv follows the {Set,Pass}Env. The merge
 * will only apply unsetenv to the parent env (main server).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:173 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:174 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:175 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:176 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:177 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_env.c:178 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:175 - 0

/* from mod_dir, why is this alias used?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:200 - 0

/* if we're here at all it's because someone explicitly
 * set the active flag
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:222 - 0

/* 0.0.4 compatibility?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:229 - 0

/* <base> [plus] {<num> <type>}*
 */

 /* <base>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:247 - 0

/* [plus]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:254 - 0

/* {<num> <type>}*
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:257 - 0

/* <num>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:267 - 0

/* <type>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:302 - 0

/* next <num>
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:385 - 0

/*
 * Handle the setting of the expiration response header fields according
 * to our criteria.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:464 - 0

/*
 * Check to see which output header table we should use;
 * mod_cgi loads script fields into r->err_headers_out,
 * for instance.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:487 - 0

/*
 * See if we have a wildcard entry for the major type.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:496 - 0

/*
 * Without a '/' character, nothing we have will match.
 * However, we have one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:512 - 0

/*
 * Use the ExpiresDefault directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:534 - 0

/* Say no to subrequests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:565 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:566 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:567 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:568 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:569 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_expires.c:570 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:92 - 0

/* add header (could mean multiple hdrs) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:93 - 0

/* set (replace old value) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:94 - 0

/* append (merge into any old value) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:96 - 0

/* unset header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:97 - 0

/* echo headers from request to response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:98 - 0

/* change value by regexp, match once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:99 - 0

/* change value by regexp, everymatch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:101 - 0

/* set value of header in a note */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:107 - 0

/* RequestHeader */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:108 - 0

/* Header onsuccess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:109 - 0

/* Header always */

/* Callback function type. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:114 - 0

/*
 * There is an array of struct format_tag per Header/RequestHeader
 * config directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:125 - 0

/*
 * There is one "e;header_entry"e; per Header/RequestHeader config directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:131 - 0

/* Array of format_tag structs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:139 - 0

/* echo_do is used for Header echo to iterate through the request headers*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:145 - 0

/* edit_do is used for Header edit to iterate through the request headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:152 - 0

/*
 * headers_conf is our per-module configuration. This is used as both
 * a per-dir and per-server config
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:167 - 0

/*
 * Tag formatting functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:248 - 0

/*
 * Config routines
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:290 - 0

/*
 * This might allocate a few chars extra if there's a backslash
 * escape in the format string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:322 - 0

/* copy verbatim */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:324 - 0

/*
 * Allow the loop to deal with this *s in the normal
 * fashion so that it handles end of string etc.
 * properly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:348 - 0

/* skip the % */

 /* Pass through %% or % at end of string as % */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:396 - 0

/* No string to parse with unset and echo commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:400 - 0

/* Tags are in the replacement value for edit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:427 - 0

/* handle RequestHeader and Header directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:523 - 0

/* Handle the envclause on Header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:562 - 0

/* Handle all (xxx)Header directives */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:595 - 0

/*
 * Process the tags in the format string. Tags may be format specifiers
 * (%D, %t, etc.), whitespace or text strings. For each tag, run the handler
 * (formatter) specific to the tag. Handlers return text strings.
 * Concatenate the return from each handler into one string that is
 * returned from this call.
 * If the original value was prefixed with "e;expr="e;, processing is
 * handled instead by ap_expr.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:643 - 0

/* no match, nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:671 - 0

/* If the input header (key) matches the regex, echo it intact to
 * r->headers_out.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:719 - 0

/* Do we have an expression to evaluate? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:732 - 0

/* Have any conditional envar-controlled Header processing to do? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:760 - 0

/* modified version of logic in ap_get_token() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:854 - 0

/*
 * Make sure our error-path filter is in place.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:876 - 0

/* do the fixup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:880 - 0

/* remove ourselves from the filter chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:883 - 0

/* send the data up the stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:907 - 0

/*
 * We've done our bit; remove ourself from the filter chain so there's
 * no possibility we'll be called again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:913 - 0

/*
 * Pass the buck. (euro?)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:924 - 0

/* do the fixup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:936 - 0

/* do the fixup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1013 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1014 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1015 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1016 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1017 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_headers.c:1018 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:49 - 0

/* for server_rec, conn_rec, etc. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:55 - 0

/* Whether we should enable rfc1413 identity checking */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:62 - 0

/* request timeout (sec) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:67 - 0

/* Local stuff. */

/* Semi-well-known port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:72 - 0

/* maximum allowed length of userid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:78 - 0

/* default username, if it could not determined */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:94 - 0

/* ephemeral port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:96 - 0

/* This should not fail since we have a numeric address string
 * as the host. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:105 - 0

/* has to match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:107 - 0

/* This should not fail since we have a numeric address string
 * as the host. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:116 - 0

/* has to match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:130 - 0

/*
 * Bind the local and remote ends of the query socket to the same
 * IP addresses as the connection under investigation. We go
 * through all this trouble because the local or remote system
 * might have more than one network address. The RFC1413 etc.
 * client sends only port numbers; the server takes the IP
 * addresses from the query socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:166 - 0

/* XXX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:172 - 0

/* send the data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:177 - 0

/* send query to server. Handle short write. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:201 - 0

/*
 * Note that the strchr function below checks for \012 instead of '\n'
 * this allows it to work on both ASCII and EBCDIC machines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:223 - 0

/* RFC1413_USERLEN = 512 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:230 - 0

/*
 * Strip trailing carriage return. It is part of the
 * protocol, not part of the data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:338 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:339 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:340 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:341 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:342 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_ident.c:343 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:104 - 0

/* ### this isn't set by configure? does anybody set this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:109 - 0

/*
 * data structures and related constants
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:121 - 0

/* HOWMANY must be at least 4096 to make gzip -dcq work */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:123 - 0

/* SMALL_HOWMANY limits how much work we do to figure out text files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:125 - 0

/* max leng of text description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:126 - 0

/* max leng of "e;string"e; types */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:129 - 0

/* link to next entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:133 - 0

/* if '>(...)' appears, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:134 - 0

/* comparison is unsigned */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:135 - 0

/* level of "e;>"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:137 - 0

/* byte short long */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:138 - 0

/* offset from indirection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:141 - 0

/* relation (0=eq, '>'=gt, etc) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:142 - 0

/* int, short, long or string. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:143 - 0

/* length of string value, if any */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:160 - 0

/* 2 bytes of a fixed-endian "e;short"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:161 - 0

/* 2 bytes of a fixed-endian "e;long"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:162 - 0

/* either number or string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:167 - 0

/* description */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:170 - 0

/*
 * data structures for tar file recognition
 * --------------------------------------------------------------------------
 * Header file for public domain tar (tape archive) program.
 *
 * @(#)tar.h 1.20 86/10/29 Public Domain. Created 25 August 1985 by John
 * Gilmore, ihnp4!hoptoad!gnu.
 *
 * Header block on tape.
 *
 * I'm going to use traditional DP naming conventions here. A "e;block"e; is a big
 * chunk of stuff that we do I/O on. A "e;record"e; is a piece of info that we
 * care about. Typically many "e;record"e;s fit into a "e;block"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:210 - 0

/* 7 chars and a null */

/*
 * file-function prototypes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:249 - 0

/* HTML */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:250 - 0

/* first and foremost on UNIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:251 - 0

/* the oldest one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:252 - 0

/* Makefiles */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:253 - 0

/* PL/1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:255 - 0

/* English */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:256 - 0

/* Pascal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:257 - 0

/* Electronic mail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:258 - 0

/* Usenet Netnews */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:262 - 0

/* HTML */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:263 - 0

/* "e;c program text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:264 - 0

/* "e;fortran program text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:265 - 0

/* "e;make commands text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:266 - 0

/* "e;pl/1 program text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:267 - 0

/* "e;assembler program text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:268 - 0

/* "e;English text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:269 - 0

/* "e;pascal program text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:270 - 0

/* "e;mail text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:271 - 0

/* "e;news text"e;, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:314 - 0

/*"e;, L_C
 }, /* must precede "e;The"e;, "e;the"e;, etc. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:358 - 0

/*
 * Too many files of text have these words in them. Find another way to
 * recognize Fortrash.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:384 - 0

/* NOTDEF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:437 - 0

/*
 * Result String List (RSL)
 *
 * The file(1) command prints its output. Instead, we store the various
 * "e;printed"e; strings in a list (allocating memory as we go) and concatenate
 * them at the end when we finally know how much space they'll need.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:446 - 0

/* string, possibly a fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:447 - 0

/* pointer to next fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:450 - 0

/*
 * Apache module configuration structures
 */

/* per-server info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:461 - 0

/* per-request info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:463 - 0

/* result string list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:465 - 0

/* recursion depth in suffix check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:468 - 0

/*
 * configuration functions - called by Apache API routines
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:476 - 0

/* allocate the config - use pcalloc because it needs to be zeroed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:506 - 0

/*
 * configuration file commands - exported to Apache API
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:541 - 0

/* add a string to the result string list for this request */
/* it is the responsibility of the caller to allocate "e;str"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:549 - 0

/* make sure we have a list to put it in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:554 - 0

/* failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:559 - 0

/* allocate the list entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:562 - 0

/* fill it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:566 - 0

/* append to the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:575 - 0

/* success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:579 - 0

/* RSL hook for puts-type functions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:585 - 0

/* RSL hook for printf-type functions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:592 - 0

/* assemble the string into the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:597 - 0

/* add the buffer to the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:601 - 0

/* RSL hook for putchar-type functions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:606 - 0

/* high overhead for 1 char - just hope they don't do this much */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:612 - 0

/* allocate and copy a contiguous string from a result string list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:615 - 0

/* return value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:616 - 0

/* current fragment number/counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:617 - 0

/* current position within fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:618 - 0

/* position in result string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:619 - 0

/* list-traversal pointer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:623 - 0

/* allocate the result string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:626 - 0

/* loop through and collect the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:631 - 0

/* loop to the first fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:635 - 0

/* loop through and collect chars */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:650 - 0

/* clean up and return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:664 - 0

/* process the RSL and set the MIME info in the request record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:667 - 0

/* current fragment number/counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:668 - 0

/* current position within fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:669 - 0

/* content type starting point: fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:670 - 0

/* content type starting point: position */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:671 - 0

/* content type length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:672 - 0

/* content encoding starting point: fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:673 - 0

/* content encoding starting point: position */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:674 - 0

/* content encoding length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:677 - 0

/* list-traversal pointer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:683 - 0

/* check if we have a result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:685 - 0

/* empty - no match, we defer to other Apache modules */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:689 - 0

/* start searching for the type and encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:696 - 0

/* loop through the characters in the fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:699 - 0

/* process whitespace actions for each state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:701 - 0

/* eat whitespace in this state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:705 - 0

/* whitespace: type has no slash! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:709 - 0

/* whitespace: end of MIME type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:714 - 0

/* eat whitespace in this state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:718 - 0

/* whitespace: end of MIME encoding */
 /* we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:730 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:734 - 0

/* copy the char and go to rsl_subtype state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:739 - 0

/* process non-space actions for each state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:741 - 0

/* non-space: begin MIME type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:750 - 0

/* non-space: adds to type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:755 - 0

/* non-space: begin MIME encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:763 - 0

/* non-space: adds to encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:774 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:776 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:783 - 0

/* defer to other modules */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:787 - 0

/* save the info in the request record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:813 - 0

/* success! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:826 - 0

/* number of bytes read from a datafile */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:829 - 0

/*
 * first try judging the file based on its filesystem status
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:844 - 0

/* We can't open it, but we were able to stat it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:847 - 0

/* let some other handler decide what the problem is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:851 - 0

/*
 * try looking at the first HOWMANY bytes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:865 - 0

/* null-terminate it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:882 - 0

/*
 * Try compression stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:896 - 0

/*
 * try known keywords, check for ascii-ness too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:902 - 0

/*
 * abandon hope, all ye who remain here
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:944 - 0

/* parse it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:947 - 0

/* guaranteed that len >= 1 since an
 * "e;empty"e; line contains a '\n'
 */

 /* delete newline and any other trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:958 - 0

/* skip leading whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:964 - 0

/* skip blank lines */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:969 - 0

/* comment, do not parse */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:974 - 0

/* if we get here, we're going to use it so count it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:978 - 0

/* parse it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1024 - 0

/*
 * extend the sign bit if the comparison is to be signed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1074 - 0

/* append to linked list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1090 - 0

/* step over */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1095 - 0

/* step over */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1099 - 0

/* get offset, then skip over it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1110 - 0

/*
 * read [.lbs][+-]nnnnn)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1170 - 0

/* get type, skip it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1220 - 0

/* New-style anding: "e;0 byte&0x80 =0x80 dynamically linked"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1232 - 0

/* Old-style anding: "e;0 byte &0x80 dynamically linked"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1245 - 0

/* FALL THROUGH */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1250 - 0

/* Bill The Cat */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1259 - 0

/*
 * now get last part - the description
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1304 - 0

/*
 * Convert a string containing C character escapes. Stop at an unescaped
 * space or tab. Copy the converted version to "e;p"e;, returning its length in
 * *slen. Return updated scan pointer as function result.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1359 - 0

/* \ and up to 3 octal digits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1369 - 0

/* try for 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1372 - 0

/* try for 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1383 - 0

/* \x and up to 3 hex digits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1385 - 0

/* Default if no digits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1386 - 0

/* Get next char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1418 - 0

/* Single hex char to int; -1 if not a hex char. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1456 - 0

/* TODO add code to handle V7 MUX and Blit MUX files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1481 - 0

/*
 * regular file, check next possibility
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1577 - 0

/* check if main entry matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1599 - 0

/*
 * this trick allows us to keep *m in sync when the continue
 * advances the pointer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1609 - 0

/* if we get here, the main entry rule was a match */
 /* this will be the last run through the loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1618 - 0

/* print the match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1627 - 0

/* and any continuations that match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1629 - 0

/*
 * while (m && m->next && m->next->cont_level != 0 && ( m = m->next
 * ))
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1643 - 0

/*
 * We're at the end of the level "e;cont_level"e;
 * continuations.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1668 - 0

/*
 * If we see any continuations at a higher level, process
 * them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1676 - 0

/* move to next continuation record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1683 - 0

/* all through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1689 - 0

/* no match at all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1742 - 0

/*
 * Convert the byte order of the data we are looking at
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1874 - 0

/* bogosity, pretend that it just wasn't a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1982 - 0

/* these are easy, do them first */

 /*
 * for troff, look for . + letter + letter or .\"e;; this must be done to
 * disambiguate tar archives' ./file and other trash from real troff
 * input.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:1993 - 0

/* skip leading whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2001 - 0

/* Fortran */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2009 - 0

/* make a copy of the buffer here because apr_strtok() will destroy it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2014 - 0

/* make apr_strtok() keep on tokin' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2027 - 0

/* V7 tar archive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2031 - 0

/* POSIX tar archive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2036 - 0

/* all else fails, but it is ascii... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2041 - 0

/*
 * compress routines: zmagic() - returns 0 if not recognized, uncompresses
 * and prints information if recognized uncompress(s, method, old, n, newch)
 * - uncompress old into new, using method, return sizeof new
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2052 - 0

/* MUST be lowercase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2055 - 0

/* we use gzip here rather than uncompress because we have to pass
 * it a full filename -- and uncompress only considers filenames
 * ending with .Z
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2099 - 0

/* set encoding type in the request record */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2102 - 0

/* null-terminate uncompressed data */
 /* Try to detect the content type of the uncompressed data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2127 - 0

/* XXX missing 1.3 logic:
 *
 * what happens when !compr[parm->method].silent?
 * Should we create the err pipe, read it, and copy to the log?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2139 - 0

/* Something bad happened, tell the world. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2154 - 0

/* Bad things happened. Everyone should have cleaned up. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2179 - 0

/* We make a sub_pool so that we can collect our child early, otherwise
 * there are cases (i.e. generating directory indicies with mod_autoindex)
 * where we would end up with LOTS of zombies.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2219 - 0

/*
 * Return 0 if the checksum is bad (i.e., probably not a tar archive), 1 for
 * old UNIX tar file, 2 for Unix Std (POSIX) tar file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2239 - 0

/*
 * We can't use unsigned char here because of old compilers, e.g. V7.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2245 - 0

/* Adjust checksum to count the "e;chksum"e; field as blanks. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2251 - 0

/* Not a tar archive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2254 - 0

/* Unix Standard tar archive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2256 - 0

/* Old fashioned tar archive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2269 - 0

/* Skip spaces */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2272 - 0

/* All blank field */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2275 - 0

/* Scan til nonoctal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2281 - 0

/* Ended on non-space/nul */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2327 - 0

/* extract content type/encoding/language from sub-request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2350 - 0

/* clean up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2356 - 0

/*
 * initialize the module
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2373 - 0

/* inherits from the parent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2416 - 0

/* the file has to exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2431 - 0

/* initialize per-request info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2436 - 0

/* try excluding file-revision suffixes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2438 - 0

/* process it based on the file contents */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2444 - 0

/* if we have any results, put them in the request structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2458 - 0

/*
 * Apache API module interface
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2465 - 0

/* dir config creator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2466 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2467 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2468 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2469 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_mime_magic.c:2470 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:33 - 0

/** A proxy IP mask to match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:35 - 0

/** Flagged if internal, otherwise an external trusted proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:40 - 0

/** The header to retrieve a proxy-via IP list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:42 - 0

/** A header to record the proxied IP's
 * (removed as the physical connection and
 * from the proxy-via IP header value list)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:47 - 0

/** A list of trusted proxies, ideally configured
 * with the most commonly encountered listed first
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:58 - 0

/** The remaining list of untrusted proxied remote IP's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:65 - 0

/* config->header_name = NULL;
 * config->proxies_header_name = NULL;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:109 - 0

/* Would be quite nice if APR exported this */
/* apr:network_io/unix/sockaddr.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:114 - 0

/* definitely not a hostname; assume it is intended to be an IPv6 address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:118 - 0

/* simple IPv4 address string check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:234 - 0

/* If no RemoteIPInternalProxy, RemoteIPInternalProxyList, RemoteIPTrustedProxy
 or RemoteIPTrustedProxyList directive is configured,
 all proxies will be considered as external trusted proxies.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:245 - 0

/* This indicates that a RemoteIPInternalProxy, RemoteIPInternalProxyList, RemoteIPTrustedProxy
 or RemoteIPTrustedProxyList directive is configured.
 In this case, default to internal proxy.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:262 - 0

/* verify user agent IP against the trusted proxy list
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:271 - 0

/* Allow an internal proxy to present an external proxy,
 but do not allow an external proxy to present an internal proxy.
 In this case, the presented internal proxy will be considered external.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:312 - 0

/* We map as IPv4 rather than IPv6 for equivalent host names
 * or IPV4OVERIPV6
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:338 - 0

/* For internet (non-Internal proxies) deny all
 * RFC3330 designated local/private subnets:
 * 10.0.0.0/8 169.254.0.0/16 192.168.0.0/16
 * 127.0.0.0/8 172.16.0.0/12
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:350 - 0

/* For internet (non-Internal proxies) we translated
 * IPv4-over-IPv6-mapped addresses as IPv4, above.
 * Accept only Global Unicast 2000::/3 defined by RFC4291
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:371 - 0

/* save away our results */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:377 - 0

/* Set useragent_ip string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:392 - 0

/* Nothing happened? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:460 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:461 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:462 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:463 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:464 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_remoteip.c:465 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:107 - 0

/* header name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:108 - 0

/* compiled header name regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:109 - 0

/* regex to match against */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:110 - 0

/* compiled regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:111 - 0

/* non-regex pattern to match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:112 - 0

/* parsed expression */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:113 - 0

/* env vars to set (or unset) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:114 - 0

/* is it a "e;special"e; header ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:124 - 0

/*
 * These routines, the create- and merge-config functions, are called
 * for both the server-wide and the per-directory contexts. This is
 * because the different definitions are used at different times; the
 * server-wide ones are used in the post-read-request phase, and the
 * per-directory ones are used during the header-parse phase (after
 * the URI has been mapped to a file and we have anything from the
 * .htaccess file and <Directory> and <Files> containers).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:172 - 0

/* If a Header name contains characters other than:
 * -,_,[A-Z\, [a-z] and [0-9].
 * assume the header name is a regular expression.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:293 - 0

/*
 * Determine from our context into which record to put the entry.
 * cmd->path == NULL means we're in server-wide context; otherwise,
 * we're dealing with a per-directory setting.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:303 - 0

/* get regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:323 - 0

/* if the last entry has an identical headername and regex then
 * merge with it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:333 - 0

/* no match, create a new entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:409 - 0

/* get header name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:426 - 0

/*
 * Determine from our context into which record to put the entry.
 * cmd->path == NULL means we're in server-wide context; otherwise,
 * we're dealing with a per-directory setting.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:435 - 0

/* get expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:548 - 0

/* Matching headers_in against a regex. Iterate through
 * the headers_in until we find a match or run out of
 * headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:564 - 0

/* Not matching against a regex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:643 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:644 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:645 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:646 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:647 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_setenvif.c:648 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:24 - 0

/* for htons() et al */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:26 - 0

/* for APR_OFFSETOF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:32 - 0

/* for ap_hook_post_read_request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:127 - 0

/*
 * Number of elements in the structure unique_id_rec.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:139 - 0

/*
 * Calculate the sizes and offsets in cur_unique_id.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:153 - 0

/*
 * Calculate the size of the structure when encoded.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:175 - 0

/* NOTE: This is *NOT* the same encoding used by base64encode ... the last two
 * characters should be + and /. But those two characters have very special
 * meanings in URLs, and we want to make it easy to use identifiers in
 * URLs. So we replace them with @ and -.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:191 - 0

/*
 * Buffer padded with two final bytes, used to copy the unique_id_red
 * structure without the internal paddings that it could have.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:219 - 0

/*
 * We reset two more bytes just in case padding is needed for the uuencoding.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:225 - 0

/* alloc str and do the uuencoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:239 - 0

/* and increment the identifier for the next call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:259 - 0

/* we do not care about connection ids */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:263 - 0

/* XXX: do we need special handling for internal redirects? */

 /* if set_unique_id() has been called for this request, use it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:284 - 0

/* if we have a log id, it was set by our generate_log_id() function
 * and we should reuse the same id
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:294 - 0

/* set the environment variable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:310 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:311 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:312 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:313 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:314 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_unique_id.c:315 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:87 - 0

/* used to compile regexp; save for debugging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:88 - 0

/* used to find usertrack cookie in cookie header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:91 - 0

/* Make Cookie: Now we have to generate something that is going to be
 * pretty unique. We can base it on the pid, time, hostip */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:112 - 0

/* Cookie with date; as strftime '%a, %d-%h-%y %H:%M:%S GMT' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:150 - 0

/* log first time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:153 - 0

/* dcfg->regexp is "e;^cookie_name=([^;]+)|;[ \t]+cookie_name=([^;]+)"e;,
 * which has three subexpressions, $0..$2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:182 - 0

/* 1 == \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:211 - 0

/* Do not run in subrequests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:243 - 0

/* Set the cookie in a note, for logging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:250 - 0

/* We set our cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:273 - 0

/* In case the user does not use the CookieName directive,
 * we need to compile the regexp for the default cookie name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:298 - 0

/* The simple case first - all numbers (we assume) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:315 - 0

/* {<num> <type>}* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:317 - 0

/* <num> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:323 - 0

/* <type> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:347 - 0

/* next <num> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:376 - 0

/*
 * Set the value for the 'Domain=' attribute.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:403 - 0

/*
 * Make a note of the cookie style we should use.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:453 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:454 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:455 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:456 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:457 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_usertrack.c:458 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:66 - 0

/* module structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:69 - 0

/* queried httpd version */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:73 - 0

/*
 * compare the supplied version with the core one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:90 - 0

/* parse supplied version */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:135 - 0

/* seems to be the same */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:139 - 0

/*
 * match version against a regular expression
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:169 - 0

/*
 * Implements the <IfVersion> container
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:187 - 0

/* surrounding quotes without operator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:221 - 0

/* normal comparison */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:234 - 0

/* regexp otherwise */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:240 - 0

/* regular expression */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:307 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:308 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:309 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:310 - 0

/* merge server configs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:311 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/metadata/mod_version.c:312 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:133 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:136 - 0

/* Apache method number to SC methods transform table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:142 - 0

/* M_CONNECT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:145 - 0

/* M_PATCH */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:164 - 0

/* M_INVALID */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:182 - 0

/*
 * Message structure
 *
 *
AJPV13_REQUEST/AJPV14_REQUEST=
 request_prefix (1) (byte)
 method (byte)
 protocol (string)
 req_uri (string)
 remote_addr (string)
 remote_host (string)
 server_name (string)
 server_port (short)
 is_ssl (boolean)
 num_headers (short)
 num_headers*(req_header_name header_value)

 ?context (byte)(string)
 ?servlet_path (byte)(string)
 ?remote_user (byte)(string)
 ?auth_type (byte)(string)
 ?query_string (byte)(string)
 ?jvm_route (byte)(string)
 ?ssl_cert (byte)(string)
 ?ssl_cipher (byte)(string)
 ?ssl_session (byte)(string)
 ?ssl_key_size (byte)(int) via JkOptions +ForwardKeySize
 request_terminator (byte)
 ?body content_length*(var binary)

 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:326 - 0

/* XXXX ebcdic (args converted?) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:393 - 0

/* ssl_key_size is required by Servlet 2.3 API */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:418 - 0

/* Forward the SSL protocol name.
 * Modern Tomcat versions know how to retrieve
 * the protocol name from this attribute.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:478 - 0

/* Use the environment vars prefixed with AJP_
 * and pass it to the header striping that prefix.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:507 - 0

/*
AJPV13_RESPONSE/AJPV14_RESPONSE:=
 response_prefix (2)
 status (short)
 status_msg (short)
 num_headers (short)
 num_headers*(res_header_name header_value)
 *body_chunk
 terminator boolean <! -- recycle connection or not -->

req_header_name :=
 sc_req_header_name | (string)

res_header_name :=
 sc_res_header_name | (string)

header_value :=
 (string)

body_chunk :=
 length (short)
 body length*(var binary)

 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:559 - 0

/* copy only if we have to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:635 - 0

/* Set-Cookie need additional processing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:639 - 0

/* Location, Content-Location, URI and Destination need additional
 * processing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:656 - 0

/* Content-type needs an additional handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:658 - 0

/* add corresponding filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:668 - 0

/*
 * Build the ajp header message and send it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:704 - 0

/*
 * Read the ajp message and return the type of the message.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:751 - 0

/* parse the msg to read the type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:762 - 0

/* parse the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:785 - 0

/* parse the body and return data address and length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:810 - 0

/*
 * msg->len contains the complete length of the message including all
 * headers. So the expected length for a CMD_AJP13_SEND_BODY_CHUNK is
 * msg->len minus the sum of
 * AJP_HEADER_LEN : The length of the header to every AJP message.
 * AJP_HEADER_SZ_LEN : The header giving the size of the chunk.
 * 1 : The CMD_AJP13_SEND_BODY_CHUNK indicator byte (0x03).
 * 1 : The last byte of this message always seems to be
 * 0x00 and is not part of the chunk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:831 - 0

/* Check the reuse flag in CMD_AJP13_END_RESPONSE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:854 - 0

/*
 * Allocate a msg to send data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:871 - 0

/*
 * Send the data message
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_header.c:881 - 0

/* + 1 XXXX where is '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_link.c:61 - 0

/* socket closed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:22 - 0

/* 2 hex digits plus space plus one char per dumped byte */
/* plus prefix plus separator plus '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:52 - 0

/* Display only first "e;count"e; bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:55 - 0

/* First the space needed for the first line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:57 - 0

/* Now for the data lines */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:68 - 0

/* Safety check: do we have enough buffer for another line? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:346 - 0

/* We checked for space !! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:347 - 0

/* including \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:350 - 0

/* convert from EBCDIC if needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:378 - 0

/* We checked for space !! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:536 - 0

/* save the current position */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_msg.c:542 - 0

/* only bytes, no trailer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_utils.c:21 - 0

/*
 * Handle the CPING/CPONG
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_utils.c:65 - 0

/* Set CPING/CPONG response timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_utils.c:74 - 0

/* Read CPONG reply */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_utils.c:98 - 0

/* Restore original socket timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/ajp_utils.c:116 - 0

/**
 * Convert numeric message type into string
 * @param type AJP message type
 * @return AJP message type as a string
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:45 - 0

/* can only happen if mod_proxy isn't loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:62 - 0

/* first time through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:154 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:155 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:156 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:157 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:158 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bybusyness.c:159 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:90 - 0

/* can only happen if mod_proxy isn't loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:105 - 0

/* first time through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:185 - 0

/* Only the mpm_winnt has child init hook handler.
 * make sure that we are called after the mpm
 * initializes and after the mod_proxy
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:194 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:195 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:196 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:197 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:198 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_byrequests.c:199 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:62 - 0

/* can only happen if mod_proxy isn't loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:77 - 0

/* first time through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:154 - 0

/* Only the mpm_winnt has child init hook handler.
 * make sure that we are called after the mpm
 * initializes and after the mod_proxy
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:163 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:164 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:165 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:166 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:167 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_bytraffic.c:168 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:75 - 0

/* Split the string in two */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:76 - 0

/* Skip passed the = */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:154 - 0

/* comment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:159 - 0

/* line format: <IP> <query_string>\n */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:280 - 0

/* can only happen if mod_proxy isn't loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:372 - 0

/* do nothing on first call */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:460 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:461 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:462 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:463 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:464 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/balancers/mod_lbmethod_heartbeat.c:465 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:31 - 0

/* for getpid() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:40 - 0

/*
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:128 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:129 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:130 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:131 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:132 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/examples/mod_lbmethod_rr.c:133 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:60 - 0

/*
 * A Web proxy module. Stages:
 *
 * translate_name: set filename to proxy:<URL>
 * map_to_storage: run proxy_walk (rather than directory_walk/file_walk)
 * can't trust directory_walk/file_walk since these are
 * not in our filesystem. Prevents mod_http from serving
 * the TRACE request we will set aside to handle later.
 * fix_ups: convert the URL stored in the filename to the
 * canonical form.
 * handler: handle proxy requests
 */

/* -------------------------------------------------------------- */
/* Translate the URL into a 'filename' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:116 - 0

/* Initial number of connections to remote
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:124 - 0

/* Maximum number of connections to remote
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:131 - 0

/* XXX: More inteligent naming needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:133 - 0

/* Maximum number of connections to remote that
 * will not be destroyed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:142 - 0

/* Acquire timeout in given unit (default is milliseconds).
 * If set this will be the maximum time to
 * wait for a free connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:154 - 0

/* Connection timeout in seconds.
 * Defaults to server timeout.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:207 - 0

/* Worker route.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:215 - 0

/* Worker redirection route.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:226 - 0

/* Worker status.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:260 - 0

/* change to microseconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:279 - 0

/* Request timeout in given unit (default is second).
 * Defaults to connection timeout
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:331 - 0

/* separator/delimiter for sessionid and route,
 * normally '.'
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:396 - 0

/* If set to 'on' then ';' will also be
 * used as a session path separator/delim (ala
 * mod_jk)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:480 - 0

/* any number of '/' in the alias matches any number in
 * the supplied URI, but there must be at least one...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:492 - 0

/* Other characters are compared literally */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:498 - 0

/* fixup badly encoded stuff (e.g. % as last character) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:513 - 0

/* Check last alias path component matched all the way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:525 - 0

/* Detect if an absoluteURI should be proxied or not. Note that we
 * have to do this during this phase because later phases are
 * "e;short-circuiting"e;... i.e. translate_names will end when the first
 * module returns OK. So for example, if the request is something like:
 *
 * GET http://othervhost/cgi-bin/printenv HTTP/1.0
 *
 * mod_alias will notice the /cgi-bin part and ScriptAlias it and
 * short-circuit the proxy... just because of the ordering in the
 * configuration file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:542 - 0

/* Ick... msvc (perhaps others) promotes ternary short results to int */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:545 - 0

/* but it might be something vhosted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:557 - 0

/* We need special treatment for CONNECT proxying: it has no scheme part */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:591 - 0

/* OK, this is syntax we want to interpolate. Is there such a var ? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:649 - 0

/* test that we haven't reduced the URI */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:712 - 0

/* mod_proxy_http needs to be told. Different module. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:750 - 0

/* short way - this location is reverse proxied? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:761 - 0

/* long way - walk the list of aliases, find a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:783 - 0

/* XXX: shouldn't we use URI here? Canonicalize it first?
 * Pass over "e;proxy:"e; prefix
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:856 - 0

/* Don't let the core or mod_http map_to_storage hooks handle this,
 * We don't need directory/file_walk, and we want to TRACE on our own.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:867 - 0

/* -------------------------------------------------------------- */
/* Fixup the filename */

/*
 * Canonicalise the URL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:887 - 0

/* create per-request copy of reverse proxy conf,
 * and interpolate vars in it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:897 - 0

/* canonicalise each specific scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:931 - 0

/* Reassemble the request, but insert the domain after the host name */
 /* Note that the domain name always starts with a dot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:949 - 0

/* -------------------------------------------------------------- */
/* Invoke handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:971 - 0

/* is this for us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:977 - 0

/* We may have forced the proxy handler via config or .htaccess */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:991 - 0

/* handle max-forwards / OPTIONS / TRACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1025 - 0

/* set configured max-forwards */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1050 - 0

/* Can't test ap_should_client_block, we aren't ready to send
 * the client a 100 Continue response till the connection has
 * been established
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1077 - 0

/* If the host doesn't have a domain name, add one and redirect. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1085 - 0

/* Check URI's destination host against NoProxy hosts */
 /* Bypass ProxyRemote server lookup if configured as NoProxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1099 - 0

/* Try to obtain the most suitable worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1125 - 0

/* firstly, try a proxy, unless a NoProxy directive is active */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1128 - 0

/* is it a partial URL? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1137 - 0

/* handle the scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1145 - 0

/* Did the scheme handler process the request? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1171 - 0

/*
 * Transfer-Encoding was set as input header, so we had
 * a request body. We cannot retry with a direct
 * connection for the same reason as above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1254 - 0

/*
 * Only restore r->status if it has not been changed by
 * ap_proxy_post_request as we assume that this change was intentional.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1268 - 0

/* -------------------------------------------------------------- */
/* Setup configurable data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1285 - 0

/* simply for storage size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1286 - 0

/* initially backward compatible with 1.3.1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1287 - 0

/* 0 means default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1298 - 0

/* this default was left unset for some reason */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1375 - 0

/* For non-shared memory entries, b2 is copy of b1, so we have
 * to use tmp copy of b1 to detect changes done in override. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1500 - 0

/* unset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1519 - 0

/* Put these in the dir config so they work inside <Location> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1584 - 0

/* lowercase scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1585 - 0

/* lowercase hostname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1622 - 0

/* move past the 'unix:...|' UDS path info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1626 - 0

/* special case: "e;unix:....|scheme:"e; is OK, expand
 * to "e;unix:....|scheme://localhost"e;
 * */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1634 - 0

//localhost"e;, NULL); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1719 - 0

/* if per directory, save away the single alias */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1728 - 0

/* if per server, add to the alias array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1919 - 0

/* Don't duplicate entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1941 - 0

/* Similar to set_proxy_exclude(), but defining directly connected hosts,
 * which should never be accessed via the configured ProxyRemote servers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:1955 - 0

/* Don't duplicate entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2231 - 0

/* XXX: Should this be NOT_IN_DIRECTORY|NOT_IN_FILES? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2276 - 0

/* Try to find existing worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2324 - 0

/* XXX: Should this be NOT_IN_DIRECTORY|NOT_IN_FILES? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2455 - 0

/* <ProxyMatch> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2463 - 0

/* initialize our config and fetch it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2699 - 0

/*
 * proxy Extension to mod_status
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2768 - 0

/* TODO: Add the rest of dynamic worker data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2783 - 0

/* TODO: Add the rest of dynamic worker data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2825 - 0

/* TODO */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2833 - 0

/*
 * NOTE: non-balancer members don't use shm at all...
 * after all, why should they?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2841 - 0

/* Create and initialize forward worker if defined */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2844 - 0

//www.apache.org"e;, 0); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2855 - 0

/* Mark as the "e;generic"e; worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2862 - 0

//www.apache.org"e;, 0); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2872 - 0

/* Mark as the "e;generic"e; worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2896 - 0

/* An HTTP status would be a misnomer! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2901 - 0

/* Reset workers count on gracefull restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2912 - 0

/* Only the mpm_winnt has child init hook handler.
 * make sure that we are called after the mpm
 * initializes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2919 - 0

/* handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2921 - 0

/* filename-to-URI translation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2925 - 0

/* fixups */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2927 - 0

/* post read_request handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2929 - 0

/* pre config handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2931 - 0

/* post config handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2933 - 0

/* child init handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2943 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2944 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2945 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2946 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy.c:2947 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:24 - 0

/*
 * Canonicalise http-like URLs.
 * scheme is the scheme for the URL
 * url is the URL starting with the first '/'
 * def_port is the default port for this scheme.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:37 - 0

/* ap_port_of_scheme() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:60 - 0

/*
 * now parse path/search args, according to rfc1738:
 * process the path. With proxy-nocanon set (by
 * mod_proxy) we use the raw, unparsed uri
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:66 - 0

/* this is the raw path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:85 - 0

//"e;, host, sport, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:205 - 0

/*
 * Send the AJP request to the remote server
 */

 /* send request headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:232 - 0

/* allocate an AJP message to store the data of the buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:236 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:243 - 0

/* read the first bloc of data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:247 - 0

/* The AJP protocol does not want body data yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:250 - 0

/* Get client provided Content-Length header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:257 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:265 - 0

/* have something */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:270 - 0

/* Try to send something */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:277 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:292 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:299 - 0

/*
 * It is fatal when we failed to send a (part) of the request
 * body.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:313 - 0

/*
 * We can only get here if the client closed the connection
 * to us without sending the body.
 * Now the connection is in the wrong state on the backend.
 * Sending an empty data msg doesn't help either as it does
 * not move this connection to the correct state on the backend
 * for later resusage by the next request again.
 * Close it to clean things up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:327 - 0

/* read the response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:332 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:361 - 0

/* parse the reponse */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:381 - 0

/* This is the end */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:417 - 0

/* will go in ajp_send_data_msg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:447 - 0

/* AJP13_SEND_HEADERS: process them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:466 - 0

/* AJP13_SEND_BODY_CHUNK: piece of data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:554 - 0

/* XXX: what about flush here? See mod_jk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:571 - 0

/* no response yet (or ever), set status for access log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:576 - 0

/* return DONE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:581 - 0

/*
 * We either have finished successfully or we failed.
 * So bail out
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:589 - 0

/* read the response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:612 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:622 - 0

/* We had a failure: Close connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:631 - 0

/* Our backend signalled connection close */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:715 - 0

/* If we have added something to the brigade above, send it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:730 - 0

/*
 * This handles ajp:// URLs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:757 - 0

/* create space for state information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:774 - 0

/* Step One: Determine Who To Connect To */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:783 - 0

/* Step Two: Make the Connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:792 - 0

/* Handle CPING/CPONG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:825 - 0

/* Step Three: Process the Request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:831 - 0

/* Do not close the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:844 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:845 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:846 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:847 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:848 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ajp.c:849 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:87 - 0

/*
 * now parse path/search args, according to rfc1738:
 * process the path. With proxy-noncanon set (by
 * mod_proxy) we use the raw, unparsed uri
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:93 - 0

/* this is the raw path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:132 - 0

/* Set default number of attempts to the number of
 * workers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:141 - 0

/* Retrieve the parameter with the given name
 * Something like 'JSESSIONID=12345...N'
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:156 - 0

/*
 * Session path was found, get its value
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:187 - 0

/*
 * Session cookie was found, get its value
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:204 - 0

/* Find the worker that has the 'route' defined
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:248 - 0

/* Check if the redirect worker is usable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:281 - 0

/* Try to find the sticky route inside url */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:298 - 0

/*
 * If we found a value for stickysession, find the first '.' (or whatever
 * sticky_separator is set to) within. Everything after '.' (if present)
 * is our route. 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:307 - 0

/* We have a route in path or in cookie
 * Find the worker that has this route defined.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:312 - 0

/*
 * Notice that the route of the worker chosen is different from
 * the route supplied by the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:360 - 0

/* XXX: This can perhaps be build using some
 * smarter mechanism, like tread_cond.
 * But since the statuses can came from
 * different childs, use the provided algo.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:367 - 0

/* Set the timeout to 0 so that we don't
 * end in infinite loop
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:374 - 0

/* Try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:379 - 0

/* restore the timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:391 - 0

//"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:422 - 0

/* Try if we can recover */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:476 - 0

/* Step 2: Lock the LoadBalancer
 * XXX: perhaps we need the process lock here
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:485 - 0

/* Step 3: force recovery */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:492 - 0

/* Step 4: find the session route */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:496 - 0

/* Call the LB implementation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:499 - 0

/* Use the default one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:605 - 0

/* Add the session route to request notes if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:610 - 0

/* Add session info to env. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:685 - 0

/* Recalculate lbfactors */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:687 - 0

/* Special case if there is only one worker its
 * load factor will always be 1
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:695 - 0

/* Update the status entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:718 - 0

/* post_config hook: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:743 - 0

/*
 * Get slotmem setups
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:768 - 0

/*
 * During create_proxy_config() we created a dummy id. Now that
 * we have identifying info, we can create the real id
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:810 - 0

/* Initialize shared scoreboard data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:819 - 0

/* now that we have the right id, we need to redo the sname field */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:823 - 0

/* We know this will succeed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:827 - 0

/* Create global mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:863 - 0

/* create slotmem slots for workers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:879 - 0

/* sync all timestamps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:882 - 0

/* now go thru each worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:914 - 0

/* We could have just read-in a persisted config. Force a sync. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:959 - 0

/* allow all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1009 - 0

/* is this for us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1084 - 0

/* First set the params */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1129 - 0

/* if enabling, we need to reset all lb params */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1156 - 0

/* 2 hrs enuff? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1243 - 0

/* sync all timestamps */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1266 - 0

//httpd.apache.org'>\n"e;, r); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1300 - 0

/* Start proxy_worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1347 - 0

/* Begin proxy_worker_stat */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1395 - 0

/* End proxy_worker_stat */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1503 - 0

/* the below is a safe cast, since the number of slots total will
 * never be more than max_workers, which is restricted to int */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1719 - 0

/* Only the mpm_winnt has child init hook handler.
 * make sure that we are called after the mpm
 * initializes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1725 - 0

/* manager handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1737 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1738 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1739 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1740 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1741 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_balancer.c:1742 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:79 - 0

/*
 * Set the ports CONNECT can use
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:134 - 0

/* canonicalise CONNECT URLs. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:193 - 0

/* CONNECT handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:225 - 0

/* is this for us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:249 - 0

/* Determine host/port of next hop; from request URI or of a proxy. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:253 - 0

/* Do a DNS lookup for the next hop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:264 - 0

/* Check ProxyBlock directive on the hostname/address. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:275 - 0

/* Check if it is an allowed port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:310 - 0

/* setup polling for connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:320 - 0

/* Add client side to the poll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:328 - 0

/* Add the server side to the poll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:332 - 0

/*
 * Step Three: Send the Request
 *
 * Send the HTTP/1.1 CONNECT request to the remote server
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:341 - 0

/* peer reset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:363 - 0

/* If we are connecting through a remote proxy, we need to pass
 * the CONNECT request on to it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:390 - 0

/* This is safer code, but it doesn't work yet. I'm leaving it
 * here so that I can fix it later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:402 - 0

/*
 * Step Four: Handle Data Transfer
 *
 * Handle two way transfer of data over the socket (this is a tunnel).
 */

 /* we are now acting as a tunnel - the input/output filter stacks should
 * not contain any non-connection filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:415 - 0

/* r->sent_bodyct = 1;*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:481 - 0

/*
 * Step Five: Clean Up
 *
 * Close the socket and clean up
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:512 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:513 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:514 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:515 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:516 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_connect.c:517 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:128 - 0

/* it should be go on as an internal proxy request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:212 - 0

/* the main config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:217 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:218 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:219 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:220 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:221 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_express.c:222 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:27 - 0

/*
 * Canonicalise http-like URLs.
 * scheme is the scheme for the URL
 * url is the URL starting with the first '/'
 * def_port is the default port for this scheme.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:71 - 0

/* this is the raw path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:80 - 0

//"e;, host, sport, "e;/"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:93 - 0

/* It has to be on disk for this to work */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:105 - 0

/* truncate path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:116 - 0

/* truncate path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:136 - 0

/* Wrapper for apr_socket_sendv that handles updating the worker stats. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:161 - 0

/* short circuit out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:181 - 0

/* Wrapper for apr_socket_recv that handles updating the worker stats. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:266 - 0

//"e;, 17)) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:298 - 0

/* Send envvars over in as many FastCGI records as it takes, */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:299 - 0

/* starting with the first one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:317 - 0

/* skip this envvar and continue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:321 - 0

/* only an unused element at the end of the array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:328 - 0

/* we pre-compute, so we can't run out of space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:330 - 0

/* compute and encode must be in sync */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:350 - 0

/* Envvars sent, so say we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:369 - 0

/* Try to find the end of the script headers in the response from the back
 * end fastcgi server. STATE holds the current header parsing state for this
 * request.
 *
 * Returns 0 if it can't find the end of the headers, and 1 if it found the
 * end of the headers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:544 - 0

/* Done with input data */

 /* signal EOF (empty FCGI_STDIN) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:569 - 0

/* First, we grab the header... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:635 - 0

/* suck in all the rest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:677 - 0

/* Send the part of the body that we read while
 * reading the headers.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:692 - 0

/* We're still looking for the end of the
 * headers, so this part of the data will need
 * to persist. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:723 - 0

/* XXX what if we haven't seen end of the headers yet? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:737 - 0

/* XXX Why don't we cleanup here? (logic from AJP) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:742 - 0

/* TODO: Should probably clean up this logging a bit... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:783 - 0

/* send ErrorDocument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:790 - 0

/*
 * process the request and write the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:812 - 0

/* Step 1: Send AP_FCGI_BEGIN_REQUEST */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:823 - 0

/* Step 2: Send Environment via FCGI_PARAMS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:832 - 0

/* Step 3: Read records from the back end server and handle them. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:867 - 0

/*
 * This handles fcgi:(dest) URLs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:898 - 0

/* Create space for state information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:911 - 0

/* Step One: Determine Who To Connect To */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:930 - 0

/* Step Two: Make the Connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:939 - 0

/* Step Three: Process the Request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:956 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:957 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:958 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:959 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:960 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fcgi.c:961 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:35 - 0

//"e;, 5) == 0) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:44 - 0

//"e;, path, NULL); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:132 - 0

//"e;, 5) == 0) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:177 - 0

/* Create a dummy unconnected socket, and set it as the one we were
 * connected to, so that when the core closes it, it doesn't close
 * the tcp connection to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:235 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:236 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:237 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:238 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:239 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_fdpass.c:240 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:54 - 0

/* Put these in the dir config so they work inside <Location> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:67 - 0

/* Put these in the dir config so they work inside <Location> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:115 - 0

/*
 * Decodes a '%' escaped string, and returns the number of characters
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:123 - 0

/* special case for no characters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:182 - 0

/*
 * checks an encoded ftp string for bad characters, namely, CR, LF or
 * non-ascii character
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:201 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:207 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:230 - 0

/* start with an empty string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:234 - 0

/* loop through each brigade */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:236 - 0

/* get brigade from network one line at a time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:243 - 0

/* loop through each bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:269 - 0

/* concat strings until buff is full - then throw the data away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:286 - 0

/*
 * Canonicalise ftp URLs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:296 - 0

/* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:355 - 0

/* now, rebuild URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:365 - 0

//"e;, (user != NULL) ? user : "e;"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:374 - 0

/* we chop lines longer than 80 characters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:377 - 0

/*
 * Reads response lines, returns both the ftp status code and
 * remembers the response message in the supplied buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:419 - 0

/* this is a filter that turns a raw ASCII directory listing into pretty HTML */

/* ideally, mod_proxy should simply send the raw directory list up the filter
 * stack to mod_autoindex, which in theory should turn the raw ascii into
 * pretty html along with all the bells and whistles it provides...
 *
 * all in good time...! :)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:436 - 0

/* fallback regex for ls -s1; ($0..$2) == 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:465 - 0

/* combine the stored and the new */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:471 - 0

/* By default, path is relative to the $HOME dir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:475 - 0

/*
 * In the reverse proxy case we need to construct our site string
 * via ap_construct_url. For non anonymous sites apr_uri_unparse would
 * only supply us with 'username@' which leads to the construction of
 * an invalid base href later on. Losing the username part of the URL
 * is no problem in the reverse proxy case as the browser sents the
 * credentials anyway once entered.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:487 - 0

/* Save "e;scheme://site"e; prefix without password */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:493 - 0

/* ... and path without query args */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:496 - 0

/* If path began with /%2f, change the basedir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:513 - 0

/* strip off the wildcard suffix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:516 - 0

/* Copy path, strip (all except the last) trailing slashes */
 /* (the trailing slash is needed for the dir component loop below) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:525 - 0

/* print "e;ftp://host/"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:548 - 0

/* print "e;path/"e; component */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:578 - 0

/* print README */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:588 - 0

/* make sure page intro gets sent out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:598 - 0

/* loop through each line of directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:633 - 0

/* len+1 to leave space for the trailing nil char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:639 - 0

/* EOS? jump to footer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:645 - 0

/* not complete? leave and try get some more */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:652 - 0

/* strip trailing '\n' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:654 - 0

/* strip trailing '\r' if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:658 - 0

/* a symlink? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:675 - 0

/* a directory/file? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:680 - 0

/* handle DOS dir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:695 - 0

/* erase buffer for next time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:697 - 0

/* while state is BODY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:701 - 0

/* handle filenames with spaces in 'em */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:712 - 0

/* Append a slash to the HREF link for directories */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:726 - 0

/* Try a fallback for listings in the format of "e;ls -s1"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:728 - 0

/*
 * We don't need to check for rm_eo == rm_so == -1 here since ls_regex
 * is such that $2 cannot be unset if we have a match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:739 - 0

/* re-append the newline */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:743 - 0

/* erase buffer for next time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:809 - 0

/* If cmd == NULL, we retrieve the next ftp response line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:816 - 0

/* strip off the CRLF for logging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:844 - 0

/* After logon, mode is ASCII */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:848 - 0

/* set desired type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:872 - 0

/* Allow not implemented */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:881 - 0

/* Return the current directory which we have selected on the FTP server, or NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:925 - 0

/*
 * Log failed requests if they supplied a password (log username/password
 * guessing attempts)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:961 - 0

/*
 * Handles direct access of ftp:// URLs
 * Original (Non-PASV) version from
 * Troy Morrison <spiffnet@zoom.com>
 * PASV added by Chuck
 * Filters by [Graham Leggett <minfrin@sharp.fm>]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:988 - 0

/* char *account = NULL; how to supply an account in a URL? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:993 - 0

/* after ftp login, the default is ASCII */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1001 - 0

/* stuff for PASV mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1007 - 0

/* is this for us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1012 - 0

/* proxy connections are via HTTP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1017 - 0

/* only interested in FTP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1071 - 0

/* make binary transfers the default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1087 - 0

/* Check the decoded string for special characters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1092 - 0

/*
 * Note that this allocation has to be made from r->connection->pool
 * because it has the lifetime of the connection. The other
 * allocations are temporary and can be tossed away any time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1131 - 0

/* do a DNS lookup for the destination host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1143 - 0

/*
 * get all the possible IP addresses for the destname and loop through
 * them until we get a successful connection
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1153 - 0

/* check if ProxyBlock directive on this host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1159 - 0

/* create space for state information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1170 - 0

/* TODO: see if ftp could use determine_connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1176 - 0

/*
 * II: Make the Connection -----------------------
 *
 * We have determined who to connect to. Now make the connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1199 - 0

/* Use old naming */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1242 - 0

/* Look for a number, preceded by whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1280 - 0

/* log it: user name guessing
 * attempt? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1287 - 0

/* send password */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1315 - 0

/* @@@ questionable -- we might as well return a 403 Forbidden here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1318 - 0

/* log it: passwd guessing
 * attempt? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1328 - 0

/* Special handling for leading "e;%2f"e;: this enforces a "e;cwd /"e;
 * out of the $HOME directory which was the starting point after login
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1333 - 0

/* skip leading '/' (after root %2f) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1347 - 0

/*
 * set the directory (walk directory component by component): this is
 * what we must do if we don't know the OS type of the remote machine
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1357 - 0

/* Note! This decodes a %2f -> "e;/"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1359 - 0

/* are there now any '/' characters? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1364 - 0

/* NOTE: FTP servers do globbing on the path.
 * So we need to escape the URI metacharacters.
 * We use a special glob-escaping routine to escape globbing chars.
 * We could also have extended gen_test_char.c with a special T_ESCAPE_FTP_PATH
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1411 - 0

/*
 * The EPSV command replaces PASV where both IPV4 and IPV6 is
 * supported. Only the port is returned, the IP address is always the
 * same as that on the control connection. Example: Entering Extended
 * Passive Mode (|||6446|)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1438 - 0

/* Parse the port out of the EPSV reply. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1447 - 0

/* Retrieve the client's address. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1510 - 0

/* set up data connection - PASV */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1537 - 0

/* FIXME: Check PASV against RFC1123 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1540 - 0

/* separate result code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1546 - 0

/* separate address &
 * port params */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1553 - 0

/* FIXME: Only supports IPV4 - fix in RFC2428 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1585 - 0

/* make the connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1602 - 0

/*bypass:*/

 /* set up data connection - PORT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1623 - 0

/* BS2000 has this option "e;always on"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1628 - 0

/* _OSD_POSIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1640 - 0

/* only need a short queue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1648 - 0

/* FIXME: Sent PORT here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1676 - 0

/* signal that we must use the EPRT/PORT loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1680 - 0

/* IPV6 FIXME:
 * The EPRT command replaces PORT where both IPV4 and IPV6 is supported. The first
 * number (1,2) indicates the protocol type. Examples:
 * EPRT |1|132.235.1.2|6275|
 * EPRT |2|1080::8:800:200C:417A|5282|
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1692 - 0

/*
 * V: Set The Headers -------------------
 *
 * Get the size of the request, set up the environment for HTTP.
 */

 /* set request; "e;path"e; holds last path component */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1701 - 0

/* are there now any '/' characters? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1706 - 0

/* If len == 0 then it must be a directory (you can't RETR nothing)
 * Also, don't allow to RETR by wildcard. Instead, create a dirlisting,
 * unless ProxyFtpListOnWildcard is off.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1714 - 0

/* (from FreeBSD ftpd):
 * SIZE is not in RFC959, but Postel has blessed it and
 * it will be in the updated RFC.
 *
 * Return size of file in a format suitable for
 * using with RESTART (we just count bytes).
 */
 /* from draft-ietf-ftpext-mlst-14.txt:
 * This value will
 * change depending on the current STRUcture, MODE and TYPE of the data
 * connection, or a data connection which would be created were one
 * created now. Thus, the result of the SIZE command is dependent on
 * the currently established STRU, MODE and TYPE parameters.
 */
 /* Therefore: switch to binary if the user did not specify "e;;type=a"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1741 - 0

/* Size command ok */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1749 - 0

/* Not a regular file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1806 - 0

/* switch to binary if the user did not specify "e;;type=a"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1821 - 0

/* then extract the Last-Modified time from it (YYYYMMDDhhmmss or YYYYMMDDhhmmss.xxx GMT). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1841 - 0

/* Does system have timegm()? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1844 - 0

/* does struct tm have a member tm_gmtoff? */
 /* mktime will subtract the local timezone, which is not what we want.
 * Add it again because the MDTM string is GMT
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1856 - 0

/* USE_MDTM */
/* FIXME: Handle range requests - send REST */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1894 - 0

/* Directory Listings should always be fetched in ASCII mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1924 - 0

/* Update current directory after CWD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1935 - 0

/* rc is an intermediate response for the LIST command (125 transfer starting, 150 opening data connection) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1956 - 0

/* set content-type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1965 - 0

/* We "e;trust"e; the ftp server to really serve (size) bytes... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:1994 - 0

/* set content-encoding (not for dir listings, they are uncompressed)*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2001 - 0

/* wait for connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2020 - 0

/* the transfer socket is now open, create a new connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2034 - 0

/*
 * We do not do SSL over the data connection, even if the virtual host we
 * are in might have SSL enabled
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2039 - 0

/* set up the connection filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2049 - 0

/*
 * VI: Receive the Response ------------------------
 *
 * Get response from the remote ftp socket, and pass it up the filter chain.
 */

 /* send response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2059 - 0

/* insert directory filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2063 - 0

/* send body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2070 - 0

/* read the body, pass it to the output filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2084 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2089 - 0

/* found the last brigade? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2091 - 0

/* if this is the last brigade, cleanup the
 * backend connection first to prevent the
 * backend server from hanging around waiting
 * for a slow client to eat these bytes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2103 - 0

/* signal that we must leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2107 - 0

/* if no EOS yet, then we must flush */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2113 - 0

/* try send what we read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2120 - 0

/* make sure we always clean up after ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2123 - 0

/* if we are done, leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2137 - 0

/* Retrieve the final response for the RETR or LIST commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2141 - 0

/*
 * VII: Clean Up -------------
 *
 * If there are no KeepAlives, or if the connection has been signalled to
 * close, close the socket and clean up
 */

 /* finish */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2162 - 0

/* hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2165 - 0

/* filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2168 - 0

/* Compile the output format of "e;ls -s1"e; as a fallback for non-unix ftp listings */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2187 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2188 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2189 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2190 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2191 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_ftp.c:2192 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:37 - 0

/* parsed expression */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:45 - 0

/* TODO: Make below array/hashtable tagged to each worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:71 - 0

//%s:%d"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:84 - 0

/* Mark as the "e;generic"e; worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:89 - 0

/* tuck away since we need the preparsed address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:111 - 0

/*
 * normally, this is done in ap_proxy_determine_connection().
 * TODO: Look at using ap_proxy_determine_connection() with a
 * fake request_rec
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:130 - 0

/*
 * This serves double duty by not only validating (and creating)
 * the health-check template, but also ties into set_worker_param()
 * which does the actual setting of worker params in shm.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:256 - 0

/* get expr. Allow fancy new {...} quoting style */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:267 - 0

/* get rid of recently pushed (bad) condition */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:318 - 0

/* get rid of recently pushed (bad) template */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:389 - 0

/* TODO Honor fails and passes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:449 - 0

/* s = s->next; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:521 - 0

/* the main config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:526 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:527 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:528 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:529 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:530 - 0

/* table of config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_hcheck.c:531 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:31 - 0

/*
 * Canonicalise http-like URLs.
 * scheme is the scheme for the URL
 * url is the URL starting with the first '/'
 * def_port is the default port for this scheme.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:45 - 0

/* ap_port_of_scheme() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:81 - 0

/* wtf are we doing here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:84 - 0

/* this is the raw path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:108 - 0

//"e;, host, sport, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:133 - 0

/*
 * Parse this, suckers!
 *
 * Warning = "e;Warning"e; "e;:"e; 1#warning-value
 *
 * warning-value = warn-code SP warn-agent SP warn-text
 * [SP warn-date]
 *
 * warn-code = 3DIGIT
 * warn-agent = ( host [ "e;:"e; port ] ) | pseudonym
 * ; the name or pseudonym of the server adding
 * ; the Warning header, for use in debugging
 * warn-text = quoted-string
 * warn-date = <"e;> HTTP-date <"e;>
 *
 * Buggrit, use a bloomin' regexp!
 * (\d{3}\s+\S+\s+\"e;.*?\"e;(\s+\"e;(.*?)\"e;)?) --> whole in $1, date in $3
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:156 - 0

/* OK, we have a date here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:224 - 0

/* add empty line at the end of the headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:254 - 0

/* must be here due to transient bucket. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:258 - 0

/* If this brigade contains EOS, either stop or remove it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:262 - 0

/* The request is flushed below this loop with the EOS chunk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:265 - 0

/* We can't pass this EOS to the output_filters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:281 - 0

/*
 * Append the end-of-chunk CRLF
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:289 - 0

/* we never sent the header brigade, so go ahead and
 * take care of that now
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:345 - 0

/* we never sent the header brigade because there was no request body;
 * send it now
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:352 - 0

/* input brigade still has an EOS which we can't pass to the output_filters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:361 - 0

/* <trailers> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:371 - 0

/* Now we have headers-only, or the chunk EOS mark; flush it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:417 - 0

/* If this brigade contains EOS, either stop or remove it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:421 - 0

/* Once we hit EOS, we are ready to flush. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:424 - 0

/* We can't pass this EOS to the output_filters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:455 - 0

/* we never sent the header brigade, so go ahead and
 * take care of that now
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:517 - 0

/* we never sent the header brigade since there was no request
 * body; send it now with the flush flag
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:554 - 0

/* If this brigade contains EOS, either stop or remove it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:558 - 0

/* We can't pass this EOS to the output_filters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:577 - 0

/* can't spool any more in memory; write latest brigade to disk */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:777 - 0

/* XXX: Why DON'T sub-requests use keepalives? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:824 - 0

/* ap_get_brigade may return success with an empty brigade
 * for a non-blocking read which would block
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:909 - 0

/* The whole thing fit, so our decision is trivial, use
 * the filtered bytes read from the client for the request
 * body Content-Length.
 *
 * If we expected no body, and read no body, do not set
 * the Content-Length.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:969 - 0

/*
 * Handle Connection: header if we do HTTP/1.1 request:
 * If we plan to close the backend connection sent Connection: close
 * otherwise sent Connection: Keep-Alive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1000 - 0

/* send the request body, if any. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1011 - 0

/* Prefetch has spooled the whole body, simply forward it now.
 * This is all a single brigade, pass with flush flagged.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1018 - 0

/* shouldn't be possible */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1025 - 0

/* apr_status_t value has been logged in lower level method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1036 - 0

/*
 * If the date is a valid RFC 850 date or asctime() date, then it
 * is converted to the RFC 1123 format.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1183 - 0

/* Nope, it wasn't even an extra HTTP header. Give up. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1218 - 0

/* XXX: RFC2068 defines only SP and HT as whitespace, this test is
 * wrong... and so are many others probably.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1222 - 0

/* Skip to start of value */

 /* should strip trailing whitespace as well */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1235 - 0

/* the header was too long; at the least we should skip extra data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1239 - 0

/* soak up the extra data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1241 - 0

/* time to exit the larger loop as well */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1308 - 0

/* non-zero whilst interim 1xx responses
 * are being read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1347 - 0

/* Get response from the remote server, and pass it up the
 * filter chain
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1352 - 0

/* In case anyone needs to know, this is a fake request that is really a
 * response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1366 - 0

/* handle one potential stray CRLF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1407 - 0

/* Mark the backend connection for closing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1424 - 0

/* XXX: Is this a real headers length send from remote? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1437 - 0

/* If not an HTTP/1 message or
 * if the status line was > 8192 bytes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1457 - 0

/* 2616 requires the space in Status-Line; the origin
 * server may have sent one but ap_rgetline_core will
 * have stripped it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1465 - 0

/* The status out of the front is the same as the status coming in
 * from the back, until further notice.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1483 - 0

/* shove the headers direct into r->headers_out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1504 - 0

/* Now, add in the just read cookies */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1508 - 0

/* and now load 'em all in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1516 - 0

/* can't have both Content-Length and Transfer-Encoding */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1536 - 0

/*
 * Save a possible Transfer-Encoding header as we need it later for
 * ap_http_filter to know where to end.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1542 - 0

/* strip connection listed hop-by-hop headers from response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1564 - 0

/* Delete warnings with wrong date */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1567 - 0

/* handle Via header in response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1570 - 0

/* If USE_CANONICAL_NAME_OFF was configured for the proxy virtual host,
 * then the server name returned by ap_get_server_name() is the
 * origin server name (which does make too much sense with Via: headers)
 * so we use the proxy vhost's name instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1577 - 0

/* create a "e;Via:"e; response header entry and merge it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1600 - 0

/* an http/0.9 response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1609 - 0

/* Reset to old timeout iff we've adjusted it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1692 - 0

/* PR 41646: get HEAD right with ProxyErrorOverride */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1699 - 0

/* Discard body, if one is expected */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1700 - 0

/* not HEAD request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1701 - 0

/* not 204 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1702 - 0

/* not 304 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1704 - 0

/* Add minimal headers needed to allow http_in filter
 * detecting end of body without waiting for a timeout. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1726 - 0

/* send body - but only if a body is expected */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1727 - 0

/* not HEAD request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1728 - 0

/* not any 1xx response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1729 - 0

/* not 204 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1756 - 0

/* read the body, pass it to the output filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1779 - 0

/* ap_get_brigade will return success with an empty brigade
 * for a non-blocking read which would block: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1784 - 0

/* flush to the client and switch to blocking mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1814 - 0

/* In this case, we are in real trouble because
 * our backend bailed on us. Given we're half way
 * through a response, our only option is to
 * disconnect the client too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1830 - 0

/* next time try a non-blocking read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1847 - 0

/* sanity check */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1852 - 0

/* Switch the allocator lifetime of the buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1855 - 0

/* found the last brigade? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1858 - 0

/* signal that we must leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1861 - 0

/* the brigade may contain transient buckets that contain
 * data that lives only as long as the backend connection.
 * Force a setaside so these transient buckets become heap
 * buckets that live as long as the request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1872 - 0

/* finally it is safe to clean up the brigade from the
 * connection pool, as we have forced a setaside on all
 * buckets.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1891 - 0

/* try send what we read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1906 - 0

/* make sure we always clean up after ourselves */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1927 - 0

/* Pass EOS bucket down the filter chain. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:1944 - 0

/* See define of AP_MAX_INTERIM_RESPONSES for why */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2005 - 0

/* find the scheme */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2012 - 0

/* scheme is lowercase */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2014 - 0

/* is it for us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2028 - 0

/* only interested in HTTP, or FTP via proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2039 - 0

/* create space for state information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2068 - 0

/* Step One: Determine Who To Connect To */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2109 - 0

/* Step One (again): (Re)Determine Who To Connect To */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2122 - 0

/* Step Two: Make the Connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2131 - 0

/* Step Three: Create conn_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2139 - 0

/*
 * On SSL connections set a note on the connection what CN is
 * requested, such that mod_ssl can check if it is requested to do
 * so.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2150 - 0

/* Step Three-and-a-Half: See if the socket is still connected (if
 * desired). Note: Since ap_proxy_connect_backend just above does
 * the same check (unconditionally), this step is not required when
 * backend's socket/connection is reused (ie. no Step Three).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2166 - 0

/* Don't recycle the connection if prefetch (above) told not to do so */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2195 - 0

/* Step Five: Receive the Response... Fall thru to cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2202 - 0

/* Step Six: Clean Up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2212 - 0

/* post_config hook: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2217 - 0

/* proxy_http_post_config() will be called twice during startup. So, don't
 * set up the static data the 1st time through. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2246 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2247 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2248 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2249 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2250 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_http.c:2251 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:48 - 0

/* just protect from typos */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:61 - 0

/* target URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:62 - 0

/* type of request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:126 - 0

/* count for stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:129 - 0

/* Change the current bucket to refer to what we read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:132 - 0

/* note the real buffer size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:174 - 0

/*
 * Canonicalize scgi-like URLs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:183 - 0

//"e;, sizeof(SCHEME) + 2)) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:186 - 0

/* Keep slashes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:214 - 0

//"e;, host, sport, "e;/"e;, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:243 - 0

/* count for stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:253 - 0

/*
 * Send SCGI header block
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:296 - 0

/* 1 == , */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:329 - 0

/*
 * Send request body (if any)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:358 - 0

/*
 * Fetch response from backend and pass back to the front
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:423 - 0

/* default === On */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:461 - 0

/*
 * Internal redirect / subrequest handler, working on request_status hook
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:478 - 0

/* keep HEAD, which is passed around as M_GET, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:496 - 0

/*
 * We don't touch Content-Length here. It might be
 * borked (there's plenty of room for a race condition).
 * Either the backend sets it or it's gonna be chunked.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:523 - 0

/*
 * This handles scgi:(dest) URLs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:536 - 0

//"e;, sizeof(SCHEME) + 2)) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:542 - 0

/* Create space for state information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:550 - 0

/* Step One: Determine Who To Connect To */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:558 - 0

/* Step Two: Make the Connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:567 - 0

/* Step Three: Process the Request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:577 - 0

/* always close the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:588 - 0

/* === default (off) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:589 - 0

/* === default (on) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:667 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:668 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:669 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:670 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:671 - 0

/* command table */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_scgi.c:672 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:36 - 0

/* required to release the proxy connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:149 - 0

/* new handshake expected on each back-conn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:156 - 0

/* don't touch baton or r after here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:171 - 0

/* Invoked by the event loop when data is ready on either end. 
 * Pump both ends until they'd block and then start over again 
 * We don't need the invoke_mtx, since we never put multiple callback events
 * in the queue.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:199 - 0

/*
 * Canonicalise http-like URLs.
 * scheme is the scheme for the URL
 * url is the URL starting with the first '/'
 * def_port is the default port for this scheme.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:213 - 0

/* ap_port_of_scheme() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:242 - 0

/*
 * now parse path/search args, according to rfc1738:
 * process the path. With proxy-nocanon set (by
 * mod_proxy) we use the raw, unparsed uri
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:248 - 0

/* this is the raw path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:264 - 0

//"e;, host, sport, 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:327 - 0

/*
 * process the request and write the response.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:407 - 0

/* This handler should take care of the entire connection; make it so that
 * nothing else is attempted on the connection after returning. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:439 - 0

/* force no async */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:459 - 0

/*
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:499 - 0

/* create space for state information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:516 - 0

/* Step One: Determine Who To Connect To */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:525 - 0

/* Step Two: Make the Connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:533 - 0

/* Step Three: Create conn_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:540 - 0

/* must be after ap_proxy_determine_connection */

 /* Step Three: Process the Request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:548 - 0

/* Do not close the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:560 - 0

/* no timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:602 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:603 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:604 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:605 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:606 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_proxy_wstunnel.c:607 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:48 - 0

/* name -> serf_cluster_t* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:96 - 0

/* TODO: return code? bleh */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:204 - 0

/* XXXXX: Special Treatment required for MANY other headers. fixme.*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:252 - 0

/* get the per-request bucket allocator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:255 - 0

/* Create a barrier so the response doesn't eat us! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:314 - 0

/* TODO: improve */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:325 - 0

/* TODO: make APR bucket <-> serf bucket stuff more magical. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:343 - 0

/* XXXX: Should we send a flush now? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:402 - 0

/* TOOD: rewrite drive_serf to make it async */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:409 - 0

/* XXXXX: make persistent/per-process or something.*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:416 - 0

/* Allocate everything out of a subpool, with a shorter lifetime than
 * the main request, so that we can cleanup safely and remove our events
 * from the main serf context in the async mpm mode.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:429 - 0

/* TODO: could this be optimized in post-config to pre-setup the
 * pointers to the right cluster inside the conf structure?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:472 - 0

/* TOOD: restructure try all servers in the array !! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:527 - 0

/* TODO: create custom serf bucket, which does async request body reads */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:542 - 0

/* FIXME: ap_get_client_block() returns long, not apr_status_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:567 - 0

/* XXX: Is it correct that we don't use the returned serf_request_t? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:577 - 0

/* XXXX: Handle timeouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:637 - 0

/* XXXX: These are bugs in apr_uri_parse. Fixme. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:662 - 0

/* SerfCluster <name> <provider> <key=value_params_to_provider> ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:826 - 0

/* Split the string in two */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:827 - 0

/* Skip passed the = */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:875 - 0

/* comment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:881 - 0

/* line format: <IP> <query_string>\n */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/mod_serf.c:1075 - 0

/* TODO: support order=random */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:28 - 0

/* for getpid() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:40 - 0

/* for apr_wait_for_io_or_timeout() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:51 - 0

/* Use SSL Tunneling via HTTP CONNECT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:52 - 0

/* Target hostname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:53 - 0

/* Target port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:99 - 0

/* special case handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:146 - 0

/*APR_CHARSET_EBCDIC*/
 /*
 * we assume that the hex value refers to an ASCII character
 * so convert to EBCDIC so that it makes sense locally;
 *
 * example:
 *
 * client specifies %20 in URL to refer to a space char;
 * at this point we're called with EBCDIC "e;20"e;; after turning
 * EBCDIC "e;20"e; into binary 0x20, we then need to assume that 0x20
 * represents an ASCII char and convert 0x20 to EBCDIC, yielding
 * 0x40
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:169 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:193 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:206 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:209 - 0

/*
 * canonicalise a URL-encoded string
 */

/*
 * Convert a URL-encoded string to canonical form.
 * It decodes characters which need not be encoded,
 * and encodes those which must be encoded, and does not touch
 * those which must not be touched.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:225 - 0

/* characters which should not be encoded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:226 - 0

/* characters which much not be en/de-coded */

/*
 * N.B. in addition to :@&=, this allows ';' in an http path
 * and '?' in an ftp path -- this may be revised
 *
 * Also, it makes a '+' character in a search string reserved, as
 * it may be form-encoded. (Although RFC 1738 doesn't allow this -
 * it only permits ; / ? : @ = & as reserved chars.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:248 - 0

/* if (t == enc_parm) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:265 - 0

/* always handle '/' first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:281 - 0

/* keep it encoded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:328 - 0

/* skip separating '/' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:331 - 0

/* find _last_ '@' since it might occur in user/password part */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:339 - 0

/* find password */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:369 - 0

/* only update caller's port if port was specified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:373 - 0

/* DNS names are case-insensitive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:412 - 0

/* Set url to the first char after "e;scheme://"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:417 - 0

/* make it point to "e;//"e;, which is what proxy_canon_netloc expects */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:427 - 0

/* ought to return the port, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:430 - 0

/* Return TRUE if addr represents an IP address (or an IP network address) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:458 - 0

/* netmask starts here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:463 - 0

/* no digit at start of quad */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:468 - 0

/* expected a digit, found something else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:473 - 0

/* invalid octet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:480 - 0

/* after the 4th quad, a dot would be illegal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:488 - 0

/* net mask follows: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:495 - 0

/* expected a digit, found something else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:521 - 0

/* every zero-byte counts as 8 zero-bits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:524 - 0

/* no warning for fully qualified IP address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:547 - 0

/* okay iff we've parsed the whole string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:551 - 0

/* Return TRUE if addr represents an IP address (or an IP network address) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:558 - 0

/* oops! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:607 - 0

/* Try to deal with multiple IP addr's for a host */
 /* FIXME: This needs to be able to deal with IPv6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:639 - 0

/* Return TRUE if addr represents a domain name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:645 - 0

/* Domain name must start with a '.' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:650 - 0

/* rfc1035 says DNS names must consist of "e;[-a-zA-Z0-9]"e; and '.' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:667 - 0

/* Strip trailing dots */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:676 - 0

/* Return TRUE if host "e;host"e; is in domain "e;domain"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:700 - 0

/* Return TRUE if host represents a host name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:707 - 0

/* Host names must not start with a '.' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:711 - 0

/* rfc1035 says DNS names must consist of "e;[-a-zA-Z0-9]"e; and '.' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:720 - 0

/* Strip trailing dots */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:729 - 0

/* Return TRUE if host "e;host"e; is equal to host2 "e;host2"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:738 - 0

/* oops! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:747 - 0

/* Try to deal with multiple IP addr's for a host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:766 - 0

/* Return TRUE if addr is to be matched as a word */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:773 - 0

/* Return TRUE if string "e;str2"e; occurs literally in "e;str1"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:802 - 0

/* No IP address checks if no IP address was passed in,
 * i.e. the forward address proxy case, where this server does
 * not resolve the hostname. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:833 - 0

/* set up the minimal filter set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:923 - 0

//"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:977 - 0

/*
 * Find the match and replacement, but save replacing until we've done
 * both path and domain so we know the new strlen
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1060 - 0

/* no change */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1096 - 0

/* remove path from uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1157 - 0

/* remove path from uri */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1165 - 0

/*
 * NOTE: The default method is byrequests - if it doesn't
 * exist, that's OK at this time. We check when we share and sync
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1188 - 0

/*
 * We do the below for verification. The real sname will be
 * done post_config
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1204 - 0

/* impossible valid input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1238 - 0

/* the below should always succeed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1250 - 0

/* Retrieve a UUID and store the nonce for the lifetime of
 * the process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1282 - 0

/* Re-open the mutex for the child. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1293 - 0

/* now attach */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1313 - 0

/*
 * CONNECTION related...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1347 - 0

/*
 * Alloc from the same pool as worker.
 * proxy_conn_pool is permanently attached to the worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1368 - 0

/*
 * If the connection pool is NULL the worker
 * cleanup has been run. Just return.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1390 - 0

/* determine if the connection need to be closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1416 - 0

/* Always return the SUCCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1455 - 0

/* reslist constructor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1491 - 0

/* reslist destructor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1497 - 0

/* Destroy the pool only if not called from reslist_destroy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1506 - 0

/*
 * WORKER related...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1514 - 0

/* just in case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1548 - 0

/* NUL is an invalid char! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1588 - 0

/*
 * We need to find the start of the path and
 * therefore we know the length of the scheme://hostname/
 * part to we can force-lowercase everything up to
 * the start of the path.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1683 - 0

/* so we get the scheme for the uds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1697 - 0

/* allow for unix:/path|http: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1721 - 0

/* recall that we get a ptr to the ptr here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1730 - 0

/* we need to allocate space here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1735 - 0

/* right here we just want to tuck away the worker info.
 * if called during config, we don't have shm setup yet,
 * so just note the info for later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1739 - 0

/* will be freed ap_proxy_share_worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1826 - 0

/* was malloced in ap_proxy_define_worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1860 - 0

/* Set default parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1864 - 0

/* By default address is reusable unless DisableReuse is set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1874 - 0

/* Set hard max to no more then mpm_threads */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1881 - 0

/* Set min to be lower then smax */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1887 - 0

/* This will supress the apr_reslist creation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1892 - 0

/* What if local is init'ed and shm isn't?? Even possible? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1903 - 0

/* Now init local worker data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1938 - 0

/* Set the acquire timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:1989 - 0

/*
 * In the case of the reverse proxy, we need to see if we
 * were passed a UDS url (eg: from mod_proxy) and adjust uds_path
 * as required. 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2010 - 0

/* so we get the scheme for the uds */
 /* r->filename starts w/ "e;proxy:"e;, so add after that */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2074 - 0

/* All the workers are busy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2142 - 0

/* Set a timeout on the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2156 - 0

/* Make a copy since apr_socket_bind() could change
 * conf->source_address, which we don't want.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2170 - 0

/* make the connection out of the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2196 - 0

/* Retry the worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2211 - 0

/* create the new connection if the previous was destroyed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2314 - 0

/* use (*conn)->pool instead of worker->cp->pool to match lifetime */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2323 - 0

/* should never happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2329 - 0

/*
 * In UDS cases, some structs are NULL. Protect from de-refs
 * and provide info for logging at the same time.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2381 - 0

/*
 * Only do a lookup if we should not reuse the backend address.
 * Otherwise we will look it up once for the worker.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2394 - 0

/*
 * Looking up the backend address for the worker only makes sense if
 * we can reuse the address.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2404 - 0

/*
 * Worker can have the single constant backend adress.
 * The single DNS lookup is used once per worker.
 * If dynamic change is needed then set the addr to NULL
 * inside dynamic config to force the lookup.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2424 - 0

/* Close a possible existing socket if we are told to do so */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2436 - 0

/* Get the server port for the Via headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2447 - 0

/* check if ProxyBlock directive on this host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2461 - 0

/*
 * In the case of ProxyPreserveHost on use the hostname of
 * the request if present otherwise use the one from the
 * backend request URI.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2477 - 0

/*
 * Close if a SNI is in use but this request requires no or
 * a different one, or no SNI is in use but one is required.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2549 - 0

/* save timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2551 - 0

/* set no timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2554 - 0

/* put back old timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2564 - 0

/* USE_ALTERNATE_IS_CONNECTED */


/*
 * Send a HTTP CONNECT request to a forward proxy.
 * The proxy is given by "e;backend"e;, the target server
 * is contained in the "e;forward"e; member of "e;backend"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2589 - 0

/* Create the CONNECT request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2606 - 0

/* Receive the whole CONNECT response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2608 - 0

/* Read until we find the end of the headers or run out of buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2634 - 0

/* Check for HTTP_OK response status */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2637 - 0

/* Only scan for three character status code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2644 - 0

/* Extract the returned code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2664 - 0

/* TODO: In APR 2.x: Extend apr_sockaddr_t to possibly be a path !!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2686 - 0

/* copy the UDS path (including NUL) to the sockaddr_un */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2722 - 0

/* the local address to use for the outgoing connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2811 - 0

/* Set a timeout for connecting to the backend on the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2824 - 0

/* Set a keepalive option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2849 - 0

/* make the connection out of the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2872 - 0

/* Set a timeout on the socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:2997 - 0

/*
 * The socket is now open, create a new backend server connection
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3013 - 0

/* XXX: Will be closed when proxy_conn is closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3018 - 0

/* For ssl connection to backend */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3037 - 0

/*
 * save the timeout of the socket because core_pre_connection
 * will set it to base_server->timeout
 * (core TimeOut directive).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3043 - 0

/* set up the connection filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3110 - 0

/* FNV model */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3119 - 0

/* method == PROXY_HASHFUNC_DEFAULT */
 /* SDBM model */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3203 - 0

/* account for possible "e;holes"e; in the slotmem
 * (eg: slots 0-2 are used, but 3 isn't, but 4-5 is)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3382 - 0

/*
 * According to RFC 2616 8.2.3 we are not allowed to forward an
 * Expect: 100-continue to an HTTP/1.0 server. Instead we MUST return
 * a HTTP_EXPECTATION_FAILED
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3422 - 0

/* don't want to use r->hostname, as the incoming header might have a
 * port attached
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3455 - 0

/* handle Via */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3457 - 0

/* Block all outgoing Via: headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3461 - 0

/* If USE_CANONICAL_NAME_OFF was configured for the proxy virtual host,
 * then the server name returned by ap_get_server_name() is the
 * origin server name (which does make too much sense with Via: headers)
 * so we use the proxy vhost's name instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3468 - 0

/* Create a "e;Via:"e; request header entry and merge it */
 /* Generate outgoing Via: header with/without server comment: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3484 - 0

/* Use HTTP/1.1 100-Continue as quick "e;HTTP ping"e; test
 * to backend
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3500 - 0

/* fast path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3530 - 0

/* Add X-Forwarded-For: so that the upstream has a chance to
 * determine, where the original request came from.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3536 - 0

/* Add X-Forwarded-Host: so that upstream knows what the
 * original request hostname was.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3543 - 0

/* Add X-Forwarded-Server: so that upstream knows what the
 * name of this proxy server is (if there are more than one)
 * XXX: This duplicates Via: - do we strictly need it?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3557 - 0

/* send request headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3591 - 0

/* Skip Transfer-Encoding and Content-Length for now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3669 - 0

/* Fill in unknown schemes from apr_uri_port_of_scheme() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/proxy/proxy_util.c:3681 - 0

/* unknown port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:47 - 0

/**
 * Should the session be included within this URL.
 *
 * This function tests whether a session is valid for this URL. It uses the
 * include and exclude arrays to determine whether they should be included.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:58 - 0

/* defaults to included */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:83 - 0

/**
 * Load the session.
 *
 * If the session doesn't exist, a blank one will be created.
 *
 * @param r The request
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:100 - 0

/* is the session enabled? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:105 - 0

/* should the session be loaded at all? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:112 - 0

/* load the session from the session hook */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:134 - 0

/* having a session we cannot decode is just as good as having
 none at all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:153 - 0

/* make sure the expiry and maxage are set, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:186 - 0

/* sanity checks, should we try save at all? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:200 - 0

/* reset the expiry back to maxage, if the expiry is present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:211 - 0

/* don't save if the only change is the expiry by a small amount */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:222 - 0

/* encode the session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:231 - 0

/* try the save */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:337 - 0

/**
 * Default identity encoding for the session.
 *
 * By default, the name value pairs in the session are URLEncoded, separated
 * by equals, and then in turn separated by ampersand, in the format of an
 * html form.
 *
 * This was chosen to make it easy for external code to unpack a session,
 * should there be a need to do so.
 *
 * @param r The request pointer.
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:393 - 0

/* sanity check - anything to decode? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:398 - 0

/* decode what we have */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:446 - 0

/* save all the sessions in all the requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:464 - 0

/* if a header was specified, insert the new values from the header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:486 - 0

/* remove ourselves from the filter chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:489 - 0

/* send the data up the stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:494 - 0

/**
 * Insert the output filter.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:697 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:698 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:699 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:700 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:701 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session.c:702 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:27 - 0

/**
 * Structure to carry the per-dir session config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:63 - 0

/* create RFC2109 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:76 - 0

/* create RFC2965 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:121 - 0

/* find the first redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:125 - 0

/* find the main request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:130 - 0

/* is our session in a cookie? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:141 - 0

/* first look in the notes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:149 - 0

/* otherwise, try parse the cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:152 - 0

/* create a new session and return it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:159 - 0

/* put the session in the notes so we don't have to parse it again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:199 - 0

/**
 * Sanity check a given string that it exists, is not empty,
 * and does not contain special characters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:277 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:278 - 0

/* dir merger --- default is to
 * override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:280 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:281 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:282 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_cookie.c:283 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:19 - 0

/* for apr_base64_decode et al */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:35 - 0

/* for apr_*_crypt et al */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:41 - 0

/**
 * Structure to carry the per-dir session config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:51 - 0

/**
 * Structure to carry the server wide session config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:60 - 0

/**
 * Initialise the encryption as per the current config.
 *
 * Returns APR_SUCCESS if successful.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:117 - 0

/**
 * Encrypt the string given as per the current config.
 *
 * Returns APR_SUCCESS if successful.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:139 - 0

/* by default, return an empty string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:147 - 0

/* use a uuid as a salt value, and prepend it to our result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:154 - 0

/* encrypt using the first passphrase in the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:185 - 0

/* encrypt the given string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:201 - 0

/* prepend the salt and the iv to the result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:207 - 0

/* base64 encode the result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:219 - 0

/**
 * Decrypt the string given as per the current config.
 *
 * Returns APR_SUCCESS if successful.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:239 - 0

/* strip base64 from the string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:249 - 0

/* try each passphrase in turn */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:255 - 0

/* encrypt using the first passphrase in the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:281 - 0

/* sanity check - decoded too short? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:289 - 0

/* bypass the salt at the start of the decoded block */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:301 - 0

/* bypass the iv at the start of the decoded block */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:305 - 0

/* decrypt the given string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:336 - 0

/**
 * Crypto encoding for the session.
 *
 * @param r The request pointer.
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:366 - 0

/**
 * Crypto decoding for the session.
 *
 * @param r The request pointer.
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:398 - 0

/**
 * Initialise the SSL in the post_config hook.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:489 - 0

/* default cipher AES256-SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:634 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:635 - 0

/* dir merger --- default is to override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:636 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:637 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:638 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_crypto.c:639 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:30 - 0

/**
 * Structure to carry the per-dir session config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:54 - 0

/**
 * Initialise the database.
 *
 * If the mod_dbd module is missing, this method will return APR_EGENERAL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:95 - 0

/**
 * Load the session by the key specified.
 *
 * The session value is allocated using the passed apr_pool_t.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:181 - 0

/* is our session in a cookie? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:195 - 0

/* first look in the notes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:203 - 0

/* load anonymous sessions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:206 - 0

/* load an RFC2109 or RFC2965 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:217 - 0

/* load named session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:227 - 0

/* otherwise not for us */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:232 - 0

/* create a new session and return it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:245 - 0

/* put the session in the notes so we don't have to parse it again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:255 - 0

/**
 * Save the session by the key specified.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:291 - 0

/*
 * if some rows were updated it means a session existed and was updated,
 * so we are done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:320 - 0

/*
 * if some rows were inserted it means a session was inserted, so we are
 * done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:336 - 0

/**
 * Remove the session by the key specified.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:390 - 0

/**
 * Save the session by firing off a dbd query.
 *
 * If the session is anonymous, save the session and write a cookie
 * containing the uuid.
 *
 * If the session is keyed to the username, save the session using
 * the username as a key.
 *
 * On success, this method will return APR_SUCCESS.
 *
 * @param r The request pointer.
 * @param z A pointer to where the session will be written.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:411 - 0

/* support anonymous sessions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:415 - 0

/* if the session is new or changed, make a new session ID */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:430 - 0

/* save the session with the uuid as key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:441 - 0

/* create RFC2109 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:447 - 0

/* create RFC2965 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:457 - 0

/* save named session */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:487 - 0

/* TODO handle housekeeping */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:532 - 0

/**
 * Sanity check a given string that it exists, is not empty,
 * and does not contain special characters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:633 - 0

/* dir config creater */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:634 - 0

/* dir merger --- default is to
 * override */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:636 - 0

/* server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:637 - 0

/* merge server config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:638 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/session/mod_session_dbd.c:639 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:26 - 0

/* per segment name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:27 - 0

/* data set start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:28 - 0

/* size of each memory slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:29 - 0

/* number of mem slots */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:30 - 0

/* per segment global pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:31 - 0

/* in-use flag table*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:32 - 0

/* type-specific flags */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:33 - 0

/* location of next allocated segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:37 - 0

/* global pool and list of slotmem we are handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:80 - 0

/* first try to attach to existing slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:98 - 0

/* create the memory using the gpool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:104 - 0

/* For the chained slotmem stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:134 - 0

/* first try to attach to existing slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:188 - 0

/* bounds check? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:214 - 0

/* bounds check? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:328 - 0

/* XXX: static const char * const prePos[] = { "e;mod_slotmem.c"e;, NULL }; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:336 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:337 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:338 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:339 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:340 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_plain.c:341 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:28 - 0

/* for ap_mpm_query() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:34 - 0

/* The description of the slots to reuse the slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:36 - 0

/* size of each memory slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:37 - 0

/* number of mem slots */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:38 - 0

/* type-specific flags */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:45 - 0

/* file based SHM path/name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:46 - 0

/* persisted file path/name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:47 - 0

/* filebased? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:48 - 0

/* ptr to memory segment (apr_shm_t *) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:49 - 0

/* data set start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:50 - 0

/* per segment global pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:51 - 0

/* in-use flag table*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:52 - 0

/* slot free count for this instance */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:53 - 0

/* persist dataset start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:54 - 0

/* per slot desc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:55 - 0

/* location of next allocated segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:58 - 0

/*
 * Memory layout:
 * sharedslotdesc_t | num_free | slots | isuse array |
 * ^ ^
 * | . base
 * . persist (also num_free)
 */

/* global pool and list of slotmem we are handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:99 - 0

/*
 * Persist the slotmem in a file
 * slotmem name and file name.
 * none : no persistent data
 * rel_name : $server_root/rel_name
 * /abs_name : $abs_name
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:117 - 0

/* Each generation needs its own file name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:123 - 0

/* Reuse the same file name for each generation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:292 - 0

/* apr_pool_destroy(gpool); */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:347 - 0

/* first try to attach to existing slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:371 - 0

/* first try to attach to existing shared memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:385 - 0

/* check size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:438 - 0

/* just in case, re-zero */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:446 - 0

/* For the chained slotmem stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:479 - 0

/* void *slotmem = NULL; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:498 - 0

/* first try to attach to existing slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:519 - 0

/* next try to attach to existing shared memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:525 - 0

/* Read the description of the slotmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:530 - 0

/* For the chained slotmem stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:604 - 0

/* bounds check? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:631 - 0

/* bounds check? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:756 - 0

/* make the storage usuable from outside */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:762 - 0

/* initialise the global pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:768 - 0

/* Add the pool_clean routine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:775 - 0

/*
 * Make sure the shared memory is cleaned
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:803 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:804 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:805 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:806 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:807 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/slotmem/mod_slotmem_shm.c:808 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:45 - 0

/*
 * the table of configuration directives we provide
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:64 - 0

/*
 * Global (main-server) context configuration directives
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:83 - 0

/*
 * Per-server context configuration directives
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:175 - 0

/*
 * Proxy configuration for remote SSL connections
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:225 - 0

/*
 * Per-directory context configuration directives
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:258 - 0

/*
 * OCSP Stapling options
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:300 - 0

/*
 * the various processing hooks
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:305 - 0

/*
 * Try to kill the internals of the SSL library.
 */
 /* Corresponds to OPENSSL_load_builtin_modules():
 * XXX: borrowed from apps.h, but why not CONF_modules_free()
 * which also invokes CONF_modules_finish()?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:313 - 0

/* Corresponds to SSL_library_init: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:372 - 0

/*
 * Let us cleanup the ssl library when the module is unloaded
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:378 - 0

/* Register us to handle mod_log_config %c/%x variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:381 - 0

/* Register to handle mod_status status page generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:384 - 0

/* Register mutex type names so they can be configured with Mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:477 - 0

/*
 * Seed the Pseudo Random Number Generator (PRNG)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:484 - 0

/*
 * Create a new SSL connection with the configured server SSL context and
 * attach this to the socket. Additionally we register this attachment
 * so we can detach later.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:497 - 0

/* XXX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:517 - 0

/* XXX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:521 - 0

/* will be request_rec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:575 - 0

/*
 * Create SSL context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:586 - 0

/*
 * Remember the connection information for
 * later access inside callback functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:603 - 0

/* On an active SSL connection, let the input filters initialize
 * themselves which triggers the handshake, which again triggers
 * all kinds of useful things such as SNI and ALPN.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:618 - 0

/*
 * the module registration phase
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:624 - 0

/* ssl_hook_ReadReq needs to use the BrowserMatch settings so must
 * run after mod_setenvif's post_read_request hook. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:667 - 0

/* create per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:668 - 0

/* merge per-dir config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:669 - 0

/* create per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:670 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:671 - 0

/* table of configuration directives */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl.c:672 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:116 - 0

/* ct_server_cert_info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:126 - 0

/* default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:135 - 0

/* proxy mode only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:146 - 0

/* array of ct_sct_data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:169 - 0

/* the log configuration in use -- either db_log_config or static_log_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:212 - 0

/* HAVE_SCT_DAEMON_CHILD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:218 - 0

/* HAVE_SCT_DAEMON_THREAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:270 - 0

/* to distinguish from admin-created .sct
 * files
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:279 - 0

/* Read the various .sct files and stick them together in a single file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:295 - 0

/* Note: We rebuild the file that combines the SCTs every time this
 * code runs, even if no individual SCTs are new (or at least
 * re-fetched).
 * That allows the admin to see the last processing by looking
 * at the timestamp.
 * Rechecking even if no SCTs are new allows SCTs which were not
 * yet valid originally (just submitted to a log) to be used as
 * soon as practical.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:316 - 0

/* stick a 0 len (for the list) at the start of the file;
 * we'll have to patch that later
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:325 - 0

/* Build list from scratch, creating array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:369 - 0

/* If the SCT has a timestamp in the future, it may have just been
 * created by the log.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:391 - 0

/* include size header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:482 - 0

/* chars that shouldn't be used in a filename */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:652 - 0

/* The set of logs can change, and we need to remove SCTs retrieved
 * from logs that we no longer trust. To track changes we'll use a
 * file in the directory for the server certificate.
 *
 * (When can the set change? Right now they can only change at [re]start,
 * but in the future we should be able to find the set of trusted logs
 * dynamically.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:732 - 0

/* Build list from scratch, creating array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:804 - 0

/* Log client tool (from certificate-transparency open source project)
 * not configured; we can only use admin-managed SCTs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:840 - 0

/* Reload log config DB */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:887 - 0

/* not using static config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:939 - 0

/* if MPM doesn't support query,
 * assume we shouldn't restart daemon
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:959 - 0

/* don't do anything; server is stopping or restarting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:963 - 0

/* Restart the child cgid daemon process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:968 - 0

/* we get here when pcgi is cleaned up; pcgi gets cleaned
 * up when pconf gets cleaned up
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:971 - 0

/* send signal to daemon telling it to die */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:990 - 0

/* Close our copy of the listening sockets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1037 - 0

/* if running as root, switch to configured user/group */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1042 - 0

/* ptemp - temporary pool for refresh cycles */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1079 - 0

/* HAVE_SCT_DAEMON_CHILD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1095 - 0

/* ptemp - temporary pool for refresh cycles */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1137 - 0

/* HAVE_SCT_DAEMON_THREAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1236 - 0

/* HAVE_SCT_DAEMON_CHILD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1239 - 0

/* Theoretically this module could operate in a proxy-only
 * configuration, where httpd does not act as a TLS server but proxy is
 * configured as a TLS client. That isn't currently implemented.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1264 - 0

/* log config db in separate pool that can be cleared */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1298 - 0

/* if a db is configured, it could be updated later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1299 - 0

/* no DB configured, need permanently
 * empty array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1317 - 0

/* Unix :) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1318 - 0

/* root */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1342 - 0

/* HAVE_SCT_DAEMON_CHILD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1355 - 0

/* HAVE_SCT_DAEMON_THREAD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1458 - 0

/* UNDOC (mentioned in ssl.pod) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1481 - 0

/* leaf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1485 - 0

/* Not this: SSL_CTX_get0_chain_certs(ctx, &chain);
 *
 * See this thread:
 * http://mail-archives.apache.org/mod_mbox/httpd-dev/
 * 201402.mbox/%3CCAKUrXK5-2_Sg8FokxBP8nW7tmSuTZZWL-%3
 * DBDhNnwyK-Z4dmQiQ%40mail.gmail.com%3E
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1492 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1495 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1496 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1551 - 0

/* Look at SSLClient::VerifyCallback() and WriteSSLClientCTData()
 * for validation and saving of data for auditing in a form that
 * the c-t tools can use.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1565 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1597 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1598 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1611 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1627 - 0

/* Make sure the overall length is correct */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1639 - 0

/* add each SCT in the list to the all_scts array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1693 - 0

/* httpd has ap_log_*data() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1699 - 0

/* deserialize all the SCTs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1730 - 0

/* How did we get here without at least one SCT? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1763 - 0

/* will only block if we have a DB-based log
 * configuration which is currently being refreshed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1800 - 0

/* If no SCTs are valid, don't communicate. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1870 - 0

/* Write each certificate, starting with leaf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1878 - 0

/* now write the cert!!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1895 - 0

/* Write each SCT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1922 - 0

/* not used in current implementations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1931 - 0

/* signed_certificate_timestamp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1934 - 0

/* See function of this name in openssl/apps/s_client.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1947 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1949 - 0

/* normal case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1955 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1962 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1971 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1977 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1983 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1994 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:1995 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2008 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2013 - 0

/* Callbacks and structures for handling custom TLS Extensions:
 * client_extension_add_callback - sends data for ClientHello TLS Extension
 * client_extension_parse_callback - receives data from ServerHello TLS Extension
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2024 - 0

/* nothing to send in ClientHello */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2034 - 0

/* Get SCT(s) from ServerHello */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2058 - 0

/* See SSLClient::VerifyCallback() in c-t/src/client/ssl_client.cc
 * (That's a beast and hard to duplicate in depth when you consider
 * all the support classes it relies on; mod_ssl_ct needs to be a
 * C++ module so that the bugs are fixed in one place.)
 *
 * . This code should care about stapled SCTs but doesn't.
 * . This code, unlike SSLClient::VerifyCallback(), doesn't look
 * at the OpenSSL "e;input"e; chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2092 - 0

/* Note: SSLClient::Verify looks in both the input chain and the
 * verified chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2103 - 0

/* use X509_get_ext(certs->leaf, extension_index) to obtain X509_EXTENSION * */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2109 - 0

/* as in Cert::ExtensionStructure() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2113 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2121 - 0

/* as in Cert::OctetStringExtensionData */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2127 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2159 - 0

/* At this point we have the SCTs from the cert (if any) and the
 * SCTs from the TLS extension (if any) in ct_conn_config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2198 - 0

/* some other thread snuck in
 * we assume that the other thread got the same validation
 * result that we did
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2206 - 0

/* no other thread snuck in */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2229 - 0

/* No SCTs at all; consult configuration to know what to do. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2266 - 0

/* this callback tells us that client is CT-aware;
 * there's nothing of interest in the extension data
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2299 - 0

/* Skip this extension for ServerHello */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2303 - 0

/* need to reply with SCT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2305 - 0

/* no need to free! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2322 - 0

/* Skip this extension for ServerHello */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2362 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2363 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2381 - 0

/* There weren't any directives for this module in the vhost,
 * so core httpd gave us the global scope's module config.
 * We need to be able to represent some mod_ssl-related
 * config (certs) that are generally configured in the vhost,
 * so we have to create a vhost-specific module config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2407 - 0

/* Uhh, hopefully this doesn't collide with anybody else. mod_ssl
 * currently only sets this on the server SSL_CTX, when OCSP is
 * enabled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2411 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2412 - 0

/* UNDOC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2444 - 0

/* else no SSL on this client connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2471 - 0

/* something bad happened after child init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2481 - 0

/* not used in current implementations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2485 - 0

/* No data written; just remove the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2487 - 0

/* not used in current implementations */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2636 - 0

/* copy non-per-vhost fields from base (other than a few that aren't
 * referenced from per-vhost config)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:2659 - 0

/* make a copy of the existing server config and initialize anything
 * that is per-vhost
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3020 - 0

/* GLOBAL_ONLY - audit data spans servers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3023 - 0

/* GLOBAL_ONLY - otherwise, you couldn't share
 * the same SCT list for a cert used by two
 * different vhosts (and the SCT maintenance daemon
 * would be more complex)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3030 - 0

/* GLOBAL_ONLY - otherwise, you couldn't share
 * the same SCT list for a cert used by two
 * different vhosts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3036 - 0

/* per-server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3042 - 0

/* GLOBAL_ONLY - otherwise, you couldn't share
 * the same SCT list for a cert used by two
 * different vhosts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3048 - 0

/* GLOBAL_ONLY - otherwise, you couldn't share
 * the same SCT list for a cert used by two
 * different vhosts (and the SCT maintenance daemon
 * would be more complex)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3055 - 0

/* GLOBAL_ONLY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3058 - 0

/* GLOBAL_ONLY - otherwise, you couldn't share
 * the same SCT list for a cert used by two
 * different vhosts (and the SCT maintenance daemon
 * would be more complex)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/mod_ssl_ct.c:3066 - 0

/* GLOBAL_ONLY - otherwise, you couldn't share
 * the same SCTs for a cert used by two
 * different vhosts (and it would be just plain
 * silly :) )
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_log_config.c:359 - 0

/* quiet some lints */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_log_config.c:428 - 0

/* must have a url and a public key configured in order to obtain
 * an SCT from the log
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:102 - 0

/* no room for header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:184 - 0

/* If we have the server certificate, we can construct the
 * data over which the signature is computed.
 */

 /* XXX Which part is signed? */
 /* See certificate-transparency/src/proto/serializer.cc,
 * method Serializer::SerializeV1CertSCTSignatureInput()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:206 - 0

/* version 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:207 - 0

/* CERTIFICATE_TIMESTAMP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:208 - 0

/* timestamp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:209 - 0

/* X509_ENTRY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:210 - 0

/* 24-bit length + X509 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:211 - 0

/* 16-bit length + extensions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:217 - 0

/* version 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:219 - 0

/* CERTIFICATE_TIMESTAMP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:225 - 0

/* X509_ENTRY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:228 - 0

/* Get DER encoding of leaf certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:230 - 0

/* get OpenSSL to allocate: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_sct.c:280 - 0

/* httpd has ap_log_*data() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:115 - 0

/* XXX Windows equivalent -- CreateFile + fdopen? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:227 - 0

/* shouldn't get APR_EOF since we know
 * how big the file is
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:298 - 0

/* APR_FILES_AS_SOCKETS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:339 - 0

/* no tight loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:344 - 0

/* APR_FILES_AS_SOCKETS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:579 - 0

/* should not occur */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:600 - 0

/* should not occur */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:656 - 0

//127.0.0.1:8888"e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:657 - 0

//127.0.0.1:9999"e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:658 - 0

//127.0.0.1:10000"e; 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_ct_util.c:665 - 0

/* no "e;\n"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:33 - 0

/* _________________________________________________________________
**
** Support for Global Configuration
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:49 - 0

/* reused for lifetime of the server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:52 - 0

/*
 * allocate an own subpool which survives server restarts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:59 - 0

/*
 * initialize per-module configuration
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:95 - 0

/* _________________________________________________________________
**
** Configuration handling
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:103 - 0

/* set during module init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:105 - 0

/* set during module init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:210 - 0

/* set during module init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:211 - 0

/* set during module init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:236 - 0

/*
 * Create per-server SSL configuration
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:340 - 0

/*
 * Merge per-server SSL configurations
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:376 - 0

/*
 * Create per-directory SSL configuration
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:402 - 0

/*
 * Merge per-directory SSL configurations
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:441 - 0

/*
 * Configuration functions for particular directives
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:519 - 0

/* Iterate; this call implicitly decrements the refcount
 * on the 'old' e, per the docs in engine.h. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:605 - 0

/* read whole file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:870 - 0

/*SSLDirConfigRec *dc = (SSLDirConfigRec *)dcfg;*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:882 - 0

/* XXX: bring back per-dir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:892 - 0

/*SSLDirConfigRec *dc = (SSLDirConfigRec *)dcfg;*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:904 - 0

/* XXX: bring back per-dir */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1128 - 0

/* Find the provider of given name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1142 - 0

/* Build a comma-separated list of all registered provider
 * names: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1321 - 0

/* Nothing to do, the flag is not present to be toggled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1711 - 0

/* Find the provider of given name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1725 - 0

/* Build a comma-separated list of all registered provider
 * names: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1832 - 0

/* HAVE_OCSP_STAPLING */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1881 - 0

/* SRP_VBASE_init takes char*, not const char* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1890 - 0

/* SRP_VBASE_new takes char*, not const char* */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1895 - 0

/* HAVE_SRP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1909 - 0

/* Dump the filenames of all configured server certificates to
 * stdout. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_config.c:1936 - 0

/* Dump the filenames of all configured server CA certificates to
 * stdout. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:41 - 0

/* _________________________________________________________________
**
** Module Initialization
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:73 - 0

/* Storage and initialization for DH parameters. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:75 - 0

/* function to generate... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:76 - 0

/* ...this, used for keys.... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:77 - 0

/* ...of length >= this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:108 - 0

/* Hand out the same DH structure though once generated as we leak
 * memory otherwise and freeing the structure up after use would be
 * hard to track and in fact is not needed at all as it is safe to
 * use the same parameters over and over again security wise (in
 * contrast to the keys itself) and code safe as the returned structure
 * is duplicated by OpenSSL anyway. Hence no modification happens
 * to our copy. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:123 - 0

/* impossible to reach. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:141 - 0

/*
 * Per-module initialization
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:168 - 0

/*
 * Let us cleanup on restarts and exits
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:175 - 0

/*
 * Any init round fixes the global config
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:181 - 0

/*
 * try to fix the configuration and open the dedicated SSL
 * logfile as early as possible
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:196 - 0

/*
 * Create the server host:port string because we need it a lot
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:202 - 0

/* Default to enabled if SSLEngine is not set explicitly, and
 * the protocol is https. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:238 - 0

/*
 * SSL external crypto device ("e;engine"e;) support
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:250 - 0

/*
 * Seed the Pseudo Random Number Generator (PRNG)
 * only need ptemp here; nothing inside allocated from the pool
 * needs to live once we return from ssl_rand_seed().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:277 - 0

/*
 * initialize the mutex handling
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:296 - 0

/*
 * initialize servers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:348 - 0

/*
 * Announce mod_ssl and SSL library in HTTP Server field
 * as ``mod_ssl/X.X.X OpenSSL/X.X.X''
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:354 - 0

/* for modssl_get_app_data2() at request time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:361 - 0

/*
 * Support for external a Crypto Device ("e;engine"e;), usually
 * a hardware accellerator card for crypto operations.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:412 - 0

/*
 * Configure TLS extensions support
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:418 - 0

/*
 * Server name indication (SNI)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:432 - 0

/*
 * OCSP Stapling support, status_request extension
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:443 - 0

/*
 * TLS-SRP support
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:510 - 0

/*
 * Create the new per-server SSL context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:537 - 0

/* proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:538 - 0

/* server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:544 - 0

/* proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:545 - 0

/* server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:550 - 0

/* proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:551 - 0

/* server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:555 - 0

/* proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:556 - 0

/* server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:559 - 0

/* For multiple protocols, we need a flexible method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:561 - 0

/* proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:562 - 0

/* server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:598 - 0

/* OpenSSL >= 1.0 only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:607 - 0

/*
 * Configure using RFC 5077 TLS session tickets
 * for session resumption.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:624 - 0

/*
 * Configure additional context ingredients
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:700 - 0

/*
 * Configure callbacks for SSL context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:811 - 0

/*
 * Configure Certificate Revocation List (CRL) Details
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:898 - 0

/* create new extra chain by loading the certs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:999 - 0

/* XXX: proxy support? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1025 - 0

/*
 * Some information about the certificate(s)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1052 - 0

/* prevent OpenSSL from showing its "e;Enter PEM pass phrase:"e; prompt */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1078 - 0

/* no OpenSSL default prompts for any of the SSL_CTX_use_* calls, please */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1081 - 0

/* Iterate over the SSLCertificateFile array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1090 - 0

/* first the certificate (public key) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1111 - 0

/* and second, the private key */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1130 - 0

/* perhaps it's an encrypted private key, so try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1181 - 0

/* warn about potential cert issues */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1185 - 0

/* 
 * OpenSSL up to 1.0.1: configure stapling as we go. In 1.0.2
 * and later, there's SSL_CTX_set_current_cert, which allows
 * iterating over all certs in an SSL_CTX (including those possibly
 * loaded via SSLOpenSSLConfCmd Certificate), so for 1.0.2 and
 * later, we defer to the code in ssl_init_server_ctx.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1209 - 0

/*
 * Try to read DH parameters from the (first) SSLCertificateFile
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1222 - 0

/*
 * Similarly, try to read the ECDH curve name from SSLCertificateFile...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1234 - 0

/*
 * ...otherwise, enable auto curve selection (OpenSSL 1.0.2 and later)
 * or configure NIST P-256 (required to enable ECDHE for earlier versions)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1372 - 0

/* Check that all client certs have got certificates and private
 * keys. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1405 - 0

/* If SSLProxyMachineCertificateChainFile is configured, load all
 * the CA certs and have OpenSSL attempt to construct a full chain
 * from each configured end-entity cert up to a root. This will
 * allow selection of the correct cert given a list of root CA
 * names in the certificate request from the server. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1428 - 0

/* Attempt to verify the client cert */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1440 - 0

/* Obtain a copy of the verified chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1444 - 0

/* Discard end entity cert from the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1448 - 0

/* Store the chain for later use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1452 - 0

/* Discard empty chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1470 - 0

/* get ready for next X509_STORE_CTX_init */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1510 - 0

/*
 * Check for problematic re-initializations
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1564 - 0

/*
 * OpenSSL 1.0.2 and later allows iterating over all SSL_CTX certs
 * by means of SSL_CTX_set_current_cert. Enabling stapling at this
 * (late) point makes sure that we catch both certificates loaded
 * via SSLCertificateFile and SSLOpenSSLConfCmd Certificate.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1603 - 0

/*
 * Configure a particular server
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1674 - 0

/*
 * Give out warnings when more than one SSL-aware virtual server uses the
 * same IP:port and an OpenSSL version without support for TLS extensions
 * (SNI in particular) is used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1751 - 0

/*
 * note that SSL_load_client_CA_file() checks for duplicates,
 * but since we call it multiple times when reading a directory
 * we must also check for duplicates ourselves.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1758 - 0

/* this will be freed when ca_list is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1762 - 0

/* need to free this ourselves, else it will leak */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1788 - 0

/* don't try to load directories */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1811 - 0

/*
 * Start with a empty stack/list where new
 * entries get added in sorted order.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1817 - 0

/*
 * Process CA certificate bundle file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1822 - 0

/*
 * If ca_list is still empty after trying to load ca_file
 * then the file failed to load, and users should hear about that.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1833 - 0

/*
 * Process CA certificate path files
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1845 - 0

/*
 * Cleanup
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1856 - 0

/* only call getpid() once per-process */

 /* XXX: there should be an ap_srand() function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1861 - 0

/* open the mutex lockfile */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_init.c:1918 - 0

/*
 * Free the non-pool allocated structures
 * in the per-server configurations
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:117 - 0

/* Brigade used as a buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:133 - 0

/* Pass an output brigade down the filter stack; returns 1 on success
 * or -1 on failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:141 - 0

/* Fail if the connection was reset: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:148 - 0

/* Send a FLUSH bucket down the output filter stack; returns 1 on
 * success, -1 on failure. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:179 - 0

/* nothing to free here.
 * apache will destroy the bucket brigade for us
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:187 - 0

/* this is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:201 - 0

/* Abort early if the client has initiated a renegotiation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:207 - 0

/* when handshaking we'll have a small number of bytes.
 * max size SSL will pass us here is about 16k.
 * (16413 bytes to be exact)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:275 - 0

/* N/A */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:278 - 0

/* we don't care */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:291 - 0

/* this is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:301 - 0

/* this is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:313 - 0

/* read is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:314 - 0

/* puts is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:315 - 0

/* gets is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:359 - 0

/* we have enough to fill the caller's buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:382 - 0

/* This function will read from a brigade and discard the read buckets as it
 * proceeds. It will read at most *len bytes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:421 - 0

/* This stream bucket was consumed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:429 - 0

/* Do not block once some data has been consumed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:441 - 0

/* This physical bucket was consumed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:445 - 0

/* Only part of this physical bucket was consumed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:454 - 0

/* This could probably be actual == *len, but be safe from stray
 * photons. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:465 - 0

/*
 * this is the function called by SSL_read()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:480 - 0

/* Abort early if the client has initiated a renegotiation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:536 - 0

/* Provide the results of this read pass,
 * without resetting the BIO retry_read flag
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:584 - 0

/* write is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:586 - 0

/* puts is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:587 - 0

/* gets is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:588 - 0

/* ctrl is never called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:605 - 0

/* If we have something leftover from last time, try that first. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:609 - 0

/* We want to rollback this read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:618 - 0

/* This could probably be *len == wanted, but be safe from stray
 * photons.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:655 - 0

/* We want to rollback this read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:661 - 0

/* If EAGAIN, we will loop given a blocking read,
 * otherwise consider ourselves at EOF.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:688 - 0

/* (rc < 0) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:710 - 0

/* Blocking and nothing yet? Try again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:723 - 0

/* Blocking and nothing yet? Try again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:748 - 0

/* Read a line of input from the SSL input layer into buffer BUF of
 * length *LEN; updating *len to reflect the length of the line
 * including the LF character. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:814 - 0

/* write SSL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:886 - 0

/* Just use a simple request. Any request will work for this, because
 * we use a flag in the conn_rec->conn_vector now. The fake request just
 * gets the request back to the Apache core so that a response can be sent.
 * Since we use an HTTP/1.x request, we also have to inject the empty line
 * that terminates the headers, or the core will read more data from the
 * socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:929 - 0

/* log the situation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:943 - 0

/* fake the request line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1051 - 0

/*
 * case SSL_SHUTDOWN_TYPE_UNSET:
 * case SSL_SHUTDOWN_TYPE_STANDARD:
 */
 /* send close notify, but don't wait for clients close notify
 (standard compliant and safe, so it's the DEFAULT!) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1066 - 0

/* and finally log the fact that we've closed the connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1075 - 0

/* deallocate the SSL connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1082 - 0

/* so filters know we've been shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1085 - 0

/* prevent any further I/O */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1213 - 0

/* Do string match or simplest wildcard match if that
 * fails. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1232 - 0

/* another chance to fail */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1270 - 0

/*
 * This is in addition to what was present earlier. It is
 * borrowed from openssl_state_machine.c [mod_tls].
 * TBD.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1339 - 0

/* on session resumption ssl_callback_SSLVerify() 
 * will not be called, therefore we have to set it here
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1359 - 0

/*
 * Remember the peer certificate's DN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1370 - 0

/*
 * Make really sure that when a peer certificate
 * is required we really got one... (be paranoid)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1395 - 0

/* start of block to return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1396 - 0

/* length of block to return */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1431 - 0

/* XXX: we don't currently support anything other than these modes. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1458 - 0

/* Protected from truncation, readbytes < MAX_SIZE_T
 * FIXME: No, it's *not* protected. -- jre */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1475 - 0

/* +1 to include LF */
 /* Buffer contents now consumed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1482 - 0

/* Otherwise fall back to the hard way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1503 - 0

/* Create a transient bucket out of the decrypted data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1514 - 0

/* ssl_io_filter_output() produces one SSL/TLS message per bucket
 * passed down the output filter stack. This results in a high
 * overhead (network packets) for any output comprising many small
 * buckets. SSI page applied through the HTTP chunk filter, for
 * example, may produce many brigades containing small buckets -
 * [chunk-size CRLF] [chunk-data] [CRLF].
 *
 * The coalescing filter merges many small buckets into larger buckets
 * where possible, allowing the SSL I/O output filter to handle them
 * more efficiently. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1529 - 0

/* number of bytes of buffer used. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1562 - 0

/* don't count zero-length buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1607 - 0

/* A blocking read should be fine here for a
 * known-length data bucket, rather than the usual
 * non-block/flush/block. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1617 - 0

/* Be paranoid. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1636 - 0

/* If the brigade is now empty, our work here is done. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1640 - 0

/* If anything remains in the brigade, it must now be passed down
 * the filter stack, first prepending anything that has been
 * coalesced. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1651 - 0

/* buffer now emptied. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1672 - 0

/* Reinstate any buffered content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1676 - 0

/* ssl_filter_io_shutdown was called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1683 - 0

/* When we are the writer, we must initialize the inctx
 * mode so that we block for any required ssl input, because
 * output filtering is always nonblocking.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1697 - 0

/* if the core has set aside data, back off and try later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1716 - 0

/* Metadata buckets are passed one per brigade; it might
 * be more efficient (but also more complex) to use
 * outctx->bb as a true buffer and interleave these with
 * data buckets. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1728 - 0

/* Filter a data bucket. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1741 - 0

/* and try again with a blocking read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1774 - 0

/* total length buffered */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1775 - 0

/* non-zero once EOS is seen */

 /* Create the context which will be passed to the input filter;
 * containing a setaside pool and a brigade which constrain the
 * lifetime of the buffered data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1783 - 0

/* ... and a temporary brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1806 - 0

/* Iterate through the returned brigade: setaside each bucket
 * into the context's pool and move it into the brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1862 - 0

/* Insert the filter which will supply the buffered content. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1907 - 0

/* Partition the buffered brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1916 - 0

/* If the buffered brigade contains less then the requested
 * length, just pass it all back. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1936 - 0

/* Split a line into the passed-in brigade. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:1959 - 0

/* Note that the filter must *not* be removed here; it may be
 * invoked again, see comment above. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:2052 - 0

/* _________________________________________________________________
**
** I/O Data Debugging
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:2086 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:2106 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_io.c:2108 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:143 - 0

/* both have the same certificates? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:167 - 0

/* both have the same verification */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:172 - 0

/* both have the same ca path/file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:183 - 0

/* both have the same ca cipher suite string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:209 - 0

/* both use the same TLS protocol? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:218 - 0

/*
 * Post Read Request Handler
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:242 - 0

/* If we are on a slave connection, we do not expect to have an SSLConnRec,
 * but our master connection might. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:319 - 0

/* 
 * The request does not select the virtual host that was
 * selected by the SNI and its SSL parameters are different
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:354 - 0

/*
 * Log information about incoming HTTPS requests
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:378 - 0

/*
 * Move SetEnvIf information from request_rec to conn_rec/BUFF
 * to allow the close connection handler to use them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:396 - 0

/* being case-sensitive here.
 * and not checking for the -shutdown since these are the only
 * SetEnvIf "e;flags"e; we support
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:408 - 0

/* should only ever be one ssl-*-shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:415 - 0

/*
 * Access Handler
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:440 - 0

/* On a slave connection, we do not expect to have an SSLConnRec, but
 * our master connection might have one. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:464 - 0

/*
 * Support for SSLRequireSSL directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:482 - 0

/* remember forbidden access for strict require option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:558 - 0

/* remember old state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:571 - 0

/* configure new state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:596 - 0

/* determine whether a renegotiation has to be forced */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:600 - 0

/* optimized way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:613 - 0

/* paranoid way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:644 - 0

/* cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:664 - 0

/* tracing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:687 - 0

/* remember old state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:689 - 0

/* configure new state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:705 - 0

/* TODO: this seems premature since we do not know if there
 * are any changes required.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:711 - 0

/* determine whether we've to force a renegotiation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:747 - 0

/*
 * override of SSLVerifyDepth
 *
 * The depth checks are handled by us manually inside the
 * verify callback function and not by OpenSSL internally
 * (and our function is aware of both the per-server and
 * per-directory contexts). So we cannot ask OpenSSL about
 * the currently verify depth. Instead we remember it in our
 * SSLConnRec attached to the SSL* of OpenSSL. We've to force
 * the renegotiation if the reconfigured/new verify depth is
 * less than the currently active/remembered verify depth
 * (because this means more restriction on the certificate
 * chain).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:764 - 0

/* determine the new depth */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:839 - 0

/* Fill the I/O buffer with the request body if possible. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:843 - 0

/* If the reneg buffer size is set to zero, just fail. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:936 - 0

/* we created this ourselves, so free it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:977 - 0

/* Toggle the renegotiation state to allow the new
 * handshake to proceed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1018 - 0

/* Full renegotiation successfull, we now have handshaken with
 * this server's parameters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1024 - 0

/*
 * Remember the peer certificate's DN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1064 - 0

/*
 * Also check that SSLCipherSuite has been enforced as expected.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1078 - 0

/* remember any new cipher suite used in renegotiation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1101 - 0

/*
 * Check SSLRequire boolean expressions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1118 - 0

/* remember forbidden access for strict require option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1138 - 0

/* remember forbidden access for strict require option */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1172 - 0

/*
 * Additionally forbid access (again)
 * when strict require option is used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1235 - 0

/* use SSLUserName if defined, otherwise use the full client DN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1279 - 0

/*
 * Additionally forbid access (again)
 * when strict require option is used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1292 - 0

/*
 * Fixup Handler
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1352 - 0

/*
 * Check to see if SSL is on
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1359 - 0

/*
 * Annotate the SSI/CGI environment with standard SSL information
 */
 /* the always present HTTPS (=HTTP over SSL) flag! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1366 - 0

/* add content of SNI TLS extension (if supplied with ClientHello) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1372 - 0

/* standard SSL environment variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1421 - 0

/* _________________________________________________________________
**
** Authz providers for use with mod_authz_core
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1556 - 0

/* Get Apache context back through OpenSSL context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1568 - 0

/* Get verify ingredients */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1573 - 0

/*
 * Log verification information
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1595 - 0

/*
 * SSLProxyVerify is either not configured or set to "e;none"e;.
 * (this callback doesn't happen in the server context if SSLVerify
 * is not configured or set to "e;none"e;)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1679 - 0

/*
 * Finally check the depth of the certificate verification
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1702 - 0

/*
 * And finally signal OpenSSL the (perhaps changed) state
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1720 - 0

/*
 * caller will decrement the cert and key reference
 * so we need to increment here to prevent them from
 * being freed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1781 - 0

/* Search certs (by issuer name) one by one*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1792 - 0

/*
 * Failed to find direct issuer - search intermediates
 * (by issuer name), if provided.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1809 - 0

/* end loop through chained certs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1857 - 0

/* Get Apache context back through OpenSSL context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1892 - 0

/*
 * return 0 which means to OpenSSL that the session is still
 * valid and was not freed by us with SSL_SESSION_free().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1910 - 0

/* Get Apache context back through OpenSSL context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1924 - 0

/*
 * Return NULL or the retrieved SSL_SESSION. But indicate (by
 * setting do_copy to 0) that the reference count on the
 * SSL_SESSION should not be incremented by the SSL library,
 * because we will no longer hold a reference to it ourself.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1949 - 0

/*
 * Get Apache context back through OpenSSL context
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1968 - 0

/* TODO: Do we need a temp pool here, or are we always shutting down? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1977 - 0

/* Dump debugginfo trace to the log file. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:1981 - 0

/*
 * create the various trace messages
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2055 - 0

/* Retrieve the conn_rec and the associated SSLConnRec. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2064 - 0

/* If the reneg state is to reject renegotiations, check the SSL
 * state machine and move to ABORT if a Client Hello is being
 * read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2077 - 0

/* If the first handshake is complete, change state to reject any
 * subsequent client-initiated renegotiation. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2090 - 0

/*
 * This function sets the virtual host from an extended
 * client hello with a server name indication extension ("e;SNI"e;, cf. RFC 6066).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2147 - 0

/*
 * This callback function is executed when OpenSSL encounters an extended
 * client hello with a server name indication extension ("e;SNI"e;, cf. RFC 6066).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2159 - 0

/*
 * Find a (name-based) SSL virtual host where either the ServerName
 * or one of the ServerAliases matches the supplied name (to be used
 * with ap_vhost_iterate_given_conn())
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2173 - 0

/* set SSL_CTX (if matched) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2178 - 0

/*
 * SSL_set_SSL_CTX() only deals with the server cert,
 * so we need to duplicate a few additional settings
 * from the ctx by hand
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2186 - 0

/*
 * Only initialize the verification settings from the ctx
 * if they are not yet set, or if we're called when a new
 * SSL connection is set up (num_renegotiations == 0).
 * Otherwise, we would possibly reset a per-directory
 * configuration which was put into effect by ssl_hook_Access.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2214 - 0

/*
 * Save the found server into our SSLConnRec for later
 * retrieval
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2221 - 0

/*
 * There is one special filter callback, which is set
 * very early depending on the base_server's log level.
 * If this is not the first vhost we're now selecting
 * (and the first vhost doesn't use APLOG_TRACE4), then
 * we need to set that callback here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2244 - 0

/* HAVE_TLSEXT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2247 - 0

/*
 * This callback function is executed when OpenSSL needs a key for encrypting/
 * decrypting a TLS session ticket (RFC 5077) and a ticket key file has been
 * configured through SSLSessionTicketKeyFile.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2267 - 0

/* 
 * OpenSSL is asking for a key for encrypting a ticket,
 * see s3_srvr.c:ssl3_send_newsession_ticket()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2290 - 0

/* 
 * OpenSSL is asking for the decryption key,
 * see t1_lib.c:tls_decrypt_ticket()
 */

 /* check key name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2311 - 0

/* OpenSSL is not expected to call us with modes other than 1 or 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2314 - 0

/* HAVE_TLS_SESSION_TICKETS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2349 - 0

/* someone tries to trick us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2356 - 0

/**/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2359 - 0

/* someone tries to trick us? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2404 - 0

/* HAVE_TLS_ALPN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2425 - 0

/* reset all other options */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_kernel.c:2430 - 0

/* HAVE_SRP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:32 - 0

/* _________________________________________________________________
**
** Logfile Support
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:103 - 0

/* %s */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:105 - 0

/* %s%s%s */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_log.c:107 - 0

/* %s%s */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:22 - 0

/* Return the responder URI specified in the given certificate, or
 * NULL if none specified. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:38 - 0

/* Name found in extension, and is a URI: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:51 - 0

/* Return the responder URI object which should be used in the given
 * configuration for the given certificate, or NULL if none can be
 * determined. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:127 - 0

/* Verify the OCSP status of given certificate. Returns
 * V_OCSP_CERTSTATUS_* result code. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:186 - 0

/* TODO: allow flags configuration. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:211 - 0

/* Check whether the response is inside the defined validity
 * period; otherwise fail. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:216 - 0

/* oscp_resp_maxage can be passed verbatim - UNSET (-1) means
 * that responses can be of any age as long as nextup is in the
 * future. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:246 - 0

/* certID is freed when the request is freed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:266 - 0

/* don't do OCSP checking for valid self-issued certs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:273 - 0

/* Create a temporary pool to constrain memory use (the passed-in
 * pool may be e.g. a connection pool). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:281 - 0

/* Propagate the verification status back to the passed-in
 * context. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_ocsp.c:300 - 0

/* HAVE_OCSP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:46 - 0

/*
 * Return true if the named file exists and is readable
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:93 - 0

/* 'p' pool used here is cleared on restarts (or sooner) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:99 - 0

/* make a copy out of s->process->pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:108 - 0

/* _________________________________________________________________
**
** Pass Phrase and Private Key Handling
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:206 - 0

/*
 * Try to read the private key file with the help of
 * the callback function which serves the pass
 * phrases to OpenSSL
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:223 - 0

/*
 * when the private key file now was readable,
 * it's fine and we go out of the loop
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:230 - 0

/*
 * when we have more remembered pass phrases
 * try to reuse these first.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:239 - 0

/*
 * else it's not readable and we have no more
 * remembered pass phrases. Then this has to mean
 * that the callback function popped up the dialog
 * but a wrong pass phrase was entered. We give the
 * user (but not the dialog program) a few more
 * chances...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:280 - 0

/* XXX: apr_isatty() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:321 - 0

/*
 * Log the type of reading
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:344 - 0

/*
 * Ok, when we have one more pass phrase store it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:353 - 0

/*
 * Insert private key into the global module configuration
 * (we convert it to a stand-alone DER byte sequence
 * because the SSL library uses static variables inside a
 * RSA structure which do not survive DSO reloads!)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:361 - 0

/* 2nd arg increments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:364 - 0

/* remember mtime of encrypted keys */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:369 - 0

/*
 * Free the private key structure
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:374 - 0

/*
 * Let the user know when we're successful.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:385 - 0

/* Close the pipes if they were opened
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:398 - 0

/* Child process code for 'ErrorLog "e;|..."e;';
 * may want a common framework for this, since I expect it will
 * be common for other foo-loggers to want this sort of thing...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:418 - 0

/* XXX: not sure if we aught to...
 * apr_pool_note_subprocess(p, procnew, APR_KILL_AFTER_TIMEOUT);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:442 - 0

/* failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:448 - 0

/* XXX: apr_sometest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:476 - 0

/*
 * Builtin or Pipe dialog
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:506 - 0

/* sc->server->pphrase_dialog_type == SSL_PPTYPE_BUILTIN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:545 - 0

/*
 * Emulate the OpenSSL internal pass phrase dialog
 * (see crypto/pem/pem_lib.c:def_callback() for details)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:556 - 0

/* sc->server->pphrase_dialog_type == SSL_PPTYPE_BUILTIN */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:572 - 0

/*
 * Filter program
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:593 - 0

/*
 * Ok, we now have the pass phrase, so give it back
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_pphrase.c:598 - 0

/*
 * And return its length to OpenSSL...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:65 - 0

/*
 * seed in contents of an external file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:77 - 0

/*
 * seed in contents generated by an external program
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:91 - 0

/*
 * seed in contents provided by the external
 * Entropy Gathering Daemon (EGD)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:106 - 0

/*
 * seed in the current time (usually just 4 bytes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:111 - 0

/*
 * seed in the current process id (usually just 4 bytes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_rand.c:120 - 0

/*
 * seed in some current state of the run-time stack (128 bytes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:36 - 0

/* _________________________________________________________________
**
** Variable Lookup
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:62 - 0

/* use master connection if no SSL defined here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:74 - 0

/* SSLv3 uses 36 bytes for Finishd messages, TLS1.0 12 bytes,
 * So tls-unique is max 36 bytes, however with tls-server-end-point,
 * the CB data is the certificate signature, so we use the maximum
 * hash size known to the library (currently 64).
 * */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:118 - 0

/* Override digest as specified by RFC 5929 section 4.1. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:174 - 0

/* for now, we just handle everything that starts with SSL_, but
 * register our hook as APR_HOOK_LAST
 * XXX: This can be optimized
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:185 - 0

/* Function SSL() is implemented by us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:232 - 0

/* This function must remain safe to use for a non-SSL connection. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:243 - 0

/*
 * When no pool is given try to find one
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:255 - 0

/*
 * Request dependent stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:277 - 0

/* all other headers from which we are still not know about */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:304 - 0

/* shortcut common case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:340 - 0

/*
 * Connection stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:356 - 0

/*
 * Totally independent stuff
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:404 - 0

/* all other env-variables from the parent Apache process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:480 - 0

/* SSL_get_certificate is different from SSL_get_peer_certificate.
 * No need to X509_free(xs).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:623 - 0

/* In this table, .extract is non-zero if RDNs using the NID should be
 * extracted to for the SSL_{CLIENT,SERVER}_{I,S}_DN_* environment
 * variables. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:632 - 0

/* officially (RFC2156) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:633 - 0

/* compatibility (SSLeay) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:657 - 0

/* if an _N suffix is used, find the Nth attribute of given name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:727 - 0

/* return the first entry from this 1-element array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:752 - 0

/* Return a string giving the number of days remaining until 'tm', or
 * "e;0"e; if this can't be determined. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:761 - 0

/* Fail if the time isn't a valid ASN.1 TIME; RFC3280 mandates
 * that the seconds digits are present even though ASN.1
 * doesn't. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:895 - 0

/* no client verification done at all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:898 - 0

/* client verification done successful */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:901 - 0

/* client verification done in generous way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:904 - 0

/* client verification failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:972 - 0

/* Add each RDN in 'xn' to the table 't' where the NID is present in
 * 'nids', using key prefix 'pfx'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:982 - 0

/* Hash of (int) NID -> (int *) counter to count each time an RDN
 * with the given NID has been seen. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:986 - 0

/* For each RDN... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:992 - 0

/* Retrieve the nid, and check whether this is one of the nids
 * which are to be extracted. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1009 - 0

/* Otherwise, use the plain foo=bar syntax. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1026 - 0

/* Build up a hash table of (int *)NID->(char *)short-name for all
 * the tags which are to be extracted: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1071 - 0

/* subjectAltName entries of the server certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1087 - 0

/* subjectAltName entries of the client certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1103 - 0

/* For an extension type which OpenSSL does not recognize, attempt to
 * parse the extension type as a primitive string. This will fail for
 * any structured extension type per the docs. Returns non-zero on
 * success and writes the string to the given bio. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1113 - 0

/* This allows UTF8String, IA5String, VisibleString, or BMPString;
 * conversion to UTF-8 is forced. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1139 - 0

/* We accept the "e;extension"e; string to be converted as
 * a long name (nsComment), short name (DN) or
 * numeric OID (1.2.3.4).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1167 - 0

/* We want to obtain a string representation of the extensions
 * value and add it to the array we're building.
 * X509V3_EXT_print() doesn't know about all the possible
 * data types, but the value is stored as an ASN1_OCTET_STRING
 * allowing us a fallback in case of X509V3_EXT_print
 * not knowing how to handle the data.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1193 - 0

/* only SSL_get_peer_certificate raises the refcount */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1218 - 0

/* Defined by RFC 3749, deflate is coded by "e;1"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1223 - 0

/* IANA assigned compression number for LZS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1237 - 0

/* _________________________________________________________________
**
** SSL Extension to mod_log_config
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1248 - 0

/*
 * register us for the mod_log_config function registering phase
 * to establish %{...}c and to be able to expand %{...}x variables.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1265 - 0

/*
 * implement the %{..}c log function
 * (we are the only function)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_engine_vars.c:1294 - 0

/*
 * extend the implementation of the %{..}x log function
 * (there can be more functions)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_scache.c:122 - 0

/* Serialise the session. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_scache.c:192 - 0

/* _________________________________________________________________
**
** SSL Extension to mod_status
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:36 - 0

/* _________________________________________________________________
**
** Utility Functions
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:63 - 0

/*
 * Return TRUE iff the given servername matches the server record when
 * selecting virtual hosts.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:72 - 0

/* check ServerName */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:77 - 0

/*
 * if not matched yet, check ServerAlias entries
 * (adapted from vhost.c:matches_aliases())
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:93 - 0

/* if still no match, check ServerAlias entries with wildcards */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:137 - 0

/*
 * Run a filter program and read the first line of its stdout output
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:151 - 0

/* XXX: we are reading 1 byte at a time here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:205 - 0

/* XXX: realloc? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:211 - 0

/* used as a note for encrypted private keys */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:222 - 0

/* caller will assign a value to this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:270 - 0

/* Dynamic lock structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:278 - 0

/* Global reference to the pool passed into ssl_util_thread_setup() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:281 - 0

/*
 * Dynamic lock creation callback
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:302 - 0

/* Keep our own copy of the place from which we were created,
 using our own pool. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:342 - 0

/*
 * Dynamic lock destruction callback
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:359 - 0

/* Trust that whomever owned the CRYPTO_dynlock_value we were
 * passed has no future use for it...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:369 - 0

/* OpenSSL needs this to return an unsigned long. On OS/390, the pthread
 * id is a structure twice that big. Use the TCB pointer instead as a
 * unique unsigned long.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:389 - 0

/* OpenSSL needs this to return an unsigned long. On OS/390, the pthread
 * id is a structure twice that big. Use the TCB pointer instead as a
 * unique unsigned long.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util.c:422 - 0

/* Let the registered mutex cleanups do their own thing
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:28 - 0

/* Serialize an OCSP request which will be sent to the responder at
 * given URI to a memory BIO object, which is returned. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:77 - 0

/* establish a connection to the OCSP responder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:81 - 0

/* Cycle through address until a connect() succeeds. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:102 - 0

/* send the request and get a response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:175 - 0

/* Maximum values to prevent eating RAM forever. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:191 - 0

/* Using brigades for response parsing is much simpler than using
 * apr_socket_* directly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:207 - 0

/* Read till end of headers; don't have to even bother parsing the
 * Content-Length since the server is obliged to close the
 * connection after the response anyway for HTTP/1.0. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:229 - 0

/* Read the response body into the memory BIO. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:272 - 0

/* Finally decode the OCSP response from what's stored in the
 * bio. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ocsp.c:319 - 0

/* HAVE_OCSP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:29 - 0

/* _________________________________________________________________
**
** Additional High-Level Functions for OpenSSL
** _________________________________________________________________
*/

/* we initialize this index at startup time
 * and never write to it at request time,
 * so this static is thread safe.
 * also note that OpenSSL increments at static variable when
 * SSL_get_ex_new_index() is called, so we _must_ do this at startup.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:51 - 0

/* we _do_ need to call this twice */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:71 - 0

/* _________________________________________________________________
**
** High-Level Private Key Loading
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:83 - 0

/* 1. try PEM (= DER+Base64+headers) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:90 - 0

/* 2. try DER+Base64 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:103 - 0

/* 3. try plain DER */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:118 - 0

/* _________________________________________________________________
**
** Smart shutdown
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:139 - 0

/* max 2x pending + 2x data = 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:174 - 0

/* unlimited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:193 - 0

/* convert an ASN.1 string to a UTF-8 string (escaping control characters) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:215 - 0

/* convert a NAME_ENTRY to UTF8 string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:242 - 0

/* insert trailing ellipsis if there's enough space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:264 - 0

/* 
 * Currently supported otherName forms (values for "e;onf"e;):
 * "e;msUPN"e; (1.3.6.1.4.1.311.20.2.3): Microsoft User Principal Name
 * "e;id-on-dnsSRV"e; (1.3.6.1.5.5.7.8.7): SRVName, as specified in RFC 4985
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:332 - 0

/*
 * Not implemented right now:
 * GEN_X400 (x400Address)
 * GEN_DIRNAME (directoryName)
 * GEN_EDIPARTY (ediPartyName)
 * GEN_URI (uniformResourceIdentifier)
 * GEN_IPADD (iPAddress)
 * GEN_RID (registeredID)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:354 - 0

/* return an array of (RFC 6125 coined) DNS-IDs and CN-IDs in a certificate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:360 - 0

/* First, the DNS-IDs (dNSName entries in the subjectAltName extension) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:367 - 0

/* Second, the CN-IDs (commonName attributes in the subject DN) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:408 - 0

/*
 * Determine if it is a wildcard ID - we're restrictive
 * in the sense that we require the wildcard character to be
 * THE left-most label (i.e., the ID must start with "e;*."e;)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:415 - 0

/*
 * If the ID includes a wildcard character (and the caller is
 * allowing wildcards), check if it matches for the left-most
 * DNS label - i.e., the wildcard character is not allowed
 * to match a dot. Otherwise, try a simple string compare.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:453 - 0

/* _________________________________________________________________
**
** Custom (EC)DH parameter support
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_ssl.c:485 - 0

/* _________________________________________________________________
**
** Session Stuff
** _________________________________________________________________
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:40 - 0

/**
 * Maxiumum OCSP stapling response size. This should be the response for a
 * single certificate and will typically include the responder certificate chain
 * so 10K should be more than enough.
 *
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:53 - 0

/* Certificate ID for OCSP request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:55 - 0

/* URI of the OCSP responder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:162 - 0

/* At this point, we have determined that there's something to store */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:166 - 0

/* make sure cid is also freed at pool cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:170 - 0

/* allocate uri from the pconf pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:216 - 0

/* includes one-byte flag + response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:230 - 0

/* response + ok flag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:301 - 0

/* valid when stored */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:357 - 0

/* If we can't parse response just pass it to client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:365 - 0

/* If ID not present pass back to client (if configured so) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:443 - 0

/* Build up OCSP query from server certificate info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:456 - 0

/* Add any extensions to the request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:476 - 0

/* Create a temporary pool to constrain memory use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:571 - 0

/* always need stapling_refresh_mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/ssl/ssl_util_stapling.c:841 - 0

/* Set some default values for parameters if they are not set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_dialup.c:63 - 0

/* XXXXXX: Log me. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_dialup.c:147 - 0

/* See core.c, default handler for all of the cases we just decline. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_dialup.c:181 - 0

/* copied from default handler: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:56 - 0

/* whether the filters should do anything at all */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:61 - 0

/* value to trigger logging only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:62 - 0

/* value to suspend policy enforcement */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:65 - 0

/* content type default patterns to match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:78 - 0

/* Vary default patterns to match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:107 - 0

/**
 * Does the value of a flagpole override the original value?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:201 - 0

/* content type present and valid? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:254 - 0

/**
 * Policy for Content-Length.
 *
 * - It must be present (missing, or Transfer-Encoding: chunked would be rejected)
 * - Only applies to 2xx result codes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:378 - 0

/* Vary present and valid? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:401 - 0

/**
 * Policy for Validation.
 *
 * Validation is possible through either the ETag or Last-Modified header, as described
 * in http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.3.
 *
 * - Either must be present
 * - Last-Modified, if present, must parse to a valid date
 * - ETag, if present, must parse to a valid ETag.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:476 - 0

/**
 * Policy for Revalidation through Conditional Requests.
 *
 * The If-None-Match header is described in
 * http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26. Over and above the
 * checks done in the validation filter, the conditional filter detects when an
 * If-None-Match header is present in the request, an ETag is present in the response,
 * and the response code is unexpected given the match. A result code is unexpected
 * where a 304 Not Modified or 412 Precondition Failed was expected, but a 200 response
 * was seen instead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:672 - 0

/* test s-maxage, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:687 - 0

/* decision is made, leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:692 - 0

/* test max-age, if present */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:707 - 0

/* decision is made, leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:759 - 0

/* decision is made, leave */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:792 - 0

/**
 * Policy for HTTP Version.
 *
 * - The HTTP version of the response must be at least the level specified.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:984 - 0

/* url is only used inside <a href="e;..."e;>, escape accordingly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1298 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1299 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1300 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1301 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1302 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/modules/test/mod_policy.c:1303 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:49 - 0

/*00*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:50 - 0

/*................*/
/*10*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:52 - 0

/*................*/
/*20*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:54 - 0

/*................*/
/*30*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:56 - 0

/*................*/
/*40*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:58 - 0

/* .........`.<(+|*/
/*50*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:60 - 0

/*&.........!$*);.*/
/*60*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:62 - 0

/*-/........^,%_>?*/
/*70*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:64 - 0

/*..........:#@'="e;*/
/*80*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:66 - 0

/*.abcdefghi......*/
/*90*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:68 - 0

/*.jklmnopqr......*/
/*a0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:70 - 0

/*..stuvwxyz......*/
/*b0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:72 - 0

/*...........[\]..*/
/*c0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:74 - 0

/*.ABCDEFGHI......*/
/*d0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:76 - 0

/*.JKLMNOPQR......*/
/*e0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:78 - 0

/*..STUVWXYZ......*/
/*f0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:80 - 0

/*0123456789.{.}.~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:98 - 0

/*00*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:99 - 0

/*................*/
/*10*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:101 - 0

/*................*/
/*20*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:103 - 0

/*................*/
/*30*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:105 - 0

/*................*/
/*40*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:107 - 0

/* .........`.<(+|*/
/*50*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:109 - 0

/*&.........!$*);.*/
/*60*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:111 - 0

/*-/........^,%_>?*/
/*70*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:113 - 0

/*..........:#@'="e;*/
/*80*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:115 - 0

/*.abcdefghi......*/
/*90*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:117 - 0

/*.jklmnopqr......*/
/*a0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:119 - 0

/*..stuvwxyz......*/
/*b0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:121 - 0

/*...........[\]..*/
/*c0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:123 - 0

/*.ABCDEFGHI......*/
/*d0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:125 - 0

/*.JKLMNOPQR......*/
/*e0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:127 - 0

/*..STUVWXYZ......*/
/*f0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:129 - 0

/*0123456789.{.}.~*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:132 - 0

/* The ascii-to-ebcdic table:
00 00 01 02 03 37 2d 2e 2f 16 05 15 0b 0c 0d 0e 0f *................*
10 10 11 12 13 3c 3d 32 26 18 19 3f 27 1c 1d 1e 1f *................*
20 40 5a 7f 7b 5b 6c 50 7d 4d 5d 5c 4e 6b 60 4b 61 * !"e;#$%&'()*+,-./
30 f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 7a 5e 4c 7e 6e 6f *0123456789:;<=>?*
40 7c c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 *@ABCDEFGHIJKLMNO*
50 d7 d8 d9 e2 e3 e4 e5 e6 e7 e8 e9 bb bc bd 6a 6d *PQRSTUVWXYZ[\]^_*
60 4a 81 82 83 84 85 86 87 88 89 91 92 93 94 95 96 *`abcdefghijklmno*
70 97 98 99 a2 a3 a4 a5 a6 a7 a8 a9 fb 4f fd ff 07 *pqrstuvwxyz{|}~.*
80 20 21 22 23 24 04 06 08 28 29 2a 2b 2c 09 0a 14 *................*
90 30 31 25 33 34 35 36 17 38 39 3a 3b 1a 1b 3e 5f *................*
a0 41 aa b0 b1 9f b2 d0 b5 79 b4 9a 8a ba ca af a1 *................*
b0 90 8f ea fa be a0 b6 b3 9d da 9b 8b b7 b8 b9 ab *................*
c0 64 65 62 66 63 67 9e 68 74 71 72 73 78 75 76 77 *................*
d0 ac 69 ed ee eb ef ec bf 80 e0 fe dd fc ad ae 59 *................*
e0 44 45 42 46 43 47 9c 48 54 51 52 53 58 55 56 57 *................*
f0 8c 49 cd ce cb cf cc e1 70 c0 de db dc 8d 8e df *................*
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:151 - 0

/*00*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:152 - 0

/*................*/
/*10*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:154 - 0

/*................*/
/*20*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:156 - 0

/* !"e;#$%&'()*+,-./ */
/*30*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:158 - 0

/*0123456789:;<=>?*/
/*40*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:160 - 0

/*@ABCDEFGHIJKLMNO*/
/*50*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:162 - 0

/*PQRSTUVWXYZ[\]^_*/
/*60*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:164 - 0

/*`abcdefghijklmno*/
/*70*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:166 - 0

/*pqrstuvwxyz{|}~.*/
/*80*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:168 - 0

/*................*/
/*90*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:170 - 0

/*................*/
/*a0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:172 - 0

/*................*/
/*b0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:174 - 0

/*................*/
/*c0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:176 - 0

/*................*/
/*d0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:178 - 0

/*................*/
/*e0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:180 - 0

/*................*/
/*f0*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:182 - 0

/*................*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/ebcdic.c:210 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:37 - 0

/* not initialized yet. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:38 - 0

/* no fork() because -X flag was specified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:39 - 0

/* only fork() because uid != 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:40 - 0

/* Normally, ufork() is used to switch identities. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:45 - 0

/* Determine the method for forking off a child in such a way as to
 * set both the POSIX and BS2000 user id's to the unprivileged user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:54 - 0

/* not initialized yet */

 /* No fork if the one_process option was set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:60 - 0

/* If the user is unprivileged, use the normal fork() only. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:80 - 0

/* We can be sure that no change to uid==0 is possible because of
 * the checks in http_core.c:set_user()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:112 - 0

/* Make user name all upper case - for some versions of ufork() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:132 - 0

/* _OSD_POSIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/bs2000/os.c:136 - 0

/* _OSD_POSIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/modules.c:48 - 0

/* core must come first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:49 - 0

/* down server event callback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:56 - 0

/* Required place holder event callback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:62 - 0

/* destroy callback resources */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:65 - 0

/* cleanup down event notification */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:97 - 0

/* register for down server event */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/netware/util_nw.c:107 - 0

/* clean-up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:35 - 0

/* XXX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:64 - 0

/* If your platform doesn't define rlim_t then typedef it in ap_config.h */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:146 - 0

/* Allow suexec's "e;/"e; check to succeed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:170 - 0

/* allocate space for 4 new args, the input args, and a null terminator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:178 - 0

/*
 ** using a shell to execute suexec makes no sense thus
 ** we force everything to be APR_PROGRAM, and never
 ** APR_SHELLCMD
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:212 - 0

/* XXX move to APR and externalize (but implement differently :) ) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:264 - 0

/* no gid change */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:272 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:285 - 0

/* APR_PROC_MUTEX_IS_GLOBAL */
 /* In this case, apr_proc_mutex_t and apr_global_mutex_t are the same. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:288 - 0

/* APR_PROC_MUTEX_IS_GLOBAL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:417 - 0

/*ENETDOWN*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:445 - 0

/* not initialized yet. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:446 - 0

/* no fork() because -X flag was specified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:447 - 0

/* only fork() because uid != 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:448 - 0

/* Normally, ufork() is used to switch identities. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:453 - 0

/* Determine the method for forking off a child in such a way as to
 * set both the POSIX and BS2000 user id's to the unprivileged user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:462 - 0

/* not initialized yet */

 /* No fork if the one_process option was set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:468 - 0

/* If the user is unprivileged, use the normal fork() only. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:488 - 0

/* We can be sure that no change to uid==0 is possible because of
 * the checks in http_core.c:set_user()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:520 - 0

/* Make user name all upper case - for some versions of ufork() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/unix/unixd.c:540 - 0

/* _OSD_POSIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:92 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:149 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:184 - 0

/* Retrieve a registry string value, and explode any envvars
 * that the system has configured (e.g. %SystemRoot%/someapp.exe)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:204 - 0

/* Read to NULL buffer to determine value size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:214 - 0

/* Read value based on size query above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:225 - 0

/* The size returned by ExpandEnvironmentStringsW is wchars */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:231 - 0

/* count wchars from RegQueryValueExW, rather than bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:246 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:250 - 0

/* Read to NULL buffer to determine value size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:260 - 0

/* Read value based on size query above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:266 - 0

/* Advise ExpandEnvironmentStrings that we have a zero char
 * buffer to force computation of the required length.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:289 - 0

/* Retrieve a registry string value, and explode any envvars
 * that the system has configured (e.g. %SystemRoot%/someapp.exe)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:319 - 0

/* The size is the number of wchars consumed by apr_conv_utf8_to_ucs2
 * converted to bytes; the trailing L'\0' continues to be counted.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:328 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:348 - 0

/* Retrieve a registry string value, and explode any envvars
 * that the system has configured (e.g. %SystemRoot%/someapp.exe)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:365 - 0

/* Read to NULL buffer to determine value size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:372 - 0

/* Read value based on size query above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:377 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:381 - 0

/* Read to NULL buffer to determine value size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:387 - 0

/* Read value based on size query above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:428 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:448 - 0

/* Retrieve a registry string value, and explode any envvars
 * that the system has configured (e.g. %SystemRoot%/someapp.exe)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:487 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:504 - 0

/* Element Count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:531 - 0

/* Retrieve a registry string value, and explode any envvars
 * that the system has configured (e.g. %SystemRoot%/someapp.exe)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:546 - 0

/* For trailing second null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:572 - 0

/* Trailing second null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:577 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:584 - 0

/* For trailing second null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:601 - 0

/* Trailing second null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:629 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/ap_regkey.c:642 - 0

/* defined WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/modules.c:32 - 0

/* core must come first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/util_win32.c:53 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/util_win32.c:57 - 0

/* share the same scratch buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/os/win32/util_win32.c:106 - 0

/* To share the semaphores with other processes, we need a NULL ACL
 * Code from MS KB Q106387
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:67 - 0

/* name is not an attr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:70 - 0

/* version; value is not an attr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:122 - 0

/* httponly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:165 - 0

/* session cookie is the default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:216 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:268 - 0

/* value is not wrapped in quotes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:338 - 0

/* this is the normal exit point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:373 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:424 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:442 - 0

/* XXX protocol enforcement (for debugging, anyway) ??? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_cookie.c:487 - 0

/* c->version == RFC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_error.c:62 - 0

/* 20's: missing input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module.c:65 - 0

/** @} */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:29 - 0

/* Parroting APLOG_* ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:33 - 0

/* critical conditions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:35 - 0

/* warning conditions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:36 - 0

/* normal but significant condition */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:38 - 0

/* debug-level messages */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:150 - 0

/* Array of current arg for given p-level */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:201 - 0

/* Handle this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:212 - 0

/* else? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:223 - 0

/* If old curarg was set, concat buffer with level down */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:234 - 0

/* Fallthrough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:247 - 0

/* if (strcmp(buf[0], nullstr)) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:249 - 0

/* return NULL; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:274 - 0

/* strlen("e;HTTP_"e;) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:523 - 0

/** Fallthrough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:568 - 0

/** Fallthrough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:682 - 0

/** Fallthrough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:694 - 0

/*loop*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:751 - 0

/* Not seen yet, so we need to scan for
 param while prefetching the body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:789 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:963 - 0

/** handle else? (!SUCCESS && !ENOENT) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_module_cgi.c:983 - 0

/* check pool's userdata first. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_param.c:184 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_param.c:196 - 0

/* keep going */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_param.c:240 - 0

/* keep going */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_param.c:259 - 0

/* upload found, stop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_param.c:262 - 0

/* keep searching */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser.c:206 - 0

/* generic parser */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:48 - 0

/********************* header parsing utils ********************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:71 - 0

/*drop (CR)LF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:82 - 0

/* store name in a temporary iovec array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:99 - 0

/* skip gap */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:111 - 0

/* copy value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:135 - 0

/* write name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:178 - 0

/* parse the brigade for CRLF_CRLF-terminated header block,
 * each time starting from the front of the brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:189 - 0

/* silences gcc-4.0 warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:207 - 0

/* gap nlen = 13
 * vvv glen = 3
 * Sample-Header: grape vlen = 5
 * ^^^^^^^^^^^^^ ^^^^^
 * name value
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:311 - 0

/* can parse brigade now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:333 - 0

/* cases ' ', '\t' fall through to HDR_CONTINUE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_header.c:359 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:39 - 0

/* maximum recursion level in the mfd parser */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:68 - 0

/********************* multipart/form-data *********************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:107 - 0

/* slen > 0, so brigade isn't large enough yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:143 - 0

/* complete match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:155 - 0

/* partial match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:228 - 0

/* missing semicolon */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:235 - 0

/* missing boundary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:297 - 0

/* Be polite and return any preamble text to the caller. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:301 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:331 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:337 - 0

/* flush out header parser internal structs for reuse */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:353 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:382 - 0

/* part has no body- return CRLF to front */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:389 - 0

/* has body, ok */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:394 - 0

/* First check to see if must descend into a new multipart
 * block. If we do, create a new parser and pass control
 * to it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:443 - 0

/* Look for a normal form-data part. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:470 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:474 - 0

/* else check for a file part in a multipart section */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:497 - 0

/* otherwise look for Content-ID in multipart/mixed case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:524 - 0

/* fall through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:582 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:634 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_multipart.c:654 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_urlencoded.c:47 - 0

/******************** application/x-www-form-urlencoded ********************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_parser_urlencoded.c:268 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:30 - 0

/* used for specifying file sizes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:47 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:49 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:51 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:59 - 0

/* converts date offsets (e.g. "e;+3M"e;) to seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:75 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:78 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:80 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:83 - 0

/* fall thru */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:87 - 0

/* should never get here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:126 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:134 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:152 - 0

/* We only need to deal with iso-8859-1 control chars
 * in the 0x80 - 0x9F range.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:190 - 0

/* converts cp1252 to utf8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:267 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:278 - 0

/* do nothing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:281 - 0

/* utf8 cases */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:337 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:347 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:618 - 0

/* Allocated the required space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:629 - 0

/* nothing special required, just here to keep noisy compilers happy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:712 - 0

/* try to write */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:720 - 0

/* see how far we've come */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:733 - 0

/*
 * Sun C however defines this as size_t which is unsigned
 * 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:738 - 0

/* !__GNUC__ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:740 - 0

/*
 * Hopefully everything else does this
 * (this was the default for years)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:749 - 0

/* nothing left to write, report success */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:759 - 0

/* we're satisfied for now if we can remove one iovec from
 the "e;v"e; array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:767 - 0

/* we're still in the first iovec - check for endless loop,
 and then try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:820 - 0

/* cleanups are LIFO, so this one will run just after
 the cleanup set by mktemp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:825 - 0

/* NO APR_DELONCLOSE! see comment above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:1022 - 0

/* This cast, when out_len = -1, is intentional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:1029 - 0

/* This cast, when in_len = -1, is intentional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:1076 - 0

/* We have to deal with the possibility that the new
 * data may be too large to be represented by a single
 * temp_file bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/apreq_util.c:1090 - 0

/* Copying makes the bucket types exactly the
 * opposite of what we need here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:48 - 0

/* for default_handler (see invoke_handler) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:56 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:198 - 0

/****************************************************************
 *
 * We begin with the functions which deal with the linked list
 * of modules which control just about all of the server operation.
 */

/* total_modules is the number of modules that have been linked
 * into the server.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:234 - 0

/* a list of the module symbol names with the trailing "e;_module"e;removed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:249 - 0

/* maximum nesting level for config directories */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:328 - 0

/* Can reuse the 'virt' vector for the spine of it, since we don't
 * have to deal with the moral equivalent of .htaccess files here...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:422 - 0

/* strip trailing spaces */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:443 - 0

/* ap_die() knows about this specifically */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:469 - 0

/*
 * A method number either hardcoded into apache or
 * added by a module and registered.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:477 - 0

/* not found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:547 - 0

/* One-time setup for precompiled modules --- NOT to be done on restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:554 - 0

/* This could be called from a LoadModule httpd.conf command,
 * after the file has been linked and the module structure within it
 * teased out...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:573 - 0

/*
 * If this fails some module forgot to call ap_reserve_module_slots*.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:611 - 0

/* Some C compilers put a complete path into __FILE__, but we want
 * only the filename (e.g. mod_includes.c). So check for path
 * components (Unix and DOS), and remove them.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:623 - 0

/* __FILE__ =
 * "e;*POSIX(/home/martin/apache/src/modules/standard/mod_info.c)"e;
 */

 /* We cannot fix the string in-place, because it's const */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:629 - 0

/* FIXME: memory leak, albeit a small one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:634 - 0

/*_OSD_POSIX*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:637 - 0

/* FIXME: is this the right place to call this?
 * It doesn't appear to be
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:659 - 0

/* We are the top module, special case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:673 - 0

/* Uh-oh, this module doesn't exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:700 - 0

/*
 * Add module pointer to top of chained module list
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:730 - 0

/*
 * Remove module pointer from chained module list
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:764 - 0

/*
 * Initialise total_modules variable and module indices
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:774 - 0

/*
 * Initialise list of loaded modules and short names
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:794 - 0

/*
 * Initialize chain of linked (=activate) modules
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:833 - 0

/*****************************************************************
 *
 * Resource, access, and .htaccess config files now parsed by a common
 * command loop.
 *
 * Let's begin with the basics; parsing the line and
 * invoking the function...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1022 - 0

/*
 * This is safe to use temp_pool here, because the 'flag' itself is not
 * forwarded as-is
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1079 - 0

/* ### need to fix the create_dir_config functions' prototype... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1122 - 0

/* Note: this branch should not occur. An empty line should have
 * triggered the exit further above.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1210 - 0

/* done with this section; move up a level */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1311 - 0

/* Once was enough? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1342 - 0

/* scan through all directives, executing each one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1351 - 0

/* restore the context (just in case) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1439 - 0

/*
 * Generic command functions...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1512 - 0

/* Prepend server_root to relative arg.
 * This allows most args to be independent of server_root,
 * so the server can be moved or mirrored with less pain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1560 - 0

/*****************************************************************
 *
 * Reading whole config files...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1631 - 0

/* found end of container */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1690 - 0

/* This structure and the following functions are needed for the
 * table-based config file reading. They are passed to the
 * cfg_open_custom() routine.
 */

/* Structure to be passed to cfg_open_custom(): it contains an
 * index which is incremented from 0 to nelts on each call to
 * cfg_getline() (which in turn calls arr_elts_getstr())
 * and an apr_array_header_t pointer for the string array.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1706 - 0

/* arr_elts_getstr() returns the next line from the string array. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1712 - 0

/* End of array reached? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1716 - 0

/* return the line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1724 - 0

/* arr_elts_close(): dummy close routine (makes sure no more lines can be read) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1854 - 0

/*
 * first course of business is to grok all the directory
 * entries here and store 'em away. Recall we need full pathnames
 * for this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1867 - 0

/* strip out '.' and '..' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1918 - 0

/* find the first part of the filename */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1940 - 0

/*
 * first course of business is to grok all the directory
 * entries here and store 'em away. Recall we need full pathnames
 * for this.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1953 - 0

/* strip out '.' and '..' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:1959 - 0

/* If matching internal to path, and we happen to match something
 * other than a directory, skip it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2036 - 0

/* locate the start of the directories proper */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2039 - 0

/* we allow APR_SUCCESS and APR_EINCOMPLETE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2047 - 0

/* walk the filepath */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2122 - 0

/* loop through the access names and find the first one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2173 - 0

/* add to head of list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2200 - 0

/* useful default, otherwise we get a port of 0 on redirects */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2295 - 0

/* XXX: this is really something that should be dealt with by a
 * post-config api phase
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2304 - 0

/*****************************************************************
 *
 * Getting *everything* configured...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2311 - 0

/* Global virtual host hash bucket pointers. Init to null. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2339 - 0

/* NOT virtual host; don't match any real network interface */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2343 - 0

/* should we test here for rv being an EAIERR? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2349 - 0

/* matches any port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2350 - 0

/* must be non-NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2405 - 0

/* All server-wide config files now have the SAME syntax... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2414 - 0

/* process_command_config may change the ServerRoot so
 * compute this config file name afterwards.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2508 - 0

/* Warn if the directive is allowed inside <Directory> or .htaccess
 * but module doesn't support per-dir configuration
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/config.c:2584 - 0

/* Show the preloaded module names. Used for httpd -l. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:76 - 0

/* FLUSH bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:81 - 0

/* End Of Connection bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/connection.c:131 - 0

/* Shut down the socket for write, which will send a FIN
 * to the peer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:22 - 0

/* for RLIMIT stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:34 - 0

/* For index_of_response(). Grump. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:37 - 0

/* For the default_handler below... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:53 - 0

/* for ap_find_loaded_module_symbol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:62 - 0

/* LimitRequestBody handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:66 - 0

/* LimitXMLRequestBody handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:72 - 0

/* maximum include nesting level */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:113 - 0

/* Handles for core filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:120 - 0

/* Provide ap_document_root_check storage and default value = true */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:144 - 0

/* conf->r and conf->d[_*] are initialized by dirsection() or left NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:212 - 0

/* Create this conf by duplicating the base, replacing elements
 * (or creating copies for merging) where new-> values exist.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:271 - 0

/* Otherwise we simply use the base->response_code_exprs array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:323 - 0

/* If we merge, the merge-result must have its own array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:327 - 0

/* Otherwise we simply use the base->sec_file array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:334 - 0

/* If we merge, the merge-result must have its own array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:338 - 0

/* Otherwise we simply use the base->sec_if array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:371 - 0

/*
 * Now merge the setting of the FileETag directive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:447 - 0

/* global-default / global-only settings */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:453 - 0

/* A mapping only makes sense in the global context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:463 - 0

/* pcalloc'ed - we have NULL's/0's
 else ** is_virtual ** {
 conf->ap_document_root = NULL;
 conf->access_name = NULL;
 conf->accf_map = NULL;
 }
 */

 /* initialization, no special case for global context */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:533 - 0

/* no action for virt->accf_map, not allowed per-vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:578 - 0

/* Add per-directory configuration entry (for <directory> section);
 * these are part of the core server config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:642 - 0

/* We need to do a stable sort, qsort isn't stable. So to make it stable
 * we'll be maintaining the original index into the list, and using it
 * as the minor key during sorting. The major key is the number of
 * components (where the root component is zero).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:662 - 0

/* a regex always sorts after a non-regex
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:671 - 0

/* we always sort next by the number of components
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:680 - 0

/* They have the same number of components, we now have to compare
 * the minor key to maintain the original order (from the config.)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:710 - 0

/* we have to allocate tmp space to do a stable sort */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:720 - 0

/* and now copy back to the original array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:794 - 0

/* Don't use this! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:851 - 0

/* check for string registered via ap_custom_response() first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:857 - 0

/* check for string specified via ErrorDocument */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:870 - 0

/* special token to indicate revert back to default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:889 - 0

/* Code from Harald Hanche-Olsen <hanche@imf.unit.no> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:901 - 0

/* single reverse failed, so don't bother */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:927 - 0

/* caller doesn't want to know */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:932 - 0

/* If we haven't checked the host name, and we want to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:942 - 0

/* the default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:976 - 0

/*
 * Return the desired information; either the remote DNS name, if found,
 * or either NULL (if the hostname was requested) or the IP address
 * (if any identifier was requested).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1093 - 0

/* USE_CANONICAL_PHYS_PORT_OFF or USE_CANONICAL_PHYS_PORT_UNSET */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1099 - 0

/* With UseCanonicalName on (and in all versions prior to 1.3)
 * Apache will use the hostname and port specified in the
 * ServerName directive to construct a canonical name for the
 * server. (If no port was specified in the ServerName
 * directive, Apache uses the port supplied by the client if
 * any is supplied, and finally the default port for the protocol
 * used.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1111 - 0

/* USE_CANONICAL_PHYS_PORT_OFF or USE_CANONICAL_PHYS_PORT_UNSET */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1132 - 0

//"e;, host, uri, NULL); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1135 - 0

//%s:%u%s"e;, ap_http_scheme(r), host, port, uri); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1151 - 0

/*****************************************************************
 *
 * Commands... this module handles almost all of the NCSA httpd.conf
 * commands, but most of the old srm.conf is in the modules.
 */


/* returns a parent if it matches the given directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1165 - 0

/* ### it would be nice to have atom-ized directives */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1275 - 0

/* prepare next entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1325 - 0

/* assemble result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1357 - 0

/* Use apr_array_copy instead of apr_array_copy_hdr because it does not
 * protect from the way unset_define removes entries.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1432 - 0

/* get position information from wherever we can? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1465 - 0

/* message displayed above, return will stop configuration processing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1484 - 0

/*GPROF*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1517 - 0

/* When ap_document_root_check is false; skip all the stuff below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1523 - 0

/* Make it absolute, relative to ServerRoot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1529 - 0

/* TODO: ap_configtestonly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1575 - 0

/* 1st parameter should be a 3 digit number, which we recognize;
 * convert it into an array index
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1606 - 0

/* Store it... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1671 - 0

/* If Includes is permitted, both Includes and
 * IncludesNOEXEC may be changed. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1718 - 0

/* Throw a warning if we're in <Location> or <Files> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1807 - 0

/* Throw a warning if we're in <Location> or <Files> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1911 - 0

/* Only works since None may not follow any other option. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1921 - 0

/* Only works since All may not follow any other option. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:1996 - 0

/*
 * Note what data should be used when forming file ETag values.
 * It would be nicer to do this as an ITERATE, but then we couldn't
 * remember the +/- state properly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2028 - 0

/*
 * The occurrence of an absolute setting wipes
 * out any previous relative ones. The first such
 * occurrence forgets any inherited ones, too.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2083 - 0

/*
 * Make sure it's in the 'add' list and absent from the
 * 'subtract' list.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2095 - 0

/*
 * Non-relative values wipe out any + or - values
 * accumulated so far.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2209 - 0

/* check for builtin or module registered method number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2300 - 0

/* <DirectoryMatch> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2325 - 0

/* initialize our config and fetch it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2392 - 0

/* <LocationMatch> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2406 - 0

/* initialize our config and fetch it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2414 - 0

/* No mangling, please */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2464 - 0

/* Only if not an .htaccess file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2469 - 0

/* <FilesMatch> */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2493 - 0

/* initialize our config and fetch it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2550 - 0

/*
 * Set a dummy value so that other directives notice that they are inside
 * a config section.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2555 - 0

/* Only if not an .htaccess file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2560 - 0

/* initialize our config and fetch it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2614 - 0

/* search prelinked stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2626 - 0

/* search dynamic stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2738 - 0

/* httpd.conf commands... beginning with the <VirtualHost> business */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2763 - 0

/* FIXME: There's another feature waiting to happen here -- since you
 can now put multiple addresses/names on a single <VirtualHost>
 you might want to use it to group common definitions and then
 define other "e;subhosts"e; with their individual differences. But
 personally I'd rather just do it with a macro preprocessor. -djg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2871 - 0

/* This one's pretty generic... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2909 - 0

//"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:2926 - 0

/* 65536 == 1<<16 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3016 - 0

/* for compatibility with 2.0 & 2.2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3180 - 0

/* recursion level done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3337 - 0

/* eg: Apache/2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3338 - 0

/* eg. Apache/2.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3339 - 0

/* eg: Apache/2.0.41 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3340 - 0

/* eg: Apache/2.0.41 (UNIX) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3341 - 0

/* eg: Apache/2.0.41 (UNIX) PHP/4.2.2 FooBar/1.2b */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3342 - 0

/* eg: Apache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3377 - 0

/*
 * If the version string is null, register our cleanup to reset the
 * pointer on pool destruction. We also know that, if NULL,
 * we are adding the original SERVER_BASEVERSION string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3388 - 0

/*
 * Tack the given component identifier to the end of
 * the existing string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3422 - 0

/*
 * Lock the server_banner string if we're not displaying
 * the full set of tokens
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3776 - 0

/* uuh, too much. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3784 - 0

/* post backtrace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3787 - 0

/* return failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3796 - 0

/* uuh, too much. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3804 - 0

/* post backtrace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3807 - 0

/* return failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3815 - 0

/* recursion state: ok */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:3998 - 0

/*
 * non-leading white space terminates this string to allow the next field
 * separator to be inserted
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4030 - 0

/* handle end of string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4034 - 0

/* copy next char verbatim */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4064 - 0

/* percent-space (% ) is a field separator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4067 - 0

/* recurse */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4188 - 0

/* Stay backward compatible and check for "e;syslog"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4190 - 0

/* skip the ':' if any */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4293 - 0

/* Note --- ErrorDocument will now work from .htaccess files.
 * The AllowOverride of Fileinfo allows webmasters to turn it off
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4299 - 0

/* Old access config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4354 - 0

/* Old resource config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4379 - 0

/* Old server config file commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4421 - 0

/* TODO: RlimitFoo should all be part of mod_cgi, not in the core */
/* TODO: ListenBacklog in MPM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4465 - 0

/* System Resource Controls */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4491 - 0

/* internal recursion stopper */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4516 - 0

/* scoreboard.c directives */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4525 - 0

/*
 * These are default configuration directives that mpms can/should
 * pay attention to.
 * XXX These are not for all platforms, and even some Unix MPMs might not want
 * some directives.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4572 - 0

/*****************************************************************
 *
 * Core handlers for various phases of server operation...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4582 - 0

/* XXX this seems too specific, this should probably become
 * some general-case test
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4605 - 0

/*
 * Make sure that we do not mess up the translation by adding two
 * /'s in a row. This happens under windows when the document
 * root ends with a /
 */
 /* skip all leading /'s (e.g. http://localhost///foo)
 * so we are looking at only the relative path.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4629 - 0

/*****************************************************************
 *
 * Test the filesystem name through directory_walk and file_walk
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4751 - 0

/* default to reject */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4758 - 0

/* We understood the (non-GET) method, but it might not be legal for
 this particular resource. Check to see if the 'deliver_script'
 flag is set. If so, then we go ahead and deliver the file since
 it isn't really content (only GET normally returns content).

 Note: based on logic further above, the only possible non-GET
 method at this point is POST. In the future, we should enable
 script delivery for all methods. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4771 - 0

/* The flag hasn't been set for this request. Punt. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4833 - 0

/* unusual method (not GET or POST) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4835 - 0

/* See if this looks like an undecrypted SSL handshake attempt.
 * It's safe to look a couple bytes into the_request if it exists, as it's
 * always allocated at least MIN_LINE_ALLOC (80) bytes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:4864 - 0

/* Insist that at least one module will undertake to provide system
 * security by dropping startup privileges.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5011 - 0

/* Alloc the config struct and the array of request notes in
 * a single block for efficiency
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5054 - 0

/* Got a connection structure, so initialize what fields we can
 * (the rest are zeroed out by pcalloc).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5156 - 0

/* only the master connection talks to the network */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5215 - 0

/* The MPMs use plain fork() and not apr_proc_fork(), so we have to call
 * apr_random_after_fork() manually in the child
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5279 - 0

/*
 * Finding a random number in a range.
 * n' = a + n(b-a+1)/(M+1)
 * where:
 * n' = random number in range
 * a = low end of range
 * b = high end of range
 * n = random number of 0..M
 * M = maxint
 * Algorithm 'borrowed' from PHP's rand() function.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5397 - 0

/* Let the client know what we are upgrading to. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5408 - 0

/* make sure httpd closes the connection after this */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5448 - 0

/* create_connection and pre_connection should always be hooked
 * APR_HOOK_REALLY_LAST by core to give other modules the opportunity
 * to install alternate network transports and stop other functions
 * from being run.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5485 - 0

/* register the core's insert_filter hook and register core-provided
 * filters
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5513 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5514 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5515 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5516 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5517 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core.c:5518 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:27 - 0

/* for RLIMIT stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:38 - 0

/* For index_of_response(). Grump. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:41 - 0

/* For the default_handler below... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:53 - 0

/* for ap_find_loaded_module_symbol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:57 - 0

/**
 * Remove all zero length buckets from the brigade.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:76 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:121 - 0

/* seed the brigade with the client socket. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:130 - 0

/* ### This is bad. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:144 - 0

/* we are reading a single LF line, e.g. the HTTP headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:146 - 0

/* We should treat EAGAIN here the same as we do for EOF (brigade is
 * empty). We do this by returning whatever we have read. This may
 * or may not be bogus, but is consistent (for now) with EOF logic.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:193 - 0

/* If we reach here, we were a bucket just full of CRLFs, so
 * just toss the bucket. */
 /* FIXME: Is this the right thing to do in the core? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:214 - 0

/* Tack on any buckets that were set aside. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:227 - 0

/* read up to the amount they specified. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:262 - 0

/* Have we read as much data as we wanted (be greedy)? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:293 - 0

/* We can only return at most what we read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:324 - 0

/* Take what was originally there and place it back on ctx->b */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:378 - 0

/*
 * Need to create tmp brigade with correct lifetime. Passing
 * NULL to apr_brigade_split_ex would result in a brigade
 * allocated from bb->pool which might be wrong.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:386 - 0

/* remain compatible with legacy MPMs that passed NULL to this filter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:555 - 0

/* Non-blocking read first, in case this is a morphing
 * bucket type. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:559 - 0

/* Read would block; flush any pending data and retry. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:574 - 0

/* reading may have split the bucket, so recompute next: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/core_filters.c:623 - 0

/* Wait until we can send more data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/eor_bucket.c:33 - 0

/*
 * If eor_bucket_destroy is called after us, this prevents
 * eor_bucket_destroy from trying to destroy the pool again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/eor_bucket.c:38 - 0

/* Update child status and log the transaction */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/eor_bucket.c:100 - 0

/* eor_bucket_cleanup will be called when the pool gets destroyed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:61 - 0

/* this file is automatically generated by gen_test_char, "e;
 "e;do not edit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:85 - 0

/* escape_shell_cmd */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:118 - 0

/* these are the "e;tspecials"e; (RFC2068) or "e;separators"e; (RFC2616) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:123 - 0

/* For logging, escape all control characters,
 * double quotes (because they delimit the request in the log file)
 * backslashes (because we use backslash for escaping)
 * and 8-bit chars with the high bit set
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/gen_test_char.c:132 - 0

/* For forensic logging, escape all control characters, top bit set,
 * :, | (used as delimiters) and % (used for escaping).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:41 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:47 - 0

/* Let ap_num_listen_buckets be global so that it can
 * be printed by ap_log_mpm_common(), but keep the listeners
 * buckets static since it is used only here to close them
 * all (including duplicated) with ap_close_listeners().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:263 - 0

/* In APR 1.x, the 2nd and 3rd parameters are char * instead of 
 * const char *, so make a copy of those args here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:405 - 0

/* HAVE_SYSTEMD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:416 - 0

/* see if we've got an old listener for this address:port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:419 - 0

/* Some listeners are not real so they will not have a bind_addr. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:425 - 0

/* If both ports are equivalent, then if their names are equivalent,
 * then we will re-use the existing record.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:459 - 0

/* Initialize to our last configured ap_listener. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:468 - 0

/* this has to survive restarts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:475 - 0

/* Go to the next sockaddr. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:497 - 0

/* We need to preserve the order returned by getaddrinfo() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:519 - 0

/**
 * Create, open, listen, and bind all sockets.
 * @param process The process record for the currently running server
 * @return The number of open sockets
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:536 - 0

/* Don't allocate a default listener. If we need to listen to a
 * port, then the user needs to have a Listen directive in their
 * config file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:568 - 0

/* Exchange lr and lr->next */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:595 - 0

/* Remove the current listener from the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:597 - 0

/* maintain current value of previous after
 * post-loop expression is evaluated
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:624 - 0

/* Remove the current listener from the list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:649 - 0

/* close the old listeners */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:670 - 0

/* AP_NONBLOCK_WHEN_MULTI_LISTEN */

 /* we come through here on both passes of the open logs phase
 * only register the cleanup once... otherwise we try to close
 * listening sockets twice when cleaning up prior to exec
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:700 - 0

/* No protocol was set for this vhost,
 * use the default for this listener.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:715 - 0

/* TODO: set protocol defaults per-Port, eg 25=smtp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:879 - 0

/* Start from index 1 since either ap_duplicate_listeners()
 * was called and ap_listen_buckets[0] == ap_listeners, or
 * it wasn't and ap_num_listen_buckets == 0.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:923 - 0

/* Check once whether or not SO_REUSEPORT is supported. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/listen.c:988 - 0

/* XXX scope id support is useful with link-local IPv6 addresses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:25 - 0

/* for signal stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:45 - 0

/* for getpid() on Win32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:64 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:104 - 0

/* track pipe handles to close in child process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:112 - 0

/**
 * @brief The piped logging structure.
 *
 * Piped logs are used to move functionality out of the main server.
 * For example, log rotation is done with piped logs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:119 - 0

/** The pool to use for the piped log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:124 - 0

/** The name of the program the logging process is running */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:126 - 0

/** The pid of the logging process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:128 - 0

/** How to reinvoke program when it must be replaced */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:201 - 0

/* This is safe provided we revert it when we are finished.
 * We don't manager the callers pool!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:223 - 0

/* Revert, see above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:241 - 0

/* Create a child process running PROGNAME with a pipe connected to
 * the childs stdin. The write-end of the pipe will be placed in
 * *FPIN on successful return. If dummy_stderr is non-zero, the
 * stderr for the child will be the same as the stdout of the parent.
 * Otherwise the child will inherit the stderr from the parent. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:250 - 0

/* Child process code for 'ErrorLog "e;|..."e;';
 * may want a common framework for this, since I expect it will
 * be common for other foo-loggers to want this sort of thing...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:288 - 0

/* read handle to pipe not kept open, so no need to call
 * close_handle_in_child()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:321 - 0

/* Spawn a new child logger. If this is the main server_rec,
 * the new child must use a dummy stderr since the current
 * stderr might be a pipe to the old logger. Otherwise, the
 * child inherits the parents stderr. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:339 - 0

/* provider must log something to the console */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:364 - 0

/* plog */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:384 - 0

/* HERE we need a stdout log that outlives plog.
 * We *presume* the parent of plog is a process
 * or global pool which spans server restarts.
 * Create our stderr_pool as a child of the plog's
 * parent pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:401 - 0

/* Replace existing stderr with new log. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:468 - 0

/* separately-configured vhost-specific provider */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:474 - 0

/* inherit provider from s_main */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:578 - 0

/* ap_recent_ctime_ex includes the trailing \0 in time_len */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:642 - 0

/* In OSD/POSIX, the compiler returns for __FILE__
 * a string like: __FILE__="e;*POSIX(/usr/include/stdio.h)"e;
 * (it even returns an absolute path for sources in
 * the current directory). Here we try to strip this
 * down to the basename.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:656 - 0

/* _OSD_POSIX || WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:658 - 0

/* On Unix, __FILE__ may be an absolute path in a
 * VPATH build. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:663 - 0

/*_OSD_POSIX || WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:800 - 0

/* includes trailing \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:804 - 0

/* Skip the last char, it is always '=' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:815 - 0

/* need to cast const away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1000 - 0

/* required item is empty. skip whole line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1044 - 0

/* do we need to log once-per-req or once-per-conn info? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1056 - 0

/*
 * If we are doing stderr logging (startup), don't log messages that are
 * above the default server log level unless it is a startup/shutdown
 * notice
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1078 - 0

/*
 * If we are doing normal logging, don't log messages that are
 * above the module's log level unless it is a startup/shutdown notice
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1094 - 0

/* the faked server_rec from mod_cgid does not have s->module_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1109 - 0

/* XXX: do we need separate log ids for subrequests? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1146 - 0

/* once-per-connection info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1158 - 0

/* this is the last line of once-per-connection info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1164 - 0

/* once-per-request info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1176 - 0

/* this is the last line of once-per-request info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1194 - 0

/*
 * prepare and log one line
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1209 - 0

/*
 * Don't log empty lines. This can happen with once-per-conn/req
 * info if an item with AP_ERRORLOG_FLAG_REQUIRED is NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1218 - 0

/* Truncate for the terminator (as apr_snprintf does) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1354 - 0

/* start character dump here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1355 - 0

/* start hex dump here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1360 - 0

/* backslash will be escaped later, which throws
 * off the formatting
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1491 - 0

/* grab bag function to log commonly logged and shared info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1542 - 0

/* AP_SIG_GRACEFUL and HUP call this on each restart.
 * Only warn on first time through for this pid.
 *
 * XXX: Could just write first time through too, although
 * that may screw up scripts written to do something
 * based on the last modification time of the pid file.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1574 - 0

/* see apr_ltoa */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1634 - 0

/* piped log support */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1637 - 0

/* forward declaration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1640 - 0

/* Spawn the piped logger process pl->program. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1659 - 0

/* Something bad happened, give up and go away. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1684 - 0

/* Something bad happened, give up and go away. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1704 - 0

/* in case we don't get it going again, this
 * tells other logic not to try to kill it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1730 - 0

/* We should not kill off the pipe here, since it may only be full.
 * If it really is locked, we should kill it off manually. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/log.c:1795 - 0

/* !AP_HAVE_RELIABLE_PIPED_LOGS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:53 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:122 - 0

/* sizeof(foo) is long on some platforms so we might as well
 * make it long everywhere to keep the printf format
 * consistent
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:233 - 0

/* This list displays the compiled in default paths: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:283 - 0

/* and destroy all descendent pools */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:291 - 0

/* APR callback invoked if allocation fails. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:369 - 0

/* XXX not all MPMs support signalling the server in general or graceful-stop
 * in particular
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:470 - 0

/* Pool of log streams, reset _after_ each read of conf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:471 - 0

/* Pool for temporary config stuff, reset often */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:472 - 0

/* Pool for -D, -C and -c switches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:480 - 0

/* turn off profiling of startup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:488 - 0

/* Set up the OOM callback in the global pool, so all pools should
 * by default inherit it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:513 - 0

/* Maintain AP_SERVER_BASEARGS list in http_main.h to allow the MPM
 * to safely pass on our args from its rewrite_args() handler.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:540 - 0

/* Setting -D DUMP_VHOSTS should work like setting -S */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:543 - 0

/* Setting -D DUMP_RUN_CFG should work like setting -S */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:546 - 0

/* Setting -D DUMP_MODULES is equivalent to setting -M */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:607 - 0

/* MPM built-in? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:626 - 0

/* bad cmdline option? then we die */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:653 - 0

/* sort hooks here to make sure pre_config hooks are sorted properly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:667 - 0

/*
 * Sort hooks again because ap_process_config_tree may have add modules
 * and hence hooks. This happens with mod_perl and modules written in
 * perl.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:681 - 0

/* deferred due to dynamically loaded MPM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:684 - 0

/* deferred in case of DSOs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:697 - 0

/* If our config failed, deal with that here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:753 - 0

/* sort hooks here to make sure pre_config hooks are sorted properly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:768 - 0

/*
 * Sort hooks again because ap_process_config_tree may have add modules
 * and hence hooks. This happens with mod_perl and modules written in
 * perl.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/main.c:815 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:75 - 0

/* for bindprocessor() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:86 - 0

/* for read_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:87 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:102 - 0

/* for INT_MAX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:161 - 0

/*
 * Actual definitions of config globals
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:168 - 0

/* scale factor to allow fractional values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:171 - 0

/* Worker threads per child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:185 - 0

/* MaxConnectionsPerChild, only access
 in listener thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:187 - 0

/* Number of open connections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:188 - 0

/* Number of connections in lingering close */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:189 - 0

/* Number of suspended connections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:190 - 0

/* Number of threads processing ssl conns */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:200 - 0

/* forward declare */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:205 - 0

/** APR_RING of expiration timeouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:207 - 0

/** the time when the entry was queued */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:209 - 0

/** connection record this struct refers to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:211 - 0

/** request record (if any) this struct refers to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:213 - 0

/** server config this struct refers to */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:215 - 0

/** is the current conn_rec suspended? (disassociated with
 * a particular MPM thread; for suspend_/resume_connection
 * hooks)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:220 - 0

/** memory pool to allocate from */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:222 - 0

/** bucket allocator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:224 - 0

/** poll file descriptor information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:226 - 0

/** public parts of the connection state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:237 - 0

/*
 * Several timeout queues that use different timeouts, so that we always can
 * simply append to the end.
 * write_completion_q uses vhost's TimeOut
 * keepalive_q uses vhost's KeepAliveTimeOut
 * linger_q uses MAX_SECS_TO_LINGER
 * short_linger_q uses SECONDS_TO_LINGER
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:252 - 0

/*
 * Macros for accessing struct timeout_queue.
 * For TO_QUEUE_APPEND and TO_QUEUE_REMOVE, timeout_mutex must be held.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:304 - 0

/* The structure used to pass unique initialization info to each thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:307 - 0

/* process slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:308 - 0

/* worker slot of the thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:311 - 0

/* Structure used to pass information to the thread responsible for
 * creating the rest of the threads.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:344 - 0

/* If a timeout was requested, a pointer to the timer event */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:348 - 0

/* data retained by event across load/unload of the module
 * allocated on first call to pre-config hook; located on
 * subsequent calls to pre-config hook
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:358 - 0

/* set from signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:378 - 0

/*
 * Current number of listeners buckets and maximum reached accross
 * restarts (to size retained data according to dynamic num_buckets,
 * eg. idle_spawn_rate).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:391 - 0

/* All listeners buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:392 - 0

/* Current child bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:420 - 0

/* Pool for config stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:421 - 0

/* Pool for httpd child stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:423 - 0

/* Linux getpid() doesn't work except in main
 thread. Use this instead */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:494 - 0

/* unblock the listener if it's waiting for a worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:497 - 0

/*
 * we should just be able to "e;kill(ap_my_pid, LISTENER_SIGNAL)"e; on all
 * platforms and wake up the listener thread since it is the only thread
 * with SIGHUP unblocked, but that doesn't work on Linux
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:523 - 0

/* in case we weren't called from the listener thread, wake up the
 * listener thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:535 - 0

/* forcefully kill all current connections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:603 - 0

/* child had a scoreboard slot? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:649 - 0

/* a clean exit from a child with proper cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:659 - 0

/* slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:670 - 0

/*****************************************************************
 * Connection structures and accounting...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:676 - 0

/* volatile because they're updated from a signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:731 - 0

/* do a graceful restart if graceful == 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:818 - 0

/* SIGXCPU */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:821 - 0

/* SIGXFSZ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:827 - 0

/* SIGHUP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:830 - 0

/* AP_SIG_GRACEFUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:833 - 0

/* AP_SIG_GRACEFUL_STOP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:836 - 0

/* SIGPIPE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:910 - 0

/*
 * Close our side of the connection, flushing data to the client first.
 * Pre-condition: cs is not in any timeout queue and not in the pollset,
 * timeout_mutex is not locked
 * return: 0 if connection is fully closed,
 * 1 if connection is lingering
 * May only be called by worker thread.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:989 - 0

/*
 * event_pre_read_request() and event_request_cleanup() track the
 * current r for a given connection.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1015 - 0

/*
 * event_post_read_request() tracks the current server config for a
 * given request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1040 - 0

/*
 * process one connection in the worker
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1055 - 0

/* This is a new connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1114 - 0

/* Subsequent request on a conn, and thread number is part of ID */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1138 - 0

/* state will be updated upon return
 * fall thru to either wait for readability/timeout or
 * do lingering close
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1181 - 0

/* Still in WRITE_COMPLETION_STATE:
 * Set a write timeout for this connection, and let the
 * event thread poll for writeability.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1227 - 0

/* Add work to pollset. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1245 - 0

/* Put a SUSPENDED connection back into a queue. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1272 - 0

/* conns_this_child has gone to zero or below. See if the admin coded
 "e;MaxConnectionsPerChild 0"e;, and keep going in that case. Doing it this way
 simplifies the hot path in worker_thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1283 - 0

/* keep going */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1301 - 0

/* wake up the main thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1335 - 0

/* XXXXX: recycle listener_poll_types */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1387 - 0

/* TODO: subpools, threads, reuse, etc. -- currently use malloc() inside :( */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1407 - 0

/*
 * Pre-condition: pfd->cs is neither in pollset nor timeout queue
 * this function may only be called by the listener
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1420 - 0

/* trash the connection; we couldn't queue the connected
 * socket to a worker
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1472 - 0

/* Structures to reuse */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1527 - 0

/* Okay, add sorted by when.. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1610 - 0

/* no timeout function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1612 - 0

/* no timeout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1643 - 0

/*
 * Close socket and clean up if remote closed its end while we were in
 * lingering close.
 * Only to be called in the listener thread;
 * Pre-condition: cs is in one of the linger queues and in the pollset
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1766 - 0

/* the following times out events that are really close in the future
 * to prevent extra poll calls
 *
 * current value is .1 second
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1783 - 0

/* Unblock the signal used to wake this thread up, and set a handler for
 * it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1809 - 0

/* trace log status every second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1894 - 0

/* one of the sockets is readable */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1903 - 0

/* don't wait for a worker for a keepalive request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1905 - 0

/* FALL THROUGH */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1914 - 0

/*
 * Some of the pollset backends, like KQueue or Epoll
 * automagically remove the FD if the socket is closed,
 * therefore, we can accept _SUCCESS or _NOTFOUND,
 * and we still want to keep going
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1958 - 0

/* A Listener Socket is ready for an accept() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1992 - 0

/* Pool for per-transaction stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:1996 - 0

/* create a new transaction pool for each accepted socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2017 - 0

/* later we trash rv and rely on csd to indicate
 * success/failure
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2023 - 0

/* E[NM]FILE, ENOMEM, etc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2032 - 0

/* trash the connection; we couldn't queue the connected
 * socket to a worker
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2049 - 0

/* if:else on pt->type */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2052 - 0

/* send socket to serf. */
 /* XXXX: this doesn't require get_worker() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2066 - 0

/* We only signal once per N sockets with this baton */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2069 - 0

/* fake timer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2072 - 0

/* don't insert it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2073 - 0

/* no associated socket callback */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2074 - 0

/* remove all sockets in my set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2101 - 0

/* Step 1: keepalive timeouts */
 /* If all workers are busy, we kill older keep-alive connections so that they
 * may connect to another process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2117 - 0

/* Step 2: write completion timeouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2120 - 0

/* Step 3: (normal) lingering close completion timeouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2122 - 0

/* Step 4: (short) lingering close completion timeouts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2145 - 0

/*
 * XXX: do we need to set some timeout that re-enables the listensocks
 * XXX: in case no other event occurs?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2149 - 0

/* listener main loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2185 - 0

/* Pool for per-transaction stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2209 - 0

/* We get APR_EOF during a graceful shutdown once all the
 * connections accepted by this server process have been handled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2282 - 0

/* listener thread doesn't have a thread slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2288 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2327 - 0

/* If we want to conserve memory, let's not keep an unlimited number of
 * pools & allocators.
 * XXX: This should probably be a separate config directive
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2352 - 0

/* Create the main pollset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2355 - 0

/* XXX don't we need more, to handle
 * connections in K-A or lingering
 * close?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2367 - 0

/* XXX don't we need more, to handle
 * connections in K-A or lingering
 * close?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2386 - 0

/* threads_per_child does not include the listener thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2399 - 0

/* We are creating threads right now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2410 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2426 - 0

/* wait for previous generation to clean up an entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2429 - 0

/* every couple of minutes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2492 - 0

/* if we ever created this thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2507 - 0

/* tell it to give up in case it is still
 * trying to take over slots from a
 * previous generation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2535 - 0

/* close unused listeners and pods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2557 - 0

/* done with init critical section */

 /* Just use the standard apr_setup_signal_thread to block all signals
 * from being received. The child processes no longer use signals for
 * any communication with the parent process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2574 - 0

/* coding a value of zero means infinity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2587 - 0

/* 0 means PTHREAD_CREATE_JOINABLE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2610 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2616 - 0

/* If we are only running in one_process mode, we will want to
 * still handle signals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2644 - 0

/* !one_process */
 /* remove SIGTERM from the set of blocked signals... if one of
 * the other threads in the process needs to take us down
 * (e.g., for MaxConnectionsPerChild) it will send us SIGTERM
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2651 - 0

/* Watch for any messages from the parent over the POD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2666 - 0

/* make sure the start thread has finished;
 * signal_threads() and join_workers depend on that
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2705 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2733 - 0

/* By default, AIX binds to a single processor. This bit unbinds
 * children which will then bind to another CPU.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2747 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2753 - 0

/* This new child process is squatting on the scoreboard
 * entry owned by an exiting child process, which cannot
 * exit until all active requests complete.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2795 - 0

/* initialize the free_list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2803 - 0

/* Initialization to satisfy the compiler. It doesn't know
 * that threads_per_child is always > 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2813 - 0

/* short cut if all active processes have been examined and
 * enough empty scoreboard slots have been found
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2823 - 0

/* XXX any_dying_threads is probably no longer needed GLA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2836 - 0

/* XXX just set all_dead_threads in outer
 for loop if no pid? not much else matters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2853 - 0

/* no process in the slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2854 - 0

/* or at least one is going away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2856 - 0

/* great! we prefer these, because the new process can
 * start more threads sooner. So prioritize this slot
 * by putting it ahead of any slots with active threads.
 *
 * first, make room by moving a slot that's potentially still
 * in use to the end of the array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2867 - 0

/* slot is still in use - back of the bus
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2876 - 0

/* XXX if (!ps->quiescing) is probably more reliable GLA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2892 - 0

/* looks like a basket case, as no child ever fully initialized; give up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2909 - 0

/* Kill off one child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2916 - 0

/* scoreboard is full, can't fork */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2920 - 0

/* only report this condition once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:2950 - 0

/* the next time around we want to spawn twice as many if this
 * wasn't good enough, but not if we've just done a graceful
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3009 - 0

/* non-fatal death... note that it's gone in the scoreboard. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3022 - 0

/* resource shortage, minimize the fork rate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3027 - 0

/* we're still doing a 1-for-1 replacement of dead
 * children with new children
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3040 - 0

/* resource shortage, minimize the fork rate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3049 - 0

/* handled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3053 - 0

/* Great, we've probably just lost a slot in the
 * scoreboard. Somehow we don't know about this child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3069 - 0

/* we hit a 1 second timeout in which none of the previous
 * generation of children needed to be reaped... so assume
 * they're all done, and pick up the slack if any is left.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3101 - 0

/* fix the generation number in the global score; we just got a new,
 * cleared scoreboard
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3159 - 0

/* Time to shut down:
 * Kill child processes, tell them to call child_exit, etc...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3166 - 0

/* Start with SIGTERM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3170 - 0

/* cleanup pid file on normal shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3177 - 0

/* Time to gracefully shut down:
 * Kill child processes, tell them to call child_exit, etc...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3184 - 0

/* Close our listeners, and then ask our children to do same */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3193 - 0

/* cleanup pid file on normal shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3205 - 0

/* Don't really exit until each child has finished */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3208 - 0

/* Pause for a second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3211 - 0

/* Relieve any children which have now exited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3218 - 0

/* Having just one child is enough to stay around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3225 - 0

/* We might be here because we received SIGTERM, either
 * way, try and make sure that all of our processes are
 * really dead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3238 - 0

/* we've been told to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3242 - 0

/* not worth thinking about */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3246 - 0

/* advance to the next generation */
 /* XXX: we really need to make sure this new generation number isn't in
 * use by any of the children.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3257 - 0

/* wake up the children...time to die. But we'll have more soon */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3263 - 0

/* This is mostly for debugging... so that we know what is still
 * gracefully dealing with existing request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3269 - 0

/* Kill 'em all. Since the child acts the same on the parents SIGTERM
 * and a SIGHUP, we may as well use the same signal, because some user
 * pthreads are stealing signals from us left and right.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3278 - 0

/* Start with SIGTERM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3302 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3319 - 0

/* Preserve the number of buckets on graceful restarts. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3355 - 0

/* If new buckets are added, set their idle spawn rate to
 * the highest so far, so that they get filled as quickly
 * as the existing ones.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3364 - 0

/* up to date i */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3370 - 0

/* for skiplist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3396 - 0

/* sigh, want this only the second time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3404 - 0

/* test for correct operation of fdqueue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3464 - 0

/* Not needed in pre_config stage */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3483 - 0

/* The main server uses the global queues */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3494 - 0

/* The vhosts use any existing queue with the same timeout,
 * or their own queue(s) if there isn't */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3524 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3565 - 0

/* don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3609 - 0

/* don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3747 - 0

/* max_spare_threads < min_spare_threads + threads_per_child
 * checked in ap_mpm_run()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3926 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3927 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3928 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3929 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3930 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/event.c:3931 - 0

/* register_hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:30 - 0

/**
 * >= zero_pt: number of idle worker threads
 * < zero_pt: number of threads blocked waiting
 * for an idle worker
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:50 - 0

/* Clean up any pools in the recycled list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:103 - 0

/* If other threads are waiting on a worker, wake one up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:133 - 0

/* back out dec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:144 - 0

/* Block if there isn't any idle worker.
 * apr_atomic_add32(x, -1) does the same as dec32(x), except
 * that it returns the previous value (unlike dec32's bool).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:152 - 0

/* back out dec */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:216 - 0

/* If we have been given a pool to recycle, atomically link
 * it into the queue_info's list of recycled pools
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:263 - 0

/* Atomically pop a pool from the recycled list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:317 - 0

/**
 * Callback routine that is called to destroy this
 * fd_queue_t when its pool is destroyed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:334 - 0

/**
 * Initialize the fd_queue_t.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:360 - 0

/* Set all the sockets in the queue to NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:445 - 0

/* Keep waiting until we wake up and find that the queue is not empty. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/event/fdqueue.c:457 - 0

/* no more elements ever again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:19 - 0

/**
 * config globals
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:27 - 0

/* MaxRequestWorkers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:43 - 0

/* Pool for config stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:44 - 0

/* Pool for httpd child stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:46 - 0

/* it seems silly to call getpid all the time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:49 - 0

/* Number of listeners buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:50 - 0

/* All listeners buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:51 - 0

/* Current child bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:118 - 0

/* pqXXXXX: handle timeouts. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:142 - 0

/* XXX: handle failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:181 - 0

/* TODO */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:333 - 0

/*
 * Some of the pollset backends, like KQueue or Epoll
 * automagically remove the FD if the socket is closed,
 * therefore, we can accept _SUCCESS or _NOTFOUND,
 * and we still want to keep going
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:351 - 0

/* state will be updated upon return
 * fall thru to either wait for readability/timeout or
 * do lingering close
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:395 - 0

/* Still in WRITE_COMPLETION_STATE:
 * Set a write timeout for this connection, and let the
 * event thread poll for writeability.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:482 - 0

/**
 * Create worker thread pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:541 - 0

/* no scoreboard squatting with this MPM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:557 - 0

/* a clean exit from a child with proper cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:570 - 0

/* slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:577 - 0

/* unused for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:695 - 0

/*****************************************************************
 * Connection structures and accounting...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:704 - 0

/* volatile because they're updated from a signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:714 - 0

/* For a graceful stop, we want the child to exit when done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:733 - 0

/* restart() is the signal handler for SIGHUP and AP_SIG_GRACEFUL
 * in the parent process, unless running in ONE_PROCESS mode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:807 - 0

/* SIGXCPU */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:810 - 0

/* SIGXFSZ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:816 - 0

/* SIGHUP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:819 - 0

/* AP_SIG_GRACEFUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:822 - 0

/* AP_SIG_GRACEFUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:825 - 0

/* SIGPIPE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:864 - 0

/* Get a sub context for global allocations in this child, so that
 * we can have cleanups occur when the child exits.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:881 - 0

/* close unused listeners and pods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:929 - 0

/* assume temporary resource issue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:974 - 0

/* die_now is set when AP_SIG_GRACEFUL is received in the child;
 * shutdown_pending is set when SIGTERM is received when running
 * in single process mode. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:978 - 0

/*
 * (Re)initialize this child to a pre-connection state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1034 - 0

/* selected as idle? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1038 - 0

/* restart? */
 /* yeah, this could be non-graceful restart, in which case the
 * parent will kill us soon enough, but why bother checking?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1061 - 0

/* Don't catch AP_SIG_GRACEFUL in ONE_PROCESS mode :) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1069 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1086 - 0

/* In case system resources are maxxed out, we don't want
 * Apache running away with the CPU trying to fork over and
 * over and over again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1099 - 0

/* by default AIX binds to a single processor
 * this bit unbinds children which will then bind to another cpu
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1123 - 0

/* The child process just closes listeners on AP_SIG_GRACEFUL.
 * The pod is used for signalling the graceful restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1194 - 0

/*****************************************************************
 * Executive routines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1212 - 0

/* fix the generation number in the global score; we just got a new,
 * cleared scoreboard
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1224 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1278 - 0

/* this is a memory leak, but I'll fix it later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1283 - 0

/* XXX: if it takes longer than 1 second for all our children
 * to start up and get into IDLE state then we may spawn an
 * extra child
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1310 - 0

/* non-fatal death... note that it's gone in the scoreboard. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1317 - 0

/* we're still doing a 1-for-1 replacement of dead
 * children with new children
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1327 - 0

/* handled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1331 - 0

/* Great, we've probably just lost a slot in the
 * scoreboard. Somehow we don't know about this
 * child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1347 - 0

/* we hit a 1 second timeout in which none of the previous
 * generation of children needed to be reaped... so assume
 * they're all done, and pick up the slack if any is left.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1366 - 0

/* Time to shut down:
 * Kill child processes, tell them to call child_exit, etc...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1372 - 0

/* Start with SIGTERM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1375 - 0

/* cleanup pid file on normal shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1390 - 0

/* Stop listening */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1393 - 0

/* kill off the idle ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1398 - 0

/* Send SIGUSR1 to the active children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1402 - 0

/* Ask each child to close its listeners. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1411 - 0

/* cleanup pid file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1421 - 0

/* Don't really exit until each child has finished */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1424 - 0

/* Pause for a second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1427 - 0

/* Relieve any children which have now exited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1434 - 0

/* Having just one child is enough to stay around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1441 - 0

/* We might be here because we received SIGTERM, either
 * way, try and make sure that all of our processes are
 * really dead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1450 - 0

/* we've been told to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1454 - 0

/* not worth thinking about */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1458 - 0

/* advance to the next generation */
 /* XXX: we really need to make sure this new generation number isn't in
 * use by any of the children.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1469 - 0

/* kill off the idle ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1494 - 0

/* Kill 'em off */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1498 - 0

/* Not when just starting up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1522 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1538 - 0

/* Preserve the number of buckets
 on graceful restarts. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1552 - 0

/* no POD in one_process mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1559 - 0

/* Initialize cross-process accept lock (safe accept needed only) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1599 - 0

/* sigh, want this only the second time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1651 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1692 - 0

/* don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1763 - 0

/* ap_daemons_max_free < ap_daemons_min_free + 1 checked in motorz_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1854 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1855 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1856 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1857 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1858 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/motorz/motorz.c:1859 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:49 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:72 - 0

/* Pool for config stuff */

/* Config globals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:84 - 0

/* volatile just in case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:88 - 0

/* Used by the scoreboard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:92 - 0

/* An array of these is stored in a shared memory area for passing
 * sockets from the parent to child processes
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:127 - 0

/* Child process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:152 - 0

/* Do the work */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:155 - 0

/* Outta here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:159 - 0

/* Parent process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:181 - 0

/* Parent process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:183 - 0

/* Restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:188 - 0

/* Main processing of the parent process
 * returns TRUE if restarting
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:209 - 0

/* Allocate a shared memory block for the array of listeners */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:225 - 0

/* Store the listener sockets in the shared memory area for our children to see */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:230 - 0

/* Create mutex to prevent multiple child processes from detecting
 * a connection with apr_poll()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:244 - 0

/* Allocate shared memory for scoreboard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:277 - 0

/* Count number of active children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:283 - 0

/* Spawn children if needed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:355 - 0

/* Signal handling routines */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:400 - 0

/* Enquiry functions used get MPM status info */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:462 - 0

/* Configuration handling stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:488 - 0

/* we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:610 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:611 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:612 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:613 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:614 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2.c:615 - 0

/* register_hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:27 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:69 - 0

/* signaled when this child is shutting down */

/* grab some MPM globals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:107 - 0

/* Stop Ctrl-C/Ctrl-Break signals going to child processes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:111 - 0

/* Create pool for child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:116 - 0

/* Create an event semaphore used to trigger other threads to shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:125 - 0

/* Gain access to the scoreboard. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:138 - 0

/* Gain access to the accpet mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:147 - 0

/* Find our pid in the scoreboard so we know what slot our parent allocated us */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:170 - 0

/* Create initial pool of worker threads */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:172 - 0

// ap_scoreboard_image->servers[child_slot][c].tid = _beginthread(worker_main, NULL, 128*1024, (void *)c); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:175 - 0

/* Start maintenance thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:178 - 0

/* Set up poll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:195 - 0

/* Main connection accept loop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:258 - 0

/* tell our worker threads to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:296 - 0

/* Find a free thread slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/mpmt_os2/mpmt_os2_child.c:454 - 0

/* Signal handling routines */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:70 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:113 - 0

/* *Non*-shared http_main globals... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:115 - 0

/* Worker threads per child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:129 - 0

/* Indicates whether the screen should be held open */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:134 - 0

/* Pool for config stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:135 - 0

/* Pool for httpd child stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:137 - 0

/* it seems silly to call getpid all the time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:142 - 0

/* Keep track of the number of worker threads currently active */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:146 - 0

/* Structure used to register/deregister a console handler with the OS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:156 - 0

//#define DBINFO_ON
//#define DBPRINT_ON 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:168 - 0

/* volatile just in case */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:175 - 0

/* a clean exit from a child with proper cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:193 - 0

/* proper cleanup when returning from ap_mpm_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:259 - 0

/*****************************************************************
 * Connection structures and accounting...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:288 - 0

/* restart() is the signal handler for SIGHUP and SIGWINCH
 * in the parent process, unless running in ONE_PROCESS mode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:335 - 0

/*static */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:377 - 0

/*
 * (Re)initialize this child to a pre-connection state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:402 - 0

/* Check the listen queue on all sockets for requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:415 - 0

/* remember the last_lr we searched last time around so that
 we don't end up starving any particular listening socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:434 - 0

/* if we get here, something unexpected happened. Go back
 into the select state and try again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:473 - 0

/* We have a socket ready for reading */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:571 - 0

/* In case system resources are maxxed out, we don't want
 Apache running away with the CPU trying to fork over and
 over and over again. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:624 - 0

/* initialize the free_list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:639 - 0

/* try to keep children numbers as low as possible */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:679 - 0

/* only report this condition once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:704 - 0

/* the next time around we want to spawn twice as many if this
 * wasn't good enough, but not if we've just done a graceful
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:809 - 0

/* Display listening ports */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:817 - 0

/* Display dynamic modules loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:861 - 0

/*****************************************************************
 * Executive routines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:887 - 0

/* Only set slot 0 since that is all NetWare will ever have. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:900 - 0

/* Don't thrash... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:906 - 0

/* Allow the Apache screen to be closed normally on exit() only if it
 has not been explicitly forced to close on exit(). (ie. the -E flag
 was specified at startup) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:938 - 0

/* Shutdown the listen sockets so that we don't get stuck in a blocking call.
 shutdown_listeners();*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:941 - 0

/* Got an unload from the console */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:954 - 0

/* the only other way out is a restart */
 /* advance to the next generation */
 /* XXX: we really need to make sure this new generation number isn't in
 * use by any of the children.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:993 - 0

/* The following call has been moved to the mod_nw_ssl pre-config handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1003 - 0

/* override core's default thread stacksize */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1015 - 0

/* we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1087 - 0

/* ap_threads_max_free < ap_threads_min_free + 1 checked in ap_mpm_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1094 - 0

/* Run the pre-config hook after core's so that it can override the
 * default setting of ThreadStackSize for NetWare.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1101 - 0

//ap_hook_post_config(netware_post_config, NULL, NULL, 0);
 //ap_hook_child_init(netware_child_init, NULL, NULL, APR_HOOK_MIDDLE);
 //ap_hook_open_logs(netware_open_logs, NULL, aszSucc, APR_HOOK_REALLY_FIRST); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1121 - 0

/* Make sure to hold the Apache screen open if exit() is called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1124 - 0

/* Rewrite process->argv[];
 *
 * add default -d serverroot from the path of this executable
 *
 * The end result will look like:
 * The -d serverroot default from the running executable
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1144 - 0

/* Use process->pool so that the rewritten argv
 * lasts for the lifetime of the server process,
 * because pconf will be destroyed after the
 * initial pre-flight of the config parser.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1166 - 0

/* Don't need to hold the screen open if the output is going to a file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1200 - 0

/* All added commands begin with "e;APACHE2 "e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1205 - 0

/* If an instance id was not given but the nlm is loaded in
 protected space, then the command belongs to the
 OS address space instance to pass it on. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1212 - 0

/* If we got an instance id but it doesn't match this
 instance of the nlm, pass it on. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1222 - 0

/* If we have determined that this command belongs to this
 instance of the nlm, then handle it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1268 - 0

/* Tell NetWare we handled the command */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1272 - 0

/* Tell NetWare that the command isn't mine */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1278 - 0

/* Our command line handler interfaces the system operator
 with this NLM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1293 - 0

/* The Remove procedure unregisters the console handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1364 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1365 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1366 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1367 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1368 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/netware/mpm_netware.c:1369 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:40 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:58 - 0

/* for bindprocessor() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:90 - 0

/* config globals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:95 - 0

/* MaxRequestWorkers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:99 - 0

/* data retained by prefork across load/unload of the module
 * allocated on first call to pre-config hook; located on
 * subsequent calls to pre-config hook
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:107 - 0

/* set from signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:134 - 0

/* Number of listeners buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:135 - 0

/* All listeners buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:136 - 0

/* Current child bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:153 - 0

/* Pool for config stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:154 - 0

/* Pool for httpd child stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:156 - 0

/* it seems silly to call getpid all the time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:161 - 0

/*
 * change directory for gprof to plop the gmon.out file
 * configure in httpd.conf:
 * GprofDir $RuntimeDir/ -> $ServerRoot/$RuntimeDir/gmon.out
 * GprofDir $RuntimeDir/% -> $ServerRoot/$RuntimeDir/gprof.$pid/gmon.out
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:205 - 0

/* no scoreboard squatting with this MPM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:221 - 0

/* a clean exit from a child with proper cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:235 - 0

/* slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:353 - 0

/*****************************************************************
 * Connection structures and accounting...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:362 - 0

/* volatile because they're updated from a signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:372 - 0

/* For a graceful stop, we want the child to exit when done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:390 - 0

/* restart() is the signal handler for SIGHUP and AP_SIG_GRACEFUL
 * in the parent process, unless running in ONE_PROCESS mode
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:463 - 0

/* SIGXCPU */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:466 - 0

/* SIGXFSZ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:472 - 0

/* SIGHUP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:475 - 0

/* AP_SIG_GRACEFUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:478 - 0

/* AP_SIG_GRACEFUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:481 - 0

/* SIGPIPE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:522 - 0

/* Get a sub context for global allocations in this child, so that
 * we can have cleanups occur when the child exits.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:539 - 0

/* close unused listeners and pods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:572 - 0

/* Set up the pollfd array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:578 - 0

/* assume temporary resource issue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:610 - 0

/* die_now is set when AP_SIG_GRACEFUL is received in the child;
 * shutdown_pending is set when SIGTERM is received when running
 * in single process mode. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:617 - 0

/*
 * (Re)initialize this child to a pre-connection state.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:638 - 0

/* There is only one listener record, so refer to that one. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:642 - 0

/* multiple listening sockets - need to poll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:650 - 0

/* in graceful stop/restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:703 - 0

/* if we accept() something we don't want to die, so we have to
 * defer the exit
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:708 - 0

/* unlock after "e;accept"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:732 - 0

/* Check the pod and the generation number after processing a
 * connection so that we'll go away if a graceful restart occurred
 * while we were processing the connection or we are the lucky
 * idle server process that gets to die.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:737 - 0

/* selected as idle? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:741 - 0

/* restart? */
 /* yeah, this could be non-graceful restart, in which case the
 * parent will kill us soon enough, but why bother checking?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:765 - 0

/* Don't catch AP_SIG_GRACEFUL in ONE_PROCESS mode :) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:773 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:795 - 0

/* In case system resources are maxxed out, we don't want
 * Apache running away with the CPU trying to fork over and
 * over and over again.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:808 - 0

/* by default AIX binds to a single processor
 * this bit unbinds children which will then bind to another cpu
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:832 - 0

/* The child process just closes listeners on AP_SIG_GRACEFUL.
 * The pod is used for signalling the graceful restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:874 - 0

/* initialize the free_list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:889 - 0

/* try to keep children numbers as low as possible */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:923 - 0

/* only report this condition once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:947 - 0

/* the next time around we want to spawn twice as many if this
 * wasn't good enough, but not if we've just done a graceful
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:963 - 0

/*****************************************************************
 * Executive routines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:980 - 0

/* fix the generation number in the global score; we just got a new,
 * cleared scoreboard
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:992 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1052 - 0

/* this is a memory leak, but I'll fix it later. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1057 - 0

/* XXX: if it takes longer than 1 second for all our children
 * to start up and get into IDLE state then we may spawn an
 * extra child
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1084 - 0

/* non-fatal death... note that it's gone in the scoreboard. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1090 - 0

/* child detected a resource shortage (E[NM]FILE, ENOBUFS, etc)
 * cut the fork rate to the minimum
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1097 - 0

/* we're still doing a 1-for-1 replacement of dead
 * children with new children
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1107 - 0

/* handled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1111 - 0

/* Great, we've probably just lost a slot in the
 * scoreboard. Somehow we don't know about this
 * child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1127 - 0

/* we hit a 1 second timeout in which none of the previous
 * generation of children needed to be reaped... so assume
 * they're all done, and pick up the slack if any is left.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1146 - 0

/* Time to shut down:
 * Kill child processes, tell them to call child_exit, etc...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1152 - 0

/* Start with SIGTERM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1155 - 0

/* cleanup pid file on normal shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1170 - 0

/* Stop listening */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1173 - 0

/* kill off the idle ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1178 - 0

/* Send SIGUSR1 to the active children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1182 - 0

/* Ask each child to close its listeners. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1191 - 0

/* cleanup pid file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1201 - 0

/* Don't really exit until each child has finished */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1204 - 0

/* Pause for a second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1207 - 0

/* Relieve any children which have now exited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1214 - 0

/* Having just one child is enough to stay around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1221 - 0

/* We might be here because we received SIGTERM, either
 * way, try and make sure that all of our processes are
 * really dead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1230 - 0

/* we've been told to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1234 - 0

/* not worth thinking about */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1238 - 0

/* advance to the next generation */
 /* XXX: we really need to make sure this new generation number isn't in
 * use by any of the children.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1249 - 0

/* kill off the idle ones */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1274 - 0

/* Kill 'em off */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1278 - 0

/* Not when just starting up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1301 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1317 - 0

/* Preserve the number of buckets
 on graceful restarts. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1337 - 0

/* Initialize cross-process accept lock (safe accept needed only) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1376 - 0

/* sigh, want this only the second time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1416 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1457 - 0

/* don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1528 - 0

/* ap_daemons_max_free < ap_daemons_min_free + 1 checked in prefork_run() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1633 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1634 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1635 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1636 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1637 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/prefork/prefork.c:1638 - 0

/* register hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:28 - 0

/* This file contains the absolute minimal MPM API, to interface with httpd. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:131 - 0

/* this is our first 'real' entry point, so setup everything here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:261 - 0

/* pqXXXXXXXXX: These do NOT belong in the MPM configuration commands. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:271 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:272 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:273 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:274 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:275 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_api.c:276 - 0

/* register_hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:26 - 0

/* For fork() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:34 - 0

/* See comment in simple_spawn_child for why we check here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:49 - 0

/* TODO: recycle child object */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:57 - 0

/* TODO: Pool cleanups.... sigh. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:82 - 0

/* this is the child process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:95 - 0

/* TODO: SIMPLE_SPAWN_EXEC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:145 - 0

/* kill some kids */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:153 - 0

/* spawn some kids */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_children.c:160 - 0

/* juuuuust right. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_core.c:56 - 0

/* unlimited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_core.c:59 - 0

/* TODO: configurable spawning mech */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:37 - 0

/* pqXXXXX: handle timeouts. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:84 - 0

/* state will be updated upon return
 * fall thru to either wait for readability/timeout or
 * do lingering close
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:126 - 0

/* Still in WRITE_COMPLETION_STATE:
 * Set a write timeout for this connection, and let the
 * event thread poll for writeability.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:228 - 0

/* pqXXXXX: remove this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:235 - 0

/* XXX: handle failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_io.c:280 - 0

/* pqXXXXXX: Consider doing pool recycling like the event/worker MPMs do. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:50 - 0

/**
 * Create worker thread pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:126 - 0

/* TODO: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:163 - 0

/* pqXXXXX: I'm 95% sure that the Linux Powertop guys will slap me for this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:200 - 0

/* push this task */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:236 - 0

/* Normally this is only ran in the child processes, but we want to do it here too... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/simple/simple_run.c:264 - 0

/* pqXXXXX: make size of pollcb configrable or dynamic */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:24 - 0

/* for read_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:25 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:27 - 0

/* for ap_update_vhost_given_ip */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:53 - 0

/* WSAID_ACCEPTEX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:61 - 0

/* WSAID_GETACCEPTEXSOCKADDRS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:162 - 0

/* Grab a context off the queue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:175 - 0

/* We failed to grab a context off the queue, consider allocating
 * a new one out of the child pool. There may be up to
 * (ap_threads_per_child + num_listeners) contexts in the system
 * at once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:181 - 0

/* All workers are busy, need to wait for one */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:201 - 0

/* somewhat-normal condition where threads are busy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:208 - 0

/* should be the unexpected, generic WAIT_FAILED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:232 - 0

/* Hopefully this is a temporary condition ... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:242 - 0

/* Create the transaction pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:267 - 0

/* Got a context from the queue */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:353 - 0

/* 'data' or 'connect' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:377 - 0

/* accf == 0, 'none' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:379 - 0

/* target of data or connect upon too many AcceptEx failures */

 /* last, low priority event is a not yet accepted connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:386 - 0

/* The event needs to be removed from the accepted socket,
 * if not removed from the listen socket prior to accept(),
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:410 - 0

/* Hopefully a temporary condition in the provider? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:424 - 0

/* Either 'connect' or 'data' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:429 - 0

/* Create and initialize the accept socket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:456 - 0

/* 'data' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:461 - 0

/* (accf == 1) 'connect' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:466 - 0

/* AcceptEx on the completion context. The completion context will be
 * signaled when a connection is accepted.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:555 - 0

/* exit_event triggered or event handle was closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:582 - 0

/* Not a failure condition. Keep running. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:600 - 0

/* Adjust the bucket to refer to the actual bytes read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:611 - 0

/* (accf = 0) e.g. 'none' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:613 - 0

/* There is no socket reuse without AcceptEx() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:617 - 0

/* This could be a persistent event per-listener rather than
 * per-accept. However, the event needs to be removed from
 * the target socket if not removed from the listen socket
 * prior to accept(), or the event select is inherited.
 * and must be removed from the accepted socket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:630 - 0

/* not FD_ACCEPT;
 * exit_event triggered or event handle was closed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:664 - 0

/* Hopefully a temporary condition in the provider? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:719 - 0

/* When a connection is received, send an io completion notification
 * to the ThreadDispatchIOCP.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:798 - 0

/* seed the brigade with AcceptEx read heap bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:800 - 0

/* also seed the brigade with the client socket. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:830 - 0

/* Grab a connection off the network */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:834 - 0

/* Time for the thread to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:838 - 0

/* Have we hit MaxConnectionsPerChild connections? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:854 - 0

/* ap_run_create_connection closes the socket on failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:866 - 0

/* follow ap_process_connection(c, context->sock) logic
 * as it left us no chance to reinject our first data bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:916 - 0

/*
 * child_main()
 * Entry point for the main control thread for the child process.
 * This thread creates the accept thread, worker threads and
 * monitors the child process for maintenance and shutdown
 * events.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:927 - 0

/* Start an accept thread per listener
 * XXX: Why would we have a NULL sd in our listeners?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:944 - 0

/* Now start a thread per listener */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:981 - 0

/* Initialize the child_events */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1004 - 0

/* presumably -DONE_PROCESS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1024 - 0

/*
 * Create the worker thread dispatch IOCompletionPort
 */
 /* Create the worker thread dispatch IOCP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1039 - 0

/*
 * Create the pool of worker threads
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1082 - 0

/* Save the score board index in ht keyed to the thread handle.
 * We need this when cleaning up threads down below...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1100 - 0

/* Check to see if the child has been told to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1104 - 0

/* wait for previous generation to clean up an entry in the scoreboard
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1112 - 0

/* Wait for one of these events:
 * exit_event:
 * The exit_event is signaled by the parent process to notify
 * the child that it is time to exit.
 *
 * max_requests_per_child_event:
 * This event is signaled by the worker threads to indicate that
 * the process has handled MaxConnectionsPerChild connections.
 *
 * parent process exiting
 *
 * TIMEOUT:
 * To do periodic maintenance on the server (check for thread exits,
 * number of completion contexts, etc.)
 *
 * XXX: thread exits *aren't* being checked.
 *
 * XXX: other_child - we need the process handles to the other children
 * in order to map them to apr_proc_other_child_read (which is not
 * named well, it's more like a_p_o_c_died.)
 *
 * XXX: however - if we get a_p_o_c handle inheritance working, and
 * the parent process creates other children and passes the pipes
 * to our worker processes, then we have no business doing such
 * things in the child_main loop, but should happen in master_main.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1143 - 0

/* THIS IS THE EXPECTED BUILD VARIATION -- APR_HAS_OTHER_CHILD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1152 - 0

/* Something serious is wrong */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1156 - 0

/* check handle validity to identify a possible culprit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1170 - 0

/* Exit event was signaled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1177 - 0

/* The parent is dead. Shutdown the child process. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1184 - 0

/* MaxConnectionsPerChild event set by the worker threads.
 * Signal the parent to restart
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1196 - 0

/*
 * Time to shutdown the child process
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1220 - 0

/* Tell the worker threads to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1236 - 0

/* Shutdown the worker threads
 * Post worker threads blocked on the ThreadDispatch IOCompletion port
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1249 - 0

/* Empty the accept queue of completion contexts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1258 - 0

/* Give busy threads a chance to service their connections
 * (no more than the global server timeout period which
 * we track in msec remaining).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1278 - 0

/* Every 30 seconds give an update */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1286 - 0

/* We'll poll from the top, 10 times per second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1303 - 0

/* none ready */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1308 - 0

/* We just got the ownership of the object, which
 * should happen at most MAXIMUM_WAIT_OBJECTS times.
 * It does NOT mean that the object is signaled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1323 - 0

/* Kill remaining threads off the hard way */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/child.c:1353 - 0

/* def WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:22 - 0

/* for read_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:23 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:47 - 0

/* missing on MinGW */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:66 - 0

/* my_generation is returned to the scoreboard code */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:69 - 0

/* Definitions of WINNT MPM specific config globals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:70 - 0

/* used to signal the parent to shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:71 - 0

/* used to signal the parent to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:76 - 0

/* VER_PLATFORM_WIN32_NT */

/* set by child_main to STACK_SIZE_PARAM_IS_A_RESERVATION for NT >= 5.1 (XP/2003) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:84 - 0

/* used by parent to signal the child to start and exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:93 - 0

/* shared by service.c as global, although
 * perhaps it should be private.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:105 - 0

/*
 * Command processors
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:188 - 0

/* Long enough for apPID_shutdown, where PID is an int */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:213 - 0

/* This MPM supports only graceful restarts right now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:230 - 0

/* This MPM supports only graceful restarts right now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:251 - 0

/* Same problem as above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:280 - 0

/* *** We now do this way back in winnt_rewrite_args
 * pipe = GetStdHandle(STD_INPUT_HANDLE);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:338 - 0

/* We must 'initialize' the scoreboard to relink all the
 * process-local pointer arrays into the shared memory block.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:457 - 0

/* Open the pipe to the parent process to receive the inherited socket
 * data. The sockets have been set to listening in the parent process.
 *
 * *** We now do this way back in winnt_rewrite_args
 * pipe = GetStdHandle(STD_INPUT_HANDLE);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:503 - 0

/* Run the chain of open sockets. For each socket, duplicate it
 * for the target process then send the WSAPROTOCOL_INFO
 * (returned by dup socket) to the child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:543 - 0

/* These NEVER change for the lifetime of this parent
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:553 - 0

/* see waitlist_e */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:561 - 0

/* Build the command line. Should look something like this:
 * C:/apache/bin/httpd.exe -f ap_server_confname
 * First, get the path to the executable...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:598 - 0

/* Create a pipe to send handles to the child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:607 - 0

/* Create the child_ready_event */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:616 - 0

/* Create the child_exit_event */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:626 - 0

/* Build the env array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:677 - 0

/*
 * Outch... that isn't a ready signal. It's dead, Jim!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:768 - 0

/* Create a single child process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:785 - 0

/* Update the scoreboard. Note that there is only a single active
 * child at once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:789 - 0

/* slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:791 - 0

/* Wait for shutdown or restart events or for child death */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:796 - 0

/* Something serious is wrong */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:802 - 0

/* Hey, this cannot happen */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:808 - 0

/* shutdown_event signalled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:818 - 0

/* Received a restart event. Prepare the restart_event to be reused
 * then signal the child process to exit.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:833 - 0

/* Don't wait to verify that the child process really exits,
 * just move on with the restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:868 - 0

/* slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:877 - 0

/* Timeout is milliseconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:881 - 0

/* Tell the caller we do not want to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:891 - 0

/* Signal the child processes to exit */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:915 - 0

/* Tell the caller we do not want to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:919 - 0

/* Tell the caller we want a restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:922 - 0

/* service_nt_main_fn needs to append the StartService() args
 * outside of our call stack and thread as the service starts...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:927 - 0

/* Remember service_to_start failures to log and fail in pre_config.
 * Remember inst_argc and inst_argv for installing or starting the
 * service after we preflight the config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1040 - 0

/* AP_PARENT_PID is only valid in the child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1048 - 0

/* This is the child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1052 - 0

/* Prevent holding open the (nonexistant) console */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1055 - 0

/* The parent gave us stdin, we need to remember this
 * handle, and no longer inherit it at our children
 * (we can't slurp it up now, we just aren't ready yet).
 * The original handle is closed below, at apr_file_dup2()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1106 - 0

/* This is the parent, we have a long way to go :-) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1112 - 0

/* Rewrite process->argv[];
 *
 * strip out -k signal into signal_arg
 * strip out -n servicename and set the names
 * add default -d serverroot from the path of this executable
 *
 * The end result will look like:
 *
 * The invocation command (%0)
 * The -d serverroot default from the running executable
 * The requested service's (-n) registry ConfigArgs
 * The WinNT SCM's StartService() args
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1144 - 0

/* Use process->pool so that the rewritten argv
 * lasts for the lifetime of the server process,
 * because pconf will be destroyed after the
 * initial pre-flight of the config parser.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1184 - 0

/* Fall through so the Apache main() handles the 'E' arg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1209 - 0

/* Provide a default 'run' -k arg to simplify signal_arg tests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1264 - 0

/* Get the default for any -k option, except run */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1270 - 0

/* -k install */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1331 - 0

/* Now, do service install or reconfigure then proceed to
 * post_config to test the installed configuration.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1334 - 0

/* -k config */
 /* Reconfigure the service */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1345 - 0

/* -k install */
 /* Install the service */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1378 - 0

/* XXX: presume proper privilages; one nice thing would be
 * a loud emit if running as "e;LocalSystem"e;/"e;SYSTEM"e; to indicate
 * they should change to a user with write access to logs/ alone.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1426 - 0

/* We want this only in the parent and only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1469 - 0

/* Don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1534 - 0

/* Service install happens in the rewrite_args hooks. If we
 * made it this far, the server configuration is clean and the
 * service will successfully start.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1543 - 0

/* Service reconfiguration happens in the rewrite_args hooks. If we
 * made it this far, the server configuration is clean and the
 * service will successfully start.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1555 - 0

/* Close the listening sockets. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1578 - 0

/* This code should be run once in the parent and not run
 * across a restart
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1581 - 0

/* returns NULL if invalid (Win95?) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1586 - 0

/* Create shutdown event, apPID_shutdown, where PID is the parent
 * Apache process ID. Shutdown is signaled by 'apache -k shutdown'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1597 - 0

/* Create restart event, apPID_restart, where PID is the parent
 * Apache process ID. Restart is signaled by 'apache -k restart'.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1610 - 0

/* Create the start mutex, as an unnamed object for security.
 * Ths start mutex is used during a restart to prevent more than
 * one child process from entering the accept loop at once.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1631 - 0

/* parent_pid != my_pid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1643 - 0

/* Initialize shared static objects.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1674 - 0

/* This is a child process, not in single process mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1676 - 0

/* Set up events and the scoreboard */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1680 - 0

/* Set up the listeners */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1683 - 0

/* Done reading from the parent, close that channel */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1687 - 0

/* Single process mode - this lock doesn't even need to exist */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1697 - 0

/* Borrow the shutdown_even as our _child_ loop exit event */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1705 - 0

/* Default is "e;not a restart"e; */

 /* ### If non-graceful restarts are ever introduced - we need to rerun
 * the pre_mpm hook on subsequent non-graceful restarts. But Win32
 * has only graceful style restarts - and we need this hook to act
 * the same on Win32 as on Unix.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1713 - 0

/* Set up the scoreboard. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1734 - 0

/* A real-honest to goodness parent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1747 - 0

/* Shutting down. Clean up... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1758 - 0

/* Restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1784 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1785 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1786 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1787 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1788 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1789 - 0

/* register_hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/mpm_winnt.c:1792 - 0

/* def WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/nt_eventlog.c:53 - 0

/* What are we going to do in here, bail on the user? not. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/nt_eventlog.c:63 - 0

/* The stock message file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/nt_eventlog.c:90 - 0

/* Generic message: '%1 %2 %3 %4 %5 %6 %7 %8 %9'
 * The event code in netmsg.dll is 3299
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:57 - 0

/* primary thread handle of the apache server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:58 - 0

/* thread service/monitor handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:59 - 0

/* thread service/monitor ID */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:60 - 0

/* controller thread init mutex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:61 - 0

/* NT service thread kill signal */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:219 - 0

/**********************************
 WinNT service control management
 **********************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:260 - 0

/* Note this works on Win2000 and later due to ChangeServiceConfig2
 * Continue to test its existence, but at least drop the feature
 * of revising service description tags prior to Win2000.
 */

/* borrowed from mpm_winnt.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:273 - 0

/* Nothing to do if we are a console
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:278 - 0

/* Time to fix up the description, upon each successful restart
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:294 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:319 - 0

/*SERVICE_CONFIG_DESCRIPTION*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:323 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:328 - 0

/* SERVICE_CONFIG_DESCRIPTION */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:339 - 0

/* handle the SCM's ControlService() callbacks to our service */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:369 - 0

/* service_nt_main_fn is outside of the call stack and outside of the
 * primary server thread... so now we _really_ need a placeholder!
 * The winnt_rewrite_args has created and shared mpm_new_argv with us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:387 - 0

/* args and service names live in the same pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:418 - 0

/* mpm_new_argv remains first (of lower significance) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:422 - 0

/* Service args follow from StartService() invocation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:436 - 0

/* The replacement arg list is complete */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:441 - 0

/* Let the main thread continue now... but hang on to the
 * signal_monitor event so we can take further action
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:448 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:457 - 0

/* args and service names live in the same pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:488 - 0

/* mpm_new_argv remains first (of lower significance) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:492 - 0

/* Service args follow from StartService() invocation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:496 - 0

/* The replacement arg list is complete */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:501 - 0

/* Let the main thread continue now... but hang on to the
 * signal_monitor event so we can take further action
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:519 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:551 - 0

/* The service configuration's is stored under the following trees:
 *
 * HKLM\System\CurrentControlSet\Services\[service name]
 *
 * \DisplayName
 * \ImagePath
 * \Parameters\ConfigArgs
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:587 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:646 - 0

/* First three args (argv[0], -f, path) remain first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:649 - 0

/* Service args follow from service registry array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:653 - 0

/* Remaining new args follow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:667 - 0

/* Still have a thread & window to clean up, so signal now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:670 - 0

/* Stop logging to the event log */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:690 - 0

/* Prevent holding open the (hidden) console */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:693 - 0

/* GetCurrentThread returns a psuedo-handle, we need
 * a real handle for another thread to wait upon.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:781 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:798 - 0

/* local, default database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:815 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:843 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:861 - 0

/* !schService aborts configuration below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:876 - 0

// SCManager database 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:877 - 0

// name of service 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:878 - 0

// name to display 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:879 - 0

// access required 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:880 - 0

// service type 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:881 - 0

// start type 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:883 - 0

// service's binary 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:884 - 0

// no load svc group 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:885 - 0

// no tag identifier 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:886 - 0

// dependencies 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:887 - 0

// use SYSTEM account 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:888 - 0

// no password 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:890 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:894 - 0

// SCManager database 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:895 - 0

// name of service 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:896 - 0

// name to display 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:897 - 0

// access required 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:898 - 0

// service type 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:899 - 0

// start type 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:901 - 0

// service's binary 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:902 - 0

// no load svc group 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:903 - 0

// no tag identifier 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:904 - 0

// dependencies 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:905 - 0

// use SYSTEM account 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:906 - 0

// no password 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:925 - 0

/* Store the service ConfigArgs in the registry...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:954 - 0

/* local, default database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:969 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1044 - 0

/* local, default database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1060 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1108 - 0

/* test only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1113 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1122 - 0

/* test only */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1145 - 0

/* signal is zero to stop, non-zero for restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1153 - 0

/* default machine & database */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1172 - 0

/* APR_HAS_UNICODE_FS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/winnt/service.c:1183 - 0

/* Could not open the service */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:40 - 0

/* Clean up any pools in the recycled list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:87 - 0

/* If we have been given a pool to recycle, atomically link
 * it into the queue_info's list of recycled pools
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:109 - 0

/* If this thread makes the idle worker count nonzero,
 * wake up the listener. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:137 - 0

/* Block if the count of idle workers is zero */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:185 - 0

/* Atomically decrement the idle worker count */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:241 - 0

/**
 * Callback routine that is called to destroy this
 * fd_queue_t when its pool is destroyed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:258 - 0

/**
 * Initialize the fd_queue_t.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:280 - 0

/* Set all the sockets in the queue to NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:339 - 0

/* Keep waiting until we wake up and find that the queue is not empty. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/fdqueue.c:351 - 0

/* no more elements ever again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:49 - 0

/* for bindprocessor() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:60 - 0

/* for read_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:61 - 0

/* for get_remote_host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:116 - 0

/*
 * Actual definitions of config globals
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:120 - 0

/* Worker threads per child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:140 - 0

/* data retained by worker across load/unload of the module
 * allocated on first call to pre-config hook; located on
 * subsequent calls to pre-config hook
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:150 - 0

/* set from signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:171 - 0

/*
 * Current number of listeners buckets and maximum reached accross
 * restarts (to size retained data according to dynamic num_buckets,
 * eg. idle_spawn_rate).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:185 - 0

/* All listeners buckets */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:186 - 0

/* Current child bucket */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:190 - 0

/* The structure used to pass unique initialization info to each thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:197 - 0

/* Structure used to pass information to the thread responsible for
 * creating the rest of the threads.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:228 - 0

/* Pool for config stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:229 - 0

/* Pool for httpd child stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:231 - 0

/* Linux getpid() doesn't work except in main
 thread. Use this instead */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:290 - 0

/* unblock the listener if it's waiting for a worker */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:293 - 0

/*
 * we should just be able to "e;kill(ap_my_pid, LISTENER_SIGNAL)"e; on all
 * platforms and wake up the listener thread since it is the only thread
 * with SIGHUP unblocked, but that doesn't work on Linux
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:319 - 0

/* in case we weren't called from the listener thread, wake up the
 * listener thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:331 - 0

/* forcefully kill all current connections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:390 - 0

/* child had a scoreboard slot? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:436 - 0

/* a clean exit from a child with proper cleanup */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:446 - 0

/* slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:457 - 0

/*****************************************************************
 * Connection structures and accounting...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:463 - 0

/* volatile because they're updated from a signal handler */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:500 - 0

/* do a graceful restart if graceful == 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:587 - 0

/* SIGXCPU */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:590 - 0

/* SIGXFSZ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:596 - 0

/* SIGHUP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:599 - 0

/* AP_SIG_GRACEFUL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:602 - 0

/* AP_SIG_GRACEFUL_STOP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:605 - 0

/* SIGPIPE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:637 - 0

/* requests_this_child has gone to zero or below. See if the admin coded
 "e;MaxConnectionsPerChild 0"e;, and keep going in that case. Doing it this way
 simplifies the hot path in worker_thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:646 - 0

/* keep going */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:676 - 0

/* common to get these at restart time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:699 - 0

/* Pool for per-transaction stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:714 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:731 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:738 - 0

/* Unblock the signal used to wake this thread up, and set a handler for
 * it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:744 - 0

/* TODO: Switch to a system where threads reuse the results from earlier
 poll calls - manoj */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:747 - 0

/* TODO: requests_this_child should be synchronized - aaron */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:754 - 0

/* the following pops a recycled ptrans pool off a stack
 * if there is one, in addition to reserving a worker thread
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:760 - 0

/* we've been signaled to die now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:781 - 0

/* skip the lock release */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:785 - 0

/* Only one listener, so skip the poll */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:831 - 0

/* while */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:833 - 0

/* if/else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:837 - 0

/* we can't use a recycled transaction pool this time.
 * create a new transaction pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:848 - 0

/* later we trash rv and rely on csd to indicate success/failure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:852 - 0

/* E[NM]FILE, ENOMEM, etc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:867 - 0

/* trash the connection; we couldn't queue the connected
 * socket to a worker
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:886 - 0

/* common to get these at restart time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:902 - 0

/* wake up the main thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:924 - 0

/* Pool for per-transaction stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:962 - 0

/* We get APR_EOF during a graceful shutdown once all the connections
 * accepted by this server process have been handled.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1025 - 0

/* listener thread doesn't have a thread slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1032 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1081 - 0

/* threads_per_child does not include the listener thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1094 - 0

/* We are creating threads right now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1105 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1118 - 0

/* wait for previous generation to clean up an entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1121 - 0

/* every couple of minutes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1171 - 0

/* listener not dead yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1190 - 0

/* if we ever created this thread */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1215 - 0

/* tell it to give up in case it is still
 * trying to take over slots from a
 * previous generation
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1243 - 0

/* close unused listeners and pods */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1269 - 0

/* done with init critical section */

 /* Just use the standard apr_setup_signal_thread to block all signals
 * from being received. The child processes no longer use signals for
 * any communication with the parent process.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1286 - 0

/* coding a value of zero means infinity */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1300 - 0

/* 0 means PTHREAD_CREATE_JOINABLE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1323 - 0

/* let the parent decide how bad this really is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1329 - 0

/* If we are only running in one_process mode, we will want to
 * still handle signals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1355 - 0

/* !one_process */
 /* remove SIGTERM from the set of blocked signals... if one of
 * the other threads in the process needs to take us down
 * (e.g., for MaxConnectionsPerChild) it will send us SIGTERM
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1362 - 0

/* Watch for any messages from the parent over the POD */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1377 - 0

/* make sure the start thread has finished;
 * signal_threads() and join_workers depend on that
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1416 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1443 - 0

/* By default, AIX binds to a single processor. This bit unbinds
 * children which will then bind to another CPU.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1457 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1463 - 0

/* This new child process is squatting on the scoreboard
 * entry owned by an exiting child process, which cannot
 * exit until all active requests complete.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1504 - 0

/* initialize the free_list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1512 - 0

/* Initialization to satisfy the compiler. It doesn't know
 * that threads_per_child is always > 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1521 - 0

/* short cut if all active processes have been examined and
 * enough empty scoreboard slots have been found
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1530 - 0

/* XXX any_dying_threads is probably no longer needed GLA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1544 - 0

/* XXX just set all_dead_threads in outer for
 loop if no pid? not much else matters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1560 - 0

/* no process in the slot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1561 - 0

/* or at least one is going away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1563 - 0

/* great! we prefer these, because the new process can
 * start more threads sooner. So prioritize this slot
 * by putting it ahead of any slots with active threads.
 *
 * first, make room by moving a slot that's potentially still
 * in use to the end of the array
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1574 - 0

/* slot is still in use - back of the bus
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1583 - 0

/* XXX if (!ps->quiescing) is probably more reliable GLA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1599 - 0

/* looks like a basket case, as no child ever fully initialized; give up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1616 - 0

/* Kill off one child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1623 - 0

/* scoreboard is full, can't fork */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1626 - 0

/* no threads are "e;inactive"e; - starting, stopping, etc. */
 /* have we reached MaxRequestWorkers, or just getting close? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1630 - 0

/* only report this condition once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1671 - 0

/* the next time around we want to spawn twice as many if this
 * wasn't good enough, but not if we've just done a graceful
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1730 - 0

/* non-fatal death... note that it's gone in the scoreboard. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1742 - 0

/* resource shortage, minimize the fork rate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1747 - 0

/* we're still doing a 1-for-1 replacement of dead
 * children with new children
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1759 - 0

/* resource shortage, minimize the fork rate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1768 - 0

/* handled */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1772 - 0

/* Great, we've probably just lost a slot in the
 * scoreboard. Somehow we don't know about this child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1788 - 0

/* we hit a 1 second timeout in which none of the previous
 * generation of children needed to be reaped... so assume
 * they're all done, and pick up the slack if any is left.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1820 - 0

/* fix the generation number in the global score; we just got a new,
 * cleared scoreboard
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1883 - 0

/* Time to shut down:
 * Kill child processes, tell them to call child_exit, etc...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1890 - 0

/* Start with SIGTERM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1894 - 0

/* cleanup pid file on normal shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1901 - 0

/* Time to gracefully shut down:
 * Kill child processes, tell them to call child_exit, etc...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1908 - 0

/* Close our listeners, and then ask our children to do same */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1918 - 0

/* cleanup pid file on normal shutdown */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1930 - 0

/* Don't really exit until each child has finished */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1933 - 0

/* Pause for a second */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1936 - 0

/* Relieve any children which have now exited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1943 - 0

/* Having just one child is enough to stay around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1950 - 0

/* We might be here because we received SIGTERM, either
 * way, try and make sure that all of our processes are
 * really dead.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1963 - 0

/* we've been told to restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1967 - 0

/* not worth thinking about */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1971 - 0

/* advance to the next generation */
 /* XXX: we really need to make sure this new generation number isn't in
 * use by any of the children.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1981 - 0

/* wake up the children...time to die. But we'll have more soon */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1987 - 0

/* This is mostly for debugging... so that we know what is still
 * gracefully dealing with existing request.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:1993 - 0

/* Kill 'em all. Since the child acts the same on the parents SIGTERM
 * and a SIGHUP, we may as well use the same signal, because some user
 * pthreads are stealing signals from us left and right.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2002 - 0

/* Start with SIGTERM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2026 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2043 - 0

/* Preserve the number of buckets on graceful restarts. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2062 - 0

/* Initialize cross-process accept lock (safe accept needed only) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2089 - 0

/* If new buckets are added, set their idle spawn rate to
 * the highest so far, so that they get filled as quickly
 * as the existing ones.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2098 - 0

/* up to date i */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2130 - 0

/* sigh, want this only the second time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2173 - 0

/* the reverse of pre_config, we want this only the first time around */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2214 - 0

/* don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2258 - 0

/* don't need a startup console version here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2396 - 0

/* max_spare_threads < min_spare_threads + threads_per_child
 * checked in worker_run()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2535 - 0

/* create per-directory config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2536 - 0

/* merge per-directory config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2537 - 0

/* create per-server config structure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2538 - 0

/* merge per-server config structures */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2539 - 0

/* command apr_table_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm/worker/worker.c:2540 - 0

/* register_hooks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:61 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:153 - 0

/* which gen? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:154 - 0

/* number of active processes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:155 - 0

/* gen finished? (whether or not active processes) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:173 - 0

/* Set defaults for config directives implemented here. This is
 * called from core's pre-config hook, so MPMs which need to override
 * one of these should run their pre-config hook after that of core.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:180 - 0

/* unlimited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:183 - 0

/* unlimited */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:185 - 0

/* use system default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:307 - 0

/* def HAVE_INITGROUPS */

/* standard mpm configuration handling */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:452 - 0

/* cleanup on pconf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:458 - 0

/* initial pconf teardown, MPM hasn't run */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:483 - 0

/* core's child-status hook
 * tracks number of remaining children per generation and
 * runs the end-generation hook when the last child of
 * a generation exits
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:495 - 0

/* where to run this? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:513 - 0

/* first child for this generation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:538 - 0

/* no children, server has stopped/restarted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_common.c:545 - 0

/* we don't track by slot, so it doesn't matter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:62 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:105 - 0

/* found */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:108 - 0

/* we don't know about any such process */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:192 - 0

/* dummy entry for iterations where we reap
 * children but take no action against
 * stragglers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:205 - 0

/* index of first real action */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:211 - 0

/* don't let waittime get longer than 1 second; otherwise, we don't
 * react quickly to the last child exiting, and taking action can
 * be delayed
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:220 - 0

/* see what action to take, if any */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:226 - 0

/* nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:229 - 0

/* now see who is done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:236 - 0

/* not every scoreboard entry is in use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:281 - 0

/* now see who is done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:287 - 0

/* not every scoreboard entry is in use */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:513 - 0

/*
 apr_file_pipe_timeout_set((*pod)->pod_in, 0);
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:531 - 0

/* we need to surface EINTR so we'll have to grab the
 * native file descriptor and do the OS read() ourselves
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:619 - 0

/* create a temporary pool for the socket. pconf stays around too long */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:687 - 0

/* TLSPlainText.type = Alert (21) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:688 - 0

/* TLSPlainText.version = {3, 1} */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:689 - 0

/* TLSPlainText.length = 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:690 - 0

/* Alert.level = warning (1) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:691 - 0

/* Alert.description = close_notify (0) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:696 - 0

/* ... XXX other request types here? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:867 - 0

/* option char returned by apr_getopt() will be stored in optbuf[1] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:954 - 0

/* AP_ENABLE_EXCEPTION_HOOK */

/* handle all varieties of core dumping signals */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1038 - 0

/* NO_USE_SIGACTION */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1043 - 0

/* SIGBUS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1046 - 0

/* SIGABORT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1049 - 0

/* SIGABRT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1052 - 0

/* SIGILL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1055 - 0

/* SIGFPE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1057 - 0

/* NO_USE_SIGACTION */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/mpm_unix.c:1065 - 0

/* WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:31 - 0

/* for sscanf */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:59 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:78 - 0

/* Patterns to match in ap_make_content_type() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:139 - 0

/* see if it makes sense to add the charset. At present,
 * we only add it if the Content-type is one of needcset[]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:226 - 0

/*
 * Initialize last_char as otherwise a random value will be compared
 * against APR_ASCII_LF at the end of the loop if bb only contains
 * zero-length buckets.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:256 - 0

/* If we see an EOS, don't bother doing anything more. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:275 - 0

/* Would this overrun our buffer? If so, we'll die. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:290 - 0

/* Do we have to handle the allocation ourselves? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:292 - 0

/* We'll assume the common case where one bucket is enough. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:315 - 0

/* Just copy the rest of the data to the end of the old buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:320 - 0

/* We've now processed that new data - update accordingly. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:324 - 0

/* If we got a full line of input, stop reading */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:338 - 0

/* If we're folding, we have more work to do.
 *
 * Note that if an EOS was seen, we know we can't have another line.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:351 - 0

/* We only care about the first byte. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:364 - 0

/* If we see an EOS, don't bother doing anything more. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:375 - 0

/* Found one, so call ourselves again to get the next line.
 *
 * FIXME: If the folding line is completely blank, should we
 * stop folding? Does that require also looking at the next
 * char?
 */
 /* When we call destroy, the buckets are deleted, so save that
 * one character we need. This simplifies our execution paths
 * at the cost of one character read.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:387 - 0

/* Do we have enough space? We may be full now. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:398 - 0

/* If we're doing the allocations for them, we have to
 * give ourselves a NULL and copy it on return.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:420 - 0

/* we need to alloc an extra byte for a null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:426 - 0

/* copy the new line, including the trailing null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:435 - 0

/* next character is not tab or space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:442 - 0

/* PR#43039: We shouldn't accept NULL bytes within the line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:484 - 0

/* Map the out-of-space condition to the old API. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:489 - 0

/* Anything else is just bad. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:527 - 0

/* if it has a scheme we may need to do absoluteURI vhost stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:541 - 0

/* Handle path translations for OS/2 and plug security hole.
 * This will prevent "e;http://www.wherever.com/..\..\/"e; from
 * returning a directory for the root drive.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:551 - 0

/* OS2 || WIN32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:567 - 0

/* Assume HTTP/1.0 if non-"e;HTTP"e; protocol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:641 - 0

/* Provide quick information about the request method as soon as known */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:696 - 0

/* don't allow HTTP/0.1000 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:712 - 0

/* RFC3986 3.5: no fragment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:761 - 0

/* get the length of the field name for logging, but no more than 80 bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:842 - 0

/* trailing null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:877 - 0

/* +1 for nul */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:881 - 0

/* not a continuation line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:895 - 0

/* Find ':' or */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:896 - 0

/* abort bad request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:912 - 0

/* last character of field-name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:914 - 0

/* NUL-terminate at colon */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:917 - 0

/* Skip to start of value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:920 - 0

/* Strip LWS after field-name: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:926 - 0

/* Strip LWS after field-value: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:962 - 0

/* reset the alloc_len so that we'll allocate a new
 * buffer if we have to do any more folding: we can't
 * use the previous buffer because its contents are
 * now part of r->headers_in
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:969 - 0

/* end if current line is not a continuation starting with tab */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:972 - 0

/* Found a blank line, stop. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:987 - 0

/* Combine multiple message-header fields with the same
 * field-name, following RFC 2616, 4.2.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1046 - 0

/* bytect isn't for body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1051 - 0

/* Until further notice */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1066 - 0

/* Get the request... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1130 - 0

/* http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-23
 * Section 3.3.3.3: "e;If a Transfer-Encoding header field is
 * present in a request and the chunked transfer coding is not
 * the final encoding ...; the server MUST respond with the 400
 * (Bad Request) status code and then close the connection"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1136 - 0

/* fast path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1181 - 0

/* update what we think the virtual host is based on the headers we've
 * now read. may update status.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1187 - 0

/* Toggle to the Host:-based vhost's timeout mode to fetch the
 * request body and send the response body, if needed.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1195 - 0

/* we may have switched to another server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1301 - 0

/* Keep original request-line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1303 - 0

/* Don't send headers from this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1304 - 0

/* Don't try to send HTTP_NOT_MODIFIED for a
 * fragment. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1315 - 0

/* did the original request have a body? (e.g. POST w/SSI tags)
 * if so, make sure the subrequest doesn't inherit body headers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1364 - 0

/* tell the filter chain there is no more content coming */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1379 - 0

/* tell the filter chain there is no more content coming */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1464 - 0

/* This filter computes the content length, but it also computes the number
 * of bytes sent to the client. This means that this filter will always run
 * through all of the buckets in all brigades
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1485 - 0

/* Loop through this set of buckets to compute their length
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1498 - 0

/* This is probably a pipe bucket. Send everything
 * prior to this, and then read the data for this bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1503 - 0

/* Attempt a nonblocking read next time through */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1508 - 0

/* Output everything prior to this bucket, and then
 * do a blocking read on the next batch.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1598 - 0

/*
 * Send the body of a response to the client.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1625 - 0

/* send data from an in-memory buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1640 - 0

/* XXX - change API to report apr_status_t? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1642 - 0

/* APR_HAS_MMAP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1657 - 0

/* whatever is coming down the pipe (we don't care), we
 * can simply insert our buffered data at the front and
 * pass the whole bundle down the chain.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1683 - 0

/* our filter hasn't been added yet */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1707 - 0

/* if the first filter is not our buffering filter, then we have to
 * deliver the content through the normal filter chain
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1761 - 0

/* callback function passed to ap_vformatter to be called when
 * vformatter needs to write into buff and buff.curpos > buff.endpos */

 /* ap_vrprintf_data passed as a apr_vformatter_buff_t, which is then
 * "e;downcast"e; to an ap_vrprintf_data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1771 - 0

/* r_flush is called when vbuff is completely full */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1776 - 0

/* reset the buffer position */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1802 - 0

/* last call to buffer_output, to finish clearing the buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1837 - 0

/* ### TODO: if the total output is large, put all the strings
 * ### into a single brigade, rather than flushing each time we
 * ### fill the buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1881 - 0

/*
 * This function sets the Last-Modified output header field to the value
 * of the mtime field in the request structure - rationalized to keep it from
 * being in the future.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1914 - 0

/* don't send interim response to HTTP/1.0 Client */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1923 - 0

/*
 * Don't send 100-Continue when there was no Expect: 100-continue
 * in the request headers. For origin servers this is a SHOULD NOT
 * for proxies it is a MUST NOT according to RFC 2616 8.2.3
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1955 - 0

/*
 * Compare two protocol identifier. Result is similar to strcmp():
 * 0 gives same precedence, >0 means proto1 is preferred.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:1973 - 0

/* both have the same index (mabye -1 or no pref configured) and we compare
 * the names so that spdy3 gets precedence over spdy2. That makes
 * the outcome at least deterministic. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2012 - 0

/* not the one we have and possible, add in this order */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2049 - 0

/* nothing configured, by default, we only allow http/1.1 here.
 * For now...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2063 - 0

/* If the existing protocol has not been proposed, but is a choice,
 * add it to the proposals implicitly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2076 - 0

/* Default for protocols_honor_order is 'on' or != 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2084 - 0

/* Select the most preferred protocol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2095 - 0

/* not a configured protocol here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/protocol.c:2100 - 0

/* none selected yet or this one has preference */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/provider.c:50 - 0

/* First, deal with storing the provider away */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/provider.c:75 - 0

/* Now, tuck away the provider names in an easy-to-get format */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:57 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:204 - 0

/* Don't set per-dir loglevel if LogLevelOverride is set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:216 - 0

/* Reset to the server default config prior to running map_to_storage
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:221 - 0

/* This request wasn't in storage (e.g. TRACE) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:234 - 0

/* Don't set per-dir loglevel if LogLevelOverride is set */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:245 - 0

/* Only on the main request! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:372 - 0

/* A dir_conf sections we matched */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:373 - 0

/* The dir_conf merged result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:377 - 0

/* The identifier we matched */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:378 - 0

/* The sections we matched against */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:379 - 0

/* Base per_dir_config */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:380 - 0

/* per_dir_config += walked result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:381 - 0

/* The list of walk_walked_t results */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:383 - 0

/* Number of prev invocations of same call in this (sub)req */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:477 - 0

/* Save the name from the valid bits. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:480 - 0

/* if OPT_SYM_OWNER is unset, we only need to check target accessible */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:488 - 0

/* Give back the target */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:498 - 0

/* OPT_SYM_OWNER only works if we can get the owner of
 * both the file and symlink. First fill in a missing
 * owner of the symlink, then get the info of the target.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:518 - 0

/* Give back the target */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:659 - 0

/* some OSs will return APR_SUCCESS/APR_REG if we stat
 * a regular file but we have '/' at the end of the name;
 *
 * other OSs will return APR_ENOTDIR for that situation;
 *
 * handle it the same everywhere by simulating a failure
 * if it looks like a directory but really isn't
 *
 * Also reset if the stat failed, just for safety.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:673 - 0

/* forget what we learned */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:718 - 0

/*
 * If Symlinks are allowed in general we do not need the following
 * check.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:733 - 0

/*
 * This should never happen, because we did a stat on the
 * same file, resolving a possible symlink several lines
 * above. Therefore do not make a detailed analysis of rv
 * in this case for the reason of the failure, just bail out
 * with a HTTP_FORBIDDEN in case we hit a race condition
 * here.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:767 - 0

/* We start now_merged from NULL since we want to build
 * a locations list that can be merged to any vhost.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:783 - 0

/* Invariant: from the first time filename_len is set until
 * it goes out of scope, filename_len==strlen(r->filename)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:878 - 0

/* ndef CASE_BLIND_FILESYSTEM, really this simple for Unix today; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:902 - 0

/* It's the root, of course it's a dir */

 /*
 * seg keeps track of which segment we've copied.
 * sec_idx keeps track of which section we're on, since sections are
 * ordered by number of segments. See core_reorder_directories
 * startseg tells us how many segments describe the root path
 * e.g. the complete path "e;//host/foo/"e; to a UNC share (4)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:914 - 0

/*
 * Go down the directory hierarchy. Where we have to check for
 * symlinks, do so. Where a .htaccess file has permission to
 * override anything, try to find one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:925 - 0

/* We have no trailing slash, but we sure would appreciate one.
 * However, we don't want to append a / our first time through.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:934 - 0

/* Begin *this* level by looking for matching <Directory> sections
 * from the server config.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:943 - 0

/* No more possible matches for this many segments?
 * We are done when we find relative/regex/longer components.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:964 - 0

/* If we haven't continue'd above, we have a match.
 *
 * Calculate our full-context core opts & override.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:970 - 0

/* If we merged this same section last time, reuse it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:980 - 0

/* We fell out of sync. This is our own copy of walked,
 * so truncate the remaining matches and reset remaining.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1002 - 0

/* If .htaccess files are enabled, check for one, provided we
 * have reached a real path.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1005 - 0

/* Not really a loop, just a break'able code block */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1028 - 0

/* If we are still here, we found our htaccess.
 *
 * Calculate our full-context core opts & override.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1047 - 0

/* We fell out of sync. This is our own copy of walked,
 * so truncate the remaining matches and reset
 * remaining.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1069 - 0

/* Only one htaccess, not a real loop */

 /* That temporary trailing slash was useful, now drop it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1077 - 0

/* Time for all good things to come to an end?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1107 - 0

/* If nothing remained but a '/' string, we are finished
 * XXX: NO WE ARE NOT!!! Now process this puppy!!! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1132 - 0

/* We choose apr_stat with flag APR_FINFO_LINK here, rather that
 * plain apr_stat, so that we capture this path object rather than
 * its target. We will replace the info with our target's info
 * below. We especially want the name of this 'link' object, not
 * the name of its target, if we are fixing the filename
 * case/resolving aliases.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1143 - 0

/* Nothing? That could be nice. But our directory
 * walk is done.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1167 - 0

/* Fix up the path now if we have a name, and they don't agree
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1171 - 0

/* TODO: provide users an option that an internal/external
 * redirect is required here? We need to walk the URI and
 * filename in tandem to properly correlate these.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1192 - 0

/* Ok, we are done with the link's info, test the real target
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1196 - 0

/* That was fun, nothing left for us here
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1211 - 0

/* If we have _not_ optimized, this is the time to recover
 * the final stat result.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1218 - 0

/* Now splice the saved path_info back onto any new path_info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1230 - 0

/*
 * Now we'll deal with the regexes, note we pick up sec_idx
 * where we left off (we gave up after we hit entry_core->r)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1276 - 0

/* If we merged this same section last time, reuse it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1286 - 0

/* We fell out of sync. This is our own copy of walked,
 * so truncate the remaining matches and reset remaining.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1312 - 0

/* Whoops - everything matched in sequence, but either the original
 * walk found some additional matches (which we need to truncate), or
 * this walk found some additional matches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1442 - 0

/* We start now_merged from NULL since we want to build
 * a locations list that can be merged to any vhost.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1454 - 0

/* Go through the location entries, and check for matches.
 * We apply the directive sections in given order, we should
 * really try them with the most general first.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1463 - 0

/* ### const strlen can be optimized in location config parsing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1515 - 0

/* If we merged this same section last time, reuse it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1525 - 0

/* We fell out of sync. This is our own copy of walked,
 * so truncate the remaining matches and reset remaining.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1551 - 0

/* Whoops - everything matched in sequence, but either the original
 * walk found some additional matches (which we need to truncate), or
 * this walk found some additional matches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1653 - 0

/* We start now_merged from NULL since we want to build
 * a file section list that can be merged to any dir_walk.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1665 - 0

/* Go through the location entries, and check for matches.
 * We apply the directive sections in given order, we should
 * really try them with the most general first.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1711 - 0

/* If we merged this same section last time, reuse it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1721 - 0

/* We fell out of sync. This is our own copy of walked,
 * so truncate the remaining matches and reset remaining.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1747 - 0

/* Whoops - everything matched in sequence, but either the original
 * walk found some additional matches (which we need to truncate), or
 * this walk found some additional matches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1818 - 0

/* Go through the if entries, and check for matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1848 - 0

/* If we merged this same section last time, reuse it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1858 - 0

/* We fell out of sync. This is our own copy of walked,
 * so truncate the remaining matches and reset remaining.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1880 - 0

/* Everything matched in sequence, but it may be that the original
 * walk found some additional matches (which we need to truncate), or
 * this walk found some additional matches.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1960 - 0

/* make a copy of the allowed-methods list */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1963 - 0

/* start with the same set of output filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:1967 - 0

/* while there are no input filters for a subrequest, we will
 * try to insert some, so if we don't have valid data, the code
 * will seg fault.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2002 - 0

/* no input filters for a subrequest */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2016 - 0

/* Pass on the kept body (if any) into the new request. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2058 - 0

/* Reinstate any buffered content */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2064 - 0

/* if the core has set aside data, back off and try later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2090 - 0

/* pass each bucket down the chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2109 - 0

/* Is there a require line configured for the type of *this* req? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2235 - 0

/* would be nicer to pass "e;method"e; to ap_set_sub_req_protocol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2244 - 0

/* re-escape it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2300 - 0

/* Special case: we are looking at a relative lookup in the same directory.
 * This is 100% safe, since dirent->name just came from the filesystem.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2335 - 0

/* XXX This is now less relevant; we will do a full location walk
 * these days for this case. Preserve the apr_stat results, and
 * perhaps we also tag that symlinks were tested and/or found for
 * r->filename.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2343 - 0

/*
 * apr_dir_read isn't very complete on this platform, so
 * we need another apr_stat (with or without APR_FINFO_LINK
 * depending on whether we allow all symlinks here.) If this
 * is an APR_LNK that resolves to an APR_DIR, then we will rerun
 * everything anyways... this should be safe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2393 - 0

/* fill in parsed_uri values
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2431 - 0

/* Translate r->filename, if it was canonical, it stays canonical
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2447 - 0

/*
 * Check for a special case... if there are no '/' characters in new_file
 * at all, and the path was the same, then we are looking at a relative
 * lookup in the same directory. Fixup the URI to match.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2477 - 0

/* fill in parsed_uri values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2480 - 0

/* fill in parsed_uri values */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2515 - 0

/* Run the quick handler if the subrequest is not a dirent or file
 * subrequest
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2533 - 0

/* Reclaim the space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2548 - 0

/*
 * Is it the initial main request, which we only get *once* per HTTP request?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2553 - 0

/* otherwise, this is a sub-request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/request.c:2554 - 0

/* otherwise, this is an internal redirect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:39 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:59 - 0

/* Default to false when mod_status is not loaded */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:89 - 0

/* but must be exported to mpm_winnt */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:178 - 0

/**
 * Create a name-based scoreboard in the given pool using the
 * given filename.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:199 - 0

/* APR_HAS_SHARED_MEMORY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:214 - 0

/* We don't want to have to recreate the scoreboard after
 * restarts, so we'll create a global pool and never clean it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:225 - 0

/* The config says to create a name-based shmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:227 - 0

/* make sure it's an absolute pathname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:239 - 0

/* anonymous shared memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:246 - 0

/* Make up a filename and do name-based shmem */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:248 - 0

/* Make sure it's an absolute pathname */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:255 - 0

/* APR_HAS_SHARED_MEMORY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:259 - 0

/* If detach is non-zero, this is a separate child process,
 * if zero, it is a forked child.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:276 - 0

/* everything will be cleared shortly */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:300 - 0

/* Create or reinit an existing scoreboard. The MPM can control whether
 * the scoreboard is shared across multiple processes or not
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:336 - 0

/* A simple malloc will suffice */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:426 - 0

/* short circuit below */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:440 - 0

/* now figure out if we copy over the 1st rbuflen chars or the last */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:447 - 0

/* it all fits anyway */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:482 - 0

/*
 * Reset individual counters
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:581 - 0

/* Out of range */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:603 - 0

/* For extra safety, NUL-terminate the strings returned, though it
 * should be true those last bytes are always zero anyway. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/scoreboard.c:613 - 0

/* Out of range */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:33 - 0

/* for apr_password_validate */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:43 - 0

/* for getpid() on Win32 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:46 - 0

/* for gethostbyname() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:85 - 0

/* Win32/NetWare/OS2 need to check for both forward and back slashes
 * in ap_getparents() and ap_escape_url.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:96 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:100 - 0

/*
 * Examine a field value (such as a media-/content-type) string and return
 * it sans any parameters; e.g., strip off any ';charset=foo' and the like.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:152 - 0

/* common extension */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:169 - 0

/* check return code? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:308 - 0

/* an empty s2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:316 - 0

/* found first character of s2, see if the rest matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:321 - 0

/* both strings ended together */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:326 - 0

/* second string ended, a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:359 - 0

/* hit the end of bigstring! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:408 - 0

/* First pass, find the size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:415 - 0

/* Ordinary character. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:452 - 0

/* Ordinary character. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:504 - 0

/* Four paseses, as per RFC 1808 */
 /* a) remove ./ path segments */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:518 - 0

/* b) remove trailing . path, segment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:525 - 0

/* c) remove all xx/../ segments. (including leading ../ and /../) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:549 - 0

/* d) remove trailing xx/.. segment. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:573 - 0

/* Check for UNC names. Leave leading two slashes. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:636 - 0

/*
 * return the parent directory name including trailing / of the file s
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:748 - 0

/* Get a word, (new) config-file style --- quoted strings and backslashes
 * all honored
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:887 - 0

/* we can't use apr_file_* directly because of linking issues on Windows */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:903 - 0

/* Open a ap_configfile_t as FILE, return open ap_configfile_t struct pointer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:941 - 0

/* WIN32 || OS2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:984 - 0

/* Allocate a ap_configfile_t handle with user defined functions and params */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1001 - 0

/* Read one character from a configfile_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1030 - 0

/* If a "e;get string"e; function is defined, use it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1052 - 0

/*
 * check for line continuation,
 * i.e. match [^\\]\\[\r]\n only
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1064 - 0

/*
 * line continuation requested -
 * then remove backslash and continue
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1079 - 0

/* No "e;get string"e; function defined; read character by character */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1101 - 0

/* check for line continuation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1124 - 0

/*
 * Leading and trailing white space is eliminated completely
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1130 - 0

/* blast trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1134 - 0

/* Zap leading whitespace by shifting */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1195 - 0

/* Size an HTTP header field list item, as separated by a comma.
 * The return value is a pointer to the beginning of the non-empty list item
 * within the original string (or NULL if there is none) and the address
 * of field is shifted to the next non-comma, non-whitespace character.
 * len is the length of the item excluding any beginning whitespace.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1207 - 0

/* Find first non-comma, non-whitespace byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1214 - 0

/* Find the end of this item, skipping over dead bits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1225 - 0

/* quoted-pair */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1227 - 0

/* quoted string delim */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1230 - 0

/* comment (may nest) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1233 - 0

/* end comment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1246 - 0

/* Advance field pointer to the next non-comma, non-white byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1269 - 0

/* Find the beginning and maximum length of the list item so that
 * we can allocate a buffer for the new string and reset the field.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1277 - 0

/* Scan the token again, but this time copy only the good bytes.
 * We skip extra whitespace and any whitespace around a '=', '/',
 * or ';' and lowercase normal characters not within a comment,
 * quoted-string or quoted-pair.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1351 - 0

/* Find an item in canonical form (lowercase, no extra spaces) within
 * an HTTP field value list. Returns 1 if found, 0 if not found.
 * This would be much more efficient if we stored header fields as
 * an array of list items as they are received instead of a plain string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1378 - 0

/* loop for each item in line's list */

 /* Find first non-comma, non-whitespace byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1385 - 0

/* Account for strong or weak Etags, depending on our search */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1399 - 0

/* until proven otherwise for this item */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1401 - 0

/* no items left and nothing good found */

 /* We skip extra whitespace and any whitespace around a '=', '/',
 * or ';' and lowercase normal characters not within a comment,
 * quoted-string or quoted-pair.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1472 - 0

/* not good if only a prefix was matched */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1479 - 0

/* Find an item in canonical form (lowercase, no extra spaces) within
 * an HTTP field value list. Returns 1 if found, 0 if not found.
 * This would be much more efficient if we stored header fields as
 * an array of list items as they are received instead of a plain string.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1490 - 0

/* Find a strong Etag in canonical form (lowercase, no extra spaces) within
 * an HTTP field value list. Returns 1 if found, 0 if not found.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1499 - 0

/* Find a weak ETag in canonical form (lowercase, no extra spaces) within
 * an HTTP field value list. Returns 1 if found, 0 if not found.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1508 - 0

/* Grab a list of tokens of the format 1#token (from RFC7230) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1543 - 0

/* We're still in leading whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1547 - 0

/* We must be in trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1553 - 0

/* If we're out of the leading space, we know we've read some
 * characters of a token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1562 - 0

/* We're allowed to have null elements, just don't add them to the
 * array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1571 - 0

/* Encountered illegal separator char */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1573 - 0

/* Skip to the next separator */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1580 - 0

/* Act like we haven't seen a token so we reset */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1597 - 0

/* Retrieve a token, spacing over it and returning a pointer to
 * the first non-white byte afterwards. Note that these tokens
 * are delimited by semis and commas; and can also be delimited
 * by whitespace at the caller's option.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1610 - 0

/* Find first non-white byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1631 - 0

/* Advance accept_line pointer to the next non-white byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1641 - 0

/* find http tokens, see the definition of token from RFC2068 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1652 - 0

/* find start of token, skip all stop characters, note NUL
 * isn't a token stop, so we don't need to test for it
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1662 - 0

/* find end of the token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1702 - 0

/* Be safe */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1739 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1748 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1817 - 0

/* Traditional */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1824 - 0

/* no chars reserved */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1827 - 0

/* reserve (do not decode) encoded slashes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1832 - 0

/* IFDEF these out until they've been thought through.
 * Just a germ of an API extension for now
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1837 - 0

/* leave RFC1738 reserved characters intact, * so proxied URLs
 * don't get mangled. Where does that leave encoded '&' ?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1852 - 0

/* replace plus with a space */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1861 - 0

/* unescape everything else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1898 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:1946 - 0

/* Allocate +3 for potential "e;./"e; and trailing NULL.
 * Allocate another +1 to allow the caller to add a trailing '/' (see
 * comment in 'ap_sub_req_lookup_dirent')
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2004 - 0

/* ap_escape_uri is now a macro for os_escape_path */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2011 - 0

/* first, count the number of extra characters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2065 - 0

/* Compute how many characters need to be escaped */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2073 - 0

/* Compute the length of the input string, including NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2076 - 0

/* Fast path: nothing to escape */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2081 - 0

/* Each escaped character needs up to 3 extra bytes (0 --> \x00) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2128 - 0

/* be safe */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2255 - 0

/*
 * Check for an absoluteURI syntax (see section 3.2 in RFC2068).
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2307 - 0

/*
 * We must return a FQDN
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2356 - 0

/* simple 'pool' alloc()ing glue to apr_base64.c
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2365 - 0

/* make binary sequence into string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2377 - 0

/* make binary sequence into string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2405 - 0

/*
 * Given a string, replace any bare "e; with \"e; .
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2414 - 0

/*
 * Look through the input string, jogging the length of the output
 * string up by an extra byte each time we find an unescaped "e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2423 - 0

/*
 * If we find a slosh, and it's not the last byte in the string,
 * it's escaping something - advance past both bytes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2470 - 0

/**
 * Parse a given timeout parameter string into an apr_interval_time_t value.
 * The unit of the time interval is given as postfix string to the numeric
 * string. Currently the following units are understood:
 *
 * ms : milliseconds
 * s : seconds
 * mi[n] : minutes
 * h : hours
 *
 * If no unit is contained in the given timeout parameter the default_time_unit
 * will be used instead.
 * @param timeout_parameter The string containing the timeout parameter.
 * @param timeout The timeout value to be returned.
 * @param default_time_unit The default time unit to use if none is specified
 * in timeout_parameter.
 * @return Status value indicating whether the parsing was successful or not.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2509 - 0

/* Time is in seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2514 - 0

/* Time is in hours */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2519 - 0

/* Time is in milliseconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2523 - 0

/* Time is in minutes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2537 - 0

/**
 * Determine if a request has a request body or not.
 *
 * @param r the request_rec of the request
 * @return truth value
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2658 - 0

/* sanity check - we only support forms for now */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2866 - 0

/* add space for trailing \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2874 - 0

/* We are lucky: the new memory lies directly after our old
 * buffer, we can now use both.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2881 - 0

/* copy up to vb->strlen + 1 bytes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:2894 - 0

/* The required block is rather larger. Use allocator directly so that
 * the memory can be freed independently from the pool. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3126 - 0

/* varbuf contains concatenated password and hash */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3146 - 0

/* make ap_varbuf_grow below not copy the old data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3192 - 0

/* XXX: we are reading 1 byte at a time here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util.c:3230 - 0

/*
 * Provide our own known-fast implementation of str[n]casecmp()
 * NOTE: Only ASCII alpha characters 41-5A are folded to 61-7A,
 * other 8-bit latin alphabetics are never case-folded!
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cfgtree.c:24 - 0

/* we just started a new parent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cfgtree.c:30 - 0

/* First item in config file or container is a container */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cfgtree.c:39 - 0

/* switch parents, navigate into child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_charset.c:28 - 0

/*APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:26 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:30 - 0

/**
 * Write an RFC2109 compliant cookie.
 *
 * @param r The request
 * @param name The name of the cookie.
 * @param val The value to place in the cookie.
 * @param attrs The string containing additional cookie attributes. If NULL, the
 * DEFAULT_ATTRS will be used.
 * @param maxage If non zero, a Max-Age header will be added to the cookie.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:49 - 0

/* handle expiry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:55 - 0

/* create RFC2109 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:61 - 0

/* write the cookie to the header table(s) provided */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:72 - 0

/**
 * Write an RFC2965 compliant cookie.
 *
 * @param r The request
 * @param name2 The name of the cookie.
 * @param val The value to place in the cookie.
 * @param attrs2 The string containing additional cookie attributes. If NULL, the
 * DEFAULT_ATTRS will be used.
 * @param maxage If non zero, a Max-Age header will be added to the cookie.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:91 - 0

/* handle expiry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:97 - 0

/* create RFC2965 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:103 - 0

/* write the cookie to the header table(s) provided */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:114 - 0

/**
 * Remove an RFC2109 compliant cookie.
 *
 * @param r The request
 * @param name The name of the cookie.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:125 - 0

/* create RFC2109 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:131 - 0

/* write the cookie to the header table(s) provided */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:142 - 0

/**
 * Remove an RFC2965 compliant cookie.
 *
 * @param r The request
 * @param name2 The name of the cookie.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:153 - 0

/* create RFC2965 compliant cookie */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:159 - 0

/* write the cookie to the header table(s) provided */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:170 - 0

/* Iterate through the cookies, isolate our cookie and then remove it.
 *
 * If our cookie appears two or more times, but with different values,
 * remove it twice and set the duplicated flag to true. Remove any
 * $path or other attributes following our cookie if present. If we end
 * up with an empty cookie, remove the whole header.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:191 - 0

/* find the cookie called name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:227 - 0

/* any cookies left over? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:235 - 0

/**
 * Read a cookie called name, placing its value in val.
 *
 * Both the Cookie and Cookie2 headers are scanned for the cookie.
 *
 * If the cookie is duplicated, this function returns APR_EGENERAL. If found,
 * and if remove is non zero, the cookie will be removed from the headers, and
 * thus kept private from the backend.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:264 - 0

/* remove our cookie(s), and replace them */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_cookies.c:277 - 0

/**
 * Sanity check a given string that it exists, is not empty,
 * and does not contain the special characters '=', ';' and '&'.
 *
 * It is used to sanity check the cookie names.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_debug.c:24 - 0

/* Possibly get rid of the macros we defined in httpd.h */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_debug.c:195 - 0

/**
 * Generic accessors for other modules to set at their own module-specific
 * data
 * @param conf_vector The vector in which the modules configuration is stored.
 * usually r->per_dir_config or s->module_config
 * @param m The module to set the data for.
 * @param val The module-specific data to set
 * @fn void ap_set_module_config(ap_conf_vector_t *cv, const module *m, void *val)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_debug.c:232 - 0

/* poison uninitialized memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_ebcdic.c:27 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_ebcdic.c:117 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:42 - 0

/* for INT_MAX */

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:85 - 0

/* short circuit further evaluation */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:220 - 0

/* Evaluate the list elements and store them in apr_array_header. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:340 - 0

/* combined string/int comparison for compatibility with ssl_expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:433 - 0

/* XXX can this happen? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:603 - 0

/* no arg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:620 - 0

/* arg1: string, arg2: expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:637 - 0

/* arg1: expr, arg2: expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:693 - 0

/* arg1: string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:707 - 0

/* arg1: pointer, arg2: pointer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:727 - 0

/* arg1: pointer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:731 - 0

/* arg1: pointer to int */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:862 - 0

/* XXX: allow r, c == NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:959 - 0

/* short-cut for constant strings */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:995 - 0

/* Not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1029 - 0

/* resp */
 /* Try r->headers_out first, fall back on err_headers_out. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1037 - 0

/* notes */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1039 - 0

/* reqenv */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1041 - 0

/* req_novary */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1043 - 0

/* req, http */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1054 - 0

/* this order is for ssl_expr compatibility */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1355 - 0

/* double-check that file exists since default result is 200 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1372 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1373 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1374 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1375 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1416 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1417 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1418 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1419 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1420 - 0

/* 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1421 - 0

/* 5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1422 - 0

/* 6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1423 - 0

/* 7 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1424 - 0

/* 8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1425 - 0

/* 9 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1426 - 0

/* 10 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1427 - 0

/* 11 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1428 - 0

/* 12 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1429 - 0

/* 13 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1430 - 0

/* 14 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1431 - 0

/* 15 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1432 - 0

/* 16 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1433 - 0

/* 17 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1434 - 0

/* 18 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1435 - 0

/* 19 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1436 - 0

/* 20 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1437 - 0

/* 21 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1438 - 0

/* 22 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1439 - 0

/* 23 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1440 - 0

/* 24 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1441 - 0

/* 25 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1442 - 0

/* 26 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1443 - 0

/* 27 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1444 - 0

/* 28 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1445 - 0

/* 29 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1446 - 0

/* 30 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1447 - 0

/* 31 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1537 - 0

/* 1.1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1538 - 0

/* 1.0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1539 - 0

/* 0.9 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1562 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1563 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1564 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1565 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1566 - 0

/* 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1567 - 0

/* 5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1568 - 0

/* 6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1598 - 0

/* 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1599 - 0

/* 1 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1600 - 0

/* 2 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1601 - 0

/* 3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1602 - 0

/* 4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1603 - 0

/* 5 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1604 - 0

/* 6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1605 - 0

/* 7 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1606 - 0

/* 8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1607 - 0

/* 9 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_eval.c:1770 - 0

/* 'http' as alias for 'req' for compatibility with ssl_expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:46 - 0

/* Bison version. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:49 - 0

/* Skeleton name. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:52 - 0

/* Pure parsers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:55 - 0

/* Push parsers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:58 - 0

/* Pull parsers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:62 - 0

/* Substitute the variable and function names. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:71 - 0

/* Copy the first part of user declarations. */
/* Line 371 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:77 - 0

/* Line 371 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:96 - 0

/* In a future release of Bison, this section will be replaced
 by #include "e;util_expr_parse.h"e;. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:100 - 0

/* Enabling traces. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:108 - 0

/* Tokens. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:111 - 0

/* Put the tokens into the symbol table, so that GDB and other debuggers
 know about them. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:157 - 0

/* Line 387 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:165 - 0

/* Line 387 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:180 - 0

/* ! YYPARSE_PARAM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:186 - 0

/* ! YYPARSE_PARAM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:188 - 0

/* !YY_AP_EXPR_YY_UTIL_EXPR_PARSE_H_INCLUDED */

/* Copy the second part of user declarations. */
/* Line 390 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:199 - 0

/* Line 390 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:240 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:252 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:265 - 0

/* empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:269 - 0

/* Suppress unused-variable warnings by "e;using"e; E. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:273 - 0

/* empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:277 - 0

/* Identity function, used to suppress warnings about constant conditions. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:304 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:308 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:314 - 0

/* INFRINGES ON USER NAME SPACE */
 /* Use EXIT_SUCCESS as a witness for stdlib.h. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:325 - 0

/* Pacify GCC's `empty if-body' warning. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:326 - 0

/* empty */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:343 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:352 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:359 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:363 - 0

/* ! defined yyoverflow || YYERROR_VERBOSE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:370 - 0

/* A type that is properly aligned for any stack member. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:380 - 0

/* The size of an array large to enough to hold all stacks, each with
 N elements. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:388 - 0

/* Relocate STACK from its old location to the new one. The
 local variables YYSIZE and YYSTACKSIZE give the old and new number of
 elements in the stack, and YYPTR gives the new location of the
 stack. Advance YYPTR to a properly aligned location for the next
 stack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:428 - 0

/* YYLAST -- Last index in YYTABLE. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:431 - 0

/* YYNTOKENS -- Number of terminals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:433 - 0

/* YYNNTS -- Number of nonterminals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:435 - 0

/* YYNRULES -- Number of rules. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:437 - 0

/* YYNRULES -- Number of states. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:440 - 0

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:447 - 0

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:483 - 0

/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
 YYRHS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:495 - 0

/* YYRHS -- A `-1'-separated list of the rules' RHS. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:518 - 0

/* YYRLINE[YYN] -- source line where rule number YYN was defined. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:531 - 0

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
 First, the terminals, then, starting at YYNTOKENS, nonterminals. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:557 - 0

/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
 token YYLEX-NUM. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:569 - 0

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:580 - 0

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:608 - 0

/* YYDEFGOTO[NTERM-NUM]. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:615 - 0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
 STATE-NUM. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:632 - 0

/* YYPGOTO[NTERM-NUM]. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:685 - 0

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
 symbol of state STATE-NUM. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:750 - 0

/* This macro is provided for backward compatibility. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:763 - 0

/* Enable debugging if requested. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:767 - 0

/* INFRINGES ON USER NAME SPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:789 - 0

/*--------------------------------.
| Print this symbol on YYOUTPUT. |
`--------------------------------*/

/*ARGSUSED*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:822 - 0

/*--------------------------------.
| Print this symbol on YYOUTPUT. |
`--------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:848 - 0

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included). |
`------------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:880 - 0

/*------------------------------------------------.
| Report that the YYRULE is going to be reduced. |
`------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:901 - 0

/* The symbols being reduced. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:918 - 0

/* Nonzero means print parse trace. It is left uninitialized so that
 multiple parsers can coexist. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:921 - 0

/* !YYDEBUG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:926 - 0

/* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:934 - 0

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
 if the built-in stack extension method is used).

 Do not make this value too large; the results are undefined if
 YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
 evaluated with infinite-precision integer arithmetic. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:952 - 0

/* Return the length of YYSTR. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1025 - 0

/* Fall through. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1062 - 0

/* Internationalized format string. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1066 - 0

/* Number of reported tokens (one for the "e;unexpected"e;, one per
 "e;expected"e;). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1107 - 0

/* Stay within bounds of both yycheck and yytname. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1185 - 0

/* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol. |
`-----------------------------------------------*/

/*ARGSUSED*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1218 - 0

/*----------.
| yyparse. |
`----------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1232 - 0

/* ! YYPARSE_PARAM */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1244 - 0

/* The lookahead symbol. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1257 - 0

/* Default value used for initialization, for pacifying older GCCs
 or non-GCC compilers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1267 - 0

/* Nothing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1270 - 0

/* The semantic value of the lookahead symbol. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1280 - 0

/* The stacks and their tools:
 `yyss': related to states.
 `yyvs': related to semantic values.

 Refer to the stacks through separate pointers, to allow yyoverflow
 to reallocate them elsewhere. */

 /* The state stack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1292 - 0

/* The semantic value stack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1301 - 0

/* Lookahead token as an internal (translated) token number. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1303 - 0

/* The variables used to return semantic value and location from the
 action routines. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1316 - 0

/* The number of symbols on the RHS of the reduced rule.
 Keep to zero when no symbol should be popped. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1332 - 0

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate. |
`------------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1336 - 0

/* In all cases, when you get here, the value and location stacks
 have just been pushed. So pushing a state here evens the stacks. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1345 - 0

/* Get the current used size of the three stacks, in elements. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1350 - 0

"/* Give user a chance to reallocate the stack. Use copies of
	these so that the &'s don't force the real ones into
	memory. */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1356 - 0

"/* Each stack pointer address is followed by the size of the
	data in use in that stack, in bytes. This used to be a
	conditional around just the two extra args, but that might
	be undefined if yyoverflow is a macro. */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1368 - 0

/* no yyoverflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1372 - 0

/* Extend the stack our own way. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1392 - 0

/* no yyoverflow */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1411 - 0

/*-----------.
| yybackup. |
`-----------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1463 - 0

/* Shift the lookahead token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1466 - 0

/* Discard the shifted token. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1477 - 0

/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state. |
`-----------------------------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1487 - 0

/*-----------------------------.
| yyreduce -- Do a reduction. |
`-----------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1509 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1515 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1521 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1527 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1533 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1539 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1545 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1551 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1557 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1563 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1569 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1575 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1581 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1587 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1593 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1599 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1605 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1611 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1617 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1623 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1629 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1635 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1641 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1647 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1653 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1659 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1665 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1671 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1677 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1683 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1689 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1695 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1701 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1707 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1713 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1719 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1725 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1731 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1737 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1743 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1749 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1755 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1761 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1767 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1773 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1779 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1785 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1791 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1805 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1819 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1829 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1835 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1841 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1847 - 0

/* Line 1787 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1870 - 0

/* Now `shift' the result of the reduction. Determine what state
 that goes to, based on the state we popped back to and the rule
 number reduced by. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1942 - 0

/* Return failure if at end of input. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1964 - 0

/* Pacify compilers like GCC when the user code never invokes
 YYERROR and the label yyerrorlab therefore never appears in user
 code. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1967 - 0

/*CONSTCOND*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1970 - 0

/* Do not reclaim the symbols of the rule which action triggered
 this YYERROR. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:1983 - 0

/* Each real token shifted decrements this. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2023 - 0

/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here. |
`-------------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2030 - 0

/*-----------------------------------.
| yyabortlab -- YYABORT comes here. |
`-----------------------------------*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2044 - 0

/* Fall through. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2056 - 0

/* Do not reclaim the symbols of the rule which action triggered
 this YYABORT or YYACCEPT. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2074 - 0

/* Make sure YYID is used. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2079 - 0

/* Line 2050 of yacc.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_parse.c:2085 - 0

/* s is allocated on the stack */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:7 - 0

/* A lexical scanner generated by flex */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:17 - 0

/* First, we deal with platform-specific or compiler-specific issues. */

/* begin standard C headers. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:25 - 0

/* end standard C headers. */

/* flex integer type definitions */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:32 - 0

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:58 - 0

/* Limits of integral types. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:87 - 0

/* ! C99 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:89 - 0

/* ! FLEXINT_H */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:93 - 0

/* The "e;const"e; storage-class-modifier is valid. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:96 - 0

/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:103 - 0

/* defined (__STDC__) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:104 - 0

/* ! __cplusplus */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:112 - 0

/* Returned upon end-of-file. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:145 - 0

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state. The YYSTATE alias is for lex
 * compatibility.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:152 - 0

/* Action number for EOF rule of a given start state. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:155 - 0

/* Special action meaning "e;start processing a new file"e;. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:160 - 0

/* Size of default input buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:163 - 0

/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:170 - 0

/* __ia64__ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:173 - 0

/* The state buf must be large enough to hold one state per character in the main buffer.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:188 - 0

/* Return all but the first "e;n"e; matched characters back to the input stream. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:192 - 0

/* Undo effects of setting up yytext. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:198 - 0

/* set up yytext again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:215 - 0

/* input buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:216 - 0

"/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	* characters.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:223 - 0

"/* Number of characters read into yy_ch_buf, not including EOB
	* characters.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:228 - 0

"/* Whether we "e;own"e; the buffer - i.e., we know we created it,
	* and can realloc() it to grow it, and should free() it to
	* delete it.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:234 - 0

"/* Whether this is an "e;interactive"e; input source; if so, and
	* if we're using stdio for input, then we want to use getc()
	* instead of fread(), to make sure we stop fetching input after
	* each newline.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:241 - 0

"/* Whether we're considered to be at the beginning of a line.
	* If so, '^' rules will be active on the next match, otherwise
	* not.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:247 - 0

/**< The line count. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:248 - 0

"/**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	* end of it.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:272 - 0

/* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "e;scanner state"e;.
 *
 * Returns the top of the stack, or NULL.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:284 - 0

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:335 - 0

/* Begin user sect3 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:639 - 0

/* Special case for "e;unistd.h"e;, since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:654 - 0

/* User-defined. Not touched by flex. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:659 - 0

/**< index of top of stack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:661 - 0

/**< Stack as an array. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:684 - 0

/* end struct yyguts_t */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:688 - 0

/* This must go here because YYSTYPE and YYLTYPE are included
 * from bison output in section 1.*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:763 - 0

/* Amount of stuff to slurp up with each read. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:766 - 0

/* On IA-64, the buffer size is 16k, not 8k */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:770 - 0

/* __ia64__ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:773 - 0

/* Copy whatever the last rule matched to the standard output. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:775 - 0

/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:781 - 0

/* Gets input and stuffs it into "e;buf"e;. number of characters read, or YY_NULL,
 * is returned in "e;result"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:825 - 0

/* Number of entries by which start-condition stack grows. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:835 - 0

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:848 - 0

/* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:857 - 0

/* Code executed at the end of each rule. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:865 - 0

/** The main scanner function which does all the work.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:882 - 0

/*
 * Set initial state for string expressions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:897 - 0

/*
 * Whitespaces
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:913 - 0

/* first start state */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:930 - 0

/* loops until end-of-file is reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:934 - 0

/* Support of yytext. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:937 - 0

"/* yy_bp points to the position in yy_ch_buf of the start of
	* the current run.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:970 - 0

/* This label is used only to access EOF actions. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:973 - 0

/* beginning of action switch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:982 - 0

/* rule 1 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:986 - 0

/* NOP */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:989 - 0

/*
 * strings ("e;..."e; and '...')
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1015 - 0

/* return what we have so far and scan delimiter again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1029 - 0

/* rule 4 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1106 - 0

/* rule 12 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1111 - 0

/* regexp backref inside string/arg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1117 - 0

/* return what we have so far and scan '$x' again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1141 - 0

/* variable inside string/arg */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1147 - 0

/* return what we have so far and scan '%{' again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1190 - 0

/*
 * fixed name variable expansion %{XXX} and function call in %{func:arg} syntax
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1218 - 0

/* rule 23 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1232 - 0

/* return what we have so far and scan '}' again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1245 - 0

/*
 * Regular Expression
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1267 - 0

/* rule 27 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1292 - 0

/* rule 29 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1310 - 0

/*
 * Operators
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1423 - 0

/* for compatibility with ssl_expr */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1475 - 0

/*
 * Specials
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1488 - 0

/*
 * Digits
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1499 - 0

/*
 * Identifiers
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1510 - 0

/*
 * These are parts of the grammar and are returned as is
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1524 - 0

/* rule 66 can match eol */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1544 - 0

/* Amount of text matched not including the EOB char. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1575 - 0

/* This was really a NUL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1619 - 0

"/* Note: because we've taken care in
	* yy_get_next_buffer() to have set up
	* yytext, we can now set up
	* yy_c_buf_p so that if some total
	* hoser (like flex itself) wants to
	* call the scanner after we return the
	* YY_NULL, it'll still work - another
	* YY_NULL will get returned.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1668 - 0

/* end of action switch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1669 - 0

/* end of scanning one token */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1670 - 0

"/* end of ap_expr_yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 * EOB_ACT_LAST_MATCH -
 * EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 * EOB_ACT_END_OF_FILE - end of file
 */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1692 - 0

/* Don't try to fill the buffer, so this is an EOF. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1695 - 0

"/* We matched a single character, the EOB, so
	* treat this as a final EOF.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1703 - 0

"/* We matched some text prior to the EOB, first
	* process it.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1710 - 0

"/* Try to read more data. */

	/* First move last chars to start of buffer. */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1719 - 0

"/* don't do the read, it's not guaranteed to return an EOF,
	* just force an EOF
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1730 - 0

"/* Not enough room in the buffer - grow it. */

	/* just a shorter name for the current buffer */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1748 - 0

/* Include room in for 2 EOB chars. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1752 - 0

/* Can't grow it, we don't own it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1769 - 0

/* Read in more data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1796 - 0

/* Extend the array by 50%, plus the number we really need. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1842 - 0

"/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 * next_state = yy_try_NUL_trans( current_state );
 */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1850 - 0

/* This var may be unused depending upon options. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1891 - 0

/* This was really a NUL. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1895 - 0

/* need more input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1915 - 0

/*FALLTHROUGH*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1938 - 0

/* cast for 8-bit char's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1939 - 0

/* preserve yytext */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1965 - 0

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1973 - 0

"/* TODO. We should be able to replace this entire function body
	* with
	* ap_expr_yypop_buffer_state();
	* ap_expr_yypush_buffer_state(new_buffer);
 */" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:1984 - 0

/* Flush out information for old buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2026 - 0

"/* yy_ch_buf has to be 2 characters longer than the size given because
	* we need to put in 2 end-of-buffer characters.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2040 - 0

/** Destroy the buffer.
 * @param b a buffer created with ap_expr_yy_create_buffer()
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2051 - 0

/* Not sure if we should pop here. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2060 - 0

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a ap_expr_yyrestart() or at EOF.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2075 - 0

/* If b is the current buffer, then ap_expr_yy_init_buffer was _probably_
 * called from ap_expr_yyrestart() or through yy_get_next_buffer.
 * In that case, we don't want to reset the lineno or column.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2089 - 0

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2131 - 0

/* This block is copied from ap_expr_yy_switch_to_buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2134 - 0

/* Flush out information for old buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2140 - 0

/* Only push if top exists. Otherwise, replace top. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2145 - 0

/* copied from ap_expr_yy_switch_to_buffer. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2150 - 0

/** Removes and deletes the top of the stack, if present.
 * The next element becomes the new top.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2171 - 0

/* Allocates the stack if it does not exist.
 * Guarantees space for at least one push.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2212 - 0

/* zero only the new slots.*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2218 - 0

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object. 
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2231 - 0

/* They forgot to leave room for the EOB's. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2238 - 0

/* "e;- 2"e; to take care of EOB's */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2267 - 0

/** Setup the input buffer state to scan the given bytes. The next call to ap_expr_yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2281 - 0

/* Get memory for full buffer, including space for trailing EOB's. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2296 - 0

"/* It's okay to grow etc. this buffer, and we should throw it
	* away when we're done.
	*/" 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2348 - 0

/* Redefine yyless() so it works in section 3 code. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2354 - 0

/* Undo effects of setting up yytext. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2365 - 0

/* Accessor methods (get/set functions) to struct members. */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2376 - 0

/** Get the current line number.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2389 - 0

/** Get the current column number.
 * @param yyscanner The scanner object.
 */

/** Get the input stream.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2402 - 0

/** Get the output stream.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2411 - 0

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2420 - 0

/** Get the current token.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2430 - 0

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2440 - 0

/** Set the current line number.
 * @param line_number
 * @param yyscanner The scanner object.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2448 - 0

/* lineno is only valid if an input buffer exists. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2455 - 0

/** Set the current column.
 * @param line_number
 * @param yyscanner The scanner object.
 */

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see ap_expr_yy_switch_to_buffer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2490 - 0

/* Accessor methods for yylval and yylloc */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2526 - 0

/* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2559 - 0

/* By setting to 0xAA, we expose bugs in
 yy_init_globals. Leave at 0x00 for releases. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2586 - 0

/* Defined in main.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2606 - 0

/* Pop the buffer stack, destroying each element. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2613 - 0

/* Destroy the stack itself. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2617 - 0

/* Destroy the start condition stack. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2631 - 0

/*
 * Internal utility routines.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_expr_scan.c:2674 - 0

/* see ap_expr_yyrealloc() for (char *) cast */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:22 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_fcgi.c:271 - 0

/* filled up predicted space, as expected */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:30 - 0

/* NOTE: Apache's current design doesn't allow a pool to be passed thru,
 so we depend on a global to hold the correct pool
*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:34 - 0

/* for apr_hook_global_pool */

/* XXX: Should these be configurable parameters? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:50 - 0

/* Trie structure to hold the mapping from registered
 * filter names to filters
 */

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:65 - 0

/* Each trie node has an array of pointers to its children.
 * The array is kept in sorted order so that add_any_filter()
 * can do a binary search
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:78 - 0

/* Link a trie node to its parent
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:113 - 0

/* Allocate a new node for a trie.
 * If parent is non-NULL, link the new node under the parent node with
 * key 'c' (or, if an existing child node matches, return that one)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:135 - 0

/* No parent node */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:323 - 0

/* f->r must always be NULL for connection filters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:337 - 0

/* If we are adding our first non-connection filter,
 * Then don't try to find the right location, it is
 * automatically first.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:556 - 0

/*
 * Read data from the next filter in the filter stack. Data should be
 * modified in the bucket brigade that is passed in. The core allocates the
 * bucket brigade, modules that wish to replace large chunks of data or to
 * save data off to the side should probably create their own temporary
 * brigade especially for that use.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:576 - 0

/* Pass the buckets to the next filter in the filter stack. If the
 * current filter is a handler, we should get NULL passed in instead of
 * the current filter. At that point, we can just call the first filter in
 * the stack, or r->output_filters.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:598 - 0

/* remember the eos for internal redirects, too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:669 - 0

/* If the bucket type does not implement setaside, then
 * (hopefully) morph it into a bucket type which does, and set
 * *that* aside... */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:719 - 0

/*
 * Set aside the brigade bb within f->bb.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:737 - 0

/* decide what pool we setaside to, request pool or deferred pool? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:837 - 0

/*
 * A setaside of morphing buckets would read everything into
 * memory. Instead, we will flush everything up to and
 * including this bucket.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_filter.c:941 - 0

/*
 * This is either a main request or internal redirect, or it is a
 * connection filter. Yield if there is any buffered data downstream
 * from us.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_md5.c:153 - 0

/* keep this a multiple of 64 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:42 - 0

/* getpid() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:45 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:53 - 0

/* Split arg into meth and file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:73 - 0

/* NOTE: previously, 'yes' implied 'sem' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:138 - 0

/* hash is created the first time a module calls ap_mutex_register(),
 * rather than attempting to be the REALLY_REALLY_FIRST pre-config
 * hook; it is cleaned up when the associated pool goes away; assume
 * pconf is the pool passed to ap_mutex_register()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:157 - 0

/* initialize default mutex configuration */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:198 - 0

/* "e;none"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:202 - 0

/* "e;OmitPID"e; can appear at the end of the list, so build a list of
 * mutex type names while looking for "e;OmitPID"e; (anywhere) or the end
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:218 - 0

/* no mutex type? assume "e;default"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:230 - 0

/* in case that was the default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:244 - 0

/* retain mutex default if not configured */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:271 - 0

/* usually NULL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:272 - 0

/* usually APR_LOCK_DEFAULT */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:324 - 0

/* MUST exist in table, or wasn't registered */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:330 - 0

/* order of precedence:
 * 1. Mutex directive for this mutex
 * 2. Mutex directive for "e;default"e;
 * 3. Defaults for this mutex from ap_mutex_register()
 * 4. Global defaults
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_mutex.c:351 - 0

/* a file-based mutex mechanism was configured, but
 * without a mutex file directory; go back through
 * the chain to find the directory, store in new
 * mutex cfg structure
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:51 - 0

/* PCRE_DUPNAMES is only present since version 6.7 of PCRE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:68 - 0

/* Dummy for value 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:70 - 0

/* AP_REG_ESPACE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:71 - 0

/* AP_REG_INVARG */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:72 - 0

/* AP_REG_NOMATCH */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:115 - 0

/*************************************************
 * Free store held by a regex *
 *************************************************/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:210 - 0

/* Only has meaning after compile */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_pcre.c:316 - 0

/* PCRE_DUPNAMES defined */

/* End of pcreposix.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:34 - 0

/* perl style patterns
 * add support for more as and when wanted
 * substitute: s/rx/subs/
 * match: m/rx/ or just /rx/
 */

 /* allow any nonalnum delimiter as first or second char.
 * If we ever use this with non-string pattern we'll need an extra check
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:69 - 0

/* there's no delim or flags */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:80 - 0

/* We have a delimiter. Use it to extract the regexp */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:96 - 0

/* anything after the current delimiter is flags */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:106 - 0

/* we should probably be stricter here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:123 - 0

/* next char is escaped - skip it */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:128 - 0

/* unescaped bracket implies memory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:147 - 0

/* snrf process_regexp from mod_headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:150 - 0

/* no match, nothing to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:165 - 0

/* recurse to do any further matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_regex.c:168 - 0

/* a further substitution happened */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:35 - 0

/* for sub_req_lookup_uri() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:37 - 0

/* For apr_date_parse_http() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:168 - 0

/* First, add environment vars from headers... this is as per
 * CGI specs, though other sorts of scripting interfaces see
 * the same vars...
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:235 - 0

/* Some Unix */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:243 - 0

/* Apache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:249 - 0

/* Apache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:253 - 0

/* Apache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:260 - 0

/* Apache */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:293 - 0

/* PR#57785: reconstruct full URL here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:316 - 0

/* This "e;cute"e; little function comes about because the path info on
 * filenames and URLs aren't always the same. So we take the two,
 * and find as much of the two that match as possible.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:342 - 0

/* Obtain the Request-URI from the original request-line, returning
 * a new string from the request pool containing the URI or "e;"e;.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:353 - 0

/* use the request-line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:356 - 0

/* skip over the method */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:359 - 0

/* and the space(s) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:364 - 0

/* end at next whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:419 - 0

/* We need to make this a real Windows path name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:457 - 0

/* temporary place to hold headers to merge in later */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:460 - 0

/* The HTTP specification says that it is legal to merge duplicate
 * headers into one. Some browsers that support Cookies don't like
 * merged headers and prefer that each Set-Cookie header is sent
 * separately. Lets humour those browsers by not merging.
 * Oh what a pain it is.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:488 - 0

/* Delete terminal (CR?)LF */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:491 - 0

/* Indeed, the host's '\n':
 '\012' for UNIX; '\015' for MacOS; '\025' for OS/390
 -- whatever the script generates.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:555 - 0

/* Chances are that we received an ASCII header text instead of
 * the expected EBCDIC header lines. Try to auto-detect:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:580 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:583 - 0

/* Soak up all the script output - may save an outright kill */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:603 - 0

/* Nuke trailing whitespace */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:614 - 0

/*
 * If the script returned a specific status, that's what
 * we'll use - otherwise we assume 200 OK.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:662 - 0

/* never reached - we leave this function within the while loop above */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:857 - 0

/* Split the string in two */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_script.c:858 - 0

/* Skip passed the = */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:22 - 0

/* Number of characters needed to format the microsecond part of a timestamp.
 * Microseconds have 6 digits plus one separator character makes 7.
 * */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:27 - 0

/* Length of ISO 8601 date/time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:40 - 0

/* the "e;+ 1"e; is for the current second: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:112 - 0

/* Invalid snapshot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:121 - 0

/* Valid snapshot */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:167 - 0

/* ### This code is a clone of apr_ctime(), except that it
 * uses ap_explode_recent_localtime() instead of apr_time_exp_lt().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:176 - 0

/* Calculate the needed buffer length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:186 - 0

/* Check the provided buffer length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:197 - 0

/* example without options: "e;Wed Jun 30 21:49:08 1993"e; */
 /* 123456789012345678901234 */
 /* example for compact format: "e;1993-06-30 21:49:08"e; */
 /* 1234567890123456789 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:261 - 0

/* ### This code is a clone of apr_rfc822_date(), except that it
 * uses ap_explode_recent_gmt() instead of apr_time_exp_gmt().
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:270 - 0

/* example: "e;Sat, 08 Jan 2000 18:31:41 GMT"e; */
 /* 12345678901234567890123456789 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_time.c:288 - 0

/* This routine isn't y10k ready. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:28 - 0

/* used for reading input blocks */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:32 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:56 - 0

/* read the body, stuffing it into the parser */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:107 - 0

/* tell the parser that we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/util_xml.c:130 - 0

/* FALLTHRU */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:42 - 0

/* we know core's module_index is 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:46 - 0

/*
 * After all the definitions there's an explanation of how it's all put
 * together.
 */

/* meta-list of name-vhosts. Each server_rec can be in possibly multiple
 * lists of name-vhosts.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:59 - 0

/* the server to use on a match */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:62 - 0

/* meta-list of ip addresses. Each server_rec can be in possibly multiple
 * hash chains since it can have multiple ips.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:71 - 0

/* the server to use if this matches */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:72 - 0

/* if non-NULL then a list of name-vhosts
 * sharing this address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:78 - 0

/* This defines the size of the hash table used for hashing ip addresses
 * of virtual hosts. It must be a power of two.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:85 - 0

/* A (n) bucket hash table, each entry has a pointer to a server rec and
 * a pointer to the other entries in that bucket. Each individual address,
 * even for virtualhosts with multiple addresses, has an entry in this hash
 * table. There are extra buckets for _default_, and name-vhost entries.
 *
 * Note that after config time this is constant, so it is thread-safe.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:94 - 0

/* dump out statistics about the hash function */
/* #define IPHASH_STATISTICS */

/* list of the _default_ servers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:103 - 0

/* config check function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:161 - 0

/* wlen must be > 0 at this point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:163 - 0

/* apr_parse_addr_port() doesn't understand "e;:*"e; so handle that first. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:175 - 0

/* If the string is "e;80"e;, apr_parse_addr_port() will be happy and set
 * host to NULL and port to 80, so watch out for that.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:207 - 0

/* Remember all addresses for the host */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:223 - 0

/* parse the <VirtualHost> addresses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:231 - 0

/* start the list of addreses */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:244 - 0

/* override the default port which is inherited from main_server */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:269 - 0

/* hash table statistics, keep this in here for the beta period so
 * we can find out if the hash function is ok
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:294 - 0

/* don't count the slop buckets in the total */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:342 - 0

/* The key is the last four bytes of the IP address.
 * For IPv4, this is the entire address, as always.
 * For IPv6, this is usually part of the MAC address.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:384 - 0

/* scan the hash table for an exact match first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:414 - 0

/* match! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:500 - 0

/* non-wildcard servers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:507 - 0

/* wildcard servers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:538 - 0

/* second pass through this chain -- this really is an NVH, and we
 * have two sets of names to link in.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:547 - 0

/* 3rd or more -- just keep stacking the names */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:552 - 0

/* compile the tables and such we need to do the run-time vhost lookups */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:561 - 0

/* Main host first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:568 - 0

/* initialize the tails */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:573 - 0

/* The next things to go into the hash table are the virtual hosts
 * themselves. They're listed off of main_s->next in the reverse
 * order they occured in the config file, so we insert them at
 * the iphash_table_tail but don't advance the tail.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:584 - 0

/* big enough to handle IPv4 or IPv6 */
 /* XXX: this treats 0.0.0.0 as a "e;default"e; server which matches no-exact-match for IPv6 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:589 - 0

/* we're a match for an existing "e;default server"e; */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:596 - 0

/* No default server, or we found a default server but
 ** exactly one of us is a wildcard port, which means we want
 ** two ip-based vhosts not an NVH with two names
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:612 - 0

/* No matching server, or we found a matching server but
 ** exactly one of us is a wildcard port, which means we want
 ** two ip-based vhosts not an NVH with two names
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:684 - 0

/*****************************************************************************
 * run-time vhost matching functions
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:710 - 0

/* For IPv4-mapped IPv6 addresses like ::FFFF:129.144.52.38 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:727 - 0

/* leave char unchanged */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:741 - 0

/* strip trailing gubbins */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:748 - 0

/*
 * If strict mode ever becomes the default, this should be folded into
 * fix_hostname_non_v6()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:779 - 0

/* RFC 3986 7.4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:784 - 0

/* The top-level domain must start with a letter (RFC 1123 2.1) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:828 - 0

/* According to RFC 2616, Host header field CAN be blank */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:838 - 0

/* pure integer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:840 - 0

/* RFC 3986 7.4 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:900 - 0

/* return 1 if host matches ServerName or ServerAliases */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:906 - 0

/* match ServerName */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:911 - 0

/* search all the aliases from ServerAlias directive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:934 - 0

/* Suppose a request came in on the same socket as this r, and included
 * a header "e;Host: host:port"e;, would it map to r->server? It's more
 * than just that though. When we do the normal matches for each request
 * we don't even bother considering Host: etc on non-namevirtualhosts,
 * we just call it a match. But here we require the host:port to match
 * the ServerName and/or ServerAliases.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:949 - 0

/* search all the <VirtualHost> values */
 /* XXX: If this is a NameVirtualHost then we may not be doing the Right Thing
 * consider:
 *
 * NameVirtualHost 10.1.1.1
 * <VirtualHost 10.1.1.1>
 * ServerName v1
 * </VirtualHost>
 * <VirtualHost 10.1.1.1>
 * ServerName v2
 * </VirtualHost>
 *
 * Suppose r->server is v2, and we're asked to match "e;10.1.1.1"e;. We'll say
 * "e;yup it's v2"e;, when really it isn't... if a request came in for 10.1.1.1
 * it would really go to v1.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:972 - 0

/* the Port has to match now, because the rest don't have ports associated
 * with them. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1009 - 0

/* Recall that the name_chain is a list of server_addr_recs, some of
 * whose ports may not match. Also each server may appear more than
 * once in the chain -- specifically, it will appear once for each
 * address from its VirtualHost line which matched. We only want to
 * do the full ServerName/ServerAlias comparisons once for each
 * server, fortunately we know that all the VirtualHost addresses for
 * a single server are adjacent to each other.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1021 - 0

/* We only consider addresses on the name_chain which have a matching
 * port
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1031 - 0

/* If we still need to do ServerName and ServerAlias checks for this
 * server, do them now.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1035 - 0

/* does it match any ServerName or ServerAlias directive? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1042 - 0

/* Fallback: does it match the virthost from the sar? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1044 - 0

/* only the first match is used */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1051 - 0

/* If ServerName and ServerAlias check failed, we end up here. If it
 * matches a VirtualHost, virthost_s is set. Use that as fallback
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1062 - 0

/* s is the first matching server, we're done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1076 - 0

/*
 * This is in conjunction with the ServerPath code in http_core, so we
 * get the right host attached to a non- Host-sending request.
 *
 * See the comment in check_hostalias about how each vhost can be
 * listed multiple times.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1086 - 0

/* We only consider addresses on the name_chain which have a matching
 * port
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1183 - 0

/* check if we tucked away a name_chain */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1192 - 0

/**
 * For every virtual host on this connection, call func_cb.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1212 - 0

/* We only consider addresses on the name_chain which have a
 * matching port.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1251 - 0

/* scan the hash table for an exact match first */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1255 - 0

/* save the name_chain for later in case this is a name-vhost */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/server/vhost.c:1273 - 0

/* otherwise we're stuck with just the main server
 * and no name-based vhosts
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:152 - 0

/* for getpid() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:199 - 0

/* ------------------- DEFINITIONS -------------------------- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:207 - 0

/* maximum number of requests on a time limited test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:210 - 0

/* connection state
 * don't add enums or rearrange or otherwise change values without
 * visiting set_conn_state()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:216 - 0

/* TCP connect initiated, but we don't
 * know if it worked yet
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:219 - 0

/* we know TCP connect completed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:230 - 0

/* amount of bytes read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:231 - 0

/* amount of body read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:232 - 0

/* keep pointers in what we write - across
 * EAGAINs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:234 - 0

/* Content-Length value used for keep-alive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:235 - 0

/* a buffer to store server response header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:236 - 0

/* offset in cbuffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:237 - 0

/* non-zero if a keep-alive request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:238 - 0

/* non-zero if we have the entire header in
 * cbuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:240 - 0

/* Start of connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:241 - 0

/* Connected, start writing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:242 - 0

/* Request written */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:243 - 0

/* First byte of input */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:244 - 0

/* Connection closed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:253 - 0

/* start time of connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:255 - 0

/* time to connect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:256 - 0

/* time for connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:265 - 0

/* --------------------- GLOBALS ---------------------------- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:267 - 0

/* no verbosity by default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:271 - 0

/* non-zero if sending body with request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:272 - 0

/* Number of requests to make */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:273 - 0

/* How often do we say we're alive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:274 - 0

/* Number of multiple requests to make */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:275 - 0

/* Show percentile served */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:276 - 0

/* Accept variable document length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:279 - 0

/* try and do keepalive connections */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:280 - 0

/* we use the OS default window size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:281 - 0

/* name that server reports */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:282 - 0

/* host name from URL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:283 - 0

/* value of "e;Host:"e; header field */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:284 - 0

/* path name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:285 - 0

/* *buffer containing data from postfile */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:286 - 0

/* length of data to be POSTed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:287 - 0

/* content type to put in POST header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:291 - 0

/* port number */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:292 - 0

/* proxy host name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:293 - 0

/* proxy port */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:297 - 0

/* GNUplot file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:298 - 0

/* CSV Percentile file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:312 - 0

/* use html in the report */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:317 - 0

/* the length the document should be */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:318 - 0

/* total number of bytes read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:319 - 0

/* totoal amount of entity body read */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:320 - 0

/* total number of bytes posted, inc. headers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:322 - 0

/* number of requests we have done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:323 - 0

/* number of keep alive connections done */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:324 - 0

/* number of good and bad requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:326 - 0

/* requests failed due to response length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:327 - 0

/* requests failed due to connection drop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:329 - 0

/* requests failed due to exception */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:330 - 0

/* requests with invalid or non-200 response */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:342 - 0

/* global request (and its length) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:348 - 0

/* one global throw-away buffer to read stuff into */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:354 - 0

/* connection array */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:355 - 0

/* data for each request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:429 - 0

/* pool abort function */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:434 - 0

/* not reached */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:463 - 0

/* for STATE_UNCONNECTED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:464 - 0

/* for STATE_CONNECTING */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:465 - 0

/* for STATE_CONNECTED; we don't poll in this state,
 * so prepare for polling in the following state --
 * STATE_READ
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:469 - 0

/* for STATE_READ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:547 - 0

/*
 * seed in the current time (usually just 4 bytes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:554 - 0

/*
 * seed in the current process id (usually just 4 bytes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:561 - 0

/*
 * seed in some current state of the run-time stack (128 bytes)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:613 - 0

/* dump the extension list too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:669 - 0

/* Anon DH */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:685 - 0

/* Try again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:691 - 0

/* Unexpected result */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:701 - 0

/* USE_SSL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:712 - 0

/* prevent gcc warning */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:716 - 0

/*
 * First time round ?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:767 - 0

/* --------------------------------------------------------- */

/* calculate and output results */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:872 - 0

/* work out connection times */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1022 - 0

/* Sorted on total connect times */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1083 - 0

/* --------------------------------------------------------- */

/* calculate and output results in HTML */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1167 - 0

/* work out connection times */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1325 - 0

/* connected first time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1337 - 0

/* --------------------------------------------------------- */

/* close down connection and save stats */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1348 - 0

/* connection never happened */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1352 - 0

/* first time here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1359 - 0

/* save out time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1384 - 0

/* connect again */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1389 - 0

/* --------------------------------------------------------- */

/* read data from connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1398 - 0

/* 3 digits and null */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1485 - 0

/* -1 allows for \0 term */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1499 - 0

/* NOT_ASCII */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1517 - 0

/* read rest next time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1522 - 0

/* header is in invalid or too big - close connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1533 - 0

/* have full header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1544 - 0

/* -1 to not overwrite last '\0' byte */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1558 - 0

/* really HTTP/1.x_ */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1582 - 0

/* handle NCSA, which sends Content-length: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1587 - 0

/* response to HEAD doesn't have entity body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1590 - 0

/* The response may not have a Content-Length header */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1599 - 0

/* We have received the header, so we know this destination socket
 * address is working, so initialize all remaining requests. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1611 - 0

/* outside header, everything we have read is entity body */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1617 - 0

/* finished a keep-alive connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1619 - 0

/* save out time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1621 - 0

/* first time here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1646 - 0

/* zero connect time with keep-alive */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1652 - 0

/* --------------------------------------------------------- */

/* run the tests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1688 - 0

/*
 * XXX: a way to calculate the stats without requiring O(requests) memory
 * XXX: would be nice.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1724 - 0

/* setup request */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1780 - 0

/* NOT_ASCII */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1783 - 0

/* This only needs to be done once */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1792 - 0

/* This too */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1803 - 0

/* ok - lets start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1808 - 0

/* Output the results if the user terminates the run early. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1812 - 0

/* initialise first connection to determine destination socket address
 * which should be used for next connections. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1833 - 0

/*
 * If the connection isn't connected how can we check it?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1923 - 0

/* ------------------------------------------------------- */

/* display copyright information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1930 - 0

//www.zeustech.net/\n"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1931 - 0

//www.apache.org/\n"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1937 - 0

//www.zeustech.net/<br>\n"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1938 - 0

//www.apache.org/<br>\n"e;); 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1943 - 0

/* display usage information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:1950 - 0

//]hostname[:port]/path\n"e;, progname);
/* 80 column ruler: ********************************************************************************
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2019 - 0

/* ------------------------------------------------------- */

/* split URL into parts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2030 - 0

/* Save a copy for the proxy */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2033 - 0

//"e;, 7) == 0) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2041 - 0

//"e;, 8) == 0) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2046 - 0

//"e;, 8) == 0) { 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2061 - 0

/* IPv6 numeric address string */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2068 - 0

/* no port specified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2089 - 0

/* ------------------------------------------------------- */

/* read data to POST/PUT from file, save contents and length */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2125 - 0

/* ------------------------------------------------------- */

/* sort out command-line args and call test */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2140 - 0

/* table defaults */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2172 - 0

/* 0.0.0.0 or :: */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2217 - 0

/* timeout value */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2248 - 0

/* need to size data array on
 * something */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2290 - 0

/*
 * allow override of some of the common headers that ab adds
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2304 - 0

/*
 * if any of the following three are used, turn on html output
 * automatically
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2315 - 0

/*
 * assume proxy-name[:port]
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2404 - 0

/* Print line every 10% of requests */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2406 - 0

/* but never more often than once every 100
 * connections. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/ab.c:2430 - 0

/* Keep memory usage as low as possible */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:55 - 0

/*
 * Assume success. :-)
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:63 - 0

/*
 * If it's from a 'Group #-1' statement, get the numeric value
 * and skip the group lookup stuff.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:76 - 0

/*
 * A NULL return means no such group was found, so we're done
 * with this one.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:87 - 0

/*
 * See if we can switch to the numeric GID we have. If so,
 * all well and good; if not, well..
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:100 - 0

/*
 * Worst-case return value.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/checkgid.c:105 - 0

/*
 * Local Variables:
 * mode: C
 * c-file-style: "e;bsd"e;
 * End:
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/fcgistarter.c:25 - 0

/* For EXIT_SUCCESS, EXIT_FAILURE */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/fcgistarter.c:29 - 0

/* For execl */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/fcgistarter.c:201 - 0

/* XXX Can't use apr_proc_create because there's no way to get
 * infd into the procattr without going through another dup2,
 * which means by the time it gets to the fastcgi process it
 * is no longer fd 0, so it doesn't work. Sigh. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:99 - 0

/* commands */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:139 - 0

/* "e;When writing to a socket, new connections\n"e;
 * "e;are opened for each connection in the stream, allowing it to be possible to\n"e;
 * "e;'replay' traffic recorded by one server to other server.\n"e;
 * "e;\n\n"e;
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:146 - 0

/**
 * Who are we again?
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:154 - 0

/**
 * Help the long suffering end user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:176 - 0

/**
 * Cleanup a uuid record. Removes the record from the uuid hashtable in files.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:195 - 0

/**
 * Create a uuid record, register a cleanup for it's destruction.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:226 - 0

/**
 * Process the end of the fragment body.
 *
 * This function renames the completed stream to it's final name.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:281 - 0

/**
 * Check if the fragment matches on of the prefixes.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:386 - 0

/* Skip leading zeros */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:495 - 0

/**
 * Suck on the file/pipe, and demux any fragments on the incoming stream.
 *
 * If EOF is detected, this function returns.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:564 - 0

/* does the count match what is expected? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:576 - 0

/* is the counter not what we expect? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:582 - 0

/* otherwise, make a new uuid */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:620 - 0

/* an empty header means end-of-connection */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:647 - 0

/**
 * Start the application.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:745 - 0

/* read filters from the command line */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/firehose.c:761 - 0

/* warn people if any non blocking writes failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:50 - 0

/* define the following for debugging */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:53 - 0

/*
 * Note: on Linux delays <= 2ms are busy waits without
 * scheduling, so never use a delay <= 2ms below
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:58 - 0

/* usecs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:59 - 0

/* be nice after this amount of delete ops */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:60 - 0

/* maximum stat attempts for a file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:61 - 0

/* usecs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:62 - 0

/* headers file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:63 - 0

/* body file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:64 - 0

/* temporary file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:66 - 0

/* secs */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:76 - 0

/* type of file/fileset: TEMP, HEADER, DATA, HEADERDATA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:77 - 0

/* headers file modification time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:78 - 0

/* body file modification time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:79 - 0

/* headers file size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:80 - 0

/* body or temporary file size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:81 - 0

/* file/fileset base name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:88 - 0

/* headers file modification time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:89 - 0

/* body file modification time */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:90 - 0

/* headers file size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:91 - 0

/* body or temporary file size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:92 - 0

/* fileset base name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:96 - 0

/* file deletion count for nice mode */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:97 - 0

/* flag: true if SIGINT or SIGTERM occurred */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:98 - 0

/* flag: true means user said apache is not running */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:99 - 0

/* flag: true means print statistics */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:100 - 0

/* flag: true means nice mode is activated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:103 - 0

/* flag: true means directories should be deleted */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:106 - 0

/* string length of the path to the proxy directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:107 - 0

/* start time of this processing run */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:109 - 0

/* stderr file handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:110 - 0

/* stdout file handle */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:111 - 0

/* file size summary for deleted unsolicited
 files */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:113 - 0

/* ENTRY ring anchor */

/* short program name as called */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:118 - 0

/* what did we clean? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:150 - 0

/*
 * called on SIGINT or SIGTERM
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:161 - 0

/*
 * called in out of memory condition
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:176 - 0

/*
 * print purge statistics
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:253 - 0

/**
 * Round the value up to the given threshold.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:263 - 0

/*
 * delete parent directories
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:272 - 0

/* temp pool, otherwise lots of memory could be allocated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:285 - 0

/* remove the directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:290 - 0

/* vary directory found? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:319 - 0

/*
 * delete a single file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:328 - 0

/* temp pool, otherwise lots of memory could be allocated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:364 - 0

/* temp pool, otherwise lots of memory could be allocated */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:468 - 0

/* stat the header file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:528 - 0

/* stat the data file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:711 - 0

/* if a user manually creates a '.header' file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:729 - 0

/* if a user manually creates a '.data' file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:799 - 0

/* This must be a URL that added Vary headers later,
 * so kill the orphaned .data file
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1244 - 0

/* encode 128 bits as 22 characters, using a modified uuencoding
 * the encoding is 3 bytes -> 4 characters* i.e. 128 bits is
 * 5 x 3 bytes + 1 byte -> 5 * 4 characters + 2 characters
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1256 - 0

/* one byte left */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1258 - 0

/* use up 6 bits */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1262 - 0

/* automatically find the directory levels */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1266 - 0

/*
 * usage info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1331 - 0

//<hostname>:<port><path>?[query]. So, for the path \"e;/\"e; on the"e; NL 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1333 - 0

//localhost:80/?\"e;. Note the '?' in the URL must always be"e; NL 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1372 - 0

/*
 * main
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1510 - 0

/* neither empty nor [Bb] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1540 - 0

/* neither empty nor [Bb] */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1606 - 0

/* switch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1607 - 0

/* else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1608 - 0

/* while */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htcacheclean.c:1694 - 0

/* delete original pidfile only in parent */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdbm.c:48 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdbm.c:136 - 0

/*APR_CHARSET_EBCDIC*/

 /* Set MD5 as default */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdbm.c:231 - 0

/* Note: we don't store \0-terminators on our dbm data */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdbm.c:471 - 0

/* Suppress compiler warning. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:32 - 0

/* for apr_getpass() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:35 - 0

/* for apr_pstrdup() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:59 - 0

/* APR_CHARSET_EBCDIC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:99 - 0

/* we need 2 remaining bytes in buffer */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:104 - 0

/* First remaining byte potentially used here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:107 - 0

/* Second remaining byte used here */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:130 - 0

/* this includes room for 2 * ':' + '\0' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:149 - 0

/* Do MD5 stuff */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htdigest.c:283 - 0

/* The temporary file has all the data, just copy it to the new location.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:124 - 0

/*
 * Check to see if the specified file can be opened for the given
 * access.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:205 - 0

/* not a power of two, i.e. more than one flag specified */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:270 - 0

/*
 * Let's do it. We end up doing a lot of file opening and closing,
 * but what do we care? This application isn't run constantly.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:318 - 0

/*APR_CHARSET_EBCDIC*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:322 - 0

/*
 * Only do the file checks if we're supposed to frob it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:328 - 0

/*
 * Check that this existing file is readable and writable.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:347 - 0

/*
 * As it doesn't exist yet, verify that we can create it.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:378 - 0

/*
 * We can access the files the right way, and we have a record
 * to add or update. Let's do it..
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:396 - 0

/*
 * If we're not creating a new file, copy records from the existing
 * one to the temporary file until we find the specified user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:420 - 0

/*
 * See if this is our user.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:428 - 0

/*
 * If we've not got a colon on the line, this could well
 * not be a valid htpasswd file.
 * We should bail at this point.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:444 - 0

/* We found the user we were looking for */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:447 - 0

/* Delete entry from the file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:451 - 0

/* Verify */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:470 - 0

/* Update entry */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/htpasswd.c:499 - 0

/* The temporary file has all the data, just copy it to the new location.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/httxt2dbm.c:34 - 0

/* for atexit() */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/httxt2dbm.c:44 - 0

/* From mod_rewrite.c */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/httxt2dbm.c:112 - 0

/* +1 for \0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/httxt2dbm.c:133 - 0

/* no value. solid line of data. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:79 - 0

/* Statistics */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:88 - 0

/*
 * prints various statistics to output
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:113 - 0

/*
 * usage info
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:184 - 0

/* switch */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:185 - 0

/* else */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:186 - 0

/* while */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:191 - 0

/* Allocate two new 10k file buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:198 - 0

/* Set the buffers */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:218 - 0

/* Count our log entries */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:221 - 0

/* Check if this could even be an IP address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:244 - 0

/* Parse the IP address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:247 - 0

/* Not an IP address */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:282 - 0

/* Do a forward lookup on our hostname, and see if that matches our
 * original IP address.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:289 - 0

/* Double-lookup failed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:302 - 0

/* Outout the resolved name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/logresolve.c:312 - 0

/* Flush any remaining output */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:67 - 0

/* NOTREACHED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:202 - 0

/* XXX out >= 28 + strlen(sha1) chars - fixed len SHA */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:219 - 0

/* XXX this len limitation is not in sync with any HTTPd len. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:247 - 0

/* CRYPT_ALGO_SUPPORTED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:270 - 0

/* BCRYPT_ALGO_SUPPORTED */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/passwd_common.c:322 - 0

/* Don't fall back to something less secure */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:79 - 0

/* "e;adjusted_time_t"e; is used to store Unix time (seconds since epoch)
 * which has been adjusted for some timezone fudge factor. It should
 * be used for storing the return values from get_now(). A typedef is
 * used since this type is similar to time_t, but different. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:85 - 0

/* Structure to contain relevant logfile state: fd, pool and
 * filename. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:94 - 0

/* current logfile. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:95 - 0

/* top-level pool */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:161 - 0

/* This function returns the current Unix time (time_t) adjusted for
 * any configured or derived local time offset. The offset applied is
 * returned via *offset. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:188 - 0

/*
 * Close a file and destroy the associated pool.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:200 - 0

/*
 * Dump the configuration parsing result to STDERR.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:269 - 0

/*
 * Handle post-rotate processing.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:280 - 0

/* Handle link file, if configured. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:296 - 0

/* Nothing more to do. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:300 - 0

/* Collect any zombies from a previous run, but don't wait. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:302 - 0

/* noop */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:363 - 0

/*
 * Open a new log file, and if successful
 * also close the old one.
 *
 * The timestamp for the calculation of the file
 * name of the new log file will be the actual millisecond
 * timestamp, except when a regular rotation based on a time
 * interval is configured and the previous interval
 * is over. Then the timestamp is the starting time
 * of the actual interval.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:382 - 0

/* Retrieve local-time-adjusted-Unix-time. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:392 - 0

/*
 * Check if rotation was forced and the last rotation
 * interval is not yet over. Use the value of now instead
 * of the time interval boundary for the file name then.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:411 - 0

/* Explode the local-time-adjusted-Unix-time into a struct tm,
 * first *reversing* local-time-adjustment applied by
 * get_now() if we are using localtime. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:464 - 0

/* Handle post-rotate processing. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:468 - 0

/* Close out old (previously 'current') logfile, if any. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:473 - 0

/* New log file is now 'current'. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:497 - 0

/* Throw away new state; it isn't going to be used. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:515 - 0

/* Byte multiplier */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:517 - 0

/* Found KB size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:520 - 0

/* Found KB size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:523 - 0

/* Found MB size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:526 - 0

/* Found GB size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:529 - 0

/* rotation based on file size */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:600 - 0

/* Prevent creation of zombies (on modern Unix systems). */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:650 - 0

/* Read in the remaining flags, namely time, size and UTC offset. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:680 - 0

/*
 * Write out result of config parsing if verbose is set.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:733 - 0

/* APR_FILES_AS_SOCKETS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:741 - 0

/* APR_FILES_AS_SOCKETS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/rotatelogs.c:778 - 0

/* reached only at stdin EOF. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:78 - 0

/* Syslog support. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:87 - 0

/* Non-syslog support. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:93 - 0

/* variable name starts with */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:95 - 0

/* "e;HTTP_"e; is handled specially in clean_env() */

 /* variable name is */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:195 - 0

/* AP_LOG_EXEC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:207 - 0

/* AP_LOG_EXEC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:219 - 0

/* AP_LOG_EXEC */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:240 - 0

/* VERY safe environment */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:258 - 0

/*
 * HTTP_PROXY is treated as alias for http_proxy by some
 * programs.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:264 - 0

/* Other HTTP_* are safe */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:287 - 0

/* ~userdir flag */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:288 - 0

/* user information */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:289 - 0

/* target group placeholder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:290 - 0

/* target user name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:291 - 0

/* target group name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:292 - 0

/* target home directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:293 - 0

/* actual user name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:294 - 0

/* actual group name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:295 - 0

/* command to be executed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:296 - 0

/* current working directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:297 - 0

/* docroot working directory */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:298 - 0

/* password entry holder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:299 - 0

/* group entry holder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:300 - 0

/* directory info holder */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:301 - 0

/* program info holder */

 /*
 * Start with a "e;clean"e; environment
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:327 - 0

/* _OSD_POSIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:329 - 0

/* _OSD_POSIX */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:382 - 0

/*_OSD_POSIX*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:401 - 0

/*
 * Check to see if this is a ~userdir request. If
 * so, set the flag, and remove the '~' from the
 * target username.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:449 - 0

/*
 * Initialize BS2000 user environment
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:461 - 0

/* Child */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:463 - 0

/* Father */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:466 - 0

/* @@@ FIXME: should we deal with STOP signals as well? */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:473 - 0

/*_OSD_POSIX*/

 /*
 * Save these for later since initgroups will hose the struct
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:642 - 0

/* AP_SUEXEC_UMASK */

 /* Be sure to close the log file so the CGI can't mess with it. */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:653 - 0

/*
 * ask fcntl(2) to set the FD_CLOEXEC flag on the log file,
 * so it'll be automagically closed if the exec() call succeeds.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:674 - 0

/*
 * Execute the command, replacing our image with its own.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:678 - 0

/* We need the #! emulation when we want to execute scripts */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/suexec.c:684 - 0

/*NEED_HASHBANG_EMUL*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:50 - 0

/** Properly quote a value as a string in the C preprocessor */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:52 - 0

/** Helper macro for AM_STRINGIFY */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:59 - 0

/* Should be enough */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:72 - 0

/* service refresh time (ms) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:73 - 0

/* registry rescan time (ms) */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:91 - 0

/* Global variables */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:93 - 0

/* The title bar text */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:94 - 0

/* Window Class Name */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:118 - 0

/* locale language support */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:289 - 0

/*
 Try calling GetVersionEx using the OSVERSIONINFOEX structure.
 If that fails, try using the OSVERSIONINFO structure.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:427 - 0

/* create popup menu */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:457 - 0

/* create services list popup menu and submenus */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:491 - 0

/* Get the Height and Width of the child window */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:496 - 0

/* Get the limits of the 'workarea' */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:505 - 0

/* Calculate new X and Y position*/ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:803 - 0

/* the service name could be httpd*.exe or Apache*.exe */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:976 - 0

/* SBT_TOOLTIPS */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1144 - 0

/* if started then stop, if stopped then start */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1256 - 0

/* restore the tray icon on shell restart */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1282 - 0

/* check if services list changed */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1448 - 0

/* seconds */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1478 - 0

/* This is graceful, close our own Window, clearing the icon */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1540 - 0

/* Borrowed from CRT internal.h for _MBCS argc/argv parsing in this GUI app */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1550 - 0

/* existing window */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1594 - 0

/* Off to chase and close up every ApacheMonitor taskbar window */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/ApacheMonitor.c:1607 - 0

/* Chase down and close up our session's previous window */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/wintty.c:214 - 0

/* You can't close the console till all the handles above were
 * rescued by DuplicateHandle()
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/support/win32/wintty.c:258 - 0

/* SW_SHOWNORMAL */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/cls.c:66 - 0

/*
 * Converts 8 hex digits to a time integer
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/cls.c:85 - 0

/* so that it works with 8-byte ints */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test-writev.c:87 - 0

/* now build up a two part writev and write it out */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_limits.c:87 - 0

/* default parameters */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_limits.c:93 - 0

/* get options */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_limits.c:122 - 0

/* connect */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/test_limits.c:147 - 0

/* attack! */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:81 - 0

/*
 * Initialize mutex lock.
 * Must be safe to call this on a restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:89 - 0

/* from current point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:90 - 0

/* -"e;- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:91 - 0

/* until end of file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:92 - 0

/* set exclusive/write lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:94 - 0

/* from current point */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:95 - 0

/* -"e;- */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:96 - 0

/* until end of file */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:97 - 0

/* set exclusive/write lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:141 - 0

/*
 * Initialize mutex lock.
 * Must be safe to call this on a restart.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:212 - 0

/* believe it or not, you need to define this under solaris */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:286 - 0

/* note: pthread mutexes aren't released on child death, hence the
 * signal goop ... in a real implementation we'd do special things
 * during hup, term, usr1.
 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:372 - 0

/* default is 8 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:399 - 0

/* got lock */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:424 - 0

/* allocate shared memory for the shared_counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:481 - 0

/* now bailout */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:486 - 0

/* nothing else to do */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:496 - 0

/* don't ask */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:523 - 0

/* allocate shared memory for the shared_counter */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:526 - 0

/* initialize counter to 0 */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:531 - 0

/* parent grabs mutex until done spawning children */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:537 - 0

/* child, do our thing */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:555 - 0

/* a quick test to see that nothing is screwed up */ 

c:/Service Packs/apache/httpd-trunk/httpd-trunk/test/time-sem.c:562 - 0

/* launch children into action */ 
