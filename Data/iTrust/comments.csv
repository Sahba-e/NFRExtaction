id,sentence,security,reliability,NFR_boolean
comments.json_1,Handles retrieving the log of record accesses for a given user  Used by view Access Log .jsp,0,0,0
comments.json_2,Set up,0,0,0
comments.json_3,Returns a list of  Transaction Beans between the two dates passed as params,0,0,0
comments.json_4,user has either 0 or 1 DLHCP 's . Get one if exists so it can be filtered from results,0,0,0
comments.json_5,Returns an indicator of the number of days between the current date and the date passed as a parameter. Returns 0 if the dates are on the same day  1 if the date passed in is "yesterday"  2 otherwise.,0,0,0
comments.json_6,Pulls  Action  Phrase from the associated  Transaction Type  Enum Forms an English sentence with actor  action  and timestamp.,0,0,0
comments.json_8,Loads the given file input stream into the drug database .,0,0,0
comments.json_9,Skip drug type field,0,0,0
comments.json_10,We just want to skip duplicate -entries . Let it pass .,0,0,0
comments.json_11,Skip drug type field,0,0,0
comments.json_12,Overwrite duplicate entries,0,0,0
comments.json_13,Used for  Add  Personnel page (add Personnel .jsp ). This just adds an empty  HCP / UAP   creates a random password for them. Copied from AddHCPAction,0,0,0
comments.json_14,Sets up the defaults for the class,0,0,0
comments.json_15,Adds the new user .  Event is logged .,0,0,0
comments.json_16,Add Exercise Entry Action .java Version 1 4/2/2015 Copyright notice: none Responsible for adding a new exercise entry to a patient's Exercise Diary.,0,0,0
comments.json_17,Uses the factory to instantiate the  Exercise Entry DAO            which DAOFactory to use            who is currently logged in,0,0,0
comments.json_18,Adds a new exercise entry to the exercise diary of the specified patient . Currently it checks to ensure that the patient whose exercise dairy we are adding to is the logged in patient  and that the patient exists. Since only patients can add to only their own exercise diaries  we do not need the MID of the patient whose exercise diary we are adding to  we just use the MID of the logged in user.            the ExerciseEntryBean to add to the exercise Diary         a string saying there was an error,1,0,1
comments.json_19,Add Food Entry Action .java  Version 1 2/21/2015 Copyright notice : none Responsible for adding a new food entry to a patient's Food Diary.,0,0,0
comments.json_20,Uses the factory to instantiate the foodentrydao            which DAOFactory to use            who is currently logged in,0,0,0
comments.json_21,Adds a new food entry to the food diary of the specified patient . Currently it checks to ensure that the patient whose food dairy we are adding to is the logged in patient  and that the patient exists  but I don't know if we need to have those checks. Since only patients can add to only their own food diaries  we do not need the MID of the patient whose food diary we are adding to  we just use the MID of the logged in user.            the FoodEntryBean to add to the Food Diary         a string saying there was an error,1,0,1
comments.json_22,Used for  Add  Personnel page (add Personnel .jsp ). This just adds an empty  HCP / UAP   creates a random password for them.,0,0,0
comments.json_23,Sets up the defaults for the class,0,0,0
comments.json_24,Adds the new user .  Event is logged .,0,0,0
comments.json_25,Used for  Add  Personnel page (add Personnel .jsp ). This just adds an empty  LT   creates a random password for them.,0,0,0
comments.json_26,Sets up the defaults for the class,0,0,0
comments.json_27,Adds the new user .  Event is logged .,0,0,0
comments.json_28,Used for add obstetrics record page (add Obstetrics Record .jsp ).,0,0,0
comments.json_29,Just the factory and logged in  MID,0,0,0
comments.json_30,Add a new obstetrics record,0,0,0
comments.json_31,if not an office visit,0,0,0
comments.json_32,else   it is an office visit,0,0,0
comments.json_33,add the obstetrics record to the database,0,0,0
comments.json_34,set the manual flags first to load from later and pull if twins is set,0,0,0
comments.json_35,Office  Visit flags,0,0,0
comments.json_36,Weight flag processing,0,0,0
comments.json_37,can only do  BMI calculations if a normal office visit (with height /weight ) exists before  LMP,0,0,0
comments.json_38,calculate the original  BMI,0,0,0
comments.json_39,find the expected weight offsets in  BMI /weight tables,0,0,0
comments.json_40,This is the correct upper bound,0,0,0
comments.json_41,If not in expected twins range,0,0,0
comments.json_42,If not in expected range,0,0,0
comments.json_43,Set weight flag if needed,0,0,0
comments.json_44,Set  FHR flag if needed,0,0,0
comments.json_45,Set  BP flag if needed,0,0,0
comments.json_46,UC 67: Allergies  Flag,0,0,0
comments.json_47,Advanced maternal age flag,0,0,0
comments.json_48,Rh - flag,0,0,0
comments.json_49,Genetic miscarriage flag,0,0,0
comments.json_50,Pre -existing conditions flag,0,0,0
comments.json_51,Used for  Document  Office  Visit page (document Office Visit .jsp ). This just adds an empty office visit   and provides a list of office visits in case you want to edit an old office visit.,0,0,0
comments.json_52,Sets up the defaults for the class,0,0,0
comments.json_53,Adds an empty office visit            For logging purposes,0,0,0
comments.json_54,Lists all office visits for a particular patient   regardless of who originally documented the office visit.,0,0,0
comments.json_55,Returns the full name of the patient with this  MID,0,0,0
comments.json_56,Used for add ophthalmology office visit page (add Ophalmology OV Record .jsp ).,0,0,0
comments.json_57,ophthalmology OVDAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_58,logged In MID is the  HCP that is logged in .,0,0,0
comments.json_59,logging Action is used to write to the log .,0,0,0
comments.json_60,Add Ophthalmology OV Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_61,Adds a new ophthalmology office visit record .,0,0,0
comments.json_62,Validate the bean,0,1,1
comments.json_63,Add the ophthalmology office visit record to the database,0,0,0
comments.json_64,Log the transaction,0,0,0
comments.json_65,Used for add ophthalmology office visit requests .,0,0,0
comments.json_66,ophthalmology OVDAO is the  DAO that adds the ophthalmology scheduled office  visit records to the database,0,0,0
comments.json_67,Patient DAO for working with patient objects in the database,0,0,0
comments.json_68,Add Ophthalmology Schedule OV Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_69,Adds a new ophthalmology scheduled office visit record .,0,0,0
comments.json_70,Add the ophthalmology office visit record to the database,0,0,0
comments.json_71,Returns a list of  Personnel Beans of all ophthalmology personnel   ie doctors with the specialty of ophthalmologist or optometrist,0,0,0
comments.json_72,If a  DB Exception occurs print a stack trace and return an empty list,0,0,0
comments.json_73,Used for add ophthalmology office visit page (add Ophalmology Surgery Record .jsp ).,0,0,0
comments.json_74,ophthalmology Surgery DAO is the  DAO that retrieves the surgical ophthalmology  office visit records from the database,0,0,0
comments.json_75,logged In MID is the  HCP that is logged in .,0,0,0
comments.json_76,logging Action is used to write to the log .,0,0,0
comments.json_77,Add Ophthalmology Surgery Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_78,Adds a new ophthalmology office visit record .,0,0,0
comments.json_79,Validate the bean,0,1,1
comments.json_80,Add the ophthalmology office visit record to the database,0,0,0
comments.json_81,Log the transaction,0,0,0
comments.json_82,Used for  Add  Patient page (add Patient .jsp ). This just adds an empty patient   creates a random password for that patient.,0,0,0
comments.json_83,Just the factory and logged in  MID,0,0,0
comments.json_84,Creates a new patient   returns the new  MID . Adds a new user to the table with a specified dependency,0,0,0
comments.json_85,Used for  Upload  Patient  File page (upload Patient File .jsp ).,0,0,0
comments.json_86,Holds the accumulated list of errors from the  CSV Parser and this class,0,0,0
comments.json_87,Holds the  CSV header from the  CSV Parser,0,0,0
comments.json_88,Holds the  CSV data from the  CSV Parser,0,0,0
comments.json_89,Holds the list of  Patient Beans for passing back to the  UI,0,0,0
comments.json_90,List of fields required to be in the  CSV,0,0,0
comments.json_91,List of valid fields which can be included in the  CSV,0,0,0
comments.json_92,Array to map the required field lists above to the uploaded  CSV header list (which may be in any order ),0,0,0
comments.json_93,Array to map the valid field lists above to the uploaded  CSV header list (which may be in any order ),0,0,0
comments.json_94,Patient DAO used to add patients to the  DB,0,0,0
comments.json_95,Auth DAO to provide authorization for the patient actions,1,0,1
comments.json_96,MID of the  HCP performing the request,0,0,0
comments.json_97,Accepts the  DAO factory and the  CSV stream from the view and parses it .,0,0,0
comments.json_98,Gets the patient list,0,0,0
comments.json_99,Gets the error list,0,0,0
comments.json_100,Builds the mappings between the local arrays and the  CSV file Also checks for missing required  duplicate  and invalid fields,0,1,1
comments.json_101,Creates the patients and adds them to the  DB,0,0,0
comments.json_102,TODO,0,0,0
comments.json_103,TODO,0,0,0
comments.json_104,TODO,0,0,0
comments.json_105,TODO,0,0,0
comments.json_106,TODO,0,0,0
comments.json_107,TODO,0,0,0
comments.json_108,TODO,0,0,0
comments.json_109,TODO,0,0,0
comments.json_110,TODO,0,0,0
comments.json_111,TODO,0,0,0
comments.json_112,Used for  Add  Personnel page (add Personnel .jsp ). This just adds an empty  PHA   creates a random password for them.,0,0,0
comments.json_113,Sets up the defaults for the class,0,0,0
comments.json_114,Adds the new user .  Event is logged .,0,0,0
comments.json_115,Handles adding remote monitoring patient data to the database,0,0,0
comments.json_116,Constructor,0,0,0
comments.json_117,Adds a patient 's telemedicine data to the database .,0,0,0
comments.json_118,Store in  DB,0,0,0
comments.json_119,returns the patient name,0,0,0
comments.json_120,Add Sleep Entry Action .java Version 1 4/6/2015 Copyright notice: none Responsible for adding a new sleep entry to a patient's Sleep Diary.,0,0,0
comments.json_121,Uses the factory to instantiate the  Sleep Entry DAO            which DAOFactory to use            who is currently logged in,0,0,0
comments.json_122,Adds a new sleep entry to the sleep diary of the specified patient . Currently it checks to ensure that the patient whose sleep dairy we are adding to is the logged in patient  and that the patient exists. Since only patients can add to only their own sleep diaries  we do not need the MID of the patient whose sleep diary we are adding to  we just use the MID of the logged in user.            the SleepEntryBean to add to the sleep Diary         a string saying there was an error,1,0,1
comments.json_123,Used for  Add  Personnel page (add Personnel .jsp ). This just adds an empty  HCP / UAP   creates a random password for them.,0,0,0
comments.json_124,Sets up the defaults for the class,0,0,0
comments.json_125,Adds the new user .  Event is logged .,0,0,0
comments.json_126,Appt Action,0,0,0
comments.json_127,appt DAO,0,0,0
comments.json_128,patient DAO,0,0,0
comments.json_129,personnel DAO,0,0,0
comments.json_130,Appt Action,0,0,0
comments.json_131,Driver method to get all appointment conflicts   used in jsp files,0,0,0
comments.json_132,returns a list of appointments that conflict for a given patient /hcp,0,0,0
comments.json_133,Gets a users 's name from their  MID,0,0,0
comments.json_134,Add Entry Action .java Version 1 4/2/2015 Copyright notice: none General behavior for adding entries to a Wellness Diary subcategory. Food Diary.,0,0,0
comments.json_135,Adds a new entry to its associated diary in the database .            the Bean to add.,0,0,0
comments.json_136,Deletes a diary entry from the db            the entry to delete,0,0,0
comments.json_137,Communicates changes between a  JSP page and the server for a given Wellness Diary entry.            the bean to be updated         the logged in user cannot edit this entry  and anything else is         the number of rows updated which should never exceed 1),0,0,0
comments.json_139,Base class for actions used to edit office visits .  This stores the  HCP id   patient id  and office visit id.,0,0,0
comments.json_141,An office visit that is initially unsaved .,0,0,0
comments.json_142,Get the  HCP id .,0,0,0
comments.json_143,An abstract class which contains functionalities common among all actions relating to inserting and editing office visits. Because all office visits are with a certain patient  OfficeVisitBaseAction extends PatientBaseAction. Use this class whenever you have a page which not only requires a patient MID  but an office visit ID. Pass those IDs to the constructor  and an exception will be thrown if they are not valid IDs (which should kick the user out to the home page). The concrete methods created by this class allow for its association with the unique identifier of a given office visit. These identifiers can also be verified for their correctness and existence.,0,1,1
comments.json_144,A database access object for dealing with office visits .,0,0,0
comments.json_145,The unique identifier of the office visit this action is associated with .,0,0,0
comments.json_146,The default constructor .            A database access object factory for supplying a runtime context.            The patient's MID as a String  to be passed to the super constructor (for PatientBaseAction)            The unique identifier of the office visit as a String.             If any of the supplied parameters is incorrect or there is a DB problem.,0,0,0
comments.json_147,Constructs an action that is initially unsaved .  Like the three -argument constructor except that the office visit id is a sentinel value and does not represent a valid office visit.,0,0,0
comments.json_148,Asserts whether this unique office visit identifier both exists and is associated with the patient in the database.            The presumed identifier as a String.             If the visit does not exist or if there is a DB problem.,0,0,0
comments.json_149,Indicates if the office visit has been saved or not .,0,0,0
comments.json_150,Raises an exception if the office visit has not been saved .  Otherwise   does nothing.,0,0,0
comments.json_151,For obtaining the unique identifier of the office visit this action is associated with .,0,0,0
comments.json_152,Converts all characters of the input string to their  HTML special characters equivalent representation . Explicitly  the less than symbol becomes lt  the greater than symbol becomes gt and a newline feed becomes br.            The string to encode.,0,0,0
comments.json_153,An abstract class for dealing with actions that require an associated patient . The concrete functionality provided by this class allows for asserting the correctness and existence of patients' MIDs. Use this class whenever your JSP requires a patient ID when it loads (e.g. editPatient.jsp). The patient string is passed to the constructor of this class and is checked for both format and existence. If the patient ID is wrong in any way  an exception is thrown  resulting in the user getting kicked out to the home page. Subclasses need not rewrite this functionality  and they are not held to any strict contract to extend this class.,0,1,1
comments.json_154,The database access object factory to associate this with a runtime context .,0,0,0
comments.json_155,Stores the  MID of the patient associated with this action .,0,0,0
comments.json_156,The default constructor .            A factory to create a database access object.            The patient's ID to associate with this action.             If the patient's ID is incorrect or there is a DB problem.,0,0,0
comments.json_157,Asserts whether the input is a valid   existing patient 's  MID .            The presumed MID             If the patient does not exist or there is a DB Problem.,0,1,1
comments.json_158,Retrieves the identifier of the patient as a long .,0,0,0
comments.json_159,An abstract class for dealing with actions that require an associated personnel . The concrete functionality provided by this class allows for asserting the correctness and existence of personnel' MIDs. Use this class whenever your JSP requires a personnel ID when it loads (e.g. editPatient.jsp). The patient string is passed to the constructor of this class and is checked for both format and existence. If the patient ID is wrong in any way  an exception is thrown  resulting in the user getting kicked out to the home page. Subclasses need not rewrite this functionality  and they are not held to any strict contract to extend this class.,0,1,1
comments.json_160,The database access object factory to associate this with a runtime context .,0,0,0
comments.json_161,Stores the  MID of the personnel associated with this action .,0,0,0
comments.json_162,The default constructor .            A factory to create a database access object.            The personnel's ID to associate with this action.             If the personnel's ID is incorrect or there is a DB problem.,0,0,0
comments.json_163,Asserts whether the input is a valid   existing personnel 's  MID .            The presumed MID             If the personnel does not exist or there is a DB Problem.,0,1,1
comments.json_164,Retrieves the identifier of the patient as a long .,0,0,0
comments.json_165,View Entry Action .java Version 1 4/2/2015 Copyright notice: none General behavior for viewing entries in the Wellness Diary. Food Diary.,0,0,0
comments.json_166,Gets all entries in the diary for a given patient .            the id of the patient whose diary we want,0,0,0
comments.json_167,Gets the totals relevant to the specific  Wellness Diary page  sorted by day.            the patient we are looking at         a user has an entry in his diary,0,0,0
comments.json_168,Returns a list of diary entries between two dates .            the first date            the second date,0,0,0
comments.json_169,Gets the totals relevant to the specific  Wellness  Diary page  bound between two dates  sorted by entry date.            the first date            the second date            the patient we are looking at         day in the bounded range.,0,0,0
comments.json_170,Manages resetting the password  Used by reset Password .jsp,0,0,0
comments.json_171,Set up defaults,0,0,0
comments.json_172,Changes the password for the given mid,0,0,0
comments.json_173,Make sure old password is valid,0,1,1
comments.json_174,Make sure new passwords match,0,1,1
comments.json_175,Validate password . Must contain a letter   contain a number   and be a string of 5-20 alphanumeric characters,0,1,1
comments.json_176,Change the password,0,0,0
comments.json_177,TODO change the capacity in the byte array to match that of the original password,0,0,0
comments.json_178,Generate a new more secure hashed and randomly salted password based on the users new desired password passed in as a String.private String genPassword(String newpas){String pas = "";SecureRandom rand = new SecureRandom();byte newbie[] = new byte[32];sr.return pas;},1,0,1
comments.json_179,TODO : note   increasing password security will mean changing also how passwords are stored and retrieved to also include the salts for that hash,1,0,1
comments.json_180,generate a new salt for each time a user account is made,0,0,0
comments.json_181,Used to change the session timeout   session Timeout .jsp . Note that a change to this timeout only gets reflected on new sessions.,0,0,0
comments.json_182,Sets up defualts .,0,0,0
comments.json_183,Changes the session timeout   the complicated logic of this is somewhat regrettably in the  DAO              Pass the number of minutes in the form of a string  greater than 0.,0,0,0
comments.json_184,Returns the current session timeout in minutes   as reflected in the database,0,0,0
comments.json_186,The patient ID to be validated and used             This is thrown if a patient is added without any health records to be checked. Try to avoid             having this exception be thrown in a normal flow of events.,0,0,0
comments.json_187,Returns the  ID of the patient to be checked .,0,0,0
comments.json_188,Gives the full name of the patient,0,0,0
comments.json_189,Returns the risks for which this patient is at risk for . All logic has been passed to,0,0,0
comments.json_190,Used by the patient to declare  HC Ps as "designated "  in edit HC Ps .jsp .,0,0,0
comments.json_191,Sets up defaults            This patient,0,0,0
comments.json_192,Lists the declared  HC Ps for this current patient,0,0,0
comments.json_193,Validate an  HCP 's  MID and declare them   if possible            The MID of an HCP to declare,0,1,1
comments.json_194,Validate an  HCP 's  MID and undeclare them   if possible            The MID of an HCP to undeclare,0,1,1
comments.json_195,Delete Exercise Entry Action .java  Version 1 4/5/2105 Copyright notice : none Responsible for deleting an exercise entry from a patient's Exercise Diary.,0,0,0
comments.json_196,Uses the factory to instantiate the  Exercise Entry DAO            which DAOFactory to use            who is currently logged in,0,0,0
comments.json_197,Deletes a exercise entry from the db            the exercise entry to delete,0,0,0
comments.json_198,Delete Food Entry Action .java Version 1 2/26/2105 Copyright notice: none Responsible for deleting a food entry from a patient's Food Diary. I would like to include validation here that a patient is not trying to delete somebody else's food entry  but I do not see how to do that without querying the database first  and I would prefer to keep trips to db as low as possible.,0,1,1
comments.json_199,Uses the factory to instantiate the foodentrydao,0,0,0
comments.json_200,Deletes a food entry from the db,0,0,0
comments.json_201,Delete Sleep Entry Action .java Version 1 4/6/2105 Copyright notice: none Responsible for deleting an sleep entry from a patient's Sleep Diary.,0,0,0
comments.json_202,Uses the factory to instantiate the  Sleep Entry DAO            which DAOFactory to use            who is currently logged in,0,0,0
comments.json_203,Deletes a sleep entry from the db            the sleep entry to delete,0,0,0
comments.json_204,Responsible for allowing only designated nutritionists to view the Nutritional information of patients. Patients can declare their designated nutritionist,1,0,1
comments.json_205,Returns a list of all of the  HC Ps who have a specialty of Nutritionist,0,0,0
comments.json_206,Allows the patient to update who his designated nutritionist is . A patient may choose to have no designated nutritionist in which case no hcp may view his nutritional information. return 0 means nothing happened return -1 means the nutritionist is already his designated nutritionist return -2 means hcp is not a nutritionist return positive number means successful update,0,0,0
comments.json_207,If the  HCPID = -1 ( HCPID can never be -1)  then the  patient wishes to have ' None ' as his selected hcp and we will delete it. if not -1  we will try first to just update it  and assume that the patient already has a designated nutritionist  if not we will add 1 for him,0,0,0
comments.json_208,the patient wants to update it to his current nutritionist,0,0,0
comments.json_209,must first make sure the hcp in question has,0,0,0
comments.json_210,specialty of nutritionist,0,0,0
comments.json_211,Used by  Edit Drug Interaction .jsp to edit and get information about drug interactions .,0,0,0
comments.json_212,Sets up defaults,0,0,0
comments.json_213,Method to report an interaction,0,0,0
comments.json_214,Method to delete an interaction,0,0,0
comments.json_215,Method to return a list of drug interactions for a given drug,0,0,0
comments.json_216,Edit Appt Action,0,0,0
comments.json_217,Edit Appt Action,0,0,0
comments.json_218,Retrieves an appointment from the database   given its  ID . Returns null if there is no match  or multiple matches.,0,0,0
comments.json_219,Updates an existing appointment,0,0,0
comments.json_220,Removes an existing appointment,0,0,0
comments.json_222,Handle patients  Diagnosis Edit Diagnosis Add Diagnosis Remove Diagnosis,0,0,0
comments.json_223,Edit Exercise Entry Action .java Version 1 4/5/2105 Copyright notice: none Responsible for editing a exercise entry from a patient's Exercise Diary.,0,0,0
comments.json_224,Uses the factory to instantiate the  Exercise Entry DAO,0,0,0
comments.json_225,Edits the exercise entry of a patient . It first checks to make sure that the patient has the ability to edit this exercise entry because it belongs to him. Patients should only be able to edit entries that belong to them. -1 means the logged in user cannot edit this exercise entry  and anything else is the number of rows updated which should never exceed 1),1,0,1
comments.json_226,try to validate it,0,1,1
comments.json_227,Edit Food Entry Action .java Version 1 2/26/2105 Copyright notice: none Responsible for editing a food entry from a patient's Food Diary.,0,0,0
comments.json_228,Uses the factory to instantiate the foodentrydao,0,0,0
comments.json_229,Edits the food entry of a patient . It first checks to make sure that the patient has the ability to edit this food entry because it belongs to him. Patients should only be able to edit entries that belong to them. -1 means the logged in user cannot edit this food entry  and anything else is the number of rows updated which should never exceed 1),1,0,1
comments.json_230,try to validate it,0,1,1
comments.json_231,Edits the health history of a patient   used by view Basic Health .jsp,0,0,0
comments.json_232,The number of months in a year,0,0,0
comments.json_233,The number of months in 3 years,0,0,0
comments.json_234,The number of months in 12 years,0,0,0
comments.json_235,The patient  ID is validated by the superclass,0,1,1
comments.json_237,returns the patient name,0,0,0
comments.json_238,Sets patient age for form validation when adding a new health record,0,1,1
comments.json_239,Adds a health record for the given patient,0,0,0
comments.json_240,If there is already an existing health record with the specified office visit  ID,0,0,0
comments.json_241,Remove the health record before adding a new one,0,0,0
comments.json_242,Moves the information from the form to a  Health Record for a baby,0,0,0
comments.json_243,Moves the information from the form to a  Health Record for a youth,0,0,0
comments.json_244,Moves the information from the form to a  Health Record for an adult,0,0,0
comments.json_245,Returns a list of all  Health Records for the given patient,0,0,0
comments.json_246,Returns a  Health Record related to a specific office visit  ID,0,0,0
comments.json_247,Removes a specific HealthRecord by office visit ID,0,0,0
comments.json_248,Get patient 's age in months by taking an office visit date and comparing it with the patient 's date of birth.,0,0,0
comments.json_249,Create int for patient 's age in months,0,0,0
comments.json_250,Get the patient 's birthdate,0,0,0
comments.json_251,Split the patient 's birthdate into day   month   and year,0,0,0
comments.json_252,Split the office visit date into day month and year,0,0,0
comments.json_253,Calculate the year   month   and day differences,0,0,0
comments.json_254,Get the patient 's age in months by multiplying the year difference by 12,0,0,0
comments.json_255,and adding the month difference,0,0,0
comments.json_256,If the day difference is negative   subtract a month from the age,0,0,0
comments.json_257,Return the age in months,0,0,0
comments.json_258,Handle immunization for the patients Edit Immunizations Add Immunizations Delete Immunizations,0,0,0
comments.json_259,Handles lab procedures add lab procedure Edit lab procedure Remove lab procedure,0,0,0
comments.json_260,Edit Lab Procedures Action,0,0,0
comments.json_261,Edit Lab Procedures Action,0,0,0
comments.json_262,get Lab Procedures,0,0,0
comments.json_263,get Lab Procedure,0,0,0
comments.json_264,add Lab Procedure,0,0,0
comments.json_265,choose lab tech if not assigned in bean,0,0,0
comments.json_266,edit Lab Procedure,0,0,0
comments.json_267,delete Lab Procedure,0,0,0
comments.json_268,get Lab Techs,0,0,0
comments.json_269,get Lab Tech Name,0,0,0
comments.json_270,get Lab Tech Queue Size,0,0,0
comments.json_271,get Lab Tech Queue Size By Priority,0,0,0
comments.json_272,get Lab Procedure Codes,0,0,0
comments.json_273,Handles changes (adds and removes ) to the monitoring list for a certain  HCP .,0,0,0
comments.json_274,Constructor,0,0,0
comments.json_275,Adds a patient to the current  HCP 's remote monitoring listOrdered by Systolic Blood Pressure  Diastolic Blood Pressure  Glucose Level  Weight  Pedometer Reading.,0,0,0
comments.json_276,Removes a patient from the current  HCP 's remote monitoring list,0,0,0
comments.json_277,Returns whether a patient is in an  HCP 's list already,0,0,0
comments.json_278,returns the patient name,0,0,0
comments.json_279,Just the factory and logged in  MID,0,0,0
comments.json_280,Get the current flag bean,0,0,0
comments.json_281,TODO set the calculation flags,0,0,0
comments.json_282,set the manual flags first to load from later and pull if twins is set,0,0,0
comments.json_283,Download the list of office visits for this patient,0,0,0
comments.json_284,Get  FHR flag,0,0,0
comments.json_285,Get  BP flag,0,0,0
comments.json_286,Weight flag processing,0,0,0
comments.json_287,can only do  BMI calculations if a normal office visit (with height /weight ) exists before  LMP,0,0,0
comments.json_288,check if any record trigges any flags,0,0,0
comments.json_289,Do weight gain stuff,0,0,0
comments.json_290,caluclate the original  BMI,0,0,0
comments.json_291,find the expected weight offsets in  BMI /weight tables,0,0,0
comments.json_292,This is the correct upper bound,0,0,0
comments.json_293,If not in expected twins range,0,0,0
comments.json_294,If not in expected range,0,0,0
comments.json_295,do fhr stuff,0,0,0
comments.json_296,do bp stuff,0,0,0
comments.json_297,Set weight flag if needed,0,0,0
comments.json_298,Edits the office visits of a patient  Used by edit Office Visit .jsp .  This exists in two states: saved and unsaved.  If unsaved  data cannot be saved to sub actions (if this is attempted  exceptions will be raised).  Once it is saved  however  the sub actions can be saved.,0,0,0
comments.json_299,Patient id and office visit id validated by super class,0,1,1
comments.json_300,Create an  Office Visit Action that is not yet associated with an actual office visit.  When update() is called  it will be saved.  Until then  any attempt to save health records  prescriptions  procedures  lab procedures  immunizations  or diagnoses will raise an exception.,0,0,0
comments.json_301,Used to update the sub actions once a office visit is saved .  Until this is called  attempting to save sub actions will raise an exception.,0,0,0
comments.json_302,Returns the office visit bean for the office visit,0,0,0
comments.json_303,Gets and returns the associated patient 's health history record .,0,0,0
comments.json_309,This is a list of all hospitals   ordered by the office visit 's hcp  FIRST,0,0,0
comments.json_310,Combines two lists of hospitals,0,0,0
comments.json_311,Updates the office visit with information from the form passed in .  If the office visit has not yet been saved  calling this method will save it as well as make the sub actions able to be saved.            information to update,0,0,0
comments.json_312,Helper that logs an office visit billing event .  The associated patient id   HCP id  and office visit id are automatically included. added with UC60,0,0,0
comments.json_313,Helper that logs an office visit event .  The associated patient id   HCP id  and office visit id are automatically included.,0,0,0
comments.json_314,Sends e-mail regarding the prescribed dangerous drug.,0,0,0
comments.json_315,Updates the office visit .,0,0,0
comments.json_316,has not been saved  a default OfficeVisitBean with the HCP id and patient id filled in.,0,0,0
comments.json_317,Update the office visit with the given data .  If the office visit has not yet been saved  this will save it and reinitialize the sub actions.,0,0,0
comments.json_319,Handle patients  Diagnosis Edit Diagnosis Add Diagnosis Remove Diagnosis,0,0,0
comments.json_320,Used for edit ophthalmology office visit page (edit Ophalmology OV Record .jsp ).,0,0,0
comments.json_321,ophthalmology OVDAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_322,logged In MID is the  HCP that is logged in .,0,0,0
comments.json_323,logging Action is used to write to the log .,0,0,0
comments.json_324,Edit Ophthalmology OV Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_325,Edits an existing ophthalmology office visit record .,0,0,0
comments.json_326,Used for editing ophthalmology office visit requests .,0,0,0
comments.json_327,ophthalmology OVDAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_328,Edit Ophthalmology Schedule OV Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_329,Edits an existing ophthalmology scheduled office visit record .,0,0,0
comments.json_330,Used for edit ophthalmology office visit page (edit Ophalmology Surgery Record .jsp ).,0,0,0
comments.json_331,ophthalmology Surgery DAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_332,logged In MID is the  HCP that is logged in .,0,0,0
comments.json_333,logging Action is used to write to the log .,0,0,0
comments.json_334,Edit Ophthalmology Surgery Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_335,Edits an existing ophthalmology office visit record .,0,0,0
comments.json_336,Edits a patient  Used by edit Patient .jsp,0,0,0
comments.json_337,The super class validates the patient id,0,1,1
comments.json_338,Takes the information out of the  Patient Bean param and updates the patient 's information            the new patient information,0,0,0
comments.json_339,Returns a  Patient Bean for the patient,0,0,0
comments.json_340,Creates and e -mail to inform the patient that their information has been updated .,0,0,0
comments.json_341,The  Date Of Deactivation Str of the  Patient Bean when not null indicates that the user has been deactivated .,0,0,0
comments.json_342,The  Date Of Deactivation Str of the  Patient Bean is null when the patient is activated,0,0,0
comments.json_343,If a  DB Exception occurs print a stack trace and return false,0,0,0
comments.json_344,If a  DB Exception occurs print a stack trace and return false,0,0,0
comments.json_345,Allows an  HCP to add /edit /delete patient instructions for an office visit .,0,0,0
comments.json_346,Creates an  Edit Patient Instructions Action for an existing office visit .,0,0,0
comments.json_347,Creates an  Edit Patient Instructions Action for an non -existent office visit.  Most methods will throw exceptions if built with this constructor.,0,0,0
comments.json_348,Get the list of patient instructions associated with the office visit .,0,0,0
comments.json_349,Add patient instructions to the office visit .,0,0,0
comments.json_350,Modify patient instruction in this office visit .,0,0,0
comments.json_351,Delete patient instructions from this office visit .,0,0,0
comments.json_352,Verify the contents of the given instruction bean .,0,0,0
comments.json_353,Edits the designated personnel  Used by admin /edit Personnel .jsp   staff /edit My Demographics .jsp   editPersonnel.jsp,0,0,0
comments.json_354,Super class validates the patient id,0,1,1
comments.json_355,Takes information from the personnel Form param and updates the patient            PersonnelBean with new information,0,0,0
comments.json_356,Edits the patient health record for a given patient  Used by edit PHR .jsp,0,0,0
comments.json_357,Super class validates the patient id,0,1,1
comments.json_358,Adds an allergy to the patient 's records,0,0,0
comments.json_359,now   set the ndcode if it happens to exist for the description,0,0,0
comments.json_360,adding loop that checks for allergy conflicts . The loop runs through every prescription bean and checks for conflict.,0,0,0
comments.json_361,log that this was added,0,0,0
comments.json_362,Returns a  Patient Bean for the patient,0,0,0
comments.json_363,Returns a list of  Allergy Beans for the patient,0,0,0
comments.json_364,Returns a list of  Family Member Beans for the patient,0,0,0
comments.json_365,Returns a list of  Health Records for the patient,0,0,0
comments.json_366,Returns a list of  Office Visit Beans,0,0,0
comments.json_367,get Procedures,0,0,0
comments.json_368,Returns a list of diseases for which the patient is at risk,0,0,0
comments.json_369,Checks to see if a particular family member has high blood pressure,0,0,0
comments.json_370,Checks to see if a particular family member has high cholesterol,0,0,0
comments.json_371,Checks to see if a particular family member has diabetes,0,0,0
comments.json_372,Checks to see if a particular family member has cancer,0,0,0
comments.json_373,Checks to see if a particular family member has heart disease,0,0,0
comments.json_374,Checks to see if a particular family member smokes,0,0,0
comments.json_375,Checks to see if the family member is dead and returns their cause of death if so,0,0,0
comments.json_376,Creates a fake e -mail to notify the user that their records have been altered .,0,0,0
comments.json_377,import java .util . Date ;,0,0,0
comments.json_378,Edits a patient 's prescription information .  Used by hcp -uap /edit Prescription .jsp,0,0,0
comments.json_379,Creates a new action by initializing the office visit database access object.,0,0,0
comments.json_380,A prescription action that is part of an office visit that is not yet saved.  All attempts to modify this action will throw exceptions.  Once the office visit is saved  obtain a new EditPrescriptionsAction using the four-argument constructor.  (This is done automatically by the EditOfficeVisitAction class.),0,0,0
comments.json_381,Checks the prescription bean for interactions   allergies   and legal values.,0,0,0
comments.json_382,Indicates if the prescription bean has a valid allergy /interaction override.,0,0,0
comments.json_383,Returns a string suitable for a user warning message that a drug-interaction was detected.,0,0,0
comments.json_384,Returns a string suitable for a user warning message that a drug-allergy warning was detected.,0,0,0
comments.json_385,Checks to see if the given prescription has an interaction with any other previously prescribed prescriptions. 	interactions were detected.,0,0,0
comments.json_386,Checks to see if the patient is allergic to the given prescription . were detected.,0,0,0
comments.json_387,Allergy : Aspirin . First  Found : 12/20/2008.,0,0,0
comments.json_388,Edits an existing prescription in the database .  If the office visit is unsaved  this will throw an exception.,0,0,0
comments.json_389,office visit is unsaved  this returns an empty list.),0,0,0
comments.json_390,Add a prescription to this office visit .  If the office visit is unsaved  this will throw an exception.,0,0,0
comments.json_391,Delete a prescription from this office visit .  If the office visit is unsaved  this will throw an exception.,0,0,0
comments.json_392,Returns a list of known medications .  This can be called even if the office visit is unsaved.,0,0,0
comments.json_393,Validates a prescription form   converts it into a bean   and returns that bean . 	field.  If the field equals this value  the validation will fail.,0,1,1
comments.json_394,Creates a fake e -mail to notify the user that their records have been altered .,0,0,0
comments.json_395,Edit patiens procedure action,0,0,0
comments.json_398,Class for creating and editing referrals associated with a particular office visit.,0,0,0
comments.json_399,Get all referrals associated with this office visit .,0,0,0
comments.json_400,Get a specific referral .,0,0,0
comments.json_401,Get the patient name associated with the given referral .,0,0,0
comments.json_402,Get the name of the receiving  HCP associated with the given referral .,0,0,0
comments.json_403,Edits a patient 's personal representatives . Used by hcp /edit Representatives .jsp,0,0,0
comments.json_404,Super class validates the patient mid,0,1,1
comments.json_405,Gets the name of the representative patient,0,0,0
comments.json_406,If a  DB Exception is caught print a stack trace and return an empty string,0,0,0
comments.json_407,Return a list of patients that pid represents,0,0,0
comments.json_408,Makes the patient (pid ) represent the input mid parameter            the mid of the person who will be represented (the representee),0,0,0
comments.json_409,Makes the patient (pid ) no longer represent the input mid param            the mid of the person be represented (representee),0,0,0
comments.json_410,TODO  Auto -generated catch block,0,0,0
comments.json_411,Class that allows creating   editing   and deleting of a single referral .,0,0,0
comments.json_412,Get a specific referral .,0,0,0
comments.json_413,Add a new referral to the database .,0,0,0
comments.json_414,Edit an existing referral .,0,0,0
comments.json_415,Delete a referral from the database .,0,0,0
comments.json_416,Get the patient name associated with the given referral .,0,0,0
comments.json_417,Get the name of the receiving  HCP associated with the given referral .,0,0,0
comments.json_418,Send messages to the users associated with creating a referral .,0,0,0
comments.json_419,Send messages to the users associated with canceling a referral .,0,0,0
comments.json_420,Edit Sleep Entry Action .java Version 1 4/6/2105 Copyright notice: none Responsible for editing a sleep entry from a patient's Sleep Diary.,0,0,0
comments.json_421,Uses the factory to instantiate the  Sleep Entry DAO,0,0,0
comments.json_422,Edits the sleep entry of a patient . It first checks to make sure that the patient has the ability to edit this sleep entry because it belongs to him. Patients should only be able to edit entries that belong to them. -1 means the logged in user cannot edit this sleep entry  and anything else is the number of rows updated which should never exceed 1),1,0,1
comments.json_423,try to validate it,0,1,1
comments.json_424,Creates a new  Emergency  Report  Used by emergency Report .jsp,0,0,0
comments.json_425,The super class handles validating the pid  Logs viewing of the report,0,1,1
comments.json_426,Returns the patient 's name,0,0,0
comments.json_427,Returns the patient 's age,0,0,0
comments.json_428,Returns the patient 's gender,0,0,0
comments.json_429,Returns the patient 's emergency contact,0,0,0
comments.json_430,Returns the patient 's blood type,0,0,0
comments.json_431,Returns a list of allergies for the given patient,0,0,0
comments.json_432,Returns a list of prescriptions the patient is currently taking,0,0,0
comments.json_433,Returns a list of diagnoses that are in the range indicated by the  Diagnosis Range enum,0,0,0
comments.json_434,Returns a list of prescriptions the patient is currently taking,0,0,0
comments.json_435,Creates a fake e -mail to notify the user that an emergency report has been created and viewed .,0,0,0
comments.json_436,Handles retrieving the log of record accesses for a given user  Used by view Access Log .jsp,0,0,0
comments.json_437,Set up,0,0,0
comments.json_438,Log a transaction   with all of the info . The meaning of secondary MID and added Info changes depending on the transaction type.,0,0,0
comments.json_439,Action class to find experts based on the distance from the user and type of expert .,0,0,0
comments.json_440,Hospital DAO to grab hospitals from,0,0,0
comments.json_441,Personnel DAO to find experts from,0,0,0
comments.json_442,Constructor simply is used to initialize the  DA Os,0,0,0
comments.json_443,Main method used to find the hospitals and all specified personnel within range,0,0,0
comments.json_444,Grab all hospitals and filter them based on distance,0,0,0
comments.json_445,Find experts in hospitals,0,0,0
comments.json_447,Method used to find experts of specified specialty from hospitals that are in range,0,0,0
comments.json_448,Go through all nearby hospitals,0,0,0
comments.json_449,Put the specified experts into a hashmap with the hospital,0,0,0
comments.json_451,Method used to find experts of specified specialty from hospitals that are in range,0,0,0
comments.json_452,Go through all nearby hospitals,0,0,0
comments.json_453,Put the specified experts into a hashmap with the hospital,0,0,0
comments.json_454,experts .put (hospital   personnel DAO .get Personnel From Hospital (hospital .get Hospital ID ()  specialty ));,0,0,0
comments.json_455,Filters hospitals down to just the hospitals in the specified range of the user,0,0,0
comments.json_456,A hospital is in range if its zipcode matches the user entered one from the first number to the zip Rangeth number,0,0,0
comments.json_457,Examine next hospital if current has null zipcode entry,0,0,0
comments.json_458,If the hospital 's zip code is not at least 5 digits long   examine next hospital,0,0,0
comments.json_459,Action class for calendar .jsp,0,0,0
comments.json_460,Set up defaults,0,0,0
comments.json_461,Return the send request for an  Appointment Bean,0,0,0
comments.json_462,Check appointments appearing on the calendar for conflicts with other appointments on the calendar. The array from this method is used to determine what appointments will appear in bold on the calendar.,0,0,0
comments.json_463,Creates a hash table with all of the  Appointments to be displayed on the calendar for the month and year being viewed.,0,0,0
comments.json_464,Creates a hash table with all of the  Office  Visits to be displayed on the calendar for the month and year being viewed.,0,0,0
comments.json_465,Creates a hash table with all of the lab procedures to be displayed on the calendar for the month and year being viewed.,0,0,0
comments.json_466,Handles  Getting the person 's name associated with a certain mid  Used by get User .jsp,0,0,0
comments.json_467,Set up defaults,0,0,0
comments.json_468,Returns the person 's name that matches the input MID param,0,0,0
comments.json_469,Gets the  Visit Reminders for a given patient  Used by visit Reminders .jsp,0,0,0
comments.json_470,Reminder  Type enumeration .,0,0,0
comments.json_471,Gets the  Reminder Type for the name passed as a param,0,0,0
comments.json_472,Returns the type name as a string,0,0,0
comments.json_473,Begin GetVisitRemindersAction code,0,0,0
comments.json_474,Set up defaults,0,0,0
comments.json_475,Returns a list of  Visit Reminder Return Forms for the type passed in as a param            the ReminderType,0,0,0
comments.json_476,return strip Dupes (visit Reminder DAO .get Diagnosed Visit Needers (logged In MID ));,0,0,0
comments.json_477,Gets a list of anyone who need immunizations,0,0,0
comments.json_478,Get list of patients that designate this  HCP,0,0,0
comments.json_479,Checks a patient to see what immunizations they need,0,0,0
comments.json_480,Hep  B (90371),0,0,0
comments.json_481,Rotavirus (90681),0,0,0
comments.json_482,Diptheria   Tetanus   Pertussis (90696),0,0,0
comments.json_483,Haemophilus influenza (90645),0,0,0
comments.json_484,Pneumococcal (90669),0,0,0
comments.json_485,Poliovirus (90712),0,0,0
comments.json_486,Measles   Mumps   Rubella (90707),0,0,0
comments.json_487,Varicella (90396),0,0,0
comments.json_488,Hep  A (90633),0,0,0
comments.json_489,Human  Papillomaavirus (90649),0,0,0
comments.json_490,Checks to see if a patient needs the  HPV immunization,0,0,0
comments.json_491,Checks to see if a patient needs the  Hepatits  A immunization,0,0,0
comments.json_492,Checks to see if a patient needs the  Varicella immunization,0,0,0
comments.json_493,Checks to see if a patient needs the  Measles   Mumps   and  Rubekka immunization,0,0,0
comments.json_494,Checks to see if a patient needs the  Polio immunization,0,0,0
comments.json_495,Checks to see if a patient needs the  Pneumococcal immunization,0,0,0
comments.json_496,Checks to see if a patient needs the  Haemophilus  Infulenzae immunization,0,0,0
comments.json_497,Checks to see if a patient needs the  Diphtheria   Tetanus   Pertussis immunization,0,0,0
comments.json_498,Checks to see if a patient needs the  Rotavirus immunization,0,0,0
comments.json_499,Checks to see if a patient needs the  Hepatitis  B immunization,0,0,0
comments.json_507,Generates group reports   producing  Array Lists containing the headers  data  and filters.,0,0,0
comments.json_508,DAO Factory for database operations,0,0,0
comments.json_509,Group Report Action for generating the individual records,0,0,0
comments.json_510,List of  Report Filters to be used in the report,0,0,0
comments.json_511,List of report filter types that were used in the report,0,0,0
comments.json_512,List of report filter values that were used in the report,0,0,0
comments.json_513,List of headers for the report,0,0,0
comments.json_514,List of lists (each of the sub -lists is a record ) in the report,0,0,0
comments.json_515,Initializes the group report generator with a list of filters,0,0,0
comments.json_516,Initializes the group report generator with a list of filters after parsing them,0,0,0
comments.json_517,Gets a list of the filters used in the report .,0,0,0
comments.json_518,Gets a list of the filter values used in the report .,0,0,0
comments.json_519,Gets a list of the report headers .,0,0,0
comments.json_520,Gets a list of lists of report records (patients ),0,0,0
comments.json_521,Generates the  Array Lists for the report based on the filters passed in the constructor.,0,0,0
comments.json_522,Initialize the  Group Report Bean,0,0,0
comments.json_523,Populate the filter lists,0,0,0
comments.json_524,Populate the header list with the  Demographic Report Filters,0,0,0
comments.json_525,Populate the header list with the  Medical Report Filters,0,0,0
comments.json_526,Populate the header list with the  Personnel Report Filters,0,0,0
comments.json_527,Loop through all the patients in the report,0,0,0
comments.json_528,Create a temporary  Array List for the current patient 's data,0,0,0
comments.json_529,Populate the current record with  Demographic data,0,0,0
comments.json_530,Populate the current record with  Medical data,0,0,0
comments.json_531,Populate the current record with  Personnel data,0,0,0
comments.json_532,Add the current record to the list of records,0,0,0
comments.json_533,Remove  MID from report,0,0,0
comments.json_534,Method that parses the request parameters to create the filter list in order to run report .,0,0,0
comments.json_535,Uses the factory to construct label DAO and patient DAO            DAO factory to use            who is currently logged in,0,0,0
comments.json_536,Returns a single label,0,0,0
comments.json_537,Takes in which patient you want to view the labels for   and then returns all of the labels for that patient. It first checks to ensure that the person requesting the labels is a patient            the id of the patient whose food diary we want,1,0,1
comments.json_538,if true   then it is a patient   so show own labels,0,0,0
comments.json_539,Edits the label of a patient . It first checks to make sure that the patient has the ability to edit this label because it belongs to them. Patients should only be able to edit entries that belong to them. -1 means the logged in user cannot edit this food entry  and anything else is the number of rows updated which should never exceed 1),1,0,1
comments.json_540,Deletes a label from the database            the label to delete,0,0,0
comments.json_541,Action class for  Lab Proc HCP .jsp .,0,0,0
comments.json_542,Sets up defaults,0,0,0
comments.json_543,This method sorts by  LOINC and returns the list,0,0,0
comments.json_544,Returns a list of all the lab procedures for the next month,0,0,0
comments.json_545,Changes the privacy settings,1,0,1
comments.json_546,Checks to see if the logged in  HCP is the one who made the procedure .  Used to generate links for page to edit  Office Visit,0,0,0
comments.json_547,Class for  Lab Proc LT .jsp .  Handles lab procedures for  L Ts,0,0,0
comments.json_548,Setup,0,0,0
comments.json_549,Class for  Lab Proc UAP .jsp .  Handles lab procedures for  UA Ps,0,0,0
comments.json_550,Setup,0,0,0
comments.json_551,Updates a lab procedure,0,0,0
comments.json_552,need to check if status is what 's being changed - if new status !=old status send email,0,0,0
comments.json_553,Sends an e -mail informing the patient that their procedure has been updated,0,0,0
comments.json_554,Returns a list of all the lab procedures for a particular patient .,0,0,0
comments.json_555,Returns a list of the lab procedures associated with both the  HCP and the given patient.,0,0,0
comments.json_556,Please note that this is not the best mitigation for  Denial of  Service attacks . The better way would be to keep track of password failure attempts per user account  NOT with easily spoofable ip addresses. The reason this feature is implemented with ip addresses is a limitation in Tomcat authentication (actually  it's technically JSP's fault for not specifying a form of account lockout). <br /> <br /> All authentication in this application is done by the container (Tomcat)  which doesn't support account lockout. So our options would be (a) to implement our own authentication (yuck!)  or (2) to extend the JDBCRealm class in the Tomcat source code and add the logic. I've looked into this and it's actually pretty easy. The ONLY reason it's not implemented here is that the code would be buried in a jar in your Tomcat installation - not very educational for those who want to learn about authentication in webapps. Feel free to change this; extending this would be perfectly acceptable.,1,0,1
comments.json_557,Set up defaults,0,0,0
comments.json_558,Calls auth DAO to record the login failure in the database,0,0,0
comments.json_559,Checks to see if the current user can login (#failures <3),0,1,1
comments.json_560,reset Failure,0,0,0
comments.json_561,set Captcha,0,0,0
comments.json_562,get Failure Count,0,0,0
comments.json_563,Manages the assignment of  HC Ps to hospitals  Used by hospital Assignments .jsp,0,0,0
comments.json_564,Set up defaults            The DAOFactory used to create the DAOs used in this action.            The MID of the user managing hospitals.,0,0,0
comments.json_565,Returns a list of hospitals to which the given mid is not currently assigned,0,0,0
comments.json_566,Returns a list of hospitals to which the given mid is currently assigned,0,0,0
comments.json_567,Assigns the mid to the hospital            The MID of the person assigned to the hospital as a String.            The ID of the hospital.,0,0,0
comments.json_568,Removes  HC Ps assignment to the designated hospital            the HCP's mid            the hospital id to be removed,0,0,0
comments.json_569,Removes all hospital assignments for the given hcp mid            HCP's mid,0,0,0
comments.json_570,Checks if the hcp ID param is a  HCP            the String to be checked,0,0,0
comments.json_571,Checks if the  HCP is a  LT if it is then check to see if a hospital is assigned to them            the String to be checked,0,0,0
comments.json_572,Used by  PH As to view the reported adverse events,0,0,0
comments.json_573,Constructor,0,0,0
comments.json_574,Returns a list of reports between specified dates,0,0,0
comments.json_575,Returns the patient 's name,0,0,0
comments.json_576,Sends an e -mail to a patient requesting more information,0,0,0
comments.json_577,Method used to remove an adverse event report,0,0,0
comments.json_578,Edits the privacy levels of diagnoses   used by my Diagnoses .jsp,1,0,1
comments.json_579,Set up for defaults,0,0,0
comments.json_580,Returns a list of  Diagnosis Beans for the patient,0,0,0
comments.json_581,Returns a list of all the  HC Ps who have a particular diagnosis,0,0,0
comments.json_582,check for  HCP - Patient locality based on first 3 digits in  ZIP,0,0,0
comments.json_583,Check to see if we already have a bean for the  HCP associated with this visit,0,0,0
comments.json_584,get all prescriptions associated with an office visit,0,0,0
comments.json_585,Get  Lab  Procedures,0,0,0
comments.json_586,Check if this patient has been seen multiple times for this diagnosis,0,0,0
comments.json_587,Looks up all the prescriptions given by a certain  HCP with the same  ICD code .,0,0,0
comments.json_588,Checks to see what  HCP has had the most experience with a diagnosis,0,0,0
comments.json_589,Compares one  HCP with another,0,0,0
comments.json_590,DAO Factory to use with the  Ward DAO,0,0,0
comments.json_591,This class aids pay Bill .jsp in paying a bill for a user . This mostly will interact with the BillingDAO and verify user input.,0,0,0
comments.json_592,billing DAO just access the database when  I need to .,0,0,0
comments.json_593,my Bill is the bill that we are paying .,0,0,0
comments.json_594,The length of a credit card number,0,0,0
comments.json_595,Pay Bill Action is the constructor and it just sets the instance variables .,0,0,0
comments.json_596,get Bill returns the billing bean to make jsp stuff easy .,0,0,0
comments.json_597,get Patient gets the patient of the office visit .,0,0,0
comments.json_598,get OV Bean returns the office visit bean associated with this bill.,0,0,0
comments.json_599,Pay bill with  Credit Card validates input   and pays the bill if it can .,0,1,1
comments.json_600,Pay bill with insurance just pays the bill with insurance information .,0,0,0
comments.json_601,Handles  Prescription  Reports for the given pid  Used by hcp -uap /get Prescription Report .jsp   hcp-uap/viewPrescriptionRecord.jsp  patient/getMyPrescriptionReport.jsp  & patient/viewMyPrescriptionRecord.jsp,0,0,0
comments.json_602,Super class validates pid String,0,1,1
comments.json_603,Takes the patient 's representee as a param and returns it as a long if the patient represents the input param            the patient's representee mid,0,0,0
comments.json_604,Returns a list of all office visits for the pid,0,0,0
comments.json_605,Used by the  JSP   passes a  Map from the html form and a list of  Office Visit Beans  Returns a list of PrescriptionReportBeans,0,0,0
comments.json_606,just skip it,0,0,0
comments.json_607,Returns a  Patient Bean for the pid,0,0,0
comments.json_608,Used by the  JSP   which passes the param map from the html form and a list of  Office Visit Beans  Returns a string that will be used to create a new url. The JSP will pull params from this url to create the prescription report.,0,0,0
comments.json_609,Checks office visits,0,0,0
comments.json_610,Builds a query string for office visits,0,0,0
comments.json_611,Report Adverse Event Action,0,0,0
comments.json_612,Report Adverse Event Action,0,0,0
comments.json_613,Constructor used to send e -mails only,0,0,0
comments.json_614,Method that sends exactly one e -mail to each  MID in the list of  Adverse  Events,0,0,0
comments.json_615,A method used to send a single e -mail . Used in immunizations .,0,0,0
comments.json_616,Method used to add a report to the data base,0,0,0
comments.json_617,Error message for if there is a database exception,0,0,0
comments.json_618,Error message for if there is no digital signature on a request form,0,0,0
comments.json_619,Success message for if the request form is successfully submitted,0,0,0
comments.json_620,Records Release DAO object for working with record releases in the database,0,0,0
comments.json_621,Patient DAO for working with patient objects in the database,0,0,0
comments.json_622,Hospitals DAO for getting hospital objects from the database,0,0,0
comments.json_623,Records Release Form Validator to validate records release forms,0,1,1
comments.json_624,Long for storing the patient 's mid,0,0,0
comments.json_625,Constructor for  Request Records Release Action . Gets and initializes all necessary  DA Os for working with requesting a patient's records.,0,0,0
comments.json_628,Validate the form,0,1,1
comments.json_629,Check that there is a digital signature,0,1,1
comments.json_630,Transfer the form to a  Records Release Bean object,0,0,0
comments.json_631,Add the bean to the dao,0,0,0
comments.json_632,Check that there is a digital signature,0,1,1
comments.json_633,If a form validation exception is thrown   indicate the release could not be added,0,1,1
comments.json_634,If a  DB Exception is thrown   indicate the release could not be added,0,0,0
comments.json_635,Indicate that the release request was successfully added,0,0,0
comments.json_636,Get all hospitals where the patient has visited,0,0,0
comments.json_637,If a  DB Exception is thrown   print a stack trace and return an empty list,0,0,0
comments.json_638,Set the date to the current time,0,0,0
comments.json_639,Set the pid,0,0,0
comments.json_640,Set the hospital id,0,0,0
comments.json_641,Set the recipient hospital name and address,0,0,0
comments.json_642,Set the receiving doctor 's name,0,0,0
comments.json_643,Set the receiving doctor 's phone and email,0,0,0
comments.json_644,Set the justification comment,0,0,0
comments.json_645,Set the status of the request to pending,0,0,0
comments.json_646,Returns a list of  Patient Beans of all patients the currently logged in patient represents,0,0,0
comments.json_647,If a  DB Exception occurs print a stack trace and return an empty list,0,0,0
comments.json_648,Returns a list of  Patient Beans of all patients the currently logged in patient represents and are a dependent,0,0,0
comments.json_649,If a  DB Exception occurs print a stack trace and return an empty list,0,0,0
comments.json_650,Manages resetting the password  Used by reset Password .jsp,0,0,0
comments.json_651,MAX _ RESET _ ATTEMPTS,0,0,0
comments.json_652,Set up defaults,0,0,0
comments.json_653,Checks to see if a user exists with the given mid,0,0,0
comments.json_654,Checks to see if the number of reset password attempts has been exceeded for the given ip Address,0,1,1
comments.json_655,Checks if the given mid matches the given role            the mid to be checked            the role to be checked,0,0,0
comments.json_656,TODO,0,0,0
comments.json_657,Checks if the answer param is null,0,0,0
comments.json_658,Returns the security question for the mid param,1,0,1
comments.json_659,Resets the password for the given mid,0,0,0
comments.json_660,Creates and sends an e -mail about the change,0,0,0
comments.json_661,Checks to make sure the password is correctly entered twice .,1,0,1
comments.json_662,This class forms the action for the  HCP  Reviewing system   each category rated on a scale from 1 (lowest) to 5 (highest)  and providing an overall rating for the HCP.,0,0,0
comments.json_663,Add a review based on the input params for input of a bean .,0,0,0
comments.json_664,Method that returns physician based on a mid .,0,0,0
comments.json_665,Get all reviews for a given  HCP (ie pid input param )  return as a Java ArrayList,0,0,0
comments.json_666,Checks whether a patient can post a review for a physician .,0,0,0
comments.json_667,Get total average rating for a given  HCP .,0,0,0
comments.json_668,Search Users Action,0,0,0
comments.json_669,Set up defaults,0,0,0
comments.json_670,Searches for all personnel with the first name and last name specified in the parameter list .,0,0,0
comments.json_671,Search for all experts with first name and last name given in parameters .,0,0,0
comments.json_672,Search for all patients with first name and last name given in parameters .,0,0,0
comments.json_673,Search for all patients with first name and last name given in parameters .,0,0,0
comments.json_674,Search for all patients with first name and last name given in parameters .,0,0,0
comments.json_675,If the patient exists with the mid   then add the patient to the patient list,0,0,0
comments.json_676,old way of doing it when they only were returning one person,0,0,0
comments.json_677,now that we are returning everybody with that as a substring in their  MID   not necessary,0,0,0
comments.json_678,yet want to keep it in case we revert sometime,0,0,0
comments.json_679,TODO,0,0,0
comments.json_680,TODO,0,0,0
comments.json_681,get Deactivated is a special case used for when we want to see all deactivated patients .,0,0,0
comments.json_682,TODO,0,0,0
comments.json_683,Class for  Send Message .jsp .,0,0,0
comments.json_684,Sets up defaults,0,0,0
comments.json_685,Sends a message,0,0,0
comments.json_686,Returns the patient 's name,0,0,0
comments.json_687,Returns the personnel 's name,0,0,0
comments.json_688,Returns a list of the patients that the logged in  HCP represents,0,0,0
comments.json_689,TODO,0,0,0
comments.json_690,Returns the designated  HC Ps for the logged in patient .,0,0,0
comments.json_691,Returns the designated  HC Ps for the given patient .,0,0,0
comments.json_692,TODO,0,0,0
comments.json_693,get DLHCP By MID,0,0,0
comments.json_694,Handles setting and retrieving the security questions /answers for users  Used by patient/editMyDemographics.jsp  staff/editMyDemographics.jsp  staff/editPersonnell.jsp,1,0,1
comments.json_695,Sets up defaults,0,0,0
comments.json_696,Updates information in the database from the information held in the  Security QA bean passed as a param            SecurityQuestionBean that holds new information,1,0,1
comments.json_697,Returns a  Security QA bean holding the security info for the currently logged in user,1,0,1
comments.json_698,Checks to make sure the  MID exists in i Trust,0,1,1
comments.json_699,This class is used to add patient survey data to the database .  The office visit  ID is linked with the survey  ID .  Once the survey is added  the transaction is logged,0,0,0
comments.json_700,Sets up defaults,0,0,0
comments.json_701,Pass the  Office Vist Bean along with  Survey Bean,0,0,0
comments.json_702,Updates the  CPT  Code ( Medical  Procedures ) List  Used by edit CPT Procedure Codes .jsp The CPT code set accurately describes medical  surgical  and diagnostic services and is designed to communicate uniform information about medical services and procedures among physicians  coders  patients  accreditation organizations  and payers for administrative  financial  and analytical purposes.,0,0,0
comments.json_704,Adds a new cpt code (med procedure )            ProcedureBean that holds the new cpt code,0,0,0
comments.json_705,Updates a procedure with new information from the  Procedure Bean            ProcedureBean with new information (but same CPT code),0,0,0
comments.json_706,Updates the cpt code,0,0,0
comments.json_707,Handles updating the list of hospitals  Used by hospital Listing .jsp,0,0,0
comments.json_708,Set up,0,0,0
comments.json_709,Adds a hospital using the  Hospital Bean passed as a parameter,0,0,0
comments.json_710,Updates a hospital (based on the hospital id ) using new information from the  Hospital Bean passed as a parameter,0,0,0
comments.json_711,Updates hospital,0,0,0
comments.json_712,Handles updating the  ICD  Code ( Diagnosis ) List  Used by edit ICD Codes .jsp The International Statistical Classification of Diseases and Related Health Problems (most commonly known by the abbreviation ICD) provides codes to classify diseases and a wide variety of signs  symptoms  abnormal findings  complaints  social circumstances and external causes of injury or disease.,0,0,0
comments.json_713,Set up,0,0,0
comments.json_714,Adds a new  ICD code (diagnosis ) based on the  Diagnosis Bean passed as a param            The new diagnosis (ICD code),0,0,0
comments.json_715,Updates a diagnosis with new information from the  Diagnosis Bean passed as a param            new information to update (but same code),0,0,0
comments.json_716,Handles updating the  LOINC  Used . Logical Observation Identifiers Names and Codes (LOINC) is a database and universal standard for identifying medical laboratory observations.,0,0,0
comments.json_717,Sets up defaults            The DAOFactory used to create the DAOs used in this action.,0,0,0
comments.json_718,Adds a new  LOINC            New LOINC,0,0,0
comments.json_719,Updates a  LOINC            new information to update (but same code),0,0,0
comments.json_721,Reads a  LOINC data file line by line   looking for valid  LOINC data to add to the database .            an InputStream associated with the file to parse            false if existing in the database should be updated if new data exists in the file,0,0,0
comments.json_722,Match for starting with a  LOINC code : " NUMBERS  AND  DASHES ",0,0,0
comments.json_723,The line must start with a  LOINC code to be further processed,0,0,0
comments.json_724,split the line along tabs,0,0,0
comments.json_725,the line must have been split into at least 2 parts to continue,0,0,0
comments.json_726,this was an empty field,0,0,0
comments.json_727,The first 7 fields of  LOINC data must be surrounded by quotes . If they aren 't then it 's wrong .,0,0,0
comments.json_728,strip quotes,0,0,0
comments.json_729,success,0,0,0
comments.json_730,We updated some data,0,0,0
comments.json_731,We skipped a line,0,0,0
comments.json_732,If we got this we should report the line as an error,0,0,0
comments.json_733,this is an  IO error and not a data error,0,0,0
comments.json_734,treat it differently,0,0,0
comments.json_735,No data was changed,0,0,0
comments.json_736,Files are only invalid if we didnt add any new data nor update any existing data .,0,0,0
comments.json_737,Otherwise   we just skipped existing data lines .,0,0,0
comments.json_738,Tell the user how many lines were updated /inserted .,0,0,0
comments.json_739,Handles updating the  ND  Code ( Prescription ) List  Used by edit ND Codes .jsp The National Drug Code (NDC) is a universal product identifier used in the United States for drugs intended for human use.,0,0,0
comments.json_740,Set up defaults .,0,0,0
comments.json_741,Adds a new  ND  Code (prescription ) to the list            The new ND Code to be added,0,0,0
comments.json_742,Updates the  ND  Code with new information from the  Medication Bean            the MedicationBean that holds new information but the same code,0,0,0
comments.json_743,Medication information should already be validated,0,1,1
comments.json_744,Removes a  ND  Code (prescription ) from the list,0,0,0
comments.json_745,Handles updating the  Reason  Codes  List  Used by edit Reason Codes .jsp The National Drug Code (NDC) is a universal product identifier used in the United States for drugs intended for human use.,0,0,0
comments.json_746,Set up defaults .,0,0,0
comments.json_747,Adds a new  ND  Code (prescription ) to the list            The new ND Code to be added,0,0,0
comments.json_748,Updates the  ND  Code with new information from the  Override Reason Bean            the OverrideReasonBean that holds new information but the same code,0,0,0
comments.json_749,Override  Reason information should already be validated,0,1,1
comments.json_750,Upload Reference Tables Action is an action class that is used for uploading reference tables . It reads in csv files and parses and loads them to a specified reference table. Contains methods for storing csv files for weight  height  bmi  and head circumference statistics. Each store method also verifies whether the passed in file is correctly formatted.,0,1,1
comments.json_751,Regex pattern to match the header format of a  CDC health stats csv . Checks that header contains at least sex  age  L  M  and S fields,0,0,0
comments.json_752,Regex pattern to match each row of data in a  CDC health stats csv . Checks that header contains at least sex  age  L  M  and S fields,0,0,0
comments.json_753,Constructor for  Upload Reference Tables Action . Reads in  DAO Factory and initializes CDCStatsDAO fields with the factory.,0,0,0
comments.json_754,Parses a  CSV file and stores the statistics for average patient weights 		   false if csv file is of the incorrect format and cannot be stored,0,0,0
comments.json_755,Parses a  CSV file and stores the statistics for average patient heights /lengths 		   false if csv file is of the incorrect format and cannot be stored,0,0,0
comments.json_756,Parses a  CSV file and stores the statistics for average patient head circumferences 		   false if csv file is of the incorrect format and cannot be stored,0,0,0
comments.json_757,Parses a  CSV file and stores the statistics for average patient  BM Is 		   false if csv file is of the incorrect format and cannot be stored,0,0,0
comments.json_758,Parses a csv file and sends it to the  CDC Stats DAO that is passed in to store the data . First verifies whether the csv file is formatted correctly. If the file is of the correct format then the file is parsed and passed into the specified CDCStatsDAO for storing. store in the database 		   false if csv file is of the incorrect format and cannot be stored,0,1,1
comments.json_759,If the csv file cannot be verified   close the  Input Stream and return false,0,1,1
comments.json_760,Create scanner to read each line of data in the csv,0,0,0
comments.json_761,Scanner to parse through each row of data,0,0,0
comments.json_762,String for saving a row of data,0,0,0
comments.json_763,Scan and throw away the header line .,0,0,0
comments.json_764,CDC Stats Bean for storing health metric statistics taken from the csv file,0,0,0
comments.json_765,Create new  CDC Stats Bean for storing a new row of data,0,0,0
comments.json_766,Read a row of data,0,0,0
comments.json_767,Read the next row if row is a header,0,0,0
comments.json_768,Create scanner to parse each row by using commas as the delimiter,0,0,0
comments.json_769,Get the sex field,0,0,0
comments.json_770,Get the age field,0,0,0
comments.json_771,Get the  L field,0,0,0
comments.json_772,Get the  M field,0,0,0
comments.json_773,Get the  S field,0,0,0
comments.json_774,Insert  CDC Stats Bean into the database,0,0,0
comments.json_775,If there is a  DB Exception close the  Input Stream and,0,0,0
comments.json_776,return false since not all the data has been added correctly,0,0,0
comments.json_777,Still return false if  I / O error occurs,0,0,0
comments.json_778,Verifies that a health stats csv file is of the correct format . Checks that the header is formatted correctly  and then checks that each data row contains only integers  doubles  and commas,0,1,1
comments.json_779,Create scanner to read each line of data in the csv,0,0,0
comments.json_780,String for holding a line of data from the  CSV file,0,0,0
comments.json_781,Read the header line,0,0,0
comments.json_782,If the csv file does not contain a line   the csv file is incorrect,0,0,0
comments.json_783,If the header line is incorrectly formatted then the csv file is incorrect,0,0,0
comments.json_784,Verify that each consecutive line follows correct formatting,0,1,1
comments.json_785,If none of the lines match a data line format nor a header line,0,0,0
comments.json_786,format then the csv file is incorrect,0,0,0
comments.json_787,The csv file passes the verification process it is deemed correct,0,1,1
comments.json_788,Verify Claim Action handles the interaction between a user and the DAOs.,0,0,0
comments.json_789,The  DAO to access the billing table,0,0,0
comments.json_790,The  DAO to access the office visits  DAO,0,0,0
comments.json_791,The bill that we are verifying,0,1,1
comments.json_792,The office visit associated with the bill,0,0,0
comments.json_793,Verify Claim Action simply initializes the instance variables .,0,0,0
comments.json_794,get Bill returns the bill we are handling .,0,0,0
comments.json_795,get OV returns the office visit we are handling .,0,0,0
comments.json_796,deny Claim handles the user choosing to deny the claim .,0,0,0
comments.json_797,approve Claim handles the user choosing to approve the claim .,0,0,0
comments.json_798,View Appt Requests Action,0,0,0
comments.json_799,View Appt Requests Action,0,0,0
comments.json_800,get Appt Requests,0,0,0
comments.json_801,get Num Requests Returns the number of times in the appointment request list,0,0,0
comments.json_802,accept Appt Request,0,0,0
comments.json_803,TODO,0,0,0
comments.json_804,reject Appt Request,0,0,0
comments.json_805,TODO,0,0,0
comments.json_806,construct Message,0,0,0
comments.json_807,View Claims Action handles interaction between user input and the billing  DAO .,0,0,0
comments.json_808,billing Access provides access to the  Billing table,0,0,0
comments.json_809,patient Retriever provides access to the patients table,0,0,0
comments.json_810,View Claims Action simply initializes the  DA Os .,0,0,0
comments.json_811,get Claims returns a list of all the insurance claims .,0,0,0
comments.json_812,get Submitter returns the person who submitted the claim .,0,0,0
comments.json_813,get Date returns the date the bill was submitted .,0,0,0
comments.json_814,Used for the  View  Diagnosis  Statistics page . Can return a list of all  Diagnoses and get diagnosis statistics for a specified Zip code  Diagnosis code  and date range.,0,0,0
comments.json_815,Database access methods for  ICD codes (diagnoses ),0,0,0
comments.json_816,Database access methods for diagnosis information,0,0,0
comments.json_817,ICD  Code for malaria,0,0,0
comments.json_818,ICD  Code for  Influenza,0,0,0
comments.json_819,Constructor for the action . Initializes  DAO fields,0,0,0
comments.json_820,Gets all the diagnosis codes in i Trust and returns them in a list of beans .,0,0,0
comments.json_821,Gets the counts of local and regional diagnoses for the specified input,0,0,0
comments.json_822,Gets the local and regional counts for the specified week and calculates the prior average .,0,0,0
comments.json_823,Determines if an  Influenza  Epidemic is happening,0,0,0
comments.json_824,Calculates the threshold of an influenza epidemic,0,0,0
comments.json_825,Determines whether a  Malaria epidemic is happening,0,0,0
comments.json_826,Find earliest  Malaria  Case . Set calendar 's year to that year,0,0,0
comments.json_827,View Exercise Entry Action .java Version 1 4/5/2015 Copyright notice: none,0,0,0
comments.json_828,Uses the factory to construct  Exercise Entry DAO and  Patient DAO            DAO factory to use            who is currently logged in,0,0,0
comments.json_829,Takes in which patient you want to view the exercise diary for   and then returns all of the exercise dairy entries for that patient. It first checks to ensure that the person requesting the exercise diary is either a patient  or is an HCP with a specialty of fitness expert.            the id of the patient whose exercise diary we want,1,0,1
comments.json_830,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A trainer designated for the provided PID is viewing the diary.,1,0,1
comments.json_831,Gets the total hours and calories burned   sorted by day .            the patient we are looking at         entry in his exercise diary,0,0,0
comments.json_832,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A trainer designated for the provided PID is viewing the diary.,1,0,1
comments.json_833,Returns a list of exercise diary entries between two dates .            the first date            the second date,0,0,0
comments.json_834,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A trainer designated for the provided PID is viewing the diary.,1,0,1
comments.json_835,Month can have 1 or 2 digits   same with day   and year must have 4.,0,0,0
comments.json_836,If it fails to match either of them   throw the form validation exception,0,1,1
comments.json_837,Gets the total hours and calories burned between a given date range   sorted by day .            the first date            the second date            the patient we are looking at         for the patient,0,0,0
comments.json_838,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A trainer designated for the provided PID is viewing the diary.,1,0,1
comments.json_839,Month can have 1 or 2 digits   same with day   and year must have 4.,0,0,0
comments.json_840,If it fails to match either of them   throw the form validation exception,0,1,1
comments.json_841,Handles retrieving beans for view Prescription Records .jsp,0,0,0
comments.json_842,Set up defaults,0,0,0
comments.json_843,Gets a  Patient Bean from an  MID,0,0,0
comments.json_844,Gets the logged in person 's representees,0,0,0
comments.json_845,Returns the prescribing  HCP for a prescription,0,0,0
comments.json_846,Returns all the prescriptions for a given patient,0,0,0
comments.json_847,We need to decide how we want to do this . We can include a check here in getting a food diary to ensure that the person viewing it is either a patient or an HCP with the specialty of 'nutritionist' before letting them get the food diary  or we could break this up into separate classes and separate jsp pages. ViewFoodEntryAction.java Version 1 2/21/2015 Copyright notice: none,1,0,1
comments.json_848,Uses the factory to construct foodentrydao and patientdao            DAO factory to use            who is currently logged in,0,0,0
comments.json_849,Takes in which patient you want to view the food diary for   and then returns all of the food dairy entries for that patient. It first checks to ensure that the person requesting the food diary is either a patient  or is an HCP with a specialty of nutritionist.            the id of the patient whose food diary we want,1,0,1
comments.json_850,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A nutritionist designated for the provided PID is viewing the diary. the Nutritionist must be the designated nutritionist,1,0,1
comments.json_851,Gets the totals of carbs   protein   sugar   calories   sodium   fat   and fiber a user has eaten sorted by day.            the patient we are looking at         entry in his food diary,0,0,0
comments.json_852,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A nutritionist designated for the provided PID is viewing the diary.,1,0,1
comments.json_853,Returns a list of food diary entries between two dates .            the first date            the second date,0,0,0
comments.json_854,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A nutritionist designated for the provided PID is viewing the diary.,1,0,1
comments.json_855,Month can have 1 or 2 digits   same with day   and year must have 4.,0,0,0
comments.json_856,If it fails to match either of them   throw the form validation exception,0,1,1
comments.json_857,Gets the totals of carbs   protein   sugar   calories   sodium   fat   and fiber a user has eaten in a given date range  sorted by day.            the first date            the second date            the patient we are looking at         for the patient,0,0,0
comments.json_858,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A nutritionist designated for the provided PID is viewing the diary.,1,0,1
comments.json_859,Month can have 1 or 2 digits   same with day   and year must have 4.,0,0,0
comments.json_860,If it fails to match either of them   throw the form validation exception,0,1,1
comments.json_861,View Health Records History Action is an action class used for viewing a patient 's health records . Allows a patient or hcp to view a patient's health records dependent on the age. Contains methods that will sort health records by age during the office visit  calculating z scores for health metrics  and calculating percentiles for those z scores.,0,0,0
comments.json_862,The number of months in a year,0,0,0
comments.json_863,The integer for representing a  Male patient,0,0,0
comments.json_864,The integer for representing a  Female patient,0,0,0
comments.json_865,Pounds in a kilogram,0,0,0
comments.json_866,Inches in a centimeter,0,0,0
comments.json_867,The max z score value in the normal distribution table,0,0,0
comments.json_868,The min z score value in the normal distribution table,0,0,0
comments.json_869,Constructor for  View Health Records History Action . Initializes all  DAO field objects with the  DAO Factory that is passed in. Also sets the pid of the patient whose records are to be viewed and saves the logged in user's mid for logging.,0,0,0
comments.json_870,Initializes the  DAO fields by getting them from the  DAO Factory passed in from the constructor,0,0,0
comments.json_871,Gets the patient 's  MID as a long,0,0,0
comments.json_872,Get the patient 's name as a  String,0,0,0
comments.json_873,Gets all of a patient 's health records . Returns an ordered list starting from when the patient is youngest to oldest at the time the health record was taken.,0,0,0
comments.json_874,Log for a patient,0,0,0
comments.json_875,Log for an  HCP,0,0,0
comments.json_876,Get the patient 's date of birth,0,0,0
comments.json_877,Age 3 date,0,0,0
comments.json_878,Age 12 date,0,0,0
comments.json_879,Calculates the percentile based on a z score . Turns the z score into a string that has significant figures to two decimal places. Uses the z score value up to the first decimal digit to get a normal bean from the database. After getting the normal bean  the percentile is obtained from the bean based on the last digit (value from the second decimal place). -1 is returned if there is an error finding the z score in the database.,0,0,0
comments.json_880,Convert the z score into a string rounded to two decimal places,0,0,0
comments.json_881,Get the normal bean for the z score based on the z score value up to the first decimal digit,0,0,0
comments.json_882,If the z score cannot be found in the database   return -1,0,0,0
comments.json_883,Double value for holding the percentile,0,0,0
comments.json_884,Get the percentile based on the last decimal digit value,0,0,0
comments.json_885,If the value is not 1-9 then it is 0,0,0,0
comments.json_886,Multiply the percentile value by 100 to actually get a percent value,0,0,0
comments.json_887,Format the percent to two decimal places,0,0,0
comments.json_888,Return the percentile,0,0,0
comments.json_889,Calculates the z score for a patient 's weight depending on his or her age and sex . References values from the cdc weight statistics table. Takes the L (Box-Cox transformation)  M (median)  and S (generalized coefficient of variation) and calculates the z-score using the following equation: Z = ((X / M) ^ L - 1) / (L  S)  if L != 0 and Z = ln(X / M) / S  if L == 0 where X is the patient's weight in kilograms. After the z score is calculated  it is rounded to two decimal places before it is returned. -999 is also returned if there is no matching CDC stats entry in the database.,0,0,0
comments.json_890,Get the  CDC Stats Bean for a patient 's weight at his or her age,0,0,0
comments.json_891,If there is no matching entry in the  CDC  Stats table then return -999,0,0,0
comments.json_892,Get the weight in kilograms,0,0,0
comments.json_893,Get the z score for the patient 's weight,0,0,0
comments.json_894,Calculates the z score for a patient 's height depending on his or her age and sex . References values from the cdc height statistics table. Takes the L (Box-Cox transformation)  M (median)  and S (generalized coefficient of variation) and calculates the z-score using the following equation: Z = ((X / M) ^ L - 1) / (L  S)  if L != 0 and Z = ln(X / M) / S  if L == 0 where X is the patient's height in centimeters. After the z score is calculated  it is rounded to two decimal places before it is returned. -999 is also returned if there is no matching CDC stats entry in the database.,0,0,0
comments.json_895,Get the  CDC Stats Bean for a patient 's height at his or her age,0,0,0
comments.json_896,If there is no matching entry in the  CDC  Stats table then return -999,0,0,0
comments.json_897,Get the height in centimeters,0,0,0
comments.json_898,Get the z score for the patient 's height,0,0,0
comments.json_899,Calculates the z score for a patient 's head circumference depending on his or her age and sex . References values from the cdc head circumference statistics table. Takes the L (Box-Cox transformation)  M (median)  and S (generalized coefficient of variation) and calculates the z-score using the following equation: Z = ((X / M) ^ L - 1) / (L  S)  if L != 0 and Z = ln(X / M) / S  if L == 0 where X is the patient's head circumference in centimeters. After the z score is calculated  it is rounded to two decimal places before it is returned. -999 is also returned if there is no matching CDC stats entry in the database.,0,0,0
comments.json_900,Get the  CDC Stats Bean for a patient 's head circumference at his or her age,0,0,0
comments.json_901,If there is no matching entry in the  CDC  Stats table then return -999,0,0,0
comments.json_902,Get the head cirumference in centimeters,0,0,0
comments.json_903,Get the z score for the patient 's head circumference,0,0,0
comments.json_904,Calculates the z score for a patient 's bmi depending on his or her age and sex . References values from the cdc bmi statistics table. Takes the L (Box-Cox transformation)  M (median)  and S (generalized coefficient of variation) and calculates the z-score using the following equation: Z = ((X / M) ^ L - 1) / (L  S)  if L != 0 and Z = ln(X / M) / S  if L == 0 where X is the patient's bmi in centimeters. After the z score is calculated  it is rounded to two decimal places before it is returned. -999 is also returned if there is no matching CDC stats entry in the database.,0,0,0
comments.json_905,Get the  CDC Stats Bean for a patient 's  BMI at his or her age,0,0,0
comments.json_906,If there is no matching entry in the  CDC  Stats table then return -999,0,0,0
comments.json_907,Get the bmi of the patient,0,0,0
comments.json_908,Get the z score for the patient 's bmi,0,0,0
comments.json_909,Gets a  CDC Stats Bean based on a patient 's age   sex   and health metric . Reads in a  CDC Stats DAO that determines what database the bean is taken from.,0,0,0
comments.json_910,Integer for holding the patient 's gender,0,0,0
comments.json_911,Get the patient 's gender,0,0,0
comments.json_912,Get the patient 's age,0,0,0
comments.json_913,If the patient 's birthdate equals the office visit date  ,0,0,0
comments.json_914,the patient 's age is 0 months,0,0,0
comments.json_915,Otherwise add 0.5 to the patient 's age in months,0,0,0
comments.json_916,Get the  CDC Stats Bean for a patient 's health metric at his or her age,0,0,0
comments.json_917,If there is no match with the specified age and sex  ,0,0,0
comments.json_918,query again with the age rounded down as a whole number,0,0,0
comments.json_919,Calculates the z score for a patient 's health metric . Takes the  L ( Box - Cox transformation )  M (median )  and S (generalized coefficient of variation) from the passed in CDCStatsBean and calculates the z-score using the following equation: Z = ((X / M) ^ L - 1) / (L  S)  if L != 0 and Z = ln(X / M) / S  if L == 0 where X is the patient's health metric in metric units (Centimeters for height and head circumference. Kilograms for weight). After the z score is calculated  it is rounded to two decimal places before it is returned. (In cm for height and head circumference. In kg for weight),0,0,0
comments.json_920,Get the  L   M   and  S values for a patient 's bmi at his or her age,0,0,0
comments.json_921,Double for holding the z -score,0,0,0
comments.json_922,If  L is 0 then calculate the z score differently,0,0,0
comments.json_923,Round the z score to two decimal places,0,0,0
comments.json_924,Returns the patient 's gender for use in percentile charting .,0,0,0
comments.json_925,Calculates the patient 's age during an office visit . Reads in an office visit  ID and gets its visit date to check against the patient's birthday. Returns the patient's age in months.,0,0,0
comments.json_926,Create int for patient 's age in months,0,0,0
comments.json_927,Get office visit information,0,0,0
comments.json_928,Get the patient 's birthdate,0,0,0
comments.json_929,Split the patient 's birthdate into day   month   and year,0,0,0
comments.json_930,Split the office visit date into day month and year,0,0,0
comments.json_931,Calculate the year   month   and day differences,0,0,0
comments.json_932,Get the patient 's age in months by multiplying the year difference by 12,0,0,0
comments.json_933,and adding the month difference,0,0,0
comments.json_934,If the day difference is negative   subtract a month from the age,0,0,0
comments.json_935,Return the age in months,0,0,0
comments.json_936,Edits the designated personnel  Used by admin /edit Personnel .jsp   staff /edit My Demographics .jsp   editPersonnel.jsp,0,0,0
comments.json_937,calculate Color,0,0,0
comments.json_938,This method will return a list of all of the required procedures currently in the system .,0,0,0
comments.json_939,This method will return a list of all of the required procedures for the age Group passed in .,0,0,0
comments.json_940,This method will return a list of all of the procedures that the patient passed in will need in order to be covered for their age group.,0,0,0
comments.json_941,check to see if the patient is over the age of 5 and 18 respectively,0,0,0
comments.json_942,check to see if the patient was born  BEFORE 1994 and 1957 respectively .,0,0,0
comments.json_943,add the required procedures to the list   checking our controlling variables for extenuating vaccinations,0,0,0
comments.json_944,RETURN  THAT  SHIT,0,0,0
comments.json_945,Get an  HCP 's name from their  MID .,0,0,0
comments.json_946,View Macronutrients Action .java Version 1 4/1/2015 Copyright notice: none Responsible for loading the entries in a patient's food diary  the totals a patient has eaten  and adding a new entry to a patient's food diary,0,0,0
comments.json_947,Macronutrients Bean  Food Entry Bean,0,0,0
comments.json_948,Handles retrieving the log of record accesses for a given user  Used by view Access Log .jsp,0,0,0
comments.json_949,Set up,0,0,0
comments.json_950,Returns a list of  Transaction Beans between the two dates passed as params            the first date            the second date,0,0,0
comments.json_951,get the medical dependents for a signed in user . If the selected user is not the,0,0,0
comments.json_952,signed in user or one of the dependents   then the user doesn 't have access to the log,1,0,1
comments.json_953,TODO,0,0,0
comments.json_954,user has either 0 or 1 DLHCP 's . Get one if exists so it can be filtered from results,0,0,0
comments.json_955,the way the  Date class works   is if you enter more months   or days thanis allowed   it will simply mod it   and add it all together . To make sure itmatches MM/dd/yyyy  I am going to use a Regular Expression,0,0,0
comments.json_956,month can have 1 or 2 digits   same with day   and year must have 4,0,0,0
comments.json_957,if it fails to match either of them   throw the form validation exception,0,1,1
comments.json_958,Returns the date of the first  Transaction in the list passed as a param if the list is not empty otherwise  returns today's date,0,0,0
comments.json_959,Returns the date of the last  Transaction in the list passed as a param if the list is not empty otherwise  returns today's date,0,0,0
comments.json_960,Return a list of patients that pid represents,0,0,0
comments.json_961,Gets a user 's appointments,0,0,0
comments.json_963,This class is responsible for retrieving bills for a patient,0,0,0
comments.json_965,Gets all the unpaid bills for a logged in patient,0,0,0
comments.json_966,Gets all the bills for a logged in patient .,0,0,0
comments.json_967,Get the number of unviewed lab procedures that the current user has .,0,0,0
comments.json_968,Action class for  View My Messages .jsp,0,0,0
comments.json_969,Set up defaults,0,0,0
comments.json_970,Gets all the messages for the logged in user,0,0,0
comments.json_971,Gets all the messages for the logged in user and sorts by ascending time,0,0,0
comments.json_972,Gets all the messages for the logged in user and sorts names in ascending order,0,0,0
comments.json_973,Gets all the messages for the logged in user and sorts name in descending order,0,0,0
comments.json_974,Gets all the sent messages for the logged in user,0,0,0
comments.json_975,Gets all the messages for the logged in user and sorts by ascending time,0,0,0
comments.json_976,Gets all the messages for the logged in user and sorts names in ascending order,0,0,0
comments.json_977,Gets all the messages for the logged in user and sorts name in descending order,0,0,0
comments.json_978,Gets a list of messages for a user based on their filter criteria .,0,0,0
comments.json_979,Check the sender filter field . Exclude if this MessageBean does not match the requested sender  if one is specified.,0,0,0
comments.json_980,Check the subject filter field . Exclude if this MessageBean does not match the requested subject  if one is specified.,0,0,0
comments.json_981,Check the body of the message for certain words . Exclude if this MessageBean if it does not contain those words in the message body.,0,0,0
comments.json_982,Check the body of the message for certain words . Exclude if this MessageBean if it does contain those words in the message body.,0,0,0
comments.json_983,Check the start date filter field . Exclude if this MessageBean was not sent after this date.,0,0,0
comments.json_984,Check the end date filter field . Exclude if this MessageBean was not sent before this date.,0,0,0
comments.json_985,If the message has not been eliminated by any of the filter fields  add it to the new list of messages.,0,0,0
comments.json_986,Gets a patient 's name from their  MID,0,0,0
comments.json_987,Gets a personnel 's name from their  MID,0,0,0
comments.json_988,Set the state of the  Message Bean to read   after it is read by a user.,0,0,0
comments.json_989,TODO,0,0,0
comments.json_990,Get the number of unread messages that the current user has .,0,0,0
comments.json_991,linked To Referral,0,0,0
comments.json_992,get C Cd Messages,0,0,0
comments.json_993,Handles patients viewing their own records  Used by view My Records .jsp,0,0,0
comments.json_994,The number of months in a year,0,0,0
comments.json_995,Set up,0,0,0
comments.json_996,Takes the patient 's representee as a param and returns it as a long if the patient represents the input param            the patient's representee mid,0,0,0
comments.json_997,Returns a  Patient Bean for the currently logged in patient,0,0,0
comments.json_998,Returns a  Patient Bean for the specified  MID,0,0,0
comments.json_999,Returns a  Personnel Bean for the requested  MID,0,0,0
comments.json_1000,Returns a  Patient Bean for the currently logged in patient,0,0,0
comments.json_1001,Returns a list of  Allergy Beans for the currently logged in patient,0,0,0
comments.json_1002,Returns a list of  Parents   Siblings   and  Children of the currently logged in patient,0,0,0
comments.json_1003,Returns a list of  Parents   Siblings   and  Grand  Parents of the currently logged in patient,0,0,0
comments.json_1004,Returns a list of  Health Records for the currently logged in patient,0,0,0
comments.json_1005,Returns a list of  Health Records for the specified family member,0,0,0
comments.json_1006,Returns a list of  Office Visit Beans for all office visits for the currently logged in patient,0,0,0
comments.json_1007,Returns a complete  Office Visit Bean given a visit ID,0,0,0
comments.json_1008,Returns a list of  Patient Beans of all patients the currently logged in patient represents,0,0,0
comments.json_1009,Returns a list of  Patient Beans of all patients the currently logged in patient represents,0,0,0
comments.json_1010,Has a survey been created for this office visit,0,0,0
comments.json_1011,Returns a list of lab procedures,0,0,0
comments.json_1012,Returns all the report requests for the logged in patient,0,0,0
comments.json_1013,Checks to see if family members have high blood pressure,0,0,0
comments.json_1014,Checks to see if family members have high cholesterol,0,0,0
comments.json_1015,Checks to see if family members have diabetes,0,0,0
comments.json_1016,Checks to see if family members have cancer,0,0,0
comments.json_1017,Checks to see if family members have heart disease,0,0,0
comments.json_1018,Checks to see if family members smoke,0,0,0
comments.json_1019,Checks to see if family member is dead   and if so   what their cause of death was,0,0,0
comments.json_1020,Get patient 's (logged in user 's ) age in months by taking the date of viewing the patient 's records and comparing it with the patient's date of birth.,0,0,0
comments.json_1021,Create int for patient 's age in months,0,0,0
comments.json_1022,Get the patient 's birthdate,0,0,0
comments.json_1023,Split the patient 's birthdate into day   month   and year,0,0,0
comments.json_1024,Split the office visit date into day month and year,0,0,0
comments.json_1025,Calculate the year   month   and day differences,0,0,0
comments.json_1026,Get the patient 's age in months by multiplying the year difference by 12,0,0,0
comments.json_1027,and adding the month difference,0,0,0
comments.json_1028,If the day difference is negative   subtract a month from the age,0,0,0
comments.json_1029,Return the age in months,0,0,0
comments.json_1030,Handles retrieving the patient data for a certain  HCP as used by view Telemedicine Data .jsp,0,0,0
comments.json_1031,Constructor,0,0,0
comments.json_1032,Returns a list of  Remote Monitoring Data Beans for the logged in  HCP,0,0,0
comments.json_1033,Returns a list of  Remote Monitoring Data Beans for the logged in  HCP,0,0,0
comments.json_1034,Returns a list of  Remote Monitoring Data Beans for the logged in  HCP based on a certain data type,0,0,0
comments.json_1035,get Patient Data Without Logging,0,0,0
comments.json_1036,returns the patient name,0,0,0
comments.json_1037,Useful to figure out who is monitoring a given patient,0,0,0
comments.json_1038,Action class for  View My Reports .jsp .  Allows the user to see all their reports,0,0,0
comments.json_1039,Set up,0,0,0
comments.json_1040,Returns all the reports for the currently logged in  HCP,0,0,0
comments.json_1041,Adds a report request to the list,0,0,0
comments.json_1042,Returns the requested report,0,0,0
comments.json_1043,Sets the viewed status of the report .  If the report is "viewed " the  HCP must request a new one to see it again .,0,0,0
comments.json_1044,Gets the status of the request,0,0,0
comments.json_1045,purpose,0,0,0
comments.json_1046,View Obstetrics Action is a class to help the  Initialize  Obstetrics  Record page to get all the records that should be displayed on the page (by MID)  and the View Obstetrics Record page to get a record when selected (by OID).,0,0,0
comments.json_1047,obstetrics DAO is the  DAO that retrieves the obstetrics records from the database,0,0,0
comments.json_1048,logged In MID is the  HCP that is logged in .,0,0,0
comments.json_1049,View Obstetrics Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_1050,get Viewable Obstetrics Records By MID returns a list of obstetrics record beans for past obstetrics care,0,0,0
comments.json_1051,get Viewable Obstetrics Records By MID returns a list of obstetrics record beans for past obstetrics care,0,0,0
comments.json_1052,Retrieves a  Obstetrics Record Bean,0,0,0
comments.json_1053,Handles viewing the office visits   prescriptions   and  HCP name for the given ov ID  Used by viewOfficeVisit.jsp,0,0,0
comments.json_1054,The number of months in a year,0,0,0
comments.json_1055,Super class handles validating the logged In Mid and ov ID String            The unique identifier of the office visit as a String.,0,1,1
comments.json_1056,Super class handles validating the pid String and ov ID String . Usually used for representing a patient .            The unique identifier of the office visit as a String.,0,1,1
comments.json_1057,Returns the office visit as an  Office Visit Bean for the ov ID that was initially passed to the constructor,0,0,0
comments.json_1058,Returns the prescriptions associated with the ov ID initially passed to the constructor,0,0,0
comments.json_1059,Returns the  Health Record related to this office visit 's  ID,0,0,0
comments.json_1060,Returns the name of the  HCP for the hcp ID passed as a param,0,0,0
comments.json_1061,Get patient 's age in months by taking the office visit date and comparing it with the patient 's date of birth.,0,0,0
comments.json_1062,Create int for patient 's age in months,0,0,0
comments.json_1063,Get the office visit date,0,0,0
comments.json_1064,Get the patient 's birthdate,0,0,0
comments.json_1065,Split the patient 's birthdate into day   month   and year,0,0,0
comments.json_1066,Split the office visit date into day month and year,0,0,0
comments.json_1067,Calculate the year   month   and day differences,0,0,0
comments.json_1068,Get the patient 's age in months by multiplying the year difference by 12,0,0,0
comments.json_1069,and adding the month difference,0,0,0
comments.json_1070,If the day difference is negative   subtract a month from the age,0,0,0
comments.json_1071,Return the age in months,0,0,0
comments.json_1072,Used for view ophthalmology office visit page (view Ophalmology OV Record .jsp ).,0,0,0
comments.json_1073,ophthalmology OVDAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_1074,logged In MID is the  User that is logged in .,0,0,0
comments.json_1075,logging Action is used to write to the log .,0,0,0
comments.json_1076,Patient DAO for working with patient objects in the database,0,0,0
comments.json_1077,View Ophthalmology OV Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_1078,get Ophthalmology OV By MID returns a list of ophthalmology office visits record beans for past ophthalmology care .,0,0,0
comments.json_1079,Retrieves an  Ophthalmology OV Record Bean for an  HCP .,0,0,0
comments.json_1080,Retrieves an  Ophthalmology OV Record Bean for a  Patient .,0,0,0
comments.json_1081,Retrieves an  Ophthalmology OV Record Bean for  Representee of the dependent .,0,0,0
comments.json_1082,Returns a list of  Patient Beans of all patients the currently logged in patient represents and are a dependent,0,0,0
comments.json_1083,If a  DB Exception occurs print a stack trace and return an empty list,0,0,0
comments.json_1084,Used for viewing ophthalmology office visit requests .,0,0,0
comments.json_1085,ophthalmology OVDAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_1086,View Ophthalmology OV Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_1087,get Ophthalmology Schedule OV By MID returns a list of ophthalmology scheduled office visits record beans for the patient .,0,0,0
comments.json_1088,get Ophthalmology Schedule OV By MID returns a list of ophthalmology scheduled office visits record beans for the doctor .,0,0,0
comments.json_1089,Retrieves an  Ophthalmology Schedule OV Record Bean for a  Patient .,0,0,0
comments.json_1090,Retrieves an  Ophthalmology Schedule OV Record Bean for a  HCP .,0,0,0
comments.json_1091,Used for view ophthalmology office visit page (view Ophalmology Surgery Record .jsp ).,0,0,0
comments.json_1092,ophthalmology Surgery DAO is the  DAO that retrieves the ophthalmology office  visit records from the database,0,0,0
comments.json_1093,logged In MID is the  User that is logged in .,0,0,0
comments.json_1094,logging Action is used to write to the log .,0,0,0
comments.json_1095,View Ophthalmology Surgery Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_1096,get Ophthalmology Surgery By MID returns a list of ophthalmology office visits record beans for past ophthalmology care .,0,0,0
comments.json_1097,Retrieves an  Ophthalmology Surgery Record Bean for an  HCP .,0,0,0
comments.json_1098,View Patient Action is just a class to help the edit demographics page get all the users that should be displayed on the page.,0,0,0
comments.json_1099,patient DAO is the patient DAO that retrieves the users from the database,0,0,0
comments.json_1100,logged In MID is the patient that is logged in .,0,0,0
comments.json_1101,Viewer is the patient bean for the person that is logged in,0,0,0
comments.json_1102,View Pateint Action is the constructor for this action class . It simply initializes the instance variables.,0,0,0
comments.json_1103,get Viewable Pateints returns a list of patient beans that should be viewed by this patient.,0,0,0
comments.json_1104,see if this viewer has updated his information at all   and then add him to the list,0,0,0
comments.json_1105,Retrieves a  Patient Bean for the mid passed in as a  String            the mid for which the PatientBean will be returned,0,0,0
comments.json_1106,Allow a patient to view his patient -specific instructions .,0,0,0
comments.json_1107,Construct a  View Patient Instructions Action for a given patient .,0,0,0
comments.json_1108,Get all office visits for this patient that contain instructions .,0,0,0
comments.json_1109,Get a list of patient instructions for a given office vsiit .,0,0,0
comments.json_1110,Get a map in which to lookup  HCP names from an  HCP id .,0,0,0
comments.json_1111,Action class for ViewPatientOfficeVisitHistory.jsp,0,0,0
comments.json_1112,Set up defaults,0,0,0
comments.json_1113,Adds all the office visits for the logged in  HCP to a list .,0,0,0
comments.json_1114,Create a new visit bean,0,0,0
comments.json_1115,Add patient 's information to the visit,0,0,0
comments.json_1116,Get this patients office visit history,0,0,0
comments.json_1117,If they 've had an office visit previously   get the date of the latest visit,0,0,0
comments.json_1118,The list is ordered  DESC   so the first entry will be the latest,0,0,0
comments.json_1119,The patient hasn 't had an office visit   so set the date to null,0,0,0
comments.json_1120,Get the list of patients an  HCP has had office visits with,0,0,0
comments.json_1121,TODO,0,0,0
comments.json_1122,Returns a  Personnel Bean for the logged in  HCP,0,0,0
comments.json_1123,This class is an action class that sits in between the  JSP and the  DAO  The methods help facilitate functionality for the viewPatientReferrals.jsp,0,0,0
comments.json_1124,Get all referrals for a patient sorted by the given field and in the given direction .            The name of the pseudo-field to sort by.            The direction of the sort.,0,0,0
comments.json_1125,This method returns the number of messages for a given patient that have not been read .,0,0,0
comments.json_1126,This method gets a referral by its id,0,0,0
comments.json_1127,This method updates the referral in the  DAO,0,0,0
comments.json_1128,This method updates the referral in the  DAO,0,0,0
comments.json_1129,This method returns an office visit bean given its id . The purpose is to use the bean in the related JSP to get the office visit date.,0,0,0
comments.json_1130,Handles retrieving personnel beans for a given personnel  Used by view Personnel .jsp,0,0,0
comments.json_1131,Set up defaults,0,0,0
comments.json_1132,Retrieves a  Personnel Bean for the mid passed as a param            the mid for which the PersonnelBean will be returned,0,0,0
comments.json_1133,Returns a  Patient Bean for the currently logged in personnel,0,0,0
comments.json_1134,Handles retrieving beans for view Prescription Records .jsp,0,0,0
comments.json_1135,Set up defaults,0,0,0
comments.json_1136,Gets a  Patient Bean from an  MID,0,0,0
comments.json_1137,Gets the logged in person 's representees,0,0,0
comments.json_1138,Returns the prescribing  HCP for a prescription,0,0,0
comments.json_1139,Returns all the prescriptions for a given patient,0,0,0
comments.json_1140,This action returns a list of patients with a special -diagnosis -history who have the logged in HCP as a DHCP and whose medications are going to expire within seven days.,0,0,0
comments.json_1141,Set up defaults,0,0,0
comments.json_1142,Uses  Patient DAO as a helper class to return a list of patients with a special -diagnosis -history who have the logged in HCP as a DHCP and whose medications are going to expire within seven days.,0,0,0
comments.json_1144,Personnel DAO object for accessing the patients in the database,0,0,0
comments.json_1145,Records Release DAO object for accessing record release requests in the database,0,0,0
comments.json_1146,Auth DAO for determining the type of user the user is,0,0,0
comments.json_1147,Patient DAO for working with patient objects in the database,0,0,0
comments.json_1148,Hospitals DAO for getting hospital objects from the database,0,0,0
comments.json_1149,Health Records DAO for getting health records from the database,0,0,0
comments.json_1150,Long for storing the logged in hcp /uap 's mid,0,0,0
comments.json_1151,Constructor for  Request Records Release Action . Gets and initializes all necessary  DA Os for working with requesting a patient's records.,0,0,0
comments.json_1152,Try to get the doctor 's name with the specified mid,0,0,0
comments.json_1153,If a  DB Exception is thrown   print a stack trace and return a blank name,0,0,0
comments.json_1154,List for holding records release requests,0,0,0
comments.json_1155,List of hospitals that the hcp /uap is associated with,0,0,0
comments.json_1156,Get the logged in user 's role,0,0,0
comments.json_1157,Check the user 's role and get a list of hospitals depending on that,0,0,0
comments.json_1158,Add to the list of records release requests from each associated hospital,0,0,0
comments.json_1159,Get each hospital 's id,0,0,0
comments.json_1160,If there is a  DB Exception return an empty list,0,0,0
comments.json_1161,If the request status is not pending   don 't update,0,0,0
comments.json_1162,Set the request to approved status,0,0,0
comments.json_1163,Update the records release object,0,0,0
comments.json_1164,If a  DB Exception is caught reset the status and return false,0,0,0
comments.json_1165,If the request status is not pending   don 't update,0,0,0
comments.json_1166,Set the request to denied status,0,0,0
comments.json_1167,Update the records release object,0,0,0
comments.json_1168,If a  DB Exception is caught reset the status and return false,0,0,0
comments.json_1169,Get the patient 's mid,0,0,0
comments.json_1170,Get the hospital id of the request,0,0,0
comments.json_1171,List of health records from the requested hospital,0,0,0
comments.json_1172,Get all of the patient 's health records from the specified hospital,0,0,0
comments.json_1173,If a  DB Exception is thrown print a stack trace and return an empty list,0,0,0
comments.json_1174,Action class for ViewReport.jsp,0,0,0
comments.json_1175,Set up defaults,0,0,0
comments.json_1176,Get diagnosis list for the given patient,0,0,0
comments.json_1177,Get procedure list for the given patient,0,0,0
comments.json_1178,Get prescription list for the given patient,0,0,0
comments.json_1179,Get declared  HC Ps list for the given patient,0,0,0
comments.json_1180,Returns a  Personnel Bean when given an  MID,0,0,0
comments.json_1181,Returns a  Paitent Bean when given an  MID,0,0,0
comments.json_1183,Class for viewing the referrals sent by a particular  HCP .,0,0,0
comments.json_1184,Get all sent referrals sorted by the given field and in the given direction.,0,0,0
comments.json_1185,Get a specific referral .,0,0,0
comments.json_1186,Get the patient name associated with the given referral .,0,0,0
comments.json_1187,Get the name of the receiving  HCP associated with the given referral .,0,0,0
comments.json_1188,View Sleep Entry Action .java Version 1 4/6/2015 Copyright notice: none,0,0,0
comments.json_1189,Uses the factory to construct  Sleep Entry DAO and  Patient DAO            DAO factory to use            who is currently logged in,0,0,0
comments.json_1190,Takes in which patient you want to view the sleep diary for   and then returns all of the sleep dairy entries for that patient. It first checks to ensure that the person requesting the sleep diary is either a patient or a HCP.            the id of the patient whose sleep diary we want,1,0,1
comments.json_1191,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A HCP is viewing the diary.,1,0,1
comments.json_1192,Gets the total hours slept   sorted by day .            the patient we are looking at         entry in his sleep diary,0,0,0
comments.json_1193,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A HCP is viewing the diary.,1,0,1
comments.json_1194,Returns a list of sleep diary entries between two dates .            the first date            the second date,0,0,0
comments.json_1195,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A HCP is viewing the diary.,1,0,1
comments.json_1196,Month can have 1 or 2 digits   same with day   and year must have 4.,0,0,0
comments.json_1197,If it fails to match either of them   throw the form validation exception,0,1,1
comments.json_1198,Gets the total hours slept between a given date range   sorted by day .            the first date            the second date            the patient we are looking at         for the patient,0,0,0
comments.json_1199,This nightmare if -statement just checks for two things . Either : 1) The patient is viewing their own diary. 2) A HCP is viewing the diary.,1,0,1
comments.json_1200,Month can have 1 or 2 digits   same with day   and year must have 4.,0,0,0
comments.json_1201,If it fails to match either of them   throw the form validation exception,0,1,1
comments.json_1202,This class is used to handle retrieving survey results from the database .  It also logs the transaction .,0,0,0
comments.json_1203,Set up defaults .,0,0,0
comments.json_1204,Retrieves survey results for a whole hospital .,0,0,0
comments.json_1205,Retrieves survey results for a given zip code .,0,0,0
comments.json_1206,Action class for  View Visited HC Ps .jsp,0,0,0
comments.json_1207,private  Array List < HCP Visit Bean > visits ;,0,0,0
comments.json_1208,Set up defaults,0,0,0
comments.json_1209,Create an  HCP Visit Bean from a given  Personnel Bean and office visit date .,0,0,0
comments.json_1210,Checks to see if a  Personnel Bean matches against a given set of criteria.,0,0,0
comments.json_1211,Get a list of all  HC Ps visited and /or designated by by the current user.  The list can optionally be filtered by the doctor's last name  specialty  or zip code. 				   for  or null or an empty string to accept all doctors. 					an empty string to accept all doctors. 			  string to accept all doctors. 	       been visited or has been designated.,0,0,0
comments.json_1212,Visited  HC Ps in this case includes both  HC Ps visited *and * HC Ps,0,0,0
comments.json_1213,designated by the patient .  These two groups are retrieved in,0,0,0
comments.json_1214,different ways   then combined .,0,0,0
comments.json_1215,get most recent office visit for each provider,0,0,0
comments.json_1216,Get visited  HC Ps .,0,0,0
comments.json_1217,Get all designated  HC Ps .  Because a designated  HCP may have been,0,0,0
comments.json_1218,visited   we will ensure the  HCP is not already in the list .,0,0,0
comments.json_1219,if  HCP is already in visits list   skip here,0,0,0
comments.json_1220,Returns a list of all the visited and /or designated  HC Ps .,0,0,0
comments.json_1221,Given an  HCP 's name   return the corresponding  HCP Visit Bean .,0,0,0
comments.json_1222,Set a given  HCP as undeclared .,0,0,0
comments.json_1223,Set a given  HCP as declared,0,0,0
comments.json_1224,Check to see if a given  HCP is declared,0,0,0
comments.json_1225,Filter the list of  HC Ps by last name   specialty   or zip code .   			    to ignore.,0,0,0
comments.json_1226,Action class which handles zip code related functionality ;,0,0,0
comments.json_1227,private  DAO Factory factory ;,0,0,0
comments.json_1228,private long logged In MID ;,0,0,0
comments.json_1229,private  Personnel DAO personnel DAO ;,0,0,0
comments.json_1230,Constructor for  Zip Code Action,0,0,0
comments.json_1231,Calculates the distance between two  Zip Codes,0,0,0
comments.json_1232,Returns all of the hospitals within the mileage range specified .,0,0,0
comments.json_1233,Gets all the experts within a certain range and with a certain specialty .,0,0,0
comments.json_1234,Takes a parameter map and creates a bean from that map of the appropriate type .,0,0,0
comments.json_1235,The code here is not obvious   but this method should not need rewriting unless a bug is found            typically a request.getParameterMap; also can be a HashMap            an instantiated bean to be loaded. Loaded bean is returned.             Several exceptions are thrown here  so promotion seemed fitting,0,0,0
comments.json_1236,this warning is only suppressed because  Map isn 't parameterized (old  JSP ),0,0,0
comments.json_1237,Java Beans should not have overloaded methods   according to their  API,0,0,0
comments.json_1238,(a stupid limitation !),0,0,0
comments.json_1239,Nevertheless   we should check for it,0,0,0
comments.json_1240,Use an introspector to find all of the get XXX or set XXX   we only want,0,0,0
comments.json_1241,the set XXX,0,0,0
comments.json_1242,if object is null   either it was ignored or empty - just go with,0,0,0
comments.json_1243,bean 's default,0,0,0
comments.json_1244,descriptor 's name is the name of your property ; like,0,0,0
comments.json_1245,first Name,0,0,0
comments.json_1246,only take the first string,0,0,0
comments.json_1247,Skip the setters for enumerations,0,0,0
comments.json_1248,Throw a more informative exception,0,0,0
comments.json_1249,Checks for overloaded methods,0,0,0
comments.json_1250,A bean for storing data about a adverse event based on a drug . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1261,A bean for storing data about  Allergies . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters.to create these easily),0,0,0
comments.json_1262,Default constructor .,0,0,0
comments.json_1263,Returns the description for the allergy .,0,0,0
comments.json_1264,Sets the description for the allergy .,0,0,0
comments.json_1265,Returns the  ND code for the allergy .,0,0,0
comments.json_1266,Sets the  ND code for the allergy .,0,0,0
comments.json_1267,Returns the date the allergy was first found .,0,0,0
comments.json_1268,Sets the date the allergy was first found .,0,0,0
comments.json_1269,Returns the allergy  ID .,0,0,0
comments.json_1270,Sets the allergy  ID .,0,0,0
comments.json_1271,Returns the description of the allergy .,0,0,0
comments.json_1272,Returns the patient  ID .,0,0,0
comments.json_1273,Sets the patient  ID .,0,0,0
comments.json_1274,Returns the date first found as a  String .,0,0,0
comments.json_1289,Returns true if both id 's are equal . Probably needs more advance field by field checking .,0,0,0
comments.json_1290,Appt Request Bean,0,0,0
comments.json_1291,get Requested Appt,0,0,0
comments.json_1292,is Pending,0,0,0
comments.json_1293,is Accepted,0,0,0
comments.json_1294,set Requested Appt,0,0,0
comments.json_1295,set Pending,0,0,0
comments.json_1296,If set Pending (false ) has not been called before using this method   this method will have no effect .,0,0,0
comments.json_1297,Stores information about a bill,0,0,0
comments.json_1347,A bean for storing  CDC statistics data . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1348,Constructs a  CDC Stats Bean with all null values for the fields,0,0,0
comments.json_1349,Gets the gender associated with the cdc statistic,0,0,0
comments.json_1350,Sets the gender for the cdc statistic,0,0,0
comments.json_1351,Gets the age in months,0,0,0
comments.json_1352,Sets the age in months for the cdc statistic,0,0,0
comments.json_1353,Gets the  Box - Cox transformation or  L value,0,0,0
comments.json_1354,Sets the  Box - Cox transformation or  L value,0,0,0
comments.json_1355,Gets the median or the  M value,0,0,0
comments.json_1356,Sets the median or the  M value,0,0,0
comments.json_1357,Gets the generalized coefficient of variation or  S value,0,0,0
comments.json_1358,Sets the generalized coefficient of variation or  S  Value,0,0,0
comments.json_1359,A bean for storing data about  Diagnosis . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1360,diagnosis Bean,0,0,0
comments.json_1362,diagnoses Bean,0,0,0
comments.json_1363,diagnoses Bean,0,0,0
comments.json_1364,Gets the  ICD  Code for this procedure,0,0,0
comments.json_1365,set ICD Code,0,0,0
comments.json_1366,get Classification,0,0,0
comments.json_1367,get Classification,0,0,0
comments.json_1368,Gets the  ICD  Description for this procedure,0,0,0
comments.json_1369,set Description,0,0,0
comments.json_1370,get Formatted Description,0,0,0
comments.json_1371,Optional - for use with editing an office visit,0,0,0
comments.json_1372,set Ov Diagnosis ID,0,0,0
comments.json_1373,set Visit ID,0,0,0
comments.json_1374,get Visit ID,0,0,0
comments.json_1375,set URL,0,0,0
comments.json_1376,get URL,0,0,0
comments.json_1377,A bean for storing data about diagnosis counts A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1378,The local zip code analyzed,0,0,0
comments.json_1379,The diagnosis count for the zip code,0,0,0
comments.json_1380,The diagnosis count for the region,0,0,0
comments.json_1381,The beginning of the time period covered,0,0,0
comments.json_1382,The end of the time period covered,0,0,0
comments.json_1383,Constructor for an empty bean,0,0,0
comments.json_1384,Constructor for the bean . Accepts stats and zip code,0,0,0
comments.json_1385,Constructor for the bean . Accepts stats and zip code,0,0,0
comments.json_1386,Getter for  Zip code,0,0,0
comments.json_1387,Setter for  Zip code,0,0,0
comments.json_1388,Getter for  Zip code count,0,0,0
comments.json_1389,Setter for  Zip code count,0,0,0
comments.json_1390,Getter for  Region count,0,0,0
comments.json_1391,Setter for  Region count,0,0,0
comments.json_1392,Getter for  Start  Date,0,0,0
comments.json_1393,Setter for  Start  Date,0,0,0
comments.json_1394,Getter for  End  Date,0,0,0
comments.json_1395,Setter for the  End  Date,0,0,0
comments.json_1396,TODO  Auto -generated catch block,0,0,0
comments.json_1397,A bean for storing data about a message from one user to another . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1404,A bean for storing data about  Fake  Emails . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1405,An abstract parent for  Wellness  Diary beans .,0,0,0
comments.json_1406,Exercise Entry Bean .java  Version 1 4/2/2015 Copyright notice : none  Contains all of the information for an entry into the Exercise Diary.,0,0,0
comments.json_1407,Unique  Primary key so entries can be edited and deleted,0,0,0
comments.json_1408,The  Date this exercise was performed,0,0,0
comments.json_1409,Was the exercise cardio or weights ?,0,0,0
comments.json_1410,The name of the exercise .,0,0,0
comments.json_1411,How many hours were spent exercising ?,0,0,0
comments.json_1412,How many calories were burned ?,0,0,0
comments.json_1413,If we 're weight training   how many sets were performed ?,0,0,0
comments.json_1414,If we 're weight training   how many reps were in each set ?,0,0,0
comments.json_1415,The  MID of the user this exercise entry belongs to,0,0,0
comments.json_1416,Entry ID of the label belonging to this entry,0,0,0
comments.json_1417,Returns the id of this entry so it can be edited /deleted .,0,0,0
comments.json_1418,Sets the id of this entry            the unique id of a exercise entry,0,0,0
comments.json_1419,Returns a string representation of when the exercise was performed          performed,0,0,0
comments.json_1420,Parses the str Date to produce a date in the format  MM /dd /yyyy,0,0,0
comments.json_1421,Sets the date as a string            when the exercise was performed,0,0,0
comments.json_1422,Which type of exercise was performed ?,0,0,0
comments.json_1423,Sets the exercise type            what type of exercise was it,0,0,0
comments.json_1425,the strName to set,0,0,0
comments.json_1427,the hoursWorked to set,0,0,0
comments.json_1429,the caloriesBurned to set,0,0,0
comments.json_1431,the numSets to set,0,0,0
comments.json_1433,the numReps to set,0,0,0
comments.json_1434,The patient that performed this exercise,0,0,0
comments.json_1435,Patient that performed this exercise            patient id of who performed this exercise,0,0,0
comments.json_1436,Label of this meal,0,0,0
comments.json_1437,Label of this meal,0,0,0
comments.json_1438,A bean for storing data about  Family  Members . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1439,Flags Bean represents a flag .,0,0,0
comments.json_1440,the max,0,0,0
comments.json_1441,the min,0,0,0
comments.json_1442,the max,0,0,0
comments.json_1443,the min,0,0,0
comments.json_1444,the weight bounds,0,0,0
comments.json_1445,minimum,0,0,0
comments.json_1446,maximum,0,0,0
comments.json_1447,twins minimum,0,0,0
comments.json_1448,twins maximum,0,0,0
comments.json_1449,Returns the  FID,0,0,0
comments.json_1450,Sets the  FID,0,0,0
comments.json_1451,Returns the  MID,0,0,0
comments.json_1452,Sets the  MID,0,0,0
comments.json_1453,Returns the flag enum value,0,0,0
comments.json_1454,Sets the flag enum value,0,0,0
comments.json_1455,Returns true if the flag is set,0,0,0
comments.json_1456,Sets the flag boolean value,0,0,0
comments.json_1457,Returns the pregnancy  ID,0,0,0
comments.json_1458,Sets the pregnancy  ID,0,0,0
comments.json_1459,Food Entry Bean .java Version 1 2/21/2015 Copyright notice: none Contains all of the information for an entry into the Food Diary.,0,0,0
comments.json_1460,Unique  Primary key so entries can be edited and deleted,0,0,0
comments.json_1461,The  Date this food was eaten,0,0,0
comments.json_1462,Which meal this was ( Lunch   Dinner   Snack   Breakfast ),0,0,0
comments.json_1463,The name of the food .,0,0,0
comments.json_1464,How many servings,0,0,0
comments.json_1465,How many calories per serving,0,0,0
comments.json_1466,How many grams of fat,0,0,0
comments.json_1467,How many milligrams of sodium,0,0,0
comments.json_1468,How many grams of carbs,0,0,0
comments.json_1469,How many grams of sugar,0,0,0
comments.json_1470,How many grams of fiber,0,0,0
comments.json_1471,How many grams of protein,0,0,0
comments.json_1472,The  MID of the user this  Food  Entry belongs to,0,0,0
comments.json_1473,Entry ID of the label belonging to this entry,0,0,0
comments.json_1474,Returns the id of this entry so it can be edited /deleted .,0,0,0
comments.json_1475,Sets the id of this entry,0,0,0
comments.json_1476,Returns a string representation of when the food was eaten,0,0,0
comments.json_1477,Parses the date Eaten Str to produce a date in the format MM/dd/yyyy,0,0,0
comments.json_1478,Sets the date Eaten as a string,0,0,0
comments.json_1479,Which type of meal ( Breakfast   Lunch   Snack   Dinner ) was eaten,0,0,0
comments.json_1480,Sets the meal type,0,0,0
comments.json_1481,What was the name of the food,0,0,0
comments.json_1482,Set the name of the food,0,0,0
comments.json_1483,How many servings were eaten,0,0,0
comments.json_1484,Set the number of servings,0,0,0
comments.json_1485,How many calories per serving were eaten,0,0,0
comments.json_1486,How many calories were eaten,0,0,0
comments.json_1487,The number of grams of fat per serving,0,0,0
comments.json_1488,How many grams of fat per serving,0,0,0
comments.json_1489,The  number of milligrams of sodium per serving,0,0,0
comments.json_1490,Number of milligrams of sodium per serving,0,0,0
comments.json_1491,Number of grams of carbs per serving,0,0,0
comments.json_1492,Number of grams of carbs per serving,0,0,0
comments.json_1493,Number of grams of sugar per serving,0,0,0
comments.json_1494,Number of grams of sugar per serving,0,0,0
comments.json_1495,Number of grams of fiber per serving,0,0,0
comments.json_1496,Number of grams of fiber per serving,0,0,0
comments.json_1497,The number of grams of protein per serving,0,0,0
comments.json_1498,Number of grams of protein per serving,0,0,0
comments.json_1499,The patient that ate this meal,0,0,0
comments.json_1500,Patient that ate this meal,0,0,0
comments.json_1501,Label of this meal,0,0,0
comments.json_1502,Label of this meal,0,0,0
comments.json_1503,A form to contain data coming from editing an office visit . A form is a bean  kinda. You could say that it's a form of a bean :) Think of a form as a real-life administrative form that you would fill out to get something done  not necessarily making sense by itself.,0,0,0
comments.json_1506,we need to use a string because there is a bean builder class that only uses strings as parameters.,0,0,0
comments.json_1507,A form to contain data coming from editing a prescription for an office visit . A form is a bean  kinda. You could say that it's a "form" of a bean :) Think of a form as a real-life administrative form that you would fill out to get something done  not necessarily making sense by itself.,0,0,0
comments.json_1522,A form to contain data coming from editing a health record . A form is a bean  kinda. You could say that it's a form of a bean :) Think of a form as a real-life administrative form that you would fill out to get something done  not necessarily making sense by itself.,0,0,0
comments.json_1523,A form to contain data coming from reminding a user about an upcoming office visit . A form is a bean  kinda. You could say that it's a form of a bean :) Think of a form as a real-life administrative form that you would fill out to get something done  not necessarily making sense by itself.,0,0,0
comments.json_1524,Keep similar flags next to each other,0,0,0
comments.json_1531,A bean for storing data about the diagnosis given by an  HCP . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1532,A mini -bean to pass data between view Prescription Records .jsp and report Adverse Event .jsp A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1537,A bean for storing data about a visit with an  HCP . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1540,A bean for storing health record data . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1541,Note that this is a simplistic view . See the  Wikipedia article on cholesterol .,0,0,0
comments.json_1542,Rounds the height off here because  My SQL won 't return the *exact * value you put in it,0,0,0
comments.json_1543,Returns the  BMI of the health record .,0,0,0
comments.json_1544,Computes the  BMI for a height /weight pair,0,0,0
comments.json_1545,Calculates the  BMI based on current values for height and weight .,0,0,0
comments.json_1546,A bean for storing data about a hospital . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1547,Unique  Primary key so entries can be edited and deleted,0,0,0
comments.json_1548,The  MID of the user this  Food  Entry belongs to,0,0,0
comments.json_1549,Returns the id of this entry so it can be edited /deleted .,0,0,0
comments.json_1550,Sets the id of this entry,0,0,0
comments.json_1551,The patient that ate this meal,0,0,0
comments.json_1552,Patient that ate this meal,0,0,0
comments.json_1553,A bean for storing data about a lab procedure . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1554,Unique 10-digit number that does not start with 9,0,0,0
comments.json_1555,Unique identifier for a laboratory procedure of a patient,0,0,0
comments.json_1556,Digits of the format nnnnn -n,0,0,0
comments.json_1557,One of ( NOT  YET  RECEIVED   PENDING   COMPLETED ),0,0,0
comments.json_1558,Up to 500 alphanumeric characters,0,0,0
comments.json_1559,Up to 500 alphanumeric characters,0,0,0
comments.json_1560,Office  Visit ID 	 Identifier that specifies the office visit in which the laboratory procedure was ordered,0,0,0
comments.json_1561,Date / Time of last status update 	 Timestamp,0,0,0
comments.json_1562,permission granted by lhcp who ordered test : "ALLOWED"  "RESTRICTED",0,0,0
comments.json_1563,The assigned  Lab  Tech  ID,0,0,0
comments.json_1564,This is the priority of the  Lab  Procedure (from 1-3),0,0,0
comments.json_1565,Whether or not a patient has viewed the lab procedure,0,0,0
comments.json_1566,The result as a numerical value .  Stored as a string to ensure accuracy . The number may have an optional sign and units  then one of the following formats: 		DIGIT+ (unit)				(one or more digits)      DIGIT+ . DIGIT (unit)		(one or more digits  a decimal point  and zero or more digits)      . DIGIT+ (unit)			(a decimal point and one or more digits),0,0,0
comments.json_1567,The units for the results,0,0,0
comments.json_1568,The upper bound of the confidence interval .,0,0,0
comments.json_1569,The lower bound of the confidence interval .,0,0,0
comments.json_1570,Unique 10-digit number that does not start with 9,0,0,0
comments.json_1571,Unique 10-digit number that does not start with 9,0,0,0
comments.json_1572,Unique identifier for a laboratory procedure of a patient,0,0,0
comments.json_1573,Unique identifier for a laboratory procedure of a patient,0,0,0
comments.json_1574,Digits of the format nnnnn -n,0,0,0
comments.json_1575,Digits of the format nnnnn -n,0,0,0
comments.json_1576,One of ( NOT  YET  RECEIVED   PENDING   COMPLETED ),0,0,0
comments.json_1577,One of ( NOT  YET  RECEIVED   PENDING   COMPLETED ),0,0,0
comments.json_1578,Up to 500 alphanumeric characters,0,0,0
comments.json_1579,Up to 500 alphanumeric characters,0,0,0
comments.json_1580,Up to 500 alphanumeric characters,0,0,0
comments.json_1581,Up to 500 alphanumeric characters,0,0,0
comments.json_1583,Get the numerical result as a double .  If the result is blank or null   NaN is returned.,0,0,0
comments.json_1586,Get the upper bound as a double .  If the result is blank or null   NaN is returned.,0,0,0
comments.json_1589,Get the lower bound as a double .  If the result is blank or null   NaN is returned.,0,0,0
comments.json_1591,Office  Visit ID 	 Identifier that specifies the office visit in which the laboratory procedure was ordered,0,0,0
comments.json_1592,Office  Visit ID 	 Identifier that specifies the office visit in which the laboratory procedure was ordered,0,0,0
comments.json_1593,permission granted by lhcp who ordered test : "ALLOWED"  "RESTRICTED",0,0,0
comments.json_1594,permission granted by lhcp who ordered test : "ALLOWED"  "RESTRICTED",0,0,0
comments.json_1595,sets the status to " In transit ",0,0,0
comments.json_1596,sets the status to " Received ",0,0,0
comments.json_1597,sets the status to " Testing ",0,0,0
comments.json_1598,This method sets the lab technicians  ID,0,0,0
comments.json_1599,Gets the lab techs  ID,0,0,0
comments.json_1600,Sets the priority of the lab procedure,0,0,0
comments.json_1601,Gets the priority of the lab procedure,0,0,0
comments.json_1602,Returns whether or not the patient has viewed the lab procedure,0,0,0
comments.json_1603,Sets whether or not a patient has viewed the lab procedure . Cannot be true until status is  Completed,0,0,0
comments.json_1604,A loader for  Adverse Event Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1605,A loader for  Allergy Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1610,This interface helps enforce the paradigm of what should be contained in a loader . The generic type <T> specifies the type of bean that the loader is responsible for extacting from a result set.,0,0,0
comments.json_1611,Loads a list of the bean of type  T from a result set .  Typically makes iterated calls to loadSingle.,0,0,0
comments.json_1612,Contains the instructions for mapping the rows in this java .sql . Result Set into beans of type <T>.,0,0,0
comments.json_1613,Used for an insert or update   this method contains the instructions for mapping the fields within a bean of type T into a prepared statement which modifies the appropriate table.,0,0,0
comments.json_1614,load List simply takes a  Result Set from a query to the  Billing table   and then it creates a list of BillingBeans from it.,0,0,0
comments.json_1615,load Single does the heavy lifting for the load List method . I am not really sure why this method is public. Preconditions: The ResultSet must already be on an actual entry in the set.,0,0,0
comments.json_1616,Just go through all the billing bean stuff and initialize the,0,0,0
comments.json_1617,bean that was just created .,0,0,0
comments.json_1618,load Parameters is used to insert the values of a bean into a pepared statement . This version of loadParameters assumes that the values in the prepared statement are in the same order as in the createTables.sql file for billing.,0,0,0
comments.json_1619,Just run through everything in the bean   and set it to the,0,0,0
comments.json_1620,pepared statement,0,0,0
comments.json_1621,A loader for  Diagnosis Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1622,A loader for  Medication Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1623,A loader for  Override Reason Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1624,A loader for  Fake  Emails . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1625,Exercise Entry Loader .java Version 1 2/21/2015 Copyright notice: none A loader for entries into the Exercise Diary (ExerciseEntry's). Loads information to/from beans using PreparedStatements and ResultSets.,0,0,0
comments.json_1626,Returns the list of  Exercise entries for a patient,0,0,0
comments.json_1627,Loads a single exercise entry from a result set,0,0,0
comments.json_1628,Loads the values of the exercise entry into the prepared statement,0,0,0
comments.json_1629,A loader for  Family Member Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1630,A loader for  Obstetrics Record Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1631,load List,0,0,0
comments.json_1632,Loads the  FID   MID   and flag value from the result set into the bean .,0,0,0
comments.json_1633,load Single,0,0,0
comments.json_1634,load Parameters Sets MID  FID (which is auto-incremented later by the table)  and FlagValue. Since the only time this will be called is for putting things into the table  it is reasonable to assume that we want the flagged value to be true.,0,0,0
comments.json_1635,Food Entry Loader .java Version 1 2/21/2015 Copyright notice: none A loader for entries into the Food Diary (FoodEntry's). Loads information to/from beans using PreparedStatements and ResultSets.,0,0,0
comments.json_1636,Returns the list of  Food entries for a patient,0,0,0
comments.json_1637,Loads a single food entry from a result set,0,0,0
comments.json_1638,Loads the values of the food entry into the prepared statement,0,0,0
comments.json_1639,A loader for  Health Records . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1640,A loader for  Hospital Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1641,Returns the list of labels for a patient,0,0,0
comments.json_1642,Loads a single food entry from a result set,0,0,0
comments.json_1643,Loads the values of the food entry into the prepared statement,0,0,0
comments.json_1644,A loader for  Lab Procedure Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1645,A loader for  LOINC Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1646,Macronutrients Loader .java Version 1 03/31/2015 Copyright notice: none A loader for entries into Macronutrients (personalhealthinformation  patients). Loads information to/from beans using PreparedStatements and ResultSets.,0,0,0
comments.json_1647,Returns the list of  Food entries for a patient,0,0,0
comments.json_1648,Loads a single food entry from a result set,0,0,0
comments.json_1649,Some sort of database issue getting the results of the query,0,0,0
comments.json_1650,A loader for  Medication Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1651,A loader for  Message Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1652,A loader for  Obstetrics Record Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1653,load List,0,0,0
comments.json_1654,totally fine . It just means it wasn 't set in the record we grabbed   so don 't worry .,0,0,0
comments.json_1655,totally fine . It just means it wasn 't set in the record we grabbed   so don 't worry .,0,0,0
comments.json_1656,this one   however   unlike the others above   should throw an  NPE if it gets through because  EVERY record has this one set,0,0,0
comments.json_1657,load Single,0,0,0
comments.json_1658,load Parameters,0,0,0
comments.json_1659,A loader for  Office Visit Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1660,A loader for the operational profile . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1661,A loader for  Ophthalmology Diagnosis Bean . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1662,A loader for  Ophthalmology OV Record Bean . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1663,Returns a list of beans with data from a  Result Set .,0,0,0
comments.json_1664,Internal method used to load results into beans from  Result Sets .,0,0,0
comments.json_1665,Takes the first result out of a  Result Set and returns a bean with that data in it .,0,0,0
comments.json_1666,Loads values into the parameters of a prepared Statement from the given  Ophthalmology OV Record Bean .,0,0,0
comments.json_1667,A loader for  Ophthalmology Schedule OV Record Bean . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1668,Returns a list of beans with data from a  Result Set .,0,0,0
comments.json_1669,Internal method used to load results into beans from  Result Sets .,0,0,0
comments.json_1670,Takes the first result out of a  Result Set and returns a bean with that data in it .,0,0,0
comments.json_1671,Loads values into the parameters of a prepared Statement from the given  Ophthalmology OV Record Bean .,0,0,0
comments.json_1672,A loader for  Ophthalmology Surgery Record Bean . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1673,Returns a list of beans with data from a  Result Set .,0,0,0
comments.json_1674,Internal method used to load results into beans from  Result Sets .,0,0,0
comments.json_1675,Takes the first result out of a  Result Set and returns a bean with that data in it .,0,0,0
comments.json_1676,Loads values into the parameters of a prepared Statement from the given  Ophthalmology Surgery Record Bean .,0,0,0
comments.json_1677,A loader for  Medication Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1679,A loader for  Patient Instructions Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1684,A loader for  Patient Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1685,load List,0,0,0
comments.json_1686,load Single,0,0,0
comments.json_1687,load Single History,0,0,0
comments.json_1688,load Parameters,0,0,0
comments.json_1689,TODO,0,0,0
comments.json_1690,A loader for  Personnel Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1691,A loader for  Prescription Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1692,A loader for  Prescription Report Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1693,A loader for  Procedure Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1694,A loader for  Referral Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1695,ERIC : fixed to correct for the mysql database bug plaguing java 1.5,0,0,0
comments.json_1696,A loader for  Remote Monitoring Data Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1697,A loader for  Remote Monitoring Data Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1698,A loader for  Report Request Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1699,Loads a  Result Set into a number of  Required Procedures Bean objects automatically .,0,0,0
comments.json_1700,Create a new bean loader object .,0,0,0
comments.json_1701,Loads a list of  Required Procedures Bean objects from a specified  Result Set .,0,0,0
comments.json_1702,Loads a single  Required Procedures Bean object from the specified  Result Set .,0,0,0
comments.json_1703,Loads the parameters for a specified  Required Procedures Bean into a specified  Prepared Statement .,0,0,0
comments.json_1705,To load information to /from the reviews table into /from  Reviews Beans .,0,0,0
comments.json_1706,From a  Result Set input param   return a list of loaded  Reviews Beans .,0,0,0
comments.json_1707,Reviews Beans are built and returned   when possible from info in ResultSet.,0,0,0
comments.json_1708,We may decide to implement this later but for now   every call to here returns null .,0,0,0
comments.json_1709,Sleep Entry Loader .java Version 1 4/6/2015 Copyright notice: none A loader for entries into the Sleep Diary (SleepEntry's). Loads information to/from beans using PreparedStatements and ResultSets.,0,0,0
comments.json_1710,Returns the list of  Sleep entries for a patient,0,0,0
comments.json_1711,Loads a single sleep entry from a result set,0,0,0
comments.json_1712,Loads the values of the sleep entry into the prepared statement,0,0,0
comments.json_1713,A loader for  Survey Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1714,A loader for  Survey Result Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1715,A loader for  Transaction Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1716,A loader for  Referral Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1717,ERIC : fixed to correct for the mysql database bug plaguing java 1.5,0,0,0
comments.json_1718,A loader for  Visit Reminder Return Forms . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1719,load List,0,0,0
comments.json_1720,load Single,0,0,0
comments.json_1721,load Parameters,0,0,0
comments.json_1722,A loader for  Ward Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1723,A loader for  Zip Code Beans . Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.,0,0,0
comments.json_1724,Loads a list of  Zip Code Beans,0,0,0
comments.json_1725,Loads a single result set into a zip code bean .,0,0,0
comments.json_1727,A bean for storing data about  Lab  Procedure  Codes . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1728,Macronutrients Bean .java Version 1 03/31/2015 Copyright notice: none Contains all of the information for an entry into the Food Diary.,0,0,0
comments.json_1729,height,0,0,0
comments.json_1730,weight,0,0,0
comments.json_1731,age,0,0,0
comments.json_1732,Mifflin -st  Jeor,0,0,0
comments.json_1733,The  MID of the user this  Food  Entry belongs to,0,0,0
comments.json_1734,Get height of the patient,0,0,0
comments.json_1735,Set patient height,0,0,0
comments.json_1736,Mifflin - St  Jeor  Value,0,0,0
comments.json_1737,Calculate  Mifflin - St . Jeor,0,0,0
comments.json_1738,A medication is the same thing as an  ND code - it 's like " Aspirin ". A medication is not associated with an,0,0,0
comments.json_1739,Gets the  ND  Code for this procedure,0,0,0
comments.json_1740,Gets the  ND  Description for this procedure,0,0,0
comments.json_1741,A bean for storing data about a message from one user to another . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1742,Gets the  MI Ds of the recipients for this  Message,0,0,0
comments.json_1743,Sets the  MI Ds of the recipients for this  Message,0,0,0
comments.json_1744,Gets the  MID of the sender for this message,0,0,0
comments.json_1745,Sets the  MID of the sender for this message,0,0,0
comments.json_1746,Gets the subject of this message,0,0,0
comments.json_1747,Sets the subject of this message,0,0,0
comments.json_1748,Gets the body of this message,0,0,0
comments.json_1749,Sets the body of this message,0,0,0
comments.json_1750,Gets the time for this message,0,0,0
comments.json_1751,Sets the time for this message,0,0,0
comments.json_1752,Gets read for this message,0,0,0
comments.json_1753,Sets read for this message,0,0,0
comments.json_1754,A bean for storing normal values . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1755,Constructs a  Normal Bean object with null fields,0,0,0
comments.json_1756,Gets the z value,0,0,0
comments.json_1757,Sets the z value,0,0,0
comments.json_1758,Gets the .00 value,0,0,0
comments.json_1759,Sets the .00 value,0,0,0
comments.json_1760,Gets the .01 value,0,0,0
comments.json_1761,Sets the .01 value,0,0,0
comments.json_1762,Gets the .02 value,0,0,0
comments.json_1763,Sets the .02 value,0,0,0
comments.json_1764,Gets the .03 value,0,0,0
comments.json_1765,Sets the .03 value,0,0,0
comments.json_1766,Gets the .04 value,0,0,0
comments.json_1767,Sets the .04 value,0,0,0
comments.json_1768,Gets the .05 value,0,0,0
comments.json_1769,Sets the .05 value,0,0,0
comments.json_1770,Gets the .06 value,0,0,0
comments.json_1771,Sets the .06 value,0,0,0
comments.json_1772,Gets the .07 value,0,0,0
comments.json_1773,Sets the .07 value,0,0,0
comments.json_1774,Gets the .08 value,0,0,0
comments.json_1775,Sets the .08 value,0,0,0
comments.json_1776,Gets the .09 value,0,0,0
comments.json_1777,Sets the .09 value,0,0,0
comments.json_1778,A bean for storing data about an office visit at the hospital . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1783,For use  ONLY by  DA Os setters and getters method,0,0,0
comments.json_1784,A bean for storing operational profile data . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1785,A bean for storing data about  Diagnosis . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1786,diagnosis Bean,0,0,0
comments.json_1787,Ophthalmology Diagnosis Bean,0,0,0
comments.json_1788,Gets the  ICD  Code for this procedure,0,0,0
comments.json_1789,set ICD Code,0,0,0
comments.json_1790,get Classification,0,0,0
comments.json_1791,Gets the  ICD  Description for this procedure,0,0,0
comments.json_1792,set Description,0,0,0
comments.json_1793,get Formatted Description,0,0,0
comments.json_1794,Optional - for use with editing an office visit,0,0,0
comments.json_1795,set Op Diagnosis ID,0,0,0
comments.json_1796,set Visit ID,0,0,0
comments.json_1797,get Visit ID,0,0,0
comments.json_1798,set URL,0,0,0
comments.json_1799,get URL,0,0,0
comments.json_1800,Bean for  Ophthalmology  Office  Visits . Holds all of the data needed for an Ophthalmology Office Visit.,0,0,0
comments.json_1801,The mid of the user .,0,0,0
comments.json_1802,The  Ophthalmology office visit id .,0,0,0
comments.json_1803,The date of the  Ophthalmology office visit .,0,0,0
comments.json_1804,The last name of the optometrist .,0,0,0
comments.json_1805,The first name of the optometrist .,0,0,0
comments.json_1806,The visual acuity numerator for the  OD .,0,0,0
comments.json_1807,The visual acuity denumerator for the  OS .,0,0,0
comments.json_1808,The visual acuity numerator for the  OD .,0,0,0
comments.json_1809,The visual acuity denumerator for the  OS .,0,0,0
comments.json_1810,The sphere value for the  OD .,0,0,0
comments.json_1811,The sphere value for the  OS .,0,0,0
comments.json_1812,The cylinder value for the  OD .,0,0,0
comments.json_1813,The cylinder value for the  OS .,0,0,0
comments.json_1814,The axis value for the  OD .,0,0,0
comments.json_1815,The axis value for the  OS .,0,0,0
comments.json_1816,The add value for the  OD .,0,0,0
comments.json_1817,The add value for the  OS .,0,0,0
comments.json_1818,Getter for the mid value .,0,0,0
comments.json_1819,Set the mid value .,0,0,0
comments.json_1820,Getter for the oid value .,0,0,0
comments.json_1821,Set the oid value .,0,0,0
comments.json_1822,Getter for the visit Date as a  Date object .,0,0,0
comments.json_1823,If it can 't be parsed   return null .,0,0,0
comments.json_1824,Getter for the visit Date as a string .,0,0,0
comments.json_1825,Set the visit Date value,0,0,0
comments.json_1826,Getter for the last name of the optometrist .,0,0,0
comments.json_1827,Set the last name of the optometrist .,0,0,0
comments.json_1828,Getter for the first name of the optometrist .,0,0,0
comments.json_1829,Set the first name of the optometrist .,0,0,0
comments.json_1830,Getter for the visual acuity numerator value for the  OD .,0,0,0
comments.json_1831,Set the visual acuity numerator value for the  OD .,0,0,0
comments.json_1832,Getter for the visual acuity denumerator value for the  OD .,0,0,0
comments.json_1833,Set the visual acuity denumerator value for the  OD .,0,0,0
comments.json_1834,Getter for the visual acuity numerator value for the  OS .,0,0,0
comments.json_1835,Set the visual acuity numerator value for the  OS .,0,0,0
comments.json_1836,Getter for the visual acuity denumerator value for the  OS .,0,0,0
comments.json_1837,Set the visual acuity denumerator value for the  OS .,0,0,0
comments.json_1838,Getter for the sphere  OD value .,0,0,0
comments.json_1839,Set the sphere  OD value .,0,0,0
comments.json_1840,Getter for the sphere  OS value .,0,0,0
comments.json_1841,Set the sphere  OS value .,0,0,0
comments.json_1842,Getter for the cylinder  OD value .,0,0,0
comments.json_1843,Set the cylinder  OD value .,0,0,0
comments.json_1844,Getter for the cylinder  OS value .,0,0,0
comments.json_1845,Set the cylinder  OS value .,0,0,0
comments.json_1846,Getter for the axis  OD value .,0,0,0
comments.json_1847,Set the axis  OD value .,0,0,0
comments.json_1848,Getter for the axis  OS value .,0,0,0
comments.json_1849,Set the axis  OS value .,0,0,0
comments.json_1850,Getter for the add  OD value .,0,0,0
comments.json_1851,Set the add  OD value .,0,0,0
comments.json_1852,Getter for the add  OS value .,0,0,0
comments.json_1853,Set the add  OS value .,0,0,0
comments.json_1854,Method used to compute the hashcode for a  Ophthalmology OV Record Bean .,0,0,0
comments.json_1855,Method used to determine if  Ophthalmology OV Record Beans are equal .,0,0,0
comments.json_1856,Creates a string representation of this object .,0,0,0
comments.json_1857,Bean for  Scheduled  Ophthalmology  Office  Visits . Holds all of the data needed for a scheduled Ophthalmology Office Visit.,0,0,0
comments.json_1858,The mid of the patient .,0,0,0
comments.json_1859,The mid of the doctor .,0,0,0
comments.json_1860,The scheduled  Ophthalmology office visit id .,0,0,0
comments.json_1861,The time of the scheduled  Ophthalmology office visit .,0,0,0
comments.json_1862,The last name of the optometrist .,0,0,0
comments.json_1863,The first name of the optometrist .,0,0,0
comments.json_1864,The comment attached to the office visit request .,0,0,0
comments.json_1865,The status of the requested ophthalmology office visit .,0,0,0
comments.json_1866,Getter for the patientmid value .,0,0,0
comments.json_1867,Set the patientmid value .,0,0,0
comments.json_1868,Getter for the doctormid value .,0,0,0
comments.json_1869,Set the doctormid value .,0,0,0
comments.json_1870,Getter for the oid value .,0,0,0
comments.json_1871,Set the oid value .,0,0,0
comments.json_1872,Get the time of the scheduled appointment .,0,0,0
comments.json_1873,Set the time of the scheduled appointment .,0,0,0
comments.json_1874,Getter for the last name of the optometrist .,0,0,0
comments.json_1875,Set the last name of the optometrist .,0,0,0
comments.json_1876,Getter for the first name of the optometrist .,0,0,0
comments.json_1877,Set the first name of the optometrist .,0,0,0
comments.json_1878,Getter for the comment .,0,0,0
comments.json_1879,Set the comment .,0,0,0
comments.json_1880,Check whether the scheduled appointment is pending .,0,0,0
comments.json_1881,Set if the scheduled appointment is pending .,0,0,0
comments.json_1882,Check whether the scheduled appointment is pending .,0,0,0
comments.json_1883,Set if the scheduled appointment is accepted . If setPending(false) has not been called before using this method  this method will have no effect.,0,0,0
comments.json_1884,Method used to compute the hashcode for a  Ophthalmology OV Record Bean .,0,0,0
comments.json_1885,Method used to determine if  Ophthalmology OV Record Beans are equal .,0,0,0
comments.json_1886,Creates a string representation of this object .,0,0,0
comments.json_1887,Bean for  Ophthalmology  Office  Visits . Holds all of the data needed for an Ophthalmology Office Visit.,0,0,0
comments.json_1888,The mid of the user .,0,0,0
comments.json_1889,The  Ophthalmology office visit id .,0,0,0
comments.json_1890,The date of the  Ophthalmology office visit .,0,0,0
comments.json_1891,The last name of the optometrist .,0,0,0
comments.json_1892,The first name of the optometrist .,0,0,0
comments.json_1893,The visual acuity numerator for the  OD .,0,0,0
comments.json_1894,The visual acuity denumerator for the  OS .,0,0,0
comments.json_1895,The visual acuity numerator for the  OD .,0,0,0
comments.json_1896,The visual acuity denumerator for the  OS .,0,0,0
comments.json_1897,The sphere value for the  OD .,0,0,0
comments.json_1898,The sphere value for the  OS .,0,0,0
comments.json_1899,The cylinder value for the  OD .,0,0,0
comments.json_1900,The cylinder value for the  OS .,0,0,0
comments.json_1901,The axis value for the  OD .,0,0,0
comments.json_1902,The axis value for the  OS .,0,0,0
comments.json_1903,The add value for the  OD .,0,0,0
comments.json_1904,The add value for the  OS .,0,0,0
comments.json_1905,Surgery,0,0,0
comments.json_1906,Surgery notes,0,0,0
comments.json_1907,Getter for the mid value .,0,0,0
comments.json_1908,Set the mid value .,0,0,0
comments.json_1909,Getter for the oid value .,0,0,0
comments.json_1910,Set the oid value .,0,0,0
comments.json_1911,Getter for the visit Date as a  Date object .,0,0,0
comments.json_1912,If it can 't be parsed   return null .,0,0,0
comments.json_1913,Getter for the visit Date as a string .,0,0,0
comments.json_1914,Set the visit Date value,0,0,0
comments.json_1915,Getter for the last name of the optometrist .,0,0,0
comments.json_1916,Set the last name of the optometrist .,0,0,0
comments.json_1917,Getter for the first name of the optometrist .,0,0,0
comments.json_1918,Set the first name of the optometrist .,0,0,0
comments.json_1919,Getter for the visual acuity numerator value for the  OD .,0,0,0
comments.json_1920,Set the visual acuity numerator value for the  OD .,0,0,0
comments.json_1921,Getter for the visual acuity denumerator value for the  OD .,0,0,0
comments.json_1922,Set the visual acuity denumerator value for the  OD .,0,0,0
comments.json_1923,Getter for the visual acuity numerator value for the  OS .,0,0,0
comments.json_1924,Set the visual acuity numerator value for the  OS .,0,0,0
comments.json_1925,Getter for the visual acuity denumerator value for the  OS .,0,0,0
comments.json_1926,Set the visual acuity denumerator value for the  OS .,0,0,0
comments.json_1927,Getter for the sphere  OD value .,0,0,0
comments.json_1928,Set the sphere  OD value .,0,0,0
comments.json_1929,Getter for the sphere  OS value .,0,0,0
comments.json_1930,Set the sphere  OS value .,0,0,0
comments.json_1931,Getter for the cylinder  OD value .,0,0,0
comments.json_1932,Set the cylinder  OD value .,0,0,0
comments.json_1933,Getter for the cylinder  OS value .,0,0,0
comments.json_1934,Set the cylinder  OS value .,0,0,0
comments.json_1935,Getter for the axis  OD value .,0,0,0
comments.json_1936,Set the axis  OD value .,0,0,0
comments.json_1937,Getter for the axis  OS value .,0,0,0
comments.json_1938,Set the axis  OS value .,0,0,0
comments.json_1939,Getter for the add  OD value .,0,0,0
comments.json_1940,Set the add  OD value .,0,0,0
comments.json_1941,Getter for the add  OS value .,0,0,0
comments.json_1942,Set the add  OS value .,0,0,0
comments.json_1947,Method used to compute the hashcode for a  Ophthalmology Surgery Record Bean .,0,0,0
comments.json_1948,Method used to determine if  Ophthalmology Surgery Record Beans are equal .,0,0,0
comments.json_1949,Creates a string representation of this object .,0,0,0
comments.json_1950,A reason code is like " Aspirin ". A reason code is not associated with an,0,0,0
comments.json_1951,Gets the reason  Code for this procedure,0,0,0
comments.json_1952,Gets the reason  Description for this procedure,0,0,0
comments.json_1953,A bean for storing data about a patient . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1954,Topical  Health  Information,0,0,0
comments.json_1955,Composition of city   state   and zip,0,0,0
comments.json_1956,Composition of the city   state   zip,0,0,0
comments.json_1957,A bean for storing historical data about a patient . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1959,A bean for storing data about patient -specific instructions given during an office visit. A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1973,A bean for storing data about a patient 's visit . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1974,A bean for storing data about a hospital employee . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1975,A bean for storing data about a prescription . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_1977,getters and setters for dosage   reason  override reason,0,0,0
comments.json_1978,This is the container bean for the  Prescription  Report requirement . It contains a  Prescription Bean (which in turn contains a Medication Bean)  and an office visit bean. <br /> <br /> This was made so that the prescription report could be done all in one clean query.<br /> <br />,0,0,0
comments.json_1979,A bean for storing data about a procedure . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1980,Gets the  CPT  Code for this procedure,0,0,0
comments.json_1981,Gets the  CPT  Description for this procedure,0,0,0
comments.json_1982,set Description,0,0,0
comments.json_1983,Gets the  HCP  ID of the  HCP administering the immunization,0,0,0
comments.json_1984,set Hcpid,0,0,0
comments.json_1985,Gets the  CPT attribute   used to determine if this is an immunization,0,0,0
comments.json_1986,Sets the  CPT attribute   used to determine if this is an immunization,0,0,0
comments.json_1987,get Ov Procedure ID,0,0,0
comments.json_1988,set Ov Procedure ID,0,0,0
comments.json_1989,get Date,0,0,0
comments.json_1990,set Date,0,0,0
comments.json_1991,TODO  Auto -generated catch block,0,0,0
comments.json_1992,A bean for storing information about releasing medical records . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_1993,Constructor for  Records Release bean . Creates a  Records Release Bean with null fields,0,0,0
comments.json_1994,Sets the release ID of the release request,0,0,0
comments.json_1995,Gets the release request id as a long,0,0,0
comments.json_1996,Sets the patient mid,0,0,0
comments.json_1997,Gets the patient 's mid,0,0,0
comments.json_1998,Sets the name of the release hospital for the records release,0,0,0
comments.json_1999,Gets the id of the hospital for which to release the patient 's medical records,0,0,0
comments.json_2000,Set the receiving hospital 's name,0,0,0
comments.json_2001,Get the receiving hospital 's name,0,0,0
comments.json_2002,Set the receiving hospital 's address .,0,0,0
comments.json_2003,Get the receiving hospital 's address,0,0,0
comments.json_2004,Set the first name of the receiving doctor,0,0,0
comments.json_2005,Gets the first name of the receiving doctor,0,0,0
comments.json_2006,Set the last name of the receiving doctor,0,0,0
comments.json_2007,Get the receiving doctor 's last name,0,0,0
comments.json_2008,Set the receiving doctor 's phone number,0,0,0
comments.json_2009,Get the receiving doctor 's phone number,0,0,0
comments.json_2010,Set the receiving doctor 's email address,0,0,0
comments.json_2011,Get the receiving doctor 's email address,0,0,0
comments.json_2012,Set the justification for the medical records release,0,0,0
comments.json_2013,Get the justification for the medical records release,0,0,0
comments.json_2014,Sets the status of the medical records release request . 0 for pending. 1 for approved. 2 for denied.,0,0,0
comments.json_2015,Gets the status of the medical records release request . 0 for pending. 1 for approved. 2 for denied.,0,0,0
comments.json_2016,Gets the status description of the release request .,0,0,0
comments.json_2017,Sets the date that the medical records release is requested,0,0,0
comments.json_2018,Gets the date that the medical records release was requested,0,0,0
comments.json_2019,Gets the date of the request as a string in mm /dd /yyyy format,0,0,0
comments.json_2020,A bean for storing data about a medical referral . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2021,A bean for storing remote monitoring data for patients . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_2022,Constructor with no parameters,0,0,0
comments.json_2023,Constructor with logged In MID parameter,0,0,0
comments.json_2024,A bean for storing data about a report request . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2025,Bean for required procedures . Holds data for all immunizations and procedures that are required in order for patients to enter into public schools  etc.,0,0,0
comments.json_2026,Code for the procedure,0,0,0
comments.json_2027,Description of the procedure,0,0,0
comments.json_2028,Age group that the procedure affects (kindergarten   sixth grade   or college age ),0,0,0
comments.json_2029,Type of procedure (ie : immunization ),0,0,0
comments.json_2030,Max age that the patient can be before the procedure is no longer required,0,0,0
comments.json_2031,Construct a new   empty bean .,0,0,0
comments.json_2032,Get the  CPT code for the bean .,0,0,0
comments.json_2033,Set the  CPT code for the bean .,0,0,0
comments.json_2034,Get the description of the procedure for the bean .,0,0,0
comments.json_2035,Set the description of the procedure for the bean .,0,0,0
comments.json_2036,Get the age group for the bean .,0,0,0
comments.json_2037,Set the age group for the bean .,0,0,0
comments.json_2038,Get the attribute for the bean .,0,0,0
comments.json_2039,Set the attribute for the bean .,0,0,0
comments.json_2040,Get the max age for the bean .,0,0,0
comments.json_2041,Set the max age for the bean .,0,0,0
comments.json_2042,A bean for storing data about a review of a physician . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_2043,Gets the  MID of the reviewer .,0,0,0
comments.json_2044,Gets the title of the review .,0,0,0
comments.json_2045,Sets the title of the review .,0,0,0
comments.json_2046,Set the  MID of the reviewer,0,0,0
comments.json_2047,Gets the date that the review was made .,0,0,0
comments.json_2048,Sets the date that the review was made .,0,0,0
comments.json_2049,Gets the  ID of the physician who is being reviewed .,0,0,0
comments.json_2050,Sets the  ID of the physician who is being reviewed .,0,0,0
comments.json_2051,Gets the number of stars that were given to the phyician .,0,0,0
comments.json_2052,Sets the rating associated with a review .,0,0,0
comments.json_2053,Gets the descriptive review of the  Physician .,0,0,0
comments.json_2054,Sets the descriptive review attribute .,0,0,0
comments.json_2055,A bean for storing data about a security question and answer . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2056,Sleep Entry Bean .java  Version 1 4/6/2015 Copyright notice : none  Contains all of the information for an entry into the Sleep Diary.,0,0,0
comments.json_2057,Unique  Primary key so entries can be edited and deleted,0,0,0
comments.json_2058,The  Date this sleep was performed,0,0,0
comments.json_2059,Was the sleep nightly or a nap ?,0,0,0
comments.json_2060,How many hours were spent exercising ?,0,0,0
comments.json_2061,The  MID of the user this sleep entry belongs to,0,0,0
comments.json_2062,Entry ID of the label belonging to this entry,0,0,0
comments.json_2063,Returns the id of this entry so it can be edited /deleted .,0,0,0
comments.json_2064,Sets the id of this entry            the unique id of a sleep entry,0,0,0
comments.json_2065,Returns a string representation of when the sleep was performed         performed,0,0,0
comments.json_2066,Parses the str Date to produce a date in the format  MM /dd /yyyy,0,0,0
comments.json_2067,Sets the date as a string            when the sleep was performed,0,0,0
comments.json_2068,Which type of sleep was performed ?,0,0,0
comments.json_2069,Sets the sleep type            what type of sleep was it,0,0,0
comments.json_2071,the hoursSlept to set,0,0,0
comments.json_2072,The patient that performed this sleep,0,0,0
comments.json_2073,Patient that performed this sleep            patient id of who performed this sleep,0,0,0
comments.json_2074,Label of this meal,0,0,0
comments.json_2075,Label of this meal,0,0,0
comments.json_2076,A bean for storing survey data associated with an office visit . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2077,Bean to be used for survey results (search ).  Stores address information about a  HCP in addition to their specialty  hospital  and averages from survey (results range from 1-5).  This beans also contains a variable that stores the percent of office visits that satisfaction results are available.,0,0,0
comments.json_2078,list of specialties,0,0,0
comments.json_2079,A bean for storing data about a transaction that occurred within i Trust . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters to create these easily),0,0,0
comments.json_2080,A bean for storing data about a medical referral . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2089,A bean for storing data to flag an office visit . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2090,A bean for storing data about a  Ward . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2091,A bean for storing data about a  Ward Room . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2092,A bean for storing zip code information . A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean (with the exception of minor formatting such as concatenating phone numbers together). A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters. to create these easily),0,0,0
comments.json_2093,Returns the zip code .,0,0,0
comments.json_2094,Sets the zip code,0,0,0
comments.json_2095,Gets the state,0,0,0
comments.json_2096,Sets the state,0,0,0
comments.json_2097,Gets the latitude,0,0,0
comments.json_2098,Sets the latitude,0,0,0
comments.json_2099,Gets the longitude,0,0,0
comments.json_2100,Sets the longitude,0,0,0
comments.json_2101,Returns the city,0,0,0
comments.json_2102,Sets the city,0,0,0
comments.json_2103,Gets the full state name .,0,0,0
comments.json_2104,Sets the full string value of state,0,0,0
comments.json_2105,This class handles the data for charting in  Ce Wolf / J Free Chart . This class implements  Dataset Producer   CategoryToolTipGenerator  CategoryItemLinkGenerator  and Serializable.,0,0,0
comments.json_2106,The generated serializable  ID .,0,0,0
comments.json_2107,Hardcoded months array to make implementation simpler for  Adverse  Event charts,0,0,0
comments.json_2108,Initialize the values for each month to 0,0,0,0
comments.json_2109,This will be the list of adverse events,0,0,0
comments.json_2110,This will be the name of the prescription or immunization under analysis,0,0,0
comments.json_2111,Called from the  JSP page to initialize the list of  Adverse  Events needed to produce the desired chart.,0,0,0
comments.json_2112,This method parses the list of  Adverse  Event  Beans to initialize the chart dataset .,0,0,0
comments.json_2113,The  Default Category Dataset is used for bar charts .,0,0,0
comments.json_2114,This dataset class may change based on the type of chart you wish to produce .,0,0,0
comments.json_2115,The generated serializable  ID .,0,0,0
comments.json_2116,For each  Adverse  Event in the list  ,0,0,0
comments.json_2117,parse the string repreentation of the report date,0,0,0
comments.json_2118,to a  Java  Date object . Then   get the month of the,0,0,0
comments.json_2119,Date object and increment the value count for that month .,0,0,0
comments.json_2120,For each month   add the monthly values to the dataset for,0,0,0
comments.json_2121,producing the chart .,0,0,0
comments.json_2122,values [i ] represents the number of adverse events for month i,0,0,0
comments.json_2123,code Name represents the given prescription /immunization being analyzed,0,0,0
comments.json_2124,month [i ] is the static array of month names   to be used as labels on the chart,0,0,0
comments.json_2125,This producer 's data is invalidated after 5 seconds . By this method the producer can influence Cewolf's caching behaviour the way it wants to.,0,0,0
comments.json_2126,Returns a unique  ID for this  Dataset Producer,0,0,0
comments.json_2127,Returns a link target for a special data item .,0,0,0
comments.json_2128,generate Tool Tip,0,0,0
comments.json_2129,read External,0,0,0
comments.json_2130,TODO  Auto -generated method stub,0,0,0
comments.json_2131,write External,0,0,0
comments.json_2132,TODO  Auto -generated method stub,0,0,0
comments.json_2133,Diagnosis Trend Data,0,0,0
comments.json_2134,serial Version UID,0,0,0
comments.json_2135,Initialize the values for each week to 0,0,0,0
comments.json_2136,List of the beans for the diagnosis statistics,0,0,0
comments.json_2137,Name of the diagnosis being searched for,0,0,0
comments.json_2138,has Data,0,0,0
comments.json_2139,Called from the  JSP to initialize the list of  Health Records needed to produce the desired chart.,0,0,0
comments.json_2140,initialize Avg Diagnosis Statistics,0,0,0
comments.json_2141,This method parses the list of  Diagnosis Statistics  Beans to initialize the chart data set.,0,0,0
comments.json_2142,The  Default Category Dataset is used for bar charts .,0,0,0
comments.json_2143,This data set class may change based on the type of chart you wish to produce .,0,0,0
comments.json_2145,This producer 's data is invalidated after 5 seconds . By this method the producer can influence Cewolf's caching behavior the way it wants to.,0,0,0
comments.json_2146,get Producer Id,0,0,0
comments.json_2147,generate Link,0,0,0
comments.json_2148,generate Tool Tip,0,0,0
comments.json_2149,read External,0,0,0
comments.json_2150,TODO  Auto -generated method stub,0,0,0
comments.json_2151,write External,0,0,0
comments.json_2152,TODO  Auto -generated method stub,0,0,0
comments.json_2153,This class handles the data for charting height and weight information in CeWolf/JFreeChart. This class implements DatasetProducer  CategoryToolTipGenerator  CategoryItemLinkGenerator  and Serializable.,0,0,0
comments.json_2154,Hardcoded months array to make implementation simpler for  Adverse  Event charts,0,0,0
comments.json_2155,serial Version UID,0,0,0
comments.json_2156,Number of quarters to chart . Set to 12 quarters for 3 years .,0,0,0
comments.json_2157,Initialize the values for each month to 0,0,0,0
comments.json_2158,Number of entries per quarter   used to calculate average .,0,0,0
comments.json_2159,This will be the list of health records,0,0,0
comments.json_2160,This will be the name of the prescription or immunization under analysis,0,0,0
comments.json_2161,Lets the  JSP know if there is any data to be displayed .,0,0,0
comments.json_2162,Called from the  JSP to initialize the list of  Health Records needed to produce the desired chart.,0,0,0
comments.json_2163,This method parses the list of  Adverse  Event  Beans to initialize the chart dataset.,0,0,0
comments.json_2164,The  Default Category Dataset is used for bar charts .,0,0,0
comments.json_2165,This dataset class may change based on the type of chart you wish to produce .,0,0,0
comments.json_2167,Skip entry if it is out of the history range .,0,0,0
comments.json_2168,Calculate the average for the quarter .,0,0,0
comments.json_2169,For each month   add the monthly values to the dataset for,0,0,0
comments.json_2170,producing the chart .,0,0,0
comments.json_2171,This producer 's data is invalidated after 5 seconds . By this method the producer can influence Cewolf's caching behavior the way it wants to.,0,0,0
comments.json_2172,get Procedure ID,0,0,0
comments.json_2173,generate Link,0,0,0
comments.json_2174,generate Tool Tip,0,0,0
comments.json_2175,read External,0,0,0
comments.json_2176,TODO  Auto -generated method stub,0,0,0
comments.json_2177,write External,0,0,0
comments.json_2178,TODO  Auto -generated method stub,0,0,0
comments.json_2179,This class handles the data for charting height and weight information in CeWolf/JFreeChart. This class implements DatasetProducer  CategoryToolTipGenerator  CategoryItemLinkGenerator  and Serializable.,0,0,0
comments.json_2180,Number of quarters to chart . Set to 12 quarters for 3 years .,0,0,0
comments.json_2181,Initialize the values for each month to 0,0,0,0
comments.json_2182,Number of entries per quarter   used to calculate average .,0,0,0
comments.json_2183,This will be the list of health records,0,0,0
comments.json_2184,This will be the name of the prescription or immunization under analysis,0,0,0
comments.json_2185,Lets the  JSP know if there is any data to be displayed .,0,0,0
comments.json_2186,Called from the  JSP to initialize the list of  Lab  Procedure beans needed to produce the desired chart.,0,0,0
comments.json_2187,This method parses the list of  Adverse  Event  Beans to initialize the chart dataset.,0,0,0
comments.json_2188,The  Default Category Dataset is used for bar charts .,0,0,0
comments.json_2189,This dataset class may change based on the type of chart you wish to produce .,0,0,0
comments.json_2191,Skip entry if it is out of the history range .,0,0,0
comments.json_2192,Calculate the average for the quarter .,0,0,0
comments.json_2193,For each month   add the monthly values to the dataset for,0,0,0
comments.json_2194,producing the chart .,0,0,0
comments.json_2195,This producer 's data is invalidated after 5 seconds . By this method the producer can influence Cewolf's caching behavior the way it wants to.,0,0,0
comments.json_2196,get Procedure Id,0,0,0
comments.json_2197,generate Link,0,0,0
comments.json_2198,generate Tol Tip,0,0,0
comments.json_2199,read External,0,0,0
comments.json_2200,Not supported for lab results .,0,0,0
comments.json_2201,write External,0,0,0
comments.json_2202,Not supported for lab results .,0,0,0
comments.json_2203,Provides a generic  CSV parsing framework . Implemented for patient file importing.,0,0,0
comments.json_2204,Holds the header fields from the top of the  CSV file,0,0,0
comments.json_2205,Holds the fields and records from the  CSV file,0,0,0
comments.json_2206,Holds a list of errors accumulated while parsing the  CSV file .,0,0,0
comments.json_2207,Constructor taking an  Input Stream,0,0,0
comments.json_2208,First try at  UTF -8,0,0,0
comments.json_2209,Try the default,0,0,0
comments.json_2210,Constructor taking an already -prepared  Scanner (For testing purposes),0,0,0
comments.json_2211,Returns the  Array List of  Strings containing the  CSV header fields,0,0,0
comments.json_2212,Returns the  Array List of  Array Lists of  Strings containing the  CSV data fields,0,0,0
comments.json_2213,Returns the  Error List of errors accumulated while parsing  CSV,0,0,0
comments.json_2214,Parses the  CSV file line -by -line .,0,0,0
comments.json_2215,The number of fields (columns ) in the  CSV file as determined by the number of headers,0,0,0
comments.json_2216,The current line number being processed ( Used to report the line number of errors ),0,0,0
comments.json_2217,Attempt to read the first line (the header ) from the file,0,0,0
comments.json_2218,If it does not exist (or if the file isn 't a text file at all )  the entire process fails,0,0,0
comments.json_2219,Read the file line -by -line and call the line parser for each line,0,0,0
comments.json_2220,If the line doesn 't have the right number of fields   it is ignored,0,0,0
comments.json_2221,If the line is otherwise invalid   it is also ignored,0,0,0
comments.json_2222,Parses the passed line character -by -character,0,0,0
comments.json_2223,Contains the fields from each line parsed,0,0,0
comments.json_2224,Contains the data from the current field being read,0,0,0
comments.json_2225,Contains the status of whether or not the parser is inside a quoted area,0,0,0
comments.json_2226,Used to handle commas and other special characters within the field .,0,0,0
comments.json_2227,Read the line character -by -character,0,0,0
comments.json_2228,Comma denotes the end of the current field unless it is quoted,0,0,0
comments.json_2229,If the field is not ending,0,0,0
comments.json_2230,If the character is a "  ignore it and flip the quote status,0,0,0
comments.json_2231,Otherwise   add the character to the string,0,0,0
comments.json_2232,If the line parser ends while still inside a quoted section   the input line was invalid,0,0,0
comments.json_2233,Grab text from last field too   since the last field does not end with a comma,0,0,0
comments.json_2234,The central mediator for all  Database  Access  Objects . The production instance uses the database connection pool provided by Tomcat (so use the production instance when doing stuff from JSPs in the "real code"). Both the production and the test instance parses the context.xml file to get the JDBC connection. Any DAO that is added to the system should be added in this class  in the same way that all other DAOs are.,0,0,0
comments.json_2236,Protected constructor . Call get Production Instance to get an instance of the  DAO Factory,0,0,0
comments.json_2275,Gets the  DAO for interaction with database table requiredprocedures .,0,0,0
comments.json_2276,Gets the  DAO for reviews with the  DB table reviews .,0,0,0
comments.json_2277,Gets the  DOA for ophthalmology office visits records .,0,0,0
comments.json_2278,Gets the  DOA for ophthalmology scheduled office visit records .,0,0,0
comments.json_2279,Gets the  DOA for ophthalmology surgery records .,0,0,0
comments.json_2280,Gets the  DAO for obstetrics records .,0,0,0
comments.json_2281,Gets the  DAO for setting flags . Currently used with obstetrics .,0,0,0
comments.json_2282,Creates a new  DAO for all of the  Food  Entries in a  Food  Diary,0,0,0
comments.json_2283,Creates a new  DAO for all of the  Exercise  Entries in an  Exercise  Diary,0,0,0
comments.json_2284,Creates a new  DAO for all of the  Sleep  Entries in an  Sleep  Diary,0,0,0
comments.json_2285,Creates a new  DAO for all of the  Labels for diary entries,0,0,0
comments.json_2286,Creates a new  DAO for calculating a patient 's  Mifflin - St  Jeor formula,0,0,0
comments.json_2287,Creates a new  DAO for  Ophthalmology  Disease interactions,0,0,0
comments.json_2288,Used by  DAO Factory to abstract away different ways of getting our  JDBC connection,0,0,0
comments.json_2289,Access DAO is for all queries related to authorization . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,1,0,1
comments.json_2290,The typical constructor . which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2291,Returns the number of minutes it would take for a session to time out . This is done by effectively using the database table as a hash table. If a row in GlobalVariables does not exist  one is inserted with the default value '20'.,0,0,0
comments.json_2292,Sets the number of minutes it would take for a session to timeout .,0,0,0
comments.json_2293,Used for the logging mechanism . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2294,The typical constructor . which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2295,Gets all the adverse event reports for a certain user  MID .,0,0,0
comments.json_2296,Adds a message to the database .,0,0,0
comments.json_2297,get HCPMID,0,0,0
comments.json_2298,get Report,0,0,0
comments.json_2299,remove Report,0,0,0
comments.json_2300,get Unremoved Adverse Events By Code,0,0,0
comments.json_2301,get Name For Code,0,0,0
comments.json_2302,get Perscriptions,0,0,0
comments.json_2303,get Immunizations,0,0,0
comments.json_2304,DAO stands for  Database  Access  Object . All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2305,The typical constructor . which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2306,Returns a list of patient 's allergies .,0,0,0
comments.json_2307,Adds an allergy to this patient 's list .,0,0,0
comments.json_2308,Returns all past and future appointment conflicts for the doctor with the given MID,0,0,0
comments.json_2309,Returns all past and future appointment conflicts for the patient with the given MID,0,0,0
comments.json_2314,Auth DAO is for anything that has to do with authentication . Most methods access the users table. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,1,0,1
comments.json_2315,LOGIN _ TIMEOUT,0,0,0
comments.json_2316,The typical constructor . which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2317,Add a particular user to the system . Does not add user-specific information (e.g. Patient or HCP). Initially sets security question to a random set of characters  so that nobody should be able to guess its value.,1,0,1
comments.json_2318,Reset the security question and answer for a particular user,1,0,1
comments.json_2319,Returns the user name of a user from just the  MID,0,0,0
comments.json_2320,Returns the role of a particular  MID,0,0,0
comments.json_2321,Returns whether a user is deactivated . Currently works only for patients,0,0,0
comments.json_2322,Change the password of a particular user,0,0,0
comments.json_2323,Return the security question for a particular user .,1,0,1
comments.json_2324,Return the security answer of a particular user,1,0,1
comments.json_2325,Record a login failure   which blacklists the ip Address . Uses the database table like a hash table where the key is the user's IP address. If the user's IP address is not in the table  a row with "1" is added.,0,0,0
comments.json_2326,Record a reset password failure   which blacklists the ip Address . Uses the database table like a hash table where the key is the user's IP address. If the user's IP address is not in the table  a row with "1" is added.,0,0,0
comments.json_2327,Return the number of failures from resetting a password   given an  IP address .,0,0,0
comments.json_2328,if we 're more than  X minutes out   clear the failure count,0,0,0
comments.json_2329,Return the number of failures from login failures a password   given an IP address.,0,0,0
comments.json_2330,if we 're more than  X minutes out   clear the failure count,0,0,0
comments.json_2331,reset Login Failures To Zero,0,0,0
comments.json_2332,Check that a user actually exists .,0,0,0
comments.json_2333,Check that a password belongs to a user,1,0,1
comments.json_2334,Change the dependency status of the specified user,0,0,0
comments.json_2335,Check that the specified user is a dependent,0,0,0
comments.json_2336,get Salt returns the salt for user with  MID mid .,0,0,0
comments.json_2337,shake Salt gets some salt from the shaker .,0,0,0
comments.json_2338,this class is used to interact with the datbaase to add   get   edit   or remove bills,0,0,0
comments.json_2339,DA Ofactory used to make a  Billing DAO,0,0,0
comments.json_2340,used to get load things into the database or from the database,0,0,0
comments.json_2341,makes a new  Billing DAO,0,0,0
comments.json_2342,adds a bill to the database,0,0,0
comments.json_2343,Returns the bill with a specific bill ID .,0,0,0
comments.json_2344,Returns a bill for a specific office visit .,0,0,0
comments.json_2345,gets a list of billing beans of all the bills from the database for the given patient id,0,0,0
comments.json_2346,Get a list of the patient 's unpaid bills,0,0,0
comments.json_2347,Get a list of the bills paid with insurance .,0,0,0
comments.json_2348,edits the bill giving as a parameter in the database,0,0,0
comments.json_2349,removes a bill from the database,0,0,0
comments.json_2350,get Pending Num gets the number of pending bills .,0,0,0
comments.json_2351,get Denied Num gets the number of your denied bills .,0,0,0
comments.json_2352,get Denied Num gets the number of your denied bills .,0,0,0
comments.json_2353,Used for storing and getting data from the cdcbmistats table . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2354,Constructor for  CDC Bmi Stats DAO . Initializes the  DAO Factory to have database interactions with .,0,0,0
comments.json_2355,Stores a  CDC Stats Bean into the cdcbmistats table . Inserts and creates a new entry if the sex and age of the bean are not currently in the table. Otherwise  the matching row in the table will be updated with the data from the passed in CDCStatsBean.,0,0,0
comments.json_2356,Gets a  CDC Stats Bean with the specified sex and age from the cdcbmistats table . If there are no associated CDC stats with the specified parameters  then null is returned.,0,0,0
comments.json_2357,Get the first and only stats bean,0,0,0
comments.json_2358,Used for storing and getting data from the cdcheadcircumferencestats table . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2359,Constructor for  CDC Head Circ Stats DAO . Initializes the  DAO Factory to have database interactions with .,0,0,0
comments.json_2360,Stores a  CDC Stats Bean into the cdcheadcircumferencestats table . Inserts and creates a new entry if the sex and age of the bean are not currently in the table. Otherwise  the matching row in the table will be updated with the data from the passed in CDCStatsBean.,0,0,0
comments.json_2361,Gets a  CDC Stats Bean with the specified sex and age from the cdcheadcircumferencestats table . If there are no associated CDC stats with the specified parameters  then null is returned.,0,0,0
comments.json_2362,Get the first and only stats bean,0,0,0
comments.json_2363,Used for storing and getting data from the cdcheightstats table . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2364,Constructor for  CDC Height Stats DAO . Initializes the  DAO Factory to have database interactions with .,0,0,0
comments.json_2365,Stores a  CDC Stats Bean into the cdcheightstats table . Inserts and creates a new entry if the sex and age of the bean are not currently in the table. Otherwise  the matching row in the table will be updated with the data from the passed in CDCStatsBean.,0,0,0
comments.json_2366,Gets a  CDC Stats Bean with the specified sex and age from the cdcheightstats table . If there are no associated CDC stats with the specified parameters  then null is returned.,0,0,0
comments.json_2367,Get the first and only stats bean,0,0,0
comments.json_2368,Abstract class for interacting with the cdc health statistics tables DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2369,Stores a  CDC Stats Bean into a cdc stats table . Inserts and creates a new entry if the sex and age of the bean are not currently in the table. Otherwise  the matching row in the table will be updated with the data from the passed in CDCStatsBean.,0,0,0
comments.json_2370,Gets a  CDC Stats Bean with the specified sex and age from a cdc stats table . If there are no associated CDC stats with the specified parameters  then null is returned.,0,0,0
comments.json_2371,Used for storing and getting data from the cdcweightstats table . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2372,Constructor for  CDC Weight Stats DAO . Initializes the  DAO Factory to have database interactions with .,0,0,0
comments.json_2373,Stores a  CDC Stats Bean into the cdcweightstats table . Inserts and creates a new entry if the sex and age of the bean are not currently in the table. Otherwise  the matching row in the table will be updated with the data from the passed in CDCStatsBean.,0,0,0
comments.json_2374,Gets a  CDC Stats Bean with the specified sex and age from the cdcweightstats table . If there are no associated CDC stats with the specified parameters  then null is returned.,0,0,0
comments.json_2375,Get the first and only stats bean,0,0,0
comments.json_2376,Used for managing  CPT codes . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs. The CPT code set accurately describes medical  surgical  and diagnostic services and is designed to communicate uniform information about medical services and procedures among physicians  coders  patients  accreditation organizations  and payers for administrative  financial  and analytical purposes.,0,0,0
comments.json_2377,The typical constructor .,0,0,0
comments.json_2378,Returns a list of all  CPT codes .,0,0,0
comments.json_2379,Returns a list of all immunization  CPT codes .,0,0,0
comments.json_2380,Returns a list of all non -immunization  CPT codes .,0,0,0
comments.json_2381,Returns a particular procedure description for a code .,0,0,0
comments.json_2382,Adds a new  CPT code   returns that it was added successfully,0,0,0
comments.json_2383,Change the procedure description for a particular  CPT code,0,0,0
comments.json_2384,Used for managing diagnoses given during a particular office visit . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2387,Gets a local zip code count and regional count of a specified diagnosis code,0,0,0
comments.json_2388,add 1 day 's worth to include the upper,0,0,0
comments.json_2389,add 1 day 's worth to include the upper,0,0,0
comments.json_2390,Gets a weekly local zip code count and regional count of a specified diagnosis code over a time period,0,0,0
comments.json_2391,Adds a diagnosis bean to the database .,0,0,0
comments.json_2392,Edits an existing prescription bean .,0,0,0
comments.json_2393,Removes the given diagnosis from its office visit,0,0,0
comments.json_2394,Used for managing drug interactions . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2395,The typical constructor .,0,0,0
comments.json_2396,Returns a list of all drug interactions for the input drug name,0,0,0
comments.json_2397,Adds a new drug interaction   returns whether or not the addition was successful . If the code already exists   an iTrustException is thrown.,0,0,0
comments.json_2398,Remove an interaction from the database,0,0,0
comments.json_2399,Used for managing the  Reason  Codes . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs. The Override Reason Code (ORC) is a universal product identifier used in the United States for drugs intended for human use.,0,0,0
comments.json_2400,The typical constructor .,0,0,0
comments.json_2401,Returns a list of all  ND codes,0,0,0
comments.json_2402,Returns a particular description for a given code .,0,0,0
comments.json_2403,Adds a new override reason code   returns whether or not the change was made . If the code already exists   an iTrustException is thrown.,0,0,0
comments.json_2404,Updates a particular code 's description,0,0,0
comments.json_2405,Exercise Entry DAO .java  Version 1 4/2/2015 Copyright notice : none Responsible for loading the entries in a patient's exercise diary  the totals a patient has performed  and adding a new entry to a patient's exercise diary,0,0,0
comments.json_2406,Basic constructor            the factory to use for getting connections,0,0,0
comments.json_2407,Returns all of the entries in the  Exercise  Entry table that contain the ID of the patient.            which patient to select Exercise Diary for,0,0,0
comments.json_2408,Returns the total hours and calories burned of each day in the exercise diary. The total just sums up the values for each individual exercise entry.            patient whose exercise diary we want         of the totals performed on each day for a patient,0,0,0
comments.json_2409,Adds a exercise entry to a patient 's exercise diary            the entry to add,0,0,0
comments.json_2410,Queries the db to find the highest exercise entry id currently in use and then returns the next number so it can be used for a new exercise entry.,0,0,0
comments.json_2411,Deletes the exercise entry from the exercise diary that has the same unique id as the one passed in. Returns the count of the number of rows affected. The number of rows affected should never be more than 1. The patientMID is included to try to ensure that users cannot delete exercise diary entries that belong to users other than themselves.            which exercise entry to delete            the owner of this exercise entry,0,0,0
comments.json_2412,Updates a particular exercise entry with the new data . Neither the entryid nor the patientid will ever change  so there is no reason to include them as possibilities to change. It includes the patientMID in an attempt to ensure that patients can only update their own previous exercise entries.            the exercise entry to update            who the patient is making this update            the edited form of the exercise entry,0,0,0
comments.json_2413,Returns the entries in the  Exercise  Entry table that are within a specified date range.            the lower date            the lower date            which patient to select Exercise Diary for,0,0,0
comments.json_2414,Convert java .util . Date to java .sql . Date,0,0,0
comments.json_2415,Returns the total hours and calories burned of each day in the exercise diary that falls between the two given dates. The total just sums up the values for each individual exercise entry.            the lower date            the lower date            which patient to select Exercise Diary for,0,0,0
comments.json_2416,Add params,0,0,0
comments.json_2417,Convert java .util . Date to java .sql . Date,0,0,0
comments.json_2418,DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2419,The typical constructor .,0,0,0
comments.json_2420,Return all emails that have been "sent " (inserted into the database ),0,0,0
comments.json_2421,Return all emails that a person has sent,0,0,0
comments.json_2422," Send " an email   which just inserts it into the database .,0,0,0
comments.json_2423,Returns a list of emails that have the given string as a substring of the body,0,0,0
comments.json_2424,Used for queries related to families . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2425,The typical constructor .,0,0,0
comments.json_2426,Return the information of the mother and father of this patient            this patient,0,0,0
comments.json_2427,Return a list of patients who share at least one parent (and that parent is not '0') with this patient            this patient,0,0,0
comments.json_2428,Return a list of patients whose mother or father is this patient            this patient,0,0,0
comments.json_2429,Private helper method (since all three are alike )            add the pid as the second parameter (the 3rd query was a little different),0,0,0
comments.json_2430,Flags DAO is the data accessor object for the obstetrics flags .,0,0,0
comments.json_2431,The typical constructor .,0,0,0
comments.json_2432,Based on input   either inserts a new flag record   deletes an existing flag record   or does nothing. It will insert the flag if a match is not found for the MID and flagType. It will delete a flag if a match is found in the database and the flagged value is false. The idea is that the database only holds flagged flags  so missing = false.,0,0,0
comments.json_2433,if the result exists,0,0,0
comments.json_2434,if it 's set to false   delete from the  DB,0,0,0
comments.json_2435,else   it 's true and it exists so nothing needs to change,0,0,0
comments.json_2436,else   it doesn 't exist in the  DB,0,0,0
comments.json_2437,if it 's true   add it,0,0,0
comments.json_2438,else   it 's false   so ignore it,0,0,0
comments.json_2439,Returns a  Flags Bean object for the record indicated in the  Flags Bean argument .,0,0,0
comments.json_2440,now set the bean to whether or not the record exists in the database,0,0,0
comments.json_2441,Food Entry DAO .java  Version 1 2/21/2015 Copyright notice : none Responsible for loading the entries in a patient's food diary  the totals a patient has eaten  and adding a new entry to a patient's food diary,0,0,0
comments.json_2442,Basic constructor            the factory to use for getting connections,0,0,0
comments.json_2443,Returns all of the entries in the  Food  Entry table that contain the  ID of the patient.            which patient to select Food Diary for,0,0,0
comments.json_2444,Returns the totals of calories   fat   sodium   carbs   sugar   fiber   and protein of each day in the food diary. The total is calculated by multiplying the number of servings by the grams/milligrams per serving for each individual food entry.            patient whose food diary we want         of the totals eaten on each day for a patient,0,0,0
comments.json_2445,We don 't care about the mealtype   foodname   or servings but we need to have some for the loader  so just bring back whatever.,0,0,0
comments.json_2446,Adds a food entry to a patient 's food diary            the entry to add,0,0,0
comments.json_2447,Queries the db to find the highest food entry id currently in use and then returns the next number so it can be used for a new food entry.,0,0,0
comments.json_2448,Deletes the food entry from the food diary that has the same unique id as the one passed in. Returns the count of the number of rows affected. The number of rows affected should never be more than 1. The patientMID is included to try to ensure that users cannot delete food diary entries that belong ot users other than themselves.            which food entry to delete            the owner of this food entry,0,0,0
comments.json_2449,Updates a particular food entry with the new data . Neither the entryid nor the patientid will ever change  so there is no reason to include them as possiblities to change. It includes the patientMID in an attempt to ensure that patients can only udpate their own previous food entries.            the food entry to update            who the patient is making this update            the edited form of the food entry,0,0,0
comments.json_2450,Returns the entries in the  Food  Entry table that are within a specified date range.            the lower date            the lower date            which patient to select Food Diary for,0,0,0
comments.json_2451,Convert java .util . Date to java .sql . Date,0,0,0
comments.json_2452,Add params,0,0,0
comments.json_2453,Convert java .util . Date to java .sql . Date,0,0,0
comments.json_2454,Used for all health records where a whole history is kept . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2455,The typical constructor .,0,0,0
comments.json_2456,Returns a list of all health records for a particular patient,0,0,0
comments.json_2459,get All Records After OV Date,0,0,0
comments.json_2460,Adds a health record for a particular patient,0,0,0
comments.json_2461,Removes a health record in the  My SQL database by its office visit id,0,0,0
comments.json_2462,Boolean for keeping track whether record has been removed,0,0,0
comments.json_2463,If an  SQL Exception happens   throw a  DB Exception,0,0,0
comments.json_2464,Get an health record by its office visit  ID .,0,0,0
comments.json_2465,Health record object to hold patient 's health record associated with the office visit,0,0,0
comments.json_2466,Get the first and only health record,0,0,0
comments.json_2467,If an  SQL Exception happens   throw a  DB Exception,0,0,0
comments.json_2468,get All Patient Health Records By Hospital,0,0,0
comments.json_2469,Used for managing hospitals DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2470,The typical constructor .,0,0,0
comments.json_2471,Returns a list of all hospitals sorted alphabetically,0,0,0
comments.json_2472,Returns a particular hospital given its  ID,0,0,0
comments.json_2473,Adds a hospital,0,0,0
comments.json_2474,Updates a particular hospital 's description . Returns the number of rows affected (should be 1),0,0,0
comments.json_2475,Assign an  HCP to a hospital . If they have already been assigned to that hospital   then an iTrustException is thrown.,0,0,0
comments.json_2476,Unassigns an  HCP to a hospital . Returns whether or not any changes were made,0,0,0
comments.json_2477,Removes all hospital assignments for a particular  HCP . Returns the number of rows affected .,0,0,0
comments.json_2478,Checks to see if the  LT has an assigned hospital,0,0,0
comments.json_2479,Used for managing all  ICD codes . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs. The International Statistical Classification of Diseases and Related Health Problems (most commonly known by the abbreviation ICD) provides codes to classify diseases and a wide variety of signs  symptoms  abnormal findings  complaints  social circumstances and external causes of injury or disease.,0,0,0
comments.json_2480,The typical constructor .,0,0,0
comments.json_2481,Returns all non - Ophthalmology  ICD 9 CM codes sorted by code,0,0,0
comments.json_2482,Returns all  ICD 9 CM codes sorted by code,0,0,0
comments.json_2483,Returns a particular description for a given code,0,0,0
comments.json_2484,Adds an  ICD 9 CM code . Returns whether or not the change was made .,0,0,0
comments.json_2485,Changes a the description of a particular code .,0,0,0
comments.json_2486,Basic constructor,0,0,0
comments.json_2487,Returns a single label,0,0,0
comments.json_2488,Returns all of the entries in the  Labels table that contain the ID of the patient.,0,0,0
comments.json_2489,Adds a label,0,0,0
comments.json_2490,Updates a particular label with the new data . Neither the entryid nor the patientid will ever change  so there is no reason to include them as possiblities to change. It includes the patientMID in an attempt to ensure that patients can only udpate their own previous food entries.            the label to update            who the patient is making this update            the edited form of the label,0,0,0
comments.json_2491,Deletes the label from the database that has the same unique id as the one passed in. Returns the count of the number of rows affected. The number of rows affected should never be more than 1. The patientMID is included to try to ensure that users cannot delete food diary entries that belong to users other than themselves.,0,0,0
comments.json_2492,A  DAO for managing lab procedure codes . Database  Access  Object . All info coming into a  DAO is already validated . Just worry about DB stuff here. Note that all DAOs need to have a DAOFactory with which to access other DAOs and to get connections. Also  every DAO must have a constructor with a DAOFactory as a parameter.,0,0,0
comments.json_2493,The typical constructor .,0,0,0
comments.json_2494,Get a list of the lab procedures associated with a given patient .,0,0,0
comments.json_2495,Get lab procedures for a specific office visit   but excluding lab procedures which a patient does not have access to.,0,0,0
comments.json_2496,Gets all the lab procedures for a given patient that occur within the next month .,0,0,0
comments.json_2497,Gets an individual lab procedure .,0,0,0
comments.json_2498,Gets all procedures for  Patient,0,0,0
comments.json_2499,This gets all the procedures for a particular patient on a particular office visit,0,0,0
comments.json_2500,This gets all the procedures for a particular patient on a particular office visit,0,0,0
comments.json_2501,Gets all lab procedures   period .,0,0,0
comments.json_2502,Get all lab procedures associated with a particular  HCP .,0,0,0
comments.json_2503,Get all lab procedures associated with a particular  HCP and  Patient .,0,0,0
comments.json_2504,Get a count of all pending lab procedures for a particular  HCP .,0,0,0
comments.json_2505,Gets the lab procedures for a given  LHCP that occur within the next month .,0,0,0
comments.json_2506,Inserts a lab procedure into the database .,0,0,0
comments.json_2507,Updates an existing lab procedure .,0,0,0
comments.json_2508,Marks a lab procedure as viewed by the patient,0,0,0
comments.json_2509,Get the count of unviewed lab procedures for a particular patient .,0,0,0
comments.json_2510,Gets all the lab procedures that correspond to a particular  LOINC .,0,0,0
comments.json_2511,Updates the rights of a user on a given lab procedure .,0,0,0
comments.json_2512,Delete a given lab procedure form the database .,0,0,0
comments.json_2513,Get a list of the lab procedures in transit associated with a given  Lab  Tech .,0,0,0
comments.json_2514,Get a list of the lab procedures received for a given  Lab  Tech .,0,0,0
comments.json_2515,Get a list of the lab procedures testing for a given  Lab  Tech .,0,0,0
comments.json_2516,Get the count of the  In _ Transit and  Received lab procedures assigned to a specific lab tech.,0,0,0
comments.json_2517,Get the count of the  In _ Transit and  Received lab procedures assigned to a specific lab tech grouped by priority.,0,0,0
comments.json_2521,DAO stands for  Database  Access  Object . All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. Logical Observation Identifiers Names and Codes (LOINC) is a database and universal standard for identifying medical laboratory observations.,0,0,0
comments.json_2522,The typical constructor . 		which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2523,Adds a  LOINC,0,0,0
comments.json_2524,Returns all  LOIN Cs associated with  Laboratory Procedure Code,0,0,0
comments.json_2525,Updates the information in  LOINC .,0,0,0
comments.json_2526,Returns all  LOIN Cs as a list .,0,0,0
comments.json_2527,Macronutrients DAO .java Version 1 03/31/2015 Copyright notice: none Contains database interactions for Macronutrients,0,0,0
comments.json_2528,Used for the logging mechanism . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2529,The typical constructor .,0,0,0
comments.json_2530,Gets all the messages for a certain user  MID .,0,0,0
comments.json_2531,Gets all the messages for a certain user  MID sorted by ascending time .,0,0,0
comments.json_2532,Gets all the messages for a certain user  MID sorted by name ascending .,0,0,0
comments.json_2533,Gets all the messages for a certain user  MID sorted by name descending .,0,0,0
comments.json_2534,Gets all the messages from a certain user  MID .,0,0,0
comments.json_2535,Gets all the messages for a certain user  MID sorted by ascending time .,0,0,0
comments.json_2536,Gets all the messages for a certain user  MID sorted by name ascending .,0,0,0
comments.json_2537,Gets all the messages for a certain user  MID sorted by name descending .,0,0,0
comments.json_2538,Adds a message to the database .,0,0,0
comments.json_2539,Used for managing the  ND  Codes . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs. The National Drug Code (NDC) is a universal product identifier used in the United States for drugs intended for human use.,0,0,0
comments.json_2540,The typical constructor .,0,0,0
comments.json_2541,Returns a list of all  ND codes,0,0,0
comments.json_2542,Returns a particular description for a given code .,0,0,0
comments.json_2543,Adds a new  ND code   returns whether or not the change was made . If the code already exists   an iTrustException is thrown.,0,0,0
comments.json_2544,Updates a particular code 's description,0,0,0
comments.json_2545,Removes a  ND code   returns whether or not the change was made .,0,0,0
comments.json_2546,Used for getting data from the normal distribution table . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2547,Constructor for  Normal DAO . Saves the  DAO Factory that is passed in to do database transactions in .,0,0,0
comments.json_2548,Gets a normal bean from the normal distribution table . Reads in a double value that is formatted to 1 decimal place. Matches rows in the table based on the z column. Only returns one NormalBean object. Otherwise returns null if there is no match.,0,0,0
comments.json_2549,Get the first and only  Normal Bean from the list if it exists,0,0,0
comments.json_2550,Used for managing all static information related to an obstetrics record . For other information related to all aspects of patient care  see the other DAOs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2551,The typical constructor .,0,0,0
comments.json_2552,Adds an obstetrics record to the table,0,0,0
comments.json_2553,first   insert the record,0,0,0
comments.json_2554,used to have  OID   between  MID and preg Id (also  VALUES had another ? ,0,0,0
comments.json_2555,then   set the  OID of the original bean to the one the database generates,0,0,0
comments.json_2556,Returns an obstetrics record correlating to the given  OID,0,0,0
comments.json_2557,Returns a list of obstetrics records correlating to the given  MID correlating to the given MID,0,0,0
comments.json_2558,Same as above method for get records by  MID   but filters by  Pregnancy Status,0,0,0
comments.json_2559,check if result set was empty   then load if not,0,0,0
comments.json_2560,Updates an obstetrics record for the given  OID,0,0,0
comments.json_2561,Used for doing tasks related to office visits . Use this for linking diagnoses to office visits   and similar tasks. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2562,The typical constructor .,0,0,0
comments.json_2563,Adds an visit and return its  ID,0,0,0
comments.json_2564,Updates the information in a particular office visit .,0,0,0
comments.json_2565,Returns a particular office visit given an  ID,0,0,0
comments.json_2566,Returns whether or not an office visit actually exists,0,0,0
comments.json_2567,Returns a list of all office visits for a given patient,0,0,0
comments.json_2568,Returns a list of all office visits for a given patient,0,0,0
comments.json_2569,Returns a list of all office visits for a given patient,0,0,0
comments.json_2570,Returns a list of all office visits at a given hospital,0,0,0
comments.json_2571,Gets all office visits corresponding to a particular  ICD diagnosis .,0,0,0
comments.json_2572,Used for managing diagnoses given during a particular office visit . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2575,Adds a diagnosis bean to the database .,0,0,0
comments.json_2576,Edits an existing prescription bean .,0,0,0
comments.json_2577,Removes the given diagnosis from its office visit,0,0,0
comments.json_2578,Returns all non - Ophthalmology  ICD 9 CM codes sorted by code,0,0,0
comments.json_2579,Used for managing all static information related to an ophthalmology office visit record. For other information related to all aspects of patient care  see the other DAOs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2580,Used to get database connections,0,0,0
comments.json_2581,Used to load data from  Result Sets   and into  Prepared Statements .,0,0,0
comments.json_2582,The typical constructor . is used for obtaining SQL connections  etc.,0,0,0
comments.json_2583,Adds an  Ophthalmology office visit record to the table .,0,0,0
comments.json_2584,first   insert the record,0,0,0
comments.json_2585,then   set the  OID of the original bean to the one the database generates,0,0,0
comments.json_2586,Returns an ophthalmology office visit record correlating to the given OID. Ophthalmology office visit record.,0,0,0
comments.json_2587,Returns a list of ophthalmology office visit records correlating to the given MID. the ophthalmology office visit records correlating to the given MID.,0,0,0
comments.json_2588,Updates an ophthalmology office visit record for the given  OID . the ophthalmology office visit record.,0,0,0
comments.json_2589,Used for managing all static information related to a scheduled ophthalmology office visit record. For other information related to all aspects of patient care  see the other DAOs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2590,Used to get database connections,0,0,0
comments.json_2591,Used to load data from  Result Sets   and into  Prepared Statements .,0,0,0
comments.json_2592,The typical constructor . is used for obtaining SQL connections  etc.,0,0,0
comments.json_2593,Adds a scheduled  Ophthalmology office visit record to the table .,0,0,0
comments.json_2594,first   insert the record,0,0,0
comments.json_2595,then   set the  OID of the original bean to the one the database generates,0,0,0
comments.json_2596,Returns a scheduled ophthalmology office visit record correlating to the given OID. scheduled Ophthalmology office visit record.,0,0,0
comments.json_2597,Returns a list of scheduled ophthalmology office visit records correlating to the given PATIENTMID. the scheduled ophthalmology office visit records correlating to the given PATIENTMID.,0,0,0
comments.json_2598,Returns a list of scheduled ophthalmology office visit records correlating to the given DOCTORMID. the scheduled ophthalmology office visit records correlating to the given DOCTORMID.,0,0,0
comments.json_2599,Updates a scheduled ophthalmology office visit record for the given  OID . the scheduled ophthalmology office visit record.,0,0,0
comments.json_2600,Used for managing all static information related to an ophthalmology office visit record. For other information related to all aspects of patient care  see the other DAOs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2601,Used to get database connections,0,0,0
comments.json_2602,Used to load data from  Result Sets   and into  Prepared Statements .,0,0,0
comments.json_2603,The typical constructor . is used for obtaining SQL connections  etc.,0,0,0
comments.json_2604,Adds an  Ophthalmology office visit record to the table .,0,0,0
comments.json_2605,first   insert the record,0,0,0
comments.json_2606,then   set the  OID of the original bean to the one the database generates,0,0,0
comments.json_2607,Returns an ophthalmology office visit record correlating to the given OID. Ophthalmology office visit record.,0,0,0
comments.json_2608,Returns a list of ophthalmology office visit records correlating to the given MID. the ophthalmology office visit records correlating to the given MID.,0,0,0
comments.json_2609,Updates an ophthalmology office visit record for the given  OID . the ophthalmology office visit record.,0,0,0
comments.json_2610,Used for managing all static information related to a patient . For other information related to all aspects of patient care  see the other DAOs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2611,The typical constructor .,0,0,0
comments.json_2612,Returns the name for the given  MID,0,0,0
comments.json_2613,Returns the role of a particular patient - why is this in  Patient DAO ? It should be in  Auth DAO,0,0,0
comments.json_2614,Adds an empty patient to the table   returns the new  MID,0,0,0
comments.json_2615,Returns the patient 's information for a given  ID,0,0,0
comments.json_2616,Updates a patient 's information for the given  MID,0,0,0
comments.json_2617,Returns whether or not the patient exists,0,0,0
comments.json_2618,Returns a list of  HC Ps who are declared by the given patient,0,0,0
comments.json_2619,Declares an  HCP for a particular patient,0,0,0
comments.json_2620,Undeclare an  HCP for a given patient,0,0,0
comments.json_2621,Check if a patient has declared the given  HCP,0,0,0
comments.json_2622,Return a list of patients that the given patient represents,0,0,0
comments.json_2623,Return a list of patients that the given patient represents,0,0,0
comments.json_2624,Return a list of patients that the given patient is represented by,0,0,0
comments.json_2625,Check if the given representer represents the representee,0,0,0
comments.json_2626,Assign a representer to the representee,0,0,0
comments.json_2627,Unassign the representation,0,0,0
comments.json_2628,Removes all dependencies represented by the patient passed in the parameter,0,0,0
comments.json_2629,Removes all dependencies participated by the patient passed in the parameter,0,0,0
comments.json_2630,Return a list of all diagnoses for a given patient,0,0,0
comments.json_2631,Return a list of all procedures for a given patient,0,0,0
comments.json_2632,Return a list of all immunization procedures for a given patient,0,0,0
comments.json_2633,Return a list of all prescriptions for a patient,0,0,0
comments.json_2634,Return a list of prescriptions which are currently prescribed for a patient,0,0,0
comments.json_2635,Return a list of prescriptions which are expired prescription for a patient,0,0,0
comments.json_2636,Lists every patient in the database .,0,0,0
comments.json_2637,Return a list of patients with a special -diagnosis -history who have the logged in HCP as a DHCP and whose medications are going to expire within seven days.,0,0,0
comments.json_2638,Returns all patients with names " LIKE " (as in  SQL ) the passed in parameters .,0,0,0
comments.json_2639,Returns all patients with names " LIKE " with wildcards (as in  SQL ) the passed in parameters .,0,0,0
comments.json_2640,Returns all patients with the given  MID as a substring in their  MID,0,0,0
comments.json_2641,Allows a patient to add a designated nutritionist . Only the designated nutritionist will be able to view the patient's nutritional information.,0,0,0
comments.json_2642,Returns the  ID of the designated nutritionist for the patient returns -1 if the patient does not have a designated nutritionist,0,0,0
comments.json_2643,if it has a next one,0,0,0
comments.json_2644,Updates the designated nutritionist for this patient . Assumes that the patient already has a designated nutritionist.,0,0,0
comments.json_2645,Deletes the designated nutritionist for this patient . Assumes that the patient already has a designated nutritionist,0,0,0
comments.json_2646,Used for managing patient -specific instructions . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2647,Get a list of patient instructions for a given office visit .,0,0,0
comments.json_2648,Add a new patient instructions record .,0,0,0
comments.json_2649,Edit an existing patient instructions record in the database .,0,0,0
comments.json_2650,Remove a patient instructions record from the database .,0,0,0
comments.json_2651,Get a list of all office visits by a given patient which has patient specific instructions .,0,0,0
comments.json_2652,Used for managing information related to personnel : HC Ps   UA Ps   Admins DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2653,The typical constructor . 		which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2654,Returns the name for a given  MID,0,0,0
comments.json_2655,Adds an empty personnel   and returns the  MID .,0,0,0
comments.json_2656,Retrieves a  Personnel Bean with all of the specific information for a given employee.,0,0,0
comments.json_2657,Updates the demographics for a personnel .,0,0,0
comments.json_2658,Indicates whether a certain personnel is in the database .,0,0,0
comments.json_2659,Returns all of the hospitals this  LHCP is associated with .,0,0,0
comments.json_2660,Returns all of the hospitals this uap 's associated hcp is associated with .,0,0,0
comments.json_2661,Returns all personnel of specified specialty from the specified hospital .,0,0,0
comments.json_2662,NOTE : There is a possible  Null Pointer Exception  Threat here !,0,0,0
comments.json_2663,Returns all personnel of specified specialty from the specified hospital .,0,0,0
comments.json_2664,Returns all personnel in the database .,0,0,0
comments.json_2665,Returns a list of  UA Ps who work for this  LHCP .,0,0,0
comments.json_2666,Given a prescription that has been given   this method returns all the information for the doctor who authorized that prescription. 		describing the prescription in question. 		the doctor who authorized it.,0,0,0
comments.json_2667,Matches all personnel who have names  LIKE (as in  SQL ) the first and last names passed in.,0,0,0
comments.json_2668,Returns list of personnel who are  Lab  Techs .,0,0,0
comments.json_2669,Returns all experts with names " LIKE " with wildcards (as in  SQL ) the passed in parameters .,0,0,0
comments.json_2670,Returns all of the personnel who have a specialty of nutritionist,0,0,0
comments.json_2671,Returns all of the personnel who have a specialty of ophthalmologist or optometrist,0,0,0
comments.json_2672,Adds pre -existing conditions to a database and returns a list of conditions by  MID,0,0,0
comments.json_2673,The max length of the field,0,0,0
comments.json_2674,Validates that a string is plaintext only Matches regex [a-zA-Z0-9-_ ]+ for up to the max string length,0,1,1
comments.json_2675,Creates a new  DAO interface to the pre -existing conditions table,0,0,0
comments.json_2676,Gets all pre -existing conditions by  MID,0,0,0
comments.json_2677,Tries to add a condition to the table of existing conditions,0,0,0
comments.json_2679,Used for managing prescriptions given during a particular office visit . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2680,Adds a prescription bean to the database .,0,0,0
comments.json_2681,Removes the given medication from its office visit,0,0,0
comments.json_2682,Returns a list of information related to prescription reports given all of the office visits and the patient ID. The patient ID is necessary in case the office visit IDs are for different patients (the disambiguation is for security reasons).,0,0,0
comments.json_2683,Returns a list of information related to prescription reports given all of the office visits and the patient ID. The patient ID is necessary in case the office visit IDs are for different patients (the disambiguation is for security reasons).,0,0,0
comments.json_2685,Used for managing prescriptions given during a particular office visit . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2686,Adds a prescription bean to the database .,0,0,0
comments.json_2687,Edits an existing prescription bean .,0,0,0
comments.json_2688,Removes the given medication from its office visit,0,0,0
comments.json_2689,Used for managing medical procedures given during a particular office visit . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2691,List procedure bean in database,0,0,0
comments.json_2693,Adds a diagnosis bean to the database .,0,0,0
comments.json_2694,Edits an existing procedure bean .,0,0,0
comments.json_2695,Removes the given medication from its office visit,0,0,0
comments.json_2696,If the records release bean was inserted properly return true,0,0,0
comments.json_2697,Otherwise return false,0,0,0
comments.json_2698,If the records release bean was updated properly return true,0,0,0
comments.json_2699,Otherwise return false,0,0,0
comments.json_2700,Get the first and only records release bean,0,0,0
comments.json_2701,Used to update referrals   and fetch lists of referrals sent to and from HCPs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2702,The typical constructor .,0,0,0
comments.json_2703,Get all referrals associated with a particular office visit .,0,0,0
comments.json_2704,Gets a list of all referrals sent from an  HCP,0,0,0
comments.json_2705,Get a specific referral .,0,0,0
comments.json_2706,Set referral message .,0,0,0
comments.json_2707,Set referral message .,0,0,0
comments.json_2708,Gets a list of all referrals sent to an  HCP,0,0,0
comments.json_2709,Gets a list of all referrals a  HCP has received,0,0,0
comments.json_2710,Gets a list of all referrals sent to a patient .,0,0,0
comments.json_2711,Gets a list of all referrals sent to a patient,0,0,0
comments.json_2712,Gets a list of all referrals sent to a patient,0,0,0
comments.json_2713,Updates a given referral in the database .,0,0,0
comments.json_2714,Adds a given referral to the database .,0,0,0
comments.json_2715,Removes the given referral .,0,0,0
comments.json_2716,An abstract class that encapsulates a sorted query of referrals . Derived classes provide the user id which all retrieved referrals will contain.,0,0,0
comments.json_2717,Create a new  Referral List Query object .,0,0,0
comments.json_2718,initialize lookup map,0,0,0
comments.json_2719,Perform the query . 			  descending),0,0,0
comments.json_2720,Perform the query . 			  descending),0,0,0
comments.json_2721,Get the name of the user pseudo -field which is used to limit the query.  Only referrals where this field equals a specific user id will be returned.  This must be overridden by derived classes.,0,0,0
comments.json_2722,get User Id,0,0,0
comments.json_2723,Builds the sort portion of the  SQL query (i .e . the  ORDER  BY ... portion ).,0,0,0
comments.json_2724,Concrete  Referral List Query for accessing an  HC Ps sent referrals .,0,0,0
comments.json_2725,Sender Referral List Query,0,0,0
comments.json_2726,Concrete  Referral List Query for accessing an  HC Ps received referrals .,0,0,0
comments.json_2727,Receiver Referral List Query,0,0,0
comments.json_2728,Concrete  Referral List Query for accessing a patients referrals .,0,0,0
comments.json_2729,Patient Referral List Query,0,0,0
comments.json_2730,Get a referral query for a sending  HCP .,0,0,0
comments.json_2731,Get a referral query for a receiving  HCP .,0,0,0
comments.json_2732,Get a referral query for a patient .,0,0,0
comments.json_2733,Used for the keeping track of remote monitoring data . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2734,The typical constructor . 		which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2735,Return remote monitoring list data for a given patient .,0,0,0
comments.json_2736,Returns patient data for a given  HCP,0,0,0
comments.json_2737,Go through all patients and remove any that aren 't monitored by this  HCP,0,0,0
comments.json_2738,Add values in patient list with no data for today to list .,0,0,0
comments.json_2739,get Patient Data By Date,0,0,0
comments.json_2740,add 1 day 's worth to include the upper,0,0,0
comments.json_2741,Get the requested type of data for the specified patient .,0,0,0
comments.json_2742,Store pedometer reading and height /weight data for a given patient in the RemoteMonitoringData table 		that reported these monitoring stats,0,0,0
comments.json_2743,Private method to get the number of entries for a certain patientID and a certain data type for today.,0,0,0
comments.json_2744,validate PR,0,1,1
comments.json_2745,Show the list of  HC Ps monitoring this patient,0,0,0
comments.json_2746,Add a patient to the list of  HC Ps ' monitoring lists of  Patients what telemedicine data the patient is allowed to enter.,0,0,0
comments.json_2747,Remove a patient from the list of  HC Ps ' monitoring lists of  Patients,0,0,0
comments.json_2748,Used for handling data related to report requests . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2749,The typical constructor . 		which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2750,Returns a full bean describing a given report request .,0,0,0
comments.json_2751,Returns all report requests associated with a given requester .,0,0,0
comments.json_2752,Returns all of the report requests associated with a specific patient .,0,0,0
comments.json_2753,Adds a request for a report .,0,0,0
comments.json_2754,Sets the status of a report request to ' Viewed ',0,0,0
comments.json_2755,DAO object that interacts with the requiredprocedures database table . The requiredprocedures table contains information about each of the procedures that is required in order for a patient to enroll in public school  etc.,0,0,0
comments.json_2756,Factory to create  DAO objects,0,0,0
comments.json_2757,Bean loaders for all beans used,0,0,0
comments.json_2758,DAO for interacting with diagnoses databases,0,0,0
comments.json_2759,Creates a new  DAO to interact with the requredprocedures database table .,0,0,0
comments.json_2760,Returns a list of all procedures that a specified patient has had .,0,0,0
comments.json_2761,Returns a list of all required procedures for the specified age group (0 for kindergarten  1 for sixth grade  and 2 for college aged patients).,0,0,0
comments.json_2762,Returns a list of all required procedures for the specified age group that the specified patient has not yet received.,0,0,0
comments.json_2763,Get a list of all required immunizations that the patient does not yet have .,0,0,0
comments.json_2764,Get a list of all appropriate diagnoses,0,0,0
comments.json_2765,Provide a way to handle database queries for the reviews table   store HCP review information.,0,0,0
comments.json_2766,The basic constructor for the  Reviews DAO object .,0,0,0
comments.json_2767,Based on the information from the  Reviews Bean   add a review for an HCP (given by HCP in the bean) into the reviews table.,0,0,0
comments.json_2768,Get a list of all reviews for a given  HCP with id matching input param pid.,0,0,0
comments.json_2769,Get a list of all reviews for a given  HCP with id matching input param pid.,0,0,0
comments.json_2770,Get a list of all reviews for a given  HCP with id matching input param pid.,0,0,0
comments.json_2771,Get average rating for the given  HCP overall   all categories and all reviews .,0,0,0
comments.json_2772,This checks the appointment table in the  DB to see if the there is an appointment entry for the input mid(patient_id) and pid(doctor_id) params. It returns true if the patient has seen the given doctor  false otherwise.,0,0,0
comments.json_2773,Used for finding risk factors for a given patient . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.,0,0,0
comments.json_2774,The typical constructor . 		which is used for obtaining SQL connections  etc.,0,0,0
comments.json_2775,(a) definitions of family members might change  so it's better to centralize that code and (2) to make this code a little bit "nicer" even though it executes one query per family member. If this method gets slow  then you will need to refactor. Otherwise  let's just keep it simple...,0,0,0
comments.json_2776,Returns whether or not a patient had a childhood infection for the exact   given  ICD codes .,0,0,0
comments.json_2777,Note the datediff call - this is a  My SQL function,0,0,0
comments.json_2778,that takes the difference between two dates,0,0,0
comments.json_2779,and returns that value in terms of days .,0,0,0
comments.json_2780,6570 days is 18 years (not counting leap years ),0,0,0
comments.json_2781,Returns if the patient has ever smoked in their life,0,0,0
comments.json_2782,Returns if a patient has ever been diagnosed with the given ICD code  in the range [lower upper),0,0,0
comments.json_2783,Sleep Entry DAO .java  Version 1 4/6/2015 Copyright notice : none Responsible for loading the entries in a patient's sleep diary  the totals a patient has slept  and adding a new entry to a patient's sleep diary,0,0,0
comments.json_2784,Basic constructor            the factory to use for getting connections,0,0,0
comments.json_2785,Returns all of the entries in the  Sleep  Entry table that contain the ID of the patient.            which patient to select Sleep Diary for,0,0,0
comments.json_2786,Returns the total hours slept for each day in the sleep diary. The total just sums up the values for each individual sleep entry.            patient whose sleep diary we want         of the totals slept on each day for a patient,0,0,0
comments.json_2787,Adds a sleep entry to a patient 's sleep diary            the entry to add,0,0,0
comments.json_2788,Queries the db to find the highest sleep entry id currently in use and then returns the next number so it can be used for a new sleep entry.,0,0,0
comments.json_2789,Deletes the sleep entry from the sleep diary that has the same unique id as the one passed in. Returns the count of the number of rows affected. The number of rows affected should never be more than 1. The patientMID is included to try to ensure that users cannot delete sleep diary entries that belong to users other than themselves.            which sleep entry to delete            the owner of this sleep entry,0,0,0
comments.json_2790,Updates a particular sleep entry with the new data . Neither the entryid nor the patientid will ever change  so there is no reason to include them as possibilities to change. It includes the patientMID in an attempt to ensure that patients can only update their own previous sleep entries.            the sleep entry to update            who the patient is making this update            the edited form of the sleep entry,0,0,0
comments.json_2791,Returns the entries in the  Sleep  Entry table that are within a specified date range.            the lower date            the lower date            which patient to select Sleep Diary for,0,0,0
comments.json_2792,Convert java .util . Date to java .sql . Date,0,0,0
comments.json_2793,Returns the total hours and calories burned of each day in the sleep diary that falls between the two given dates. The total just sums up the values for each individual sleep entry.            the lower date            the lower date            which patient to select Sleep Diary for,0,0,0
comments.json_2794,Add params,0,0,0
comments.json_2795,Convert java .util . Date to java .sql . Date,0,0,0
comments.json_2796,A  DAO for handling all  Survey data . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2797,The typical constructor .,0,0,0
comments.json_2798,Insert survey data into database .,0,0,0
comments.json_2799,Gets survey data from the database by the office visit id . Creates an instance of an SurveyBean with data and returns it.,0,0,0
comments.json_2800,Has this survey been completed ?,0,0,0
comments.json_2801,A  DAO for handling all  Survey results . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2802,The typical constructor .,0,0,0
comments.json_2803,Returns all the survey results in the database that correspond to a particular zip code .,0,0,0
comments.json_2804,Returns all the survey data associated with a given hospital and a certain specialty .,0,0,0
comments.json_2805,Used for the logging mechanism . DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2806,The typical constructor .,0,0,0
comments.json_2807,Returns the whole transaction log,0,0,0
comments.json_2808,Log a transaction   with all of the info . The meaning of secondary MID and added Info changes depending on the transaction type.,0,0,0
comments.json_2809,Return a list of all transactions in which an  HCP accessed the given patient 's record,0,0,0
comments.json_2810,The  Most  Thorough  Fetch,0,0,0
comments.json_2811,Return a list of all transactions in which an  HCP accessed the given patient 's record   within the dates,0,0,0
comments.json_2812,add 1 day 's worth to include the upper,0,0,0
comments.json_2813,Returns the operation profile,0,0,0
comments.json_2815,Used for queries related to patient reminders DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2816,The typical constructor .,0,0,0
comments.json_2817,Returns a list of patients associated with a given  HCP .,0,0,0
comments.json_2818,Returns a list of patients who need a visit for this  HCP . This means : Alive patient  no office visit for > 1 yr  diagnosed: - Diabetes: 250.xx - Asthma: 493.xx - Circulatory-System Disease: [ 390.00   459.99 ],0,0,0
comments.json_2819,Returns a list of old people who need a flu shot CURRENT SPEC: Alive patient  over 50 years old  no flu shot - 90656  90658  90660 a) during the months 09 - 12 of current calendar year if in 09 - 12 b) during the months 09 - 12 of last calendar year if not in 09 - 12 Determines current date and calls one of two private methods these methods return different sets of people - a: people who haven't had a flu shot yet this year and need one - b: people who missed last year's flu shot and need a check-up,0,0,0
comments.json_2820,Fall 2007 Bug  Fix : Use the correct range for a zero -based calendar (eg  January is 0),0,0,0
comments.json_2821,Used for managing  Wards DAO stands for Database Access Object. All DAOs are intended to be reflections of the database  that is  one DAO per table in the database (most of the time). For more complex sets of queries  extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be connections and/or accessing other DAOs.,0,0,0
comments.json_2822,The typical constructor .,0,0,0
comments.json_2823,Returns a list of all wards under a hospital sorted alphabetically,0,0,0
comments.json_2824,Adds a  Ward,0,0,0
comments.json_2825,Updates a particular ward 's information . Returns the number of rows affected (should be 1),0,0,0
comments.json_2826,Removes a ward from a hospital . Returns whether or not any changes were made,0,0,0
comments.json_2827,Returns a list of all wardrooms under a ward sorted alphabetically,0,0,0
comments.json_2828,Adds a  Ward Room,0,0,0
comments.json_2829,Updates a particular wardroom 's information . Returns the number of rows affected (should be 1),0,0,0
comments.json_2830,Removes a room from a ward . Returns whether or not any changes were made,0,0,0
comments.json_2831,Returns a list of all wards assigned to a  HCP sorted alphabetically,0,0,0
comments.json_2832,Returns a list of all  HC Ps assigned to a ward sorted alphabetically,0,0,0
comments.json_2833,Assigns an  HCP to a the specified ward .,0,0,0
comments.json_2834,Removes a  HCP and  Ward association,0,0,0
comments.json_2835,Updates a particular wardroom 's occupied By information . Returns the number of rows affected (should be 1),0,0,0
comments.json_2836,Returns a list of all wards with the status specified that the hcp has access to,0,0,0
comments.json_2837,Returns a  Ward Room specified by the id,0,0,0
comments.json_2838,Returns a  Ward specified by the id,0,0,0
comments.json_2839,Returns the hospital that the specified ward room is located in,0,0,0
comments.json_2840,Logs the checkout reason for a patient,0,0,0
comments.json_2841,Returns the hospital that the specified user is located in,0,0,0
comments.json_2842,DAO for the  Zip  Code table,0,0,0
comments.json_2843,Returns the zip code bean for a particular zip code .,0,0,0
comments.json_2844,Produces the  JDBC connection from  Tomcat 's  JDBC connection pool (defined in context .xml ). Produces and exception when running the unit tests because they're not being run through Tomcat.,0,0,0
comments.json_2845,In production situations,0,0,0
comments.json_2846,For our special unit test - do not use unless you know what you are doing,0,0,0
comments.json_2847,Provides a few extra date utilities  :),0,0,0
comments.json_2848,Returns a  MM /dd /yyyy format of the date for the given years ago,0,0,0
comments.json_2849,Checks to see if a given date is within a range of months <strong > INCLUSIVELY </strong >  agnostic of the year. <br /> <br /> The range "wraps" so that if the first month is after the second month  then the definition of "is in month range" is:<br /> the date falls outside of secondMonth  firstMonth  but including secondMonth and firstMonth. Modular arithmetic is used to adjust month values into the valid range.,0,1,1
comments.json_2850,Same as is In Month Range but uses the current date as the date value .,0,0,0
comments.json_2851,Returns the date a certain number of years ago,0,0,0
comments.json_2852,Returns the date a certain number of years ago,0,0,0
comments.json_2853,Returns the date a certain number of days ago,0,0,0
comments.json_2854,Returns the date a certain number of days ago,0,0,0
comments.json_2855,<!-- Pass in  INSTANTIATED sql date objects and they will be set to the specified range   ie   FROM <current year> - yearsAgo1/monthValue1/01 TO <current year> - yearsAgo2/monthValue2/<last day of month2>--> Pass in INSTANTIATED sql date objects and they will be set to the specified range  ie  FROM &lt;current year&gt; - yearsAgo1/monthValue1/01 TO &lt;current year&gt; - yearsAgo2/monthValue2/&lt;last day of month2&gt;            First sql.Date object to be set            Second sql.Date object to be set,0,0,0
comments.json_2856,Provides a few database utilities,0,0,0
comments.json_2857,Used to check if we can actually obtain a connection .,0,0,0
comments.json_2858,Close the prepared statement and the connection in a proper way,0,0,0
comments.json_2859,Returns the last  ID that was generated for an auto -increment column . Please note that this does  NOT cause transaction problems! last_insert_id() returns the last generated ID on a per-connection basis. See the MySQL documentation at the following location to confirm this:,0,0,0
comments.json_2860,Sends email to users . Since we don 't want to train spammers in 326  this just inserts into a database . If we put this into an actual system  we would replace this class with stuff from javax.mail,0,0,0
comments.json_2861,DO  NOT  SEND  REAL  EMAILS !!!!!,0,0,0
comments.json_2862,Sending emails - even to a throwaway account   is a waste of bandwidth and looks very suspicious .,0,0,0
comments.json_2863,If you want to know how to send emails from  Java   just  Google it on your own time .,0,0,0
comments.json_2864,All possible blood types,0,0,0
comments.json_2865,All possible ethnicities represented in i Trust .,0,0,0
comments.json_2866,Exercise Type .java  Version 1 4/2/2015 Copyright notice : none The types of exercise a patient can log.,0,0,0
comments.json_2867,Running   cycling   etc,0,0,0
comments.json_2868,Bench press   curls   etc,0,0,0
comments.json_2869,Sets the name of the exercise            the name of the exercise,0,0,0
comments.json_2870,Returns the name of the exercise,0,0,0
comments.json_2871,Returns the name of the exercise,0,0,0
comments.json_2872,Tries to parse a string into one of the 2 valid exercise types . Throws an IllegalArgumentException if the string is not one of the given exercise types            the name of the exercise,0,0,0
comments.json_2873,Flag Value is an enum that represents the different flags that exist in i Trust for obstetrics .,0,0,0
comments.json_2874,Has  High  Blood  Pressure,0,0,0
comments.json_2875,Has an advanced maternal age,0,0,0
comments.json_2876,Has maternal allergies,0,0,0
comments.json_2877,Has low lying placenta,0,0,0
comments.json_2878,Has a genetic miscarriage,0,0,0
comments.json_2879,Has abnormality,0,0,0
comments.json_2880,Has twins,0,0,0
comments.json_2881,Has a weight change,0,0,0
comments.json_2882,has rh negative blood type,0,0,0
comments.json_2883,has preexisting conditions,0,0,0
comments.json_2884,Constructor for a  Flag Value that takes a name and id .,0,0,0
comments.json_2885,Custom replacement method for the un -overridable value Of method . Parses non-case sensitive and can use either ID or Name as needed.,0,0,0
comments.json_2886,Returns the  ID of the flag .,0,0,0
comments.json_2887,Returns the string value of the flag .,0,0,0
comments.json_2888,Male or  Female .  Not specified is provided as well   for incomplete forms or patient 's discretion .,0,0,0
comments.json_2889,Meal Type .java Version 1 2/21/2015 Copyright notice: none All of the different types of meals that can be entered into the food diary.,0,0,0
comments.json_2890,Meal was eaten for breakfast,0,0,0
comments.json_2891,Meal was eaten for lunch,0,0,0
comments.json_2892,Meal was eaten as a snack,0,0,0
comments.json_2893,Meal was eaten for dinner,0,0,0
comments.json_2894,Sets the name of the meal,0,0,0
comments.json_2895,Returns the name of the meal,0,0,0
comments.json_2896,Returns the name of the meal,0,0,0
comments.json_2897,Tries to parse a string into one of the 4 valid meal types . Throws an illegalargumentexception if the string is not one of the given meal types,0,0,0
comments.json_2898,Every prescription that should be alerted for emergency reports - in the future   this should be abstracted out to a database table so it can be changed at runtime.,0,0,0
comments.json_2899,The i Trust user roles : Patient   ER   HCP   UAP   LT   PHA   Administrator and  Tester . Consult the requirements for the contextual meanings of these individual choices.,0,0,0
comments.json_2900,PATIENT,0,0,0
comments.json_2901,ER,0,0,0
comments.json_2902,HCP,0,0,0
comments.json_2903,UAP,0,0,0
comments.json_2904,LT,0,0,0
comments.json_2905,ADMIN,0,0,0
comments.json_2906,PHA,0,0,0
comments.json_2907,TESTER,0,0,0
comments.json_2908,Role,0,0,0
comments.json_2909,get DB Table,0,0,0
comments.json_2910,get User Roles String,0,0,0
comments.json_2911,get Mid First Digit,0,0,0
comments.json_2912,parse,0,0,0
comments.json_2913,Sleep Type .java  Version 1 4/6/2015 Copyright notice : none The types of sleep a patient can log.,0,0,0
comments.json_2914,Sets the name of the sleep            the name of the sleep,0,0,0
comments.json_2915,Returns the name of the sleep,0,0,0
comments.json_2916,Returns the name of the sleep,0,0,0
comments.json_2917,Tries to parse a string into one of the 2 valid sleep types . Throws an IllegalArgumentException if the string is not one of the given sleep types            the name of the sleep,0,0,0
comments.json_2918,Sorting direction .  Used to dynamically build  SQL queries .,0,0,0
comments.json_2919,All of our wonderful states .,0,0,0
comments.json_2920,Just to show that this is intentional,0,0,0
comments.json_2921,All of the possible transaction types   in no particular order   used in producing the operational profile . TransactionCode -- identification code Description -- basic description of the event ActionPhrase -- a patient-centered English sentence describing the action (used in activity feeds) PatientViewable -- boolean for if the action will be displayed in the patient activity feed,0,0,0
comments.json_2922,LOGIN _ FAILURE,0,0,0
comments.json_2923,HOME _ VIEW,0,0,0
comments.json_2924,UNCAUGHT _ EXCEPTION,0,0,0
comments.json_2925,GLOBAL _ PREFERENCES _ VIEW,0,0,0
comments.json_2926,GLOBAL _ PREFERENCES _ EDIT,0,0,0
comments.json_2927,USER _ PREFERENCES _ VIEW,0,0,0
comments.json_2928,USER _ PREFERENCES _ EDIT,0,0,0
comments.json_2929,PATIENT _ CREATE,0,0,0
comments.json_2930,PATIENT _ DISABLE,0,0,0
comments.json_2931,PATIENT _ DEACTIVATE,0,0,0
comments.json_2932,PATIENT _ ACTIVATE,0,0,0
comments.json_2933,LHCP _ CREATE,0,0,0
comments.json_2934,LHCP _ EDIT,0,0,0
comments.json_2935,LHCP _ DISABLE,0,0,0
comments.json_2936,ER _ CREATE,0,0,0
comments.json_2937,ER _ EDIT,0,0,0
comments.json_2938,ER _ DISABLE,0,0,0
comments.json_2939,PHA _ CREATE,0,0,0
comments.json_2940,PHA _ EDIT,0,0,0
comments.json_2941,PHA _ DISABLE,0,0,0
comments.json_2942,LHCP _ ASSIGN _ HOSPITAL,0,0,0
comments.json_2943,LHCP _ REMOVE _ HOSPITAL,0,0,0
comments.json_2944,LT _ ASSIGN _ HOSPITAL,0,0,0
comments.json_2945,LT _ REMOVE _ HOSPITAL,0,0,0
comments.json_2946,UAP _ CREATE,0,0,0
comments.json_2947,UAP _ EDIT,0,0,0
comments.json_2948,UAP _ DISABLE,0,0,0
comments.json_2949,PERSONNEL _ VIEW,0,0,0
comments.json_2950,LT _ CREATE,0,0,0
comments.json_2951,LT _ EDIT,0,0,0
comments.json_2952,LT _ DISABLE,0,0,0
comments.json_2953,LOGIN _ SUCCESS,0,0,0
comments.json_2954,LOGOUT,0,0,0
comments.json_2955,LOGOUT _ INACTIVE,0,0,0
comments.json_2956,PASSWORD _ RESET,0,0,0
comments.json_2957,DEMOGRAPHICS _ VIEW,0,0,0
comments.json_2958,DEMOGRAPHICS _ EDIT,0,0,0
comments.json_2959,Set to false as per the requirements page for  UC 43 as it is not supposed to be shown for  LHCP or  DLHCP,0,0,0
comments.json_2960,PATIENT _ PHOTO _ UPLOAD,0,0,0
comments.json_2961,PATIENT _ PHOTO _ REMOVE,0,0,0
comments.json_2962,DEPEND _ DEMOGRAPHICS _ EDIT,0,0,0
comments.json_2963,LHCP _ VIEW,0,0,0
comments.json_2964,LHCP _ DECLARE _ DLHCP,0,0,0
comments.json_2965,LHCP _ UNDECLARE _ DLHCP,0,0,0
comments.json_2966,ACCESS _ LOG _ VIEW,0,0,0
comments.json_2967,MEDICAL _ RECORD _ VIEW,0,0,0
comments.json_2968,PATIENT _ HEALTH _ INFORMATION _ VIEW,0,0,0
comments.json_2969,PATIENT _ HEALTH _ INFORMATION _ EDIT,0,0,0
comments.json_2970,BASIC _ HEALTH _ CHARTS _ VIEW,0,0,0
comments.json_2971,OFFICE _ VISIT _ CREATE,0,0,0
comments.json_2972,OFFICE _ VISIT _ VIEW,0,0,0
comments.json_2973,OFFICE _ VISIT _ EDIT,0,0,0
comments.json_2974,PRESCRIPTION _ ADD,0,0,0
comments.json_2975,PRESCRIPTION _ EDIT,0,0,0
comments.json_2976,PRESCRIPTION _ REMOVE,0,0,0
comments.json_2977,LAB _ PROCEDURE _ ADD,0,0,0
comments.json_2978,LAB _ PROCEDURE _ EDIT,0,0,0
comments.json_2979,LAB _ PROCEDURE _ REMOVE,0,0,0
comments.json_2980,DIAGNOSIS _ ADD,0,0,0
comments.json_2981,DIAGNOSIS _ REMOVE,0,0,0
comments.json_2982,DIAGNOSIS _ URL _ EDIT,0,0,0
comments.json_2983,PROCEDURE _ ADD,0,0,0
comments.json_2984,PROCEDURE _ EDIT,0,0,0
comments.json_2985,PROCEDURE _ REMOVE,0,0,0
comments.json_2986,IMMUNIZATION _ ADD,0,0,0
comments.json_2987,IMMUNIZATION _ REMOVE,0,0,0
comments.json_2988,OFFICE _ VISIT _ BILLED,0,0,0
comments.json_2989,OPERATIONAL _ PROFILE _ VIEW,0,0,0
comments.json_2990,HEALTH _ REPRESENTATIVE _ DECLARE,0,0,0
comments.json_2991,HEALTH _ REPRESENTATIVE _ UNDECLARE,0,0,0
comments.json_2992,MEDICAL _ PROCEDURE _ CODE _ ADD,0,0,0
comments.json_2993,MEDICAL _ PROCEDURE _ CODE _ VIEW,0,0,0
comments.json_2994,MEDICAL _ PROCEDURE _ CODE _ EDIT,0,0,0
comments.json_2995,IMMUNIZATION _ CODE _ ADD,0,0,0
comments.json_2996,IMMUNIZATION _ CODE _ VIEW,0,0,0
comments.json_2997,IMMUNIZATION _ CODE _ EDIT,0,0,0
comments.json_2998,DIAGNOSIS _ CODE _ ADD,0,0,0
comments.json_2999,DIAGNOSIS _ CODE _ VIEW,0,0,0
comments.json_3000,DIAGNOSIS _ CODE _ EDIT,0,0,0
comments.json_3001,DRUG _ CODE _ ADD,0,0,0
comments.json_3002,DRUG _ CODE _ VIEW,0,0,0
comments.json_3003,DRUG _ CODE _ EDIT,0,0,0
comments.json_3004,DRUG _ CODE _ REMOVE,0,0,0
comments.json_3005,LOINC _ CODE _ ADD,0,0,0
comments.json_3006,LOINC _ CODE _ VIEW,0,0,0
comments.json_3007,LOINC _ CODE _ EDIT,0,0,0
comments.json_3008,LOINC _ CODE _ FILE _ ADD,0,0,0
comments.json_3009,RISK _ FACTOR _ VIEW,0,0,0
comments.json_3010,PATIENT _ REMINDERS _ VIEW,0,0,0
comments.json_3011,HOSPITAL _ LISTING _ ADD,0,0,0
comments.json_3012,HOSPITAL _ LISTING _ VIEW,0,0,0
comments.json_3013,HOSPITAL _ LISTING _ EDIT,0,0,0
comments.json_3014,PRESCRIPTION _ REPORT _ VIEW,0,0,0
comments.json_3015,DEATH _ TRENDS _ VIEW,0,0,0
comments.json_3016,EMERGENCY _ REPORT _ CREATE,0,0,0
comments.json_3017,EMERGENCY _ REPORT _ VIEW,0,0,0
comments.json_3018,APPOINTMENT _ TYPE _ ADD,0,0,0
comments.json_3019,APPOINTMENT _ TYPE _ VIEW,0,0,0
comments.json_3020,APPOINTMENT _ TYPE _ EDIT,0,0,0
comments.json_3021,APPOINTMENT _ ADD,0,0,0
comments.json_3022,APPOINTMENT _ VIEW,0,0,0
comments.json_3023,APPOINTMENT _ EDIT,0,0,0
comments.json_3024,APPOINTMENT _ REMOVE,0,0,0
comments.json_3025,APPOINTMENT _ ALL _ VIEW,0,0,0
comments.json_3026,APPOINTMENT _ CONFLICT _ OVERRIDE,0,0,0
comments.json_3027,APPOINTMENT _ REQUEST _ SUBMITTED,0,0,0
comments.json_3028,APPOINTMENT _ REQUEST _ APPROVED,0,0,0
comments.json_3029,APPOINTMENT _ REQUEST _ REJECTED,0,0,0
comments.json_3030,APPOINTMENT _ REQUEST _ VIEW,0,0,0
comments.json_3031,COMPREHENSIVE _ REPORT _ VIEW,0,0,0
comments.json_3032,COMPREHENSIVE _ REPORT _ ADD,0,0,0
comments.json_3033,SATISFACTION _ SURVEY _ TAKE,0,0,0
comments.json_3034,SATISFACTION _ SURVEY _ VIEW,0,0,0
comments.json_3035,LAB _ RESULTS _ UNASSIGNED,0,0,0
comments.json_3036,LAB _ RESULTS _ CREATE,0,0,0
comments.json_3037,LAB _ RESULTS _ VIEW,0,0,0
comments.json_3038,LAB _ RESULTS _ REASSIGN,0,0,0
comments.json_3039,LAB _ RESULTS _ REMOVE,0,0,0
comments.json_3040,LAB _ RESULTS _ ADD _ COMMENTARY,0,0,0
comments.json_3041,LAB _ RESULTS _ VIEW _ QUEUE,0,0,0
comments.json_3042,LAB _ RESULTS _ RECORD,0,0,0
comments.json_3043,LAB _ RESULTS _ RECEIVED,0,0,0
comments.json_3044,EMAIL _ SEND,0,0,0
comments.json_3045,EMAIL _ HISTORY _ VIEW,0,0,0
comments.json_3046,PATIENT _ LIST _ VIEW,0,0,0
comments.json_3047,EXPERIENCED _ LHCP _ FIND,0,0,0
comments.json_3048,MESSAGE _ SEND,0,0,0
comments.json_3049,MESSAGE _ VIEW,0,0,0
comments.json_3050,INBOX _ VIEW,0,0,0
comments.json_3051,OUTBOX _ VIEW,0,0,0
comments.json_3052,PATIENT _ FIND _ LHCP _ FOR _ RENEWAL,0,0,0
comments.json_3053,EXPIRED _ PRESCRIPTION _ VIEW,0,0,0
comments.json_3054,PRECONFIRM _ PRESCRIPTION _ RENEWAL,0,0,0
comments.json_3055,DIAGNOSES _ LIST _ VIEW,0,0,0
comments.json_3056,CONSULTATION _ REFERRAL _ CREATE,0,0,0
comments.json_3057,CONSULTATION _ REFERRAL _ VIEW,0,0,0
comments.json_3058,CONSULTATION _ REFERRAL _ EDIT,0,0,0
comments.json_3059,CONSULTATION _ REFERRAL _ CANCEL,0,0,0
comments.json_3060,PATIENT _ LIST _ ADD,0,0,0
comments.json_3061,PATIENT _ LIST _ EDIT,0,0,0
comments.json_3062,PATIENT _ LIST _ REMOVE,0,0,0
comments.json_3063,TELEMEDICINE _ DATA _ REPORT,0,0,0
comments.json_3064,TELEMEDICINE _ DATA _ VIEW,0,0,0
comments.json_3065,ADVERSE _ EVENT _ REPORT,0,0,0
comments.json_3066,ADVERSE _ EVENT _ VIEW,0,0,0
comments.json_3067,ADVERSE _ EVENT _ REMOVE,0,0,0
comments.json_3068,ADVERSE _ EVENT _ REQUEST _ MORE,0,0,0
comments.json_3069,ADVERSE _ EVENT _ CHART _ VIEW,0,0,0
comments.json_3070,OVERRIDE _ INTERACTION _ WARNING,0,0,0
comments.json_3071,OVERRIDE _ CODE _ ADD,0,0,0
comments.json_3072,OVERRIDE _ CODE _ EDIT,0,0,0
comments.json_3073,DRUG _ INTERACTION _ ADD,0,0,0
comments.json_3074,DRUG _ INTERACTION _ EDIT,0,0,0
comments.json_3075,DRUG _ INTERACTION _ DELETE,0,0,0
comments.json_3076,CALENDAR _ VIEW,0,0,0
comments.json_3077,UPCOMING _ APPOINTMENTS _ VIEW,0,0,0
comments.json_3078,NOTIFICATIONS _ VIEW,0,0,0
comments.json_3079,ACTIVITY _ FEED _ VIEW,0,0,0
comments.json_3080,PATIENT _ INSTRUCTIONS _ ADD,0,0,0
comments.json_3081,PATIENT _ INSTRUCTIONS _ EDIT,0,0,0
comments.json_3082,PATIENT _ INSTRUCTIONS _ DELETE,0,0,0
comments.json_3083,PATIENT _ INSTRUCTIONS _ VIEW,0,0,0
comments.json_3084,DIAGNOSIS _ TRENDS _ VIEW,0,0,0
comments.json_3085,DIAGNOSIS _ EPIDEMICS _ VIEW,0,0,0
comments.json_3086,GROUP _ REPORT _ VIEW,0,0,0
comments.json_3087,FIND _ EXPERT,0,0,0
comments.json_3088,FIND _ EXPERT _ ZIP _ ERROR,0,0,0
comments.json_3089,PATIENT _ ASSIGNED _ TO _ ROOM,0,0,0
comments.json_3090,PATIENT _ REMOVED _ FROM _ ROOM,0,0,0
comments.json_3091,ROOMS _ FULL,0,0,0
comments.json_3092,CREATE _ BASIC _ HEALTH _ METRICS,0,0,0
comments.json_3093,VIEW _ BASIC _ HEALTH _ METRICS,0,0,0
comments.json_3094,EDIT _ BASIC _ HEALTH _ METRICS,0,0,0
comments.json_3095,REMOVE _ BASIC _ HEALTH _ METRICS,0,0,0
comments.json_3096,PATIENT _ VIEW _ BASIC _ HEALTH _ METRICS,0,0,0
comments.json_3097,HCP _ VIEW _ BASIC _ HEALTH _ METRIC Sc,0,0,0
comments.json_3098,HCP _ VIEW _ PERCENTILES _ CHART,0,0,0
comments.json_3099,PATIENT _ VIEW _ PERCENTILES _ CHART,0,0,0
comments.json_3100,ADMIN _ UPLOAD _ CDCMETRICS,0,0,0
comments.json_3101,PASSWORD _ CHANGE,0,0,0
comments.json_3102,PASSWORD _ CHANGE _ FAILED,0,0,0
comments.json_3103,IMMUNIZATION _ REPORT _ PATIENT _ VIEW,0,0,0
comments.json_3104,IMMUNIZATION _ REPORT _ HCP _ VIEW,0,0,0
comments.json_3105,PATIENT _ RELEASE _ HEALTH _ RECORDS,0,0,0
comments.json_3106,PATIENT _ VIEW _ RELEASE _ REQUEST,0,0,0
comments.json_3107,HCP _ RELEASE _ APPROVAL,0,0,0
comments.json_3108,HCP _ RELEASE _ DENIAL,0,0,0
comments.json_3109,UAP _ RELEASE _ APPROVAL,0,0,0
comments.json_3110,UAP _ RELEASE _ DENIAL,0,0,0
comments.json_3111,HCP _ CREATED _ DEPENDENT _ PATIENT,0,0,0
comments.json_3112,HCP _ CHANGE _ PATIENT _ DEPENDENCY,0,0,0
comments.json_3113,PATIENT _ VIEW _ DEPENDENT _ REQUESTS,0,0,0
comments.json_3114,PATIENT _ REQUEST _ DEPEDENT _ RECORDS,0,0,0
comments.json_3115,PATIENT _ VIEWS _ BILLS,0,0,0
comments.json_3116,PATIENT _ VIEWS _ BILL,0,0,0
comments.json_3117,PATIENT _ PAYS _ BILL,0,0,0
comments.json_3118,PATIENT _ SUBMITS _ INSURANCE,0,0,0
comments.json_3119,UAP _ INITIAL _ APPROVAL,0,0,0
comments.json_3120,UAP _ INITIAL _ DENIAL,0,0,0
comments.json_3121,UAP _ SECOND _ APPORVAL,0,0,0
comments.json_3122,UAP _ SECOND _ DENIAL,0,0,0
comments.json_3123,PATIENT _ RESUBITS _ INSURANCE,0,0,0
comments.json_3124,VIEW _ EXPERT _ SEARCH,0,0,0
comments.json_3125,VIEW _ REVIEWS,0,0,0
comments.json_3126,SUBMIT _ REVIEW,0,0,0
comments.json_3127,CREATE _ INITIAL _ OBSTETRICS _ RECORD,0,0,0
comments.json_3128,VIEW _ INITIAL _ OBSTETRICS _ RECORD,0,0,0
comments.json_3129,CREATE _ INITIAL _ OBSTETRICS _ RECORD,0,0,0
comments.json_3130,VIEW _ INITIAL _ OBSTETRICS _ RECORD,0,0,0
comments.json_3131,VIEW _ INITIAL _ OBSTETRICS _ RECORD,0,0,0
comments.json_3132,ADD _ ALLERGY,0,0,0
comments.json_3133,Added to the  Food  Diary,0,0,0
comments.json_3134,Patient viewed food diary,0,0,0
comments.json_3135,Nutritionist viewed food diary,0,0,0
comments.json_3136,Patient edited an entry from their food diary,0,0,0
comments.json_3137,Patient deleted an entry from their food diary,0,0,0
comments.json_3138,Patient changed their designated  Nutritionist,0,0,0
comments.json_3139,Added to the  Sleep  Diary,0,0,0
comments.json_3140,Patient viewed  Sleep diary,0,0,0
comments.json_3141,HCP viewed  Sleep diary,0,0,0
comments.json_3142,Patient edited an entry from their  Sleep diary,0,0,0
comments.json_3143,Patient deleted an entry from their  Sleep diary,0,0,0
comments.json_3144,Added to the  Exercise  Diary,0,0,0
comments.json_3145,Patient viewed  Exercise diary,0,0,0
comments.json_3146,Trainer viewed  Exercise diary,0,0,0
comments.json_3147,Patient edited an entry from their  Exercise diary,0,0,0
comments.json_3148,Patient deleted an entry from their  Exercise diary,0,0,0
comments.json_3149,Added to  Labels,0,0,0
comments.json_3150,Patient edited a  Label,0,0,0
comments.json_3151,Patient deleted a  Label,0,0,0
comments.json_3152,Patient edited a  Label,0,0,0
comments.json_3153,Patient edited a  Label,0,0,0
comments.json_3154,Patient edited a  Label,0,0,0
comments.json_3155,CREATE _ OPHTHALMOLOGY _ OV,0,0,0
comments.json_3156,VIEW _ OPHTHALMOLOGY _ OV,0,0,0
comments.json_3157,EDIT _ OPHTHALMOLOGY _ OV,0,0,0
comments.json_3158,PATIENT _ VIEW _ OPHTHALMOLOGY _ OV,0,0,0
comments.json_3159,PATIENT _ VIEW _ DEPENDENT _ OPHTHALMOLOGY _ OV,0,0,0
comments.json_3160,CREATE _ OPHTHALMOLOGY _ SURGERY,0,0,0
comments.json_3161,VIEW _ OPHTHALMOLOGY _ SURGERY,0,0,0
comments.json_3162,EDIT _ OPHTHALMOLOGY _ SURGERY,0,0,0
comments.json_3163,PATIENT _ VIEW _ OPHTHALMOLOGY _ SURGERY,0,0,0
comments.json_3164,This string is used in the  SQL statement associated with pulling events for display in a patient's Access Log,0,0,0
comments.json_3165,This string is used in the  SQL statement associated with excluding events as specified in  UC 43,0,0,0
comments.json_3166,get Code,0,0,0
comments.json_3167,get Description,0,0,0
comments.json_3168,get Action Phrase,0,0,0
comments.json_3169,is Patient Viewable,0,0,0
comments.json_3170,parse,0,0,0
comments.json_3171,This exception is thrown to indicate any type of error which occurs while parsing a CSV file.,0,0,0
comments.json_3172,Unique identifier for the exception,0,0,0
comments.json_3173,The error message for the exception,0,0,0
comments.json_3174,Constructor initializing the error message string,0,0,0
comments.json_3175,Returns the exception 's error message,0,0,0
comments.json_3176,This exception is thrown to indicate any type of error which occurs while parsing a CSV file.,0,0,0
comments.json_3177,Unique identifier for the exception,0,0,0
comments.json_3178,The error message for the exception,0,0,0
comments.json_3179,Constructor initializing the error message string,0,0,0
comments.json_3180,Returns the exception 's error message,0,0,0
comments.json_3181,The reasoning behind this wrapper exception is security . When an  SQL  Exception gets thrown all the way back to the JSP  we begin to reveal details about our database (even knowing that it's MySQL is bad!) So  we make a wrapper exception with a vague description  but we also keep track of the SQL Exception for debugging and testing purposes.,1,0,1
comments.json_3183,Used by the validators to create a list of error messages .,0,1,1
comments.json_3184,Adds a message to the list if it 's not a  Java null or empty string .,0,0,0
comments.json_3185,Returns the list of error messages,0,0,0
comments.json_3186,Returns true if the list has any errors,0,0,0
comments.json_3187,This exception is used specifically for when an action involves the correct and proper submission of a web form.  Form Validation is handled by a series of other classes  but when form validation is incorrect or incomplete  this exception is thrown.,0,1,1
comments.json_3188,Constructor with error messages passed as a list of parameters to the method .,0,0,0
comments.json_3189,Constructor with error messages as a special  Error List data type .,0,0,0
comments.json_3190,Returns the error list as a java .util . List of  Strings .,0,0,0
comments.json_3191,The error message will be displayed at the top of the i Trust page as in other i Trust  Exceptions .,0,0,0
comments.json_3192,The special formatting for error messages is then kept in one place .,0,0,0
comments.json_3193,Like print HTML   except a string is returned .,0,0,0
comments.json_3194,A specialized exception class for displaying i Trust error messages . This exception is handled by the default iTrust exception handler.,0,0,0
comments.json_3195,The typical constructor .,0,0,0
comments.json_3196,For messages which are displayed to the user . Usually   this is a very general message for security reasons.,1,0,1
comments.json_3197,For exceptions which show a lot of technical detail   usually delegated to a subclass,0,0,0
comments.json_3198,This error message is thrown when checking for health risk indicators and the patient has had no health records entered.  It is a separate case than an iTrustException because the error handling is slightly different.,0,1,1
comments.json_3199,The default constructor   which just passes a pre -specified message to an i Trust Exception .,0,0,0
comments.json_3205,Warning if providing wrong prescription,0,0,0
comments.json_3206,Display warning message,0,0,0
comments.json_3207,Escapes a few key  HTML characters and does some other checking,0,0,0
comments.json_3208,Escapes a few key  HTML characters,0,0,0
comments.json_3209,Checks  URL,0,0,0
comments.json_3210,Provides a singleton for accessing the current locale of i Trust   Could possibly load the country and language from a file .,0,0,0
comments.json_3211,Localization,0,0,0
comments.json_3212,Returns the current locale,0,0,0
comments.json_3213,singleton method   may want to make this thread safe   as far as  I know iTrust doesn't do any multithreading though...,0,0,0
comments.json_3215,get String,0,0,0
comments.json_3216,Provides a utility method that converts the " Map " from the  JSP container to a type -checked hashmap,0,0,0
comments.json_3217,Provides a utility method that converts the " Map " from the  JSP container to a type -checked hashmap,0,0,0
comments.json_3218,Generates a random string of characters,0,0,0
comments.json_3219,Returns a string of random characters,0,0,0
comments.json_3244,MID  ,0,0,0
comments.json_3256,Figures out which risk checker strategy to use,0,0,0
comments.json_3257,Given a factory and patient  ID   and sets up a list of all risk checkers,0,0,0
comments.json_3259,The risk factor associated with checking if a person is over a particular age,0,0,0
comments.json_3260,Checks if the patient had the given diagnoses during childhood .,0,0,0
comments.json_3261,Checks if cholesterol is over a given threshold for a given patient,0,0,0
comments.json_3262,Checks if the ethnicity of a patient matches the one at risk,0,0,0
comments.json_3263,Checks if a patient has a family history of a given diagnosis range . Delegates straight to the  DAO .,0,0,0
comments.json_3264,Checks if the patient 's gender matches the given at -risk one .,0,0,0
comments.json_3265,Checks if the patient 's blood pressure is above a given threshold .,0,0,0
comments.json_3266,Abstract class for risk factors   the has Risk Factor delegates to the protected version . Caches the result in case it gets checked more than once.,0,0,0
comments.json_3270,Checks for prior diagnoses by delegatin to the  DAO,0,0,0
comments.json_3271,Risk factor delegates to the  DAO to see if a patient has ever smoked in their life,0,0,0
comments.json_3272,Checks the patient 's body mass index over the given threshold,0,0,0
comments.json_3273,Checks to see if the given patient is at risk for  Heart  Disease,0,0,0
comments.json_3274,An abstract class which has a number of utlity methods for checking risks . When extending this class  use the methods to fill in all of the necessary information. Then use isAtRisk and getPatientRiskFactors to get the actual risks. See the known subclasses for an example,0,0,0
comments.json_3278,This method exists purely for performance - just stop once you hit the threshold . <br /> <br /> Also  the risk factors should be cached in the RiskFactor implementors - in getPatientRiskFactors there should be no double-querying,0,0,0
comments.json_3280,Checks to see if the given patient is at risk for  Type 1 Diabetes .,0,0,0
comments.json_3281,Checks to see if the given patient is at risk for  Type  II  Diabetes .,0,0,0
comments.json_3282,Servlet implementation class  Find Expert Servlet,0,0,0
comments.json_3284,We never use the mid   so we don 't need it .,0,0,0
comments.json_3286,Group Report Generator Servlet is a generic servlet that serves a xml document,0,0,0
comments.json_3287,Group Report Generator Action to generate the report for download,0,0,0
comments.json_3288,factor for the  Group Report Generator Action to use,0,0,0
comments.json_3289,Document to be served to client,0,0,0
comments.json_3290,Randomly generated servlet  ID,0,0,0
comments.json_3291,do Post method that takes a user request and serves them a downloadable xml based on their defined search criteria .,0,0,0
comments.json_3292,Set the headers .,0,0,0
comments.json_3293,Get the  View Records Release Action object,0,0,0
comments.json_3294,Get the release request,0,0,0
comments.json_3295,Get all of the patient 's health records from the specified hospital,0,0,0
comments.json_3296,Get the root element,0,0,0
comments.json_3297,Create a release information element,0,0,0
comments.json_3298,Define the request date,0,0,0
comments.json_3299,Define the patient name,0,0,0
comments.json_3300,Define the release hospital,0,0,0
comments.json_3301,Define the doctor to release to 's name,0,0,0
comments.json_3302,Define the doctor to release to 's contact information,0,0,0
comments.json_3303,Define the hospital to release to,0,0,0
comments.json_3304,Define the hospital to release to 's address,0,0,0
comments.json_3305,Define health record elements,0,0,0
comments.json_3306,Define visit date elements,0,0,0
comments.json_3307,Define height elements,0,0,0
comments.json_3308,Define weight elements,0,0,0
comments.json_3309,Define blood pressure elements,0,0,0
comments.json_3310,Define patient smoking status elements,0,0,0
comments.json_3311,Define household smoke status elements,0,0,0
comments.json_3312,Define hdl elements,0,0,0
comments.json_3313,Define ldl elements,0,0,0
comments.json_3314,Define triglycerides elements,0,0,0
comments.json_3315,Define doctor elements,0,0,0
comments.json_3316,Serialisation through  Transform and print to html,0,0,0
comments.json_3317,Servlet implementation class  Pateint Search Servlet,0,0,0
comments.json_3319,We don 't ever use the second parameter   so we don 't need to give it meaning .,0,0,0
comments.json_3321,We don 't ever use the second parameter   so we don 't need to give it meaning .,0,0,0
comments.json_3323,A listener which will time the user out after a pre -specified time limit .,0,0,0
comments.json_3324,The default constructor .,0,0,0
comments.json_3325,The specialized constructor   which takes a particular  DAO Factory to be used when checking for the pre -specified timeout limit.,0,0,0
comments.json_3326,Called when the  Http Session is created   this method pulls the pre -specified limit from the database and sets it as a property of the HttpSession.,0,0,0
comments.json_3327,Must be declared for compliance with the interface . Not implemented .,0,0,0
comments.json_3328,nothing to do here,0,0,0
comments.json_3330,Ward Dao for doing  DAO  Operations,0,0,0
comments.json_3331,Send error parameter back to page,0,0,0
comments.json_3332,Send error parameter back to page,0,0,0
comments.json_3333,Redirect back to page,0,0,0
comments.json_3334,Send error parameter back to page,0,0,0
comments.json_3335,Send error parameter back to page,0,0,0
comments.json_3336,Redirect back to page,0,0,0
comments.json_3337,Send error parameter back to page,0,0,0
comments.json_3338,Redirect back to page,0,0,0
comments.json_3340,Ward Dao for doing  DAO  Operations,0,0,0
comments.json_3341,Send error parameter back to page,0,0,0
comments.json_3342,Send error parameter back to page,0,0,0
comments.json_3343,Redirect back to page,0,0,0
comments.json_3344,Send error parameter back to page,0,0,0
comments.json_3345,Redirect back to page,0,0,0
comments.json_3346,Send error parameter back to page,0,0,0
comments.json_3347,Redirect back to page,0,0,0
comments.json_3348,JSP tag used as a utility to link to the actual  ICD 9 CM site,0,0,0
comments.json_3349,ICD 9 CM Link,0,0,0
comments.json_3350,do Start Tag,0,0,0
comments.json_3351,TODO,0,0,0
comments.json_3352,do End Tag,0,0,0
comments.json_3353,release,0,0,0
comments.json_3354,set Page Context,0,0,0
comments.json_3355,set Parent,0,0,0
comments.json_3356,get Parent,0,0,0
comments.json_3357,get Code,0,0,0
comments.json_3358,set Code,0,0,0
comments.json_3359,set Code,0,0,0
comments.json_3360,JSP tag that is used as the patient navigation bar at the bottom of the screen . To add a new page  add to the two arrays  and make sure that the page accepts PID,0,0,0
comments.json_3361,A more elegant solution here would be to use enums and have a display Name   a name   and url,0,0,0
comments.json_3362,Patient Navigation,0,0,0
comments.json_3363,do Start Tag,0,0,0
comments.json_3364,TODO,0,0,0
comments.json_3365,do End Tag,0,0,0
comments.json_3366,release,0,0,0
comments.json_3367,set Page Context,0,0,0
comments.json_3368,set Parent,0,0,0
comments.json_3369,get Parent,0,0,0
comments.json_3370,get This Title,0,0,0
comments.json_3371,set This Title,0,0,0
comments.json_3372,JSP tag that adds an  HTML select for states   from the enum . Also selects the current state,0,0,0
comments.json_3373,State Select,0,0,0
comments.json_3374,do Star Tag,0,0,0
comments.json_3375,TODO,0,0,0
comments.json_3376,do End Tag,0,0,0
comments.json_3377,release,0,0,0
comments.json_3378,set Page Context,0,0,0
comments.json_3379,set Parent,0,0,0
comments.json_3380,get Parent,0,0,0
comments.json_3381,get Name,0,0,0
comments.json_3382,set Name,0,0,0
comments.json_3383,get Value,0,0,0
comments.json_3384,set Value,0,0,0
comments.json_3386,The default constructor .,0,0,0
comments.json_3387,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3389,The default constructor .,0,0,0
comments.json_3390,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3392,The default constructor .,0,0,0
comments.json_3393,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3395,The default constructor .,0,0,0
comments.json_3396,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3397,Abstract class used by all validators that provides utility methods for checking formatting of a particular field. Specify the Bean to be validated            The bean type to be validated,0,1,1
comments.json_3398,Check the format against the given enum . is Nullable will check if the string is empty or a  Java null .,0,0,0
comments.json_3399,Check a long value against a particular format . is Nullable will check if it is empty or a  Java null .,0,0,0
comments.json_3400,Check the format against the given enum . is Nullable will check if it is a  Java null . Otherwise   an,0,0,0
comments.json_3401,Check the format against the given enum . is Nullable will check if it is a  Java null . Otherwise   an,0,0,0
comments.json_3402,Check against the proper gender,0,0,0
comments.json_3403,The that an integer is the proper format   and is in the correct range,0,0,0
comments.json_3404,just fall through to returning the error message,0,0,0
comments.json_3405,Check that a double is in the proper format and is in the correct range,0,0,0
comments.json_3406,just fall through to returning the error message,0,0,0
comments.json_3407,Check that the value fits the "true " or "false ",0,0,0
comments.json_3408,Validates an  ICD 9 CM code,0,1,1
comments.json_3409,The default constructor .,0,0,0
comments.json_3410,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3412,The default constructor .,0,0,0
comments.json_3413,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3415,The default constructor .,0,0,0
comments.json_3416,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3420,The default constructor .,0,0,0
comments.json_3421,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3422,Exercise Entry Validator .java  Version 1 4/2/2015 Copyright notice : none  Ensures that a exercise entry has only appropriate values before it is loaded into the database,0,0,0
comments.json_3423,Performs the act of validating the bean in question   which varies depending on the type of validator. If the validation does not succeed  a the form mm/dd/yyyy and it must be on or before today's date. The exercise type cannot be null and it must be either Weight Training or Cardio. The exercise name cannot be null. Hours  calories  reps  and sets must be greater than 0.            The bean to be validated.,0,1,1
comments.json_3424,pointer,0,0,0
comments.json_3425,Only validate these if it 's weight training .,0,1,1
comments.json_3426,Food Entry Validator .java Version 1 2/21/2015 Copyright notice: none Ensures that a food entry has only appropriate values before it is loaded into the database,0,1,1
comments.json_3427,Performs the act of validating the bean in question   which varies depending on the type of validator.  If the validation does The date eaten must be of the form mm/dd/yyyy and it must be on or before today's date. The meal type cannot be null and it must be either Breakfast  Lunch  Snack  or Dinner. The food name cannot be null. Servings must be greater than 0. All of the rest of the grams and milligrams must be greater than or equal to 0.,0,1,1
comments.json_3429,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3431,The default constructor .,0,0,0
comments.json_3432,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3433,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3434,Validator used to validate  LOIN Cbean,0,1,1
comments.json_3435,The default constructor .,0,0,0
comments.json_3436,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3437,The default constructor .,0,0,0
comments.json_3438,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3440,The default constructor .,0,0,0
comments.json_3441,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3444,The default constructor .,0,0,0
comments.json_3445,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3446,if  Initial record,0,0,0
comments.json_3447,else   if office visit,0,0,0
comments.json_3448,note that this weeks pregnant != the initial weeks pregnant b /c can be up to 49 weeks,0,0,0
comments.json_3449,Validates an  ICD 9 CM code,0,1,1
comments.json_3450,The default constructor .,0,0,0
comments.json_3451,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3452,Validator class for  Ophthalmology OV Action Bean . Used in order to verify that a beans contents are consistent with the data format section of UC83.,0,1,1
comments.json_3454,at this point   we can assume that all numerical fields have made it into the bean successfully  ,0,0,0
comments.json_3455,we still need to check to make sure they are in the right ranges .,0,1,1
comments.json_3456,Validator class for  Ophthalmology Schedule OV Record Bean . Used in order to verify that a beans contents are consistent with the data format section of UC88.,0,1,1
comments.json_3458,at this point   we can assume that all numerical fields have made it into the bean successfully  ,0,0,0
comments.json_3459,we still need to check to make sure they are in the right ranges .,0,1,1
comments.json_3460,Commenting this out so that blank comments can be placed .,0,0,0
comments.json_3461,error List .add If Not Null (check Format (" Appointment  Comment "  bean .get Comment ()  Validation Format . APPT _ COMMENT   false ));,0,0,0
comments.json_3462,Validator class for  Ophthalmology Surgery Action Bean . Used in order to verify that a beans contents are consistent with the data format section of UC83.,0,1,1
comments.json_3464,at this point   we can assume that all numerical fields have made it into the bean successfully  ,0,0,0
comments.json_3465,we still need to check to make sure they are in the right ranges .,0,1,1
comments.json_3467,The default constructor .,0,0,0
comments.json_3468,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3470,Validates a patient instructions bean .,0,1,1
comments.json_3472,The following checks  URL length .,0,0,0
comments.json_3473,The following checks  URL format .,0,0,0
comments.json_3475,The default constructor .,0,0,0
comments.json_3476,First name   last name   and email are all required,0,0,0
comments.json_3477,ignore this,0,0,0
comments.json_3478,This block was added for  Theme 5 by  Tyler  Arehart,0,0,0
comments.json_3480,The default constructor .,0,0,0
comments.json_3481,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3483,The default constructor .,0,0,0
comments.json_3484,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3485,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3487,The default constructor .,0,0,0
comments.json_3488,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3490,The default constructor .,0,0,0
comments.json_3491,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3492,Skip validation if values were not submitted (0 or -1),0,1,1
comments.json_3493,Validates the security question and answer . This doesn 't follow the same format as the others because this,0,1,1
comments.json_3494,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3495,Sleep Entry Validator .java  Version 1 4/6/2015 Copyright notice : none  Ensures that a sleep entry has only appropriate values before it is loaded into the database,0,0,0
comments.json_3496,Performs the act of validating the bean in question   which varies depending on the type of validator. If the validation does not succeed  a the form mm/dd/yyyy and it must be on or before today's date. The sleep type cannot be null and it must be either Weight Training or Cardio. The sleep name cannot be null. Hours must be greater than 0.            The bean to be validated.,0,1,1
comments.json_3497,pointer,0,0,0
comments.json_3498,Validator for zip code that is entered when a user searches for  HCP survey results .,0,1,1
comments.json_3499,Performs the act of validating the bean in question   which varies depending on the,0,1,1
comments.json_3500,Enum with all of the validation formats that fit into a regex .,0,1,1
comments.json_3501,Xml Generator is a class that takes headers and data and converts them into a xml compliant document .,0,0,0
comments.json_3502,generate Xml converts the headers and data into a xml file,0,0,0
comments.json_3503,sorced from http ://stackoverflow .com /questions /8865099/xml -file -generator -in -java,0,0,0
comments.json_3504,new document,0,0,0
comments.json_3505,head element,0,0,0
comments.json_3506,assumed has document builder and factory,0,0,0
comments.json_3507,makes format < Patient name ="blah " age ="xx " birthdate =""/> etc ...,0,0,0
comments.json_3508,for each first level element   loop through second level and,0,0,0
comments.json_3509,TODO log error,0,0,0
comments.json_3510,Parses the string for a xml compliant one,0,0,0
comments.json_3511,Tests the limit for activities on the home page and then for all the activities .,0,0,0
comments.json_3512,Login,0,0,0
comments.json_3513,Get the panels and select the activity panel,0,0,0
comments.json_3514,Get the list items and count how many items there are   should be 20,0,0,0
comments.json_3515,Now we check the all the activities,0,0,0
comments.json_3516,Get the panels and select the activity panel,0,0,0
comments.json_3517,Get the list items and count how many items there are   should be 40,0,0,0
comments.json_3518,Plus three because of the two refresh links and then the one padding <li >,0,0,0
comments.json_3519,Tests the refresh functionality of the activity panel   which refreshes and activity log on the homepage and limits it to 20.,0,0,0
comments.json_3520,Login,0,0,0
comments.json_3521,Click on  Older  Activities to show all activity,0,0,0
comments.json_3522,Then refresh to show only newest 20,0,0,0
comments.json_3523,Get the panels and select toe activity panel,0,0,0
comments.json_3524,Get the list items and count how many items there are   should be 20,0,0,0
comments.json_3525,Tests for valid information in  Activity  Feed,0,1,1
comments.json_3526,Login,0,0,0
comments.json_3527,Get the panels and select toe activity panel,0,0,0
comments.json_3528,Get the list items and count how many items there are   should be 20,0,0,0
comments.json_3529,Tests to see if hidden activities show up on activity page DOES NOT SEEM TO ACTUALLY TEST THIS THOUGH!!!!!,0,0,0
comments.json_3530,Login,0,0,0
comments.json_3531,Go to  Patient  Information page,0,0,0
comments.json_3532,logout,0,0,0
comments.json_3533,Login,0,0,0
comments.json_3534,Go to  Patient  Information page,0,0,0
comments.json_3535,Let 's manually logout,0,0,0
comments.json_3536,Login,0,0,0
comments.json_3537,Find the activity log,0,0,0
comments.json_3538,Without doing this   the whole get Page Source will format with random ,0,0,0
comments.json_3539,Enable javascript,0,0,0
comments.json_3540,Find  Gandalf  Stormcrow checkbox,0,0,0
comments.json_3541,Deselect it,0,0,0
comments.json_3542,Find  Kelly  Doctor checkbox,0,0,0
comments.json_3543,Select it,0,0,0
comments.json_3544,Disable javascript or else some links will not appear,0,0,0
comments.json_3545,Go to homepage,0,0,0
comments.json_3546,Get the activity log as an element so that the text is not formatted,0,0,0
comments.json_3547,Tests to see that certain activities from the patients  DLHCP are showing up in the activity field as well as verifying that other certain activities from the patients DLHCP are hidden. This tests Black Box Test Case ViewActivityFeed_ShowRequiredDLHCPActivity The scenario is that Patient Devil's Advocate logs into iTrust and then checks his Activity Feed. The Activity Feed should not be displaying certain actions that his DLHCP performed  such as looking at his demographics etc. It should be displaying events from other LHCP's as stated fully in the requirements doc.,0,1,1
comments.json_3548,Login,0,0,0
comments.json_3549,Get the activity log as an element,0,0,0
comments.json_3550,Verify that certain activities from the patient 's  DLHCP are present   and that others are hidden,0,1,1
comments.json_3551,Set elements to forms,0,0,0
comments.json_3552,Login,0,0,0
comments.json_3553,Click the add patients link,0,0,0
comments.json_3554,Enter in information but blank first name,0,0,0
comments.json_3555,Enter in information but blank last name,0,0,0
comments.json_3556,Login,0,0,0
comments.json_3557,Click the add patients link,0,0,0
comments.json_3558,Enter in information but invalid first name,0,0,0
comments.json_3559,Enter in information but invalid last name,0,0,0
comments.json_3560,Should pass with email changes,0,0,0
comments.json_3561,Login,0,0,0
comments.json_3562,Click the add patients link,0,0,0
comments.json_3563,Enter in information but invalid email,0,1,1
comments.json_3564,go to the page,0,0,0
comments.json_3565,go to the page,0,0,0
comments.json_3566,create date info,0,0,0
comments.json_3567,fill form,0,0,0
comments.json_3568,confirm that a warning was displayed   as the request conflicts with other appointments,0,0,0
comments.json_3569,select another time for the appointment,0,0,0
comments.json_3570,login to  Zoidburg,0,0,0
comments.json_3571,go to the page,0,0,0
comments.json_3572,check to make sure the request went through and approve it,0,0,0
comments.json_3573,go to the page,0,0,0
comments.json_3574,create date info,0,0,0
comments.json_3575,fill form,0,0,0
comments.json_3576,confirm that the request was accepted,0,0,0
comments.json_3577,login to zoidburg,0,0,0
comments.json_3578,go to the page,0,0,0
comments.json_3579,check to make sure the request went through and approve it,0,0,0
comments.json_3580,confirm on right page and that the appointment was approved,0,0,0
comments.json_3581,go to the page,0,0,0
comments.json_3582,create date info,0,0,0
comments.json_3583,fill form,0,0,0
comments.json_3584,confirm that the request was accepted,0,0,0
comments.json_3585,login to zoidburg,0,0,0
comments.json_3586,go to the page,0,0,0
comments.json_3587,check to make sure the request went through and approve it,0,0,0
comments.json_3588,confirm on right page and that the appointment was approved,0,0,0
comments.json_3589,go to the page,0,0,0
comments.json_3590,create date info,0,0,0
comments.json_3591,fill form,0,0,0
comments.json_3592,confirm that a warning was displayed   as the request conflicts with other appointments,0,0,0
comments.json_3593,select another time for the appointment,0,0,0
comments.json_3594,login to  Zoidburg,0,0,0
comments.json_3595,go to the page,0,0,0
comments.json_3596,check to make sure the request went through,0,0,0
comments.json_3597,go to the page,0,0,0
comments.json_3598,create date info,0,0,0
comments.json_3599,fill form,0,0,0
comments.json_3600,confirm that the request was accepted,0,0,0
comments.json_3601,go to the page,0,0,0
comments.json_3602,fill form,0,0,0
comments.json_3603,Verify that the form was rejected,0,1,1
comments.json_3604,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_3605,go to the schedule appointment page,0,0,0
comments.json_3606,use the old search to go to the patients page,0,0,0
comments.json_3607,check to confirm cannot schedule appointment with dead patient,0,1,1
comments.json_3608,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_3609,edit first entry to the desired time,0,0,0
comments.json_3610,fill form,0,0,0
comments.json_3611,click 'cancel ',0,0,0
comments.json_3612,fill form,0,0,0
comments.json_3613,confirm warning displayed and appointment not edited,0,0,0
comments.json_3614,Login,0,0,0
comments.json_3615,use the old search to go to the patients page,0,0,0
comments.json_3616,set up date,0,0,0
comments.json_3617,fill out form,0,0,0
comments.json_3618,check to make sure warning displayed and add is not logged,0,1,1
comments.json_3619,Login,0,0,0
comments.json_3620,go to the  View  My  Appointments link,0,0,0
comments.json_3621,confirm that appointments are showing,0,0,0
comments.json_3622,Login,0,0,0
comments.json_3623,use the old search to go to the patients page,0,0,0
comments.json_3624,set up date,0,0,0
comments.json_3625,fill out form,0,0,0
comments.json_3626,check that the appointment was successfully added,0,0,0
comments.json_3627,Login,0,0,0
comments.json_3628,use the old search to go to the patients page,0,0,0
comments.json_3629,fill out form,0,0,0
comments.json_3630,check to make sure that appointment with invalid date was not added,0,1,1
comments.json_3631,Create a new instance of the driver,0,0,0
comments.json_3632,HCP 9000000001 logs in .,0,0,0
comments.json_3633,HCP 9000000001 moves to the edit appointment types page .,0,0,0
comments.json_3634,HCP 9000000001 adds a new appointment type .,0,0,0
comments.json_3635,HCP 9000000001 logs in .,0,0,0
comments.json_3636,HCP 9000000001 moves to the edit appointment types page .,0,0,0
comments.json_3637,HCP 9000000001 edits an existing appointment type .,0,0,0
comments.json_3638,HCP 9000000001 logs in .,0,0,0
comments.json_3639,HCP 9000000001 moves to the edit appointment types page .,0,0,0
comments.json_3640,HCP 9000000001 edits an existing appointment type with a bad duration .,0,0,0
comments.json_3641,HCP 9000000000 logs in .,0,0,0
comments.json_3642,HCP 9000000000 moves to the schedule new appointment page .,0,0,0
comments.json_3643,HCP 9000000000 selects patient 1,0,0,0
comments.json_3644,HCP 9000000000 inputs the appointment information and submits,0,0,0
comments.json_3645,Patient 2 logs in .,0,0,0
comments.json_3646,Patient 2 moves to the view my appointments page .,0,0,0
comments.json_3647,Create timestamp,0,0,0
comments.json_3648,Patient 2 checks for the right appointments,0,0,0
comments.json_3649,Create  DB for this test case,0,0,0
comments.json_3650,HCP 9000000000 logs in .,0,0,0
comments.json_3651,HCP 9000000000 moves to the view my appointments page .,0,0,0
comments.json_3652,Create timestamp,0,0,0
comments.json_3653,HCP 9000000000 checks for the right appointments,0,0,0
comments.json_3654,HCP 9000000001 logs in .,0,0,0
comments.json_3655,HCP 9000000001 moves to the edit appointment types page .,0,0,0
comments.json_3656,HCP 9000000001 edits an existing appointment type .,0,0,0
comments.json_3657,searching for patient 2,0,0,0
comments.json_3658,typing out  I understand,0,0,0
comments.json_3659,asserting deletion,0,0,0
comments.json_3660,searching for patient 2,0,0,0
comments.json_3661,typing out  I understand,0,0,0
comments.json_3662,asserting deletion,0,0,0
comments.json_3663,searching for patient 314159,0,0,0
comments.json_3664,typing out  I understand,0,0,0
comments.json_3665,asserting activation,0,0,0
comments.json_3666,searching for patient 314159,0,0,0
comments.json_3667,typing out  I understand,0,0,0
comments.json_3668,asserting activation,0,0,0
comments.json_3669,log in as  HCP  Kelly  Doctor,0,0,0
comments.json_3670,HCP 9000000000 requests a report on patient 2,0,0,0
comments.json_3671,checking number of rows,0,0,0
comments.json_3672,Row 3 Date,0,0,0
comments.json_3673,Patient  BMI,0,0,0
comments.json_3674,Patient  Weight  Status,0,0,0
comments.json_3675,Row 2 Date,0,0,0
comments.json_3676,Patient  BMI,0,0,0
comments.json_3677,Patient  Weight  Status,0,0,0
comments.json_3678,Row 2 Date,0,0,0
comments.json_3679,Patient  BMI,0,0,0
comments.json_3680,Patient  Weight  Status,0,0,0
comments.json_3681,log in as  HCP  Kelly  Doctor,0,0,0
comments.json_3682,HCP 9000000000 requests a report on patient 2,0,0,0
comments.json_3683,checking number of rows,0,0,0
comments.json_3684,Row 3 Date,0,0,0
comments.json_3685,Patient  BMI,0,0,0
comments.json_3686,Patient  Weight  Status,0,0,0
comments.json_3687,Row 2 Date,0,0,0
comments.json_3688,Patient  BMI,0,0,0
comments.json_3689,Patient  Weight  Status,0,0,0
comments.json_3690,Row 1 Date,0,0,0
comments.json_3691,Patient  BMI,0,0,0
comments.json_3692,Patient  Weight  Status,0,0,0
comments.json_3693,log in as  HCP  Kelly  Doctor,0,0,0
comments.json_3694,HCP 9000000000 requests a report on patient 2,0,0,0
comments.json_3695,checking number of rows,0,0,0
comments.json_3696,Row 3 Date,0,0,0
comments.json_3697,Patient  BMI,0,0,0
comments.json_3698,Patient  Weight  Status,0,0,0
comments.json_3699,Row 2 Date,0,0,0
comments.json_3700,Patient  BMI,0,0,0
comments.json_3701,Patient  Weight  Status,0,0,0
comments.json_3702,Row 1 Date,0,0,0
comments.json_3703,Patient  BMI,0,0,0
comments.json_3704,Patient  Weight  Status,0,0,0
comments.json_3705,log in as  HCP  Kelly  Doctor,0,0,0
comments.json_3706,HCP 9000000000 requests a report on patient 2,0,0,0
comments.json_3707,checking number of rows,0,0,0
comments.json_3708,Row 2 Date,0,0,0
comments.json_3709,Patient  BMI,0,0,0
comments.json_3710,Patient  Weight  Status,0,0,0
comments.json_3711,Row 1 Date,0,0,0
comments.json_3712,Patient  BMI,0,0,0
comments.json_3713,Patient  Weight  Status,0,0,0
comments.json_3714,log in as  HCP  Kelly  Doctor,0,0,0
comments.json_3715,HCP 9000000000 requests a report on patient 2,0,0,0
comments.json_3716,checking number of rows,0,0,0
comments.json_3717,Row 3 Date,0,0,0
comments.json_3718,Patient  BMI,0,0,0
comments.json_3719,Patient  Weight  Status,0,0,0
comments.json_3720,Row 2 Date,0,0,0
comments.json_3721,Patient  BMI,0,0,0
comments.json_3722,Patient  Weight  Status,0,0,0
comments.json_3723,Row 1 Date,0,0,0
comments.json_3724,Patient  BMI,0,0,0
comments.json_3725,Patient  Weight  Status,0,0,0
comments.json_3726,Login patient 1.,0,0,0
comments.json_3727,Navigate to the  Macronutrients page .,0,0,0
comments.json_3728,Login patient 1.,0,0,0
comments.json_3729,Navigate to the  Macronutrients page .,0,0,0
comments.json_3730,Login patient 1.,0,0,0
comments.json_3731,Navigate to the  Macronutrients page .,0,0,0
comments.json_3732,the button to click should have the text of the  MID,0,0,0
comments.json_3733,Navigate to the  Macronutrients page .,0,0,0
comments.json_3734,the button to click should have the text of the  MID,0,0,0
comments.json_3735,Create a new instance of the driver,0,0,0
comments.json_3736,gen .office Visit 5();,0,0,0
comments.json_3737,gen .standard Data ();,0,0,0
comments.json_3738,Login,0,0,0
comments.json_3739,Click  Calendar,0,0,0
comments.json_3740,check title,0,0,0
comments.json_3741,check for the right appointments,0,0,0
comments.json_3742,On the 5th : 1:30 PM - General  Checkup,0,0,0
comments.json_3743,On the 18th : 8:00 AM - Colonoscopy,0,0,0
comments.json_3744,On the 28th : 9:00 AM - Physical,0,0,0
comments.json_3745,Login,0,0,0
comments.json_3746,Click  Calendar,0,0,0
comments.json_3747,check title,0,0,0
comments.json_3748,Patient 2 clicks the  487.00- Influenza  link on the 10th of the month .,0,0,0
comments.json_3749,Date of  Visit : <current month > 10  <current year >.,0,0,0
comments.json_3750,Physician : Kelly  Doctor .,0,0,0
comments.json_3751,Note : Terrible cough .,0,0,0
comments.json_3752,Diagnoses : 487- Influenza .,0,0,0
comments.json_3753,Medical  Procedures : 1270 F - Injection  Procedure .,0,0,0
comments.json_3754,Lab  Procedure : No laboratory procedures on record .,0,0,0
comments.json_3755,Medications  Prescribed : No prescriptions on record .,0,0,0
comments.json_3756,Immunizations : 90657- Influenza virus vaccine   split .,0,0,0
comments.json_3757,Login,0,0,0
comments.json_3758,Click  Calendar,0,0,0
comments.json_3759,check title,0,0,0
comments.json_3760,Patient 2 clicks the  487.00- Influenza  link on the 10th of the month .,0,0,0
comments.json_3761,driver .find Element ( By .partial Link Text ("664662530- Penicillin -21")).click ();,0,0,0
comments.json_3762,Date prescribed : <current month > 21  <current year >.,0,0,0
comments.json_3763,Physician : Gandalf  Stormcrow .,0,0,0
comments.json_3764,Medication : 664662530- Penicillin .,0,0,0
comments.json_3765,Start  Date : < Current month > 21  <current year >.,0,0,0
comments.json_3766,End  Date : <60 days from the current date >.,0,0,0
comments.json_3767,Instructions : Administer every 6 hours after meals .,0,0,0
comments.json_3768,calculate date range,0,0,0
comments.json_3769,Login,0,0,0
comments.json_3770,Click  Calendar,0,0,0
comments.json_3771,check title,0,0,0
comments.json_3772,get the second link with  General  Checkup -5,0,0,0
comments.json_3773,ensure proper data is showing up,0,0,0
comments.json_3774,get the current month and year,0,0,0
comments.json_3775,Create a new instance of the driver,0,0,0
comments.json_3776,Patient 1 logs into i Trust,0,0,0
comments.json_3777,User goes to change password,0,0,0
comments.json_3778,User types in their current   new   and confirm passwords,0,0,0
comments.json_3779,User submits password change . Change logged,0,0,0
comments.json_3780,User logs out,0,0,0
comments.json_3781,User can log in with old password   but can 't with new one,0,0,0
comments.json_3782,Patient 1 logs into i Trust,0,0,0
comments.json_3783,User goes to change password,0,0,0
comments.json_3784,User types in their current   new   and confirm passwords,0,0,0
comments.json_3785,User submits password change . Change logged,0,0,0
comments.json_3786,User logs out,0,0,0
comments.json_3787,User can log in with old password   but can 't with new one,0,0,0
comments.json_3788,Patient 1 logs into i Trust,0,0,0
comments.json_3789,User goes to change password,0,0,0
comments.json_3790,User types in their current   new   and confirm passwords,0,0,0
comments.json_3791,User submits password change . Change logged,0,0,0
comments.json_3792,User logs out,0,0,0
comments.json_3793,User can log in with old password   but can 't with new one,0,0,0
comments.json_3794,Patient 1 logs into i Trust,0,0,0
comments.json_3795,User goes to change password,0,0,0
comments.json_3796,User types in their current   new   and confirm passwords,0,0,0
comments.json_3797,User submits password change . Change logged,0,0,0
comments.json_3798,User logs out,0,0,0
comments.json_3799,User can log in with old password   but can 't with new one,0,0,0
comments.json_3800,private static  Web Driver driver = null ;,0,0,0
comments.json_3801,Create a new instance of the driver,0,0,0
comments.json_3802,driver = new  Html Unit Driver ();,0,0,0
comments.json_3803,HCP 9000000000 logs in,0,0,0
comments.json_3804,HCP 9000000000 moves to the add new report request page,0,0,0
comments.json_3805,HCP 9000000000 requests a report on patient 2,0,0,0
comments.json_3806,HCP 9000000000 logs in,0,0,0
comments.json_3807,HCP 9000000000 moves to the add new report request page,0,0,0
comments.json_3808,HCP 9000000000 requests a report on patient 260,0,0,0
comments.json_3809,HCP 9000000000 logs in,0,0,0
comments.json_3810,HCP 9000000000 moves to the add new report request page,0,0,0
comments.json_3811,HCP 9000000000 requests a report on patient 260,0,0,0
comments.json_3812,Create a new instance of the html unit driver,0,0,0
comments.json_3813,Navigate to desired web page,0,0,0
comments.json_3814,get the title of the page,0,0,0
comments.json_3815,verify title,0,1,1
comments.json_3816,get the title of the page,0,0,0
comments.json_3817,verify title,0,1,1
comments.json_3818,get the title of the page,0,0,0
comments.json_3819,verify title,0,1,1
comments.json_3820,login as admin,0,0,0
comments.json_3821,login as admin,0,0,0
comments.json_3822,Makes sure the "specialty " field is available when adding an  HCP   creates an HCP with the specialty "Medicine"  and makes sure that HCP was successfully created.,0,0,0
comments.json_3823,Gives us the standard testing data,0,0,0
comments.json_3824,Test we can create  HCP 's as an admin,0,0,0
comments.json_3825,login admin,0,0,0
comments.json_3826,click on add hcp,0,0,0
comments.json_3827,add the hcp,0,0,0
comments.json_3828,fill in the information,0,0,0
comments.json_3829,get the dropdown options for the appt Type,0,0,0
comments.json_3830,make sure there is such a field,0,1,1
comments.json_3831,I know this seems crazy   selecting an option   and then creating  a new select option to make sure that the right option is selected before we even submit the form  but this is as close to the previous test this is based off of as I could think of making it.,0,1,1
comments.json_3832,Log in as an  Admin .,0,0,0
comments.json_3833,Click on  Add  PHA .,0,0,0
comments.json_3834,Add the  PHA .,0,0,0
comments.json_3835,Make sure the text displays .,0,1,1
comments.json_3836,Make sure nothing happened .,0,0,0
comments.json_3837,Test class for i Trust creation of  UAP 's .,0,0,0
comments.json_3838,Set up for testing by creating necessary data .,0,0,0
comments.json_3839,Test creating a standard  UAP . The form should submit without any issues .,0,0,0
comments.json_3840,When creating a  UAP   the entered email needs to be validated against the RFC3696 specification. This specification allows for quoted strings  escaped characters  and underscores. should validate.,0,1,1
comments.json_3841,Log in,0,0,0
comments.json_3842,Click on the add  UAP link,0,0,0
comments.json_3843,Fill in the fields,0,0,0
comments.json_3844,Submit,0,0,0
comments.json_3845,Verify that the success text appears,0,0,0
comments.json_3846,login patient 2,0,0,0
comments.json_3847,click on  My  Demographics,0,0,0
comments.json_3848,login patient 2,0,0,0
comments.json_3849,click on  My  Demographics,0,0,0
comments.json_3850,login patient 2,0,0,0
comments.json_3851,click on  My  Demographics,0,0,0
comments.json_3852,login patient 2,0,0,0
comments.json_3853,click on  My  Demographics,0,0,0
comments.json_3854,login patient 2,0,0,0
comments.json_3855,click on  My  Demographics,0,0,0
comments.json_3856,login patient 2,0,0,0
comments.json_3857,click on  My  Demographics,0,0,0
comments.json_3858,AMEX stands for  American  Express .,0,0,0
comments.json_3859,login patient 2,0,0,0
comments.json_3860,click on  My  Demographics,0,0,0
comments.json_3861,login patient 2,0,0,0
comments.json_3862,click on  My  Demographics,0,0,0
comments.json_3863,login patient 2,0,0,0
comments.json_3864,click on  My  Demographics,0,0,0
comments.json_3865,login patient 2,0,0,0
comments.json_3866,click on  My  Demographics,0,0,0
comments.json_3867,Tests viewing /editing dependent 's demographic information as the "dependee ",0,0,0
comments.json_3868,set up standard test data,0,0,0
comments.json_3869,Make sure the parent of a dependent can see the dependent 's information .,0,0,0
comments.json_3870,add in the baby,0,0,0
comments.json_3871,login,0,0,0
comments.json_3872,make sure you can see baby,0,0,0
comments.json_3873,Tests that you can edit one of your dependent 's demographic data,0,0,0
comments.json_3874,add in baby again,0,0,0
comments.json_3875,make sure you can see baby,0,1,1
comments.json_3876,get the form to update baby 's info,0,0,0
comments.json_3877,submit the form,0,0,0
comments.json_3878,Test that without adding in baby   there are no dependents,0,1,1
comments.json_3879,go to my demographics,0,0,0
comments.json_3880,Tests adding a dependent / representative relationship to existing patients,0,1,1
comments.json_3881,Log in .,0,0,0
comments.json_3882,Click on  Representatives .,0,0,0
comments.json_3883,search for patient 103 by  MID .,0,0,0
comments.json_3884,the button to click should have the text of the  MID,0,0,0
comments.json_3885,Add  Caldwell  Hudson as a representative,0,0,0
comments.json_3886,Make sure the text displays .,0,0,0
comments.json_3887,Tests that a dependent cannot login,0,1,1
comments.json_3888,Load  UC 58 data,0,0,0
comments.json_3889,Try to log in (dependents can 't ).,0,0,0
comments.json_3890,Make sure we didn 't go anywhere .,0,0,0
comments.json_3891,Tests that a list of a depedent 's representatives is displayed to them,0,0,0
comments.json_3892,Load  UC 58 data,0,0,0
comments.json_3893,Log in .,0,0,0
comments.json_3894,Click on  Representatives .,0,0,0
comments.json_3895,search for patient 103 by  MID .,0,0,0
comments.json_3896,the button to click should have the text of the  MID,0,0,0
comments.json_3897,Add  Caldwell  Hudson as a representative,0,0,0
comments.json_3898,Make sure the text displays .,0,1,1
comments.json_3899,Tests to make sure representatives can 't be dependents themselves,0,1,1
comments.json_3900,Load  UC 58 data,0,0,0
comments.json_3901,Log in .,0,0,0
comments.json_3902,Click on  Representatives .,0,0,0
comments.json_3903,search for patient 103 by  MID .,0,0,0
comments.json_3904,the button to click should have the text of the  MID,0,0,0
comments.json_3905,Make sure the text displays .,0,1,1
comments.json_3906,Load  UC 59 data,0,0,0
comments.json_3907,Log in .,0,0,0
comments.json_3908,Click on  Representatives .,0,0,0
comments.json_3909,Make sure the text displays .,0,1,1
comments.json_3910,Fill in medical records release form,0,0,0
comments.json_3911,Load  UC 59 data,0,0,0
comments.json_3912,Log in .,0,0,0
comments.json_3913,Click on  Representatives .,0,0,0
comments.json_3914,Make sure the text displays .,0,1,1
comments.json_3915,Fill in medical records release form,0,0,0
comments.json_3916,Load  UC 59 data,0,0,0
comments.json_3917,Log in .,0,0,0
comments.json_3918,Click on  Representatives .,0,0,0
comments.json_3919,search for patient 103 by  MID .,0,0,0
comments.json_3920,the button to click should have the text of the  MID,0,0,0
comments.json_3921,Remove the representative .,0,0,0
comments.json_3922,Log in as  Bob  Ross .,0,0,0
comments.json_3923,Click on  Add  Patient .,0,0,0
comments.json_3924,Try to select  Billy .,0,0,0
comments.json_3925,Should fail .,0,0,0
comments.json_3926,Load  UC 59 data,0,0,0
comments.json_3927,Log in .,0,0,0
comments.json_3928,Click on  Add  Patient .,0,0,0
comments.json_3929,Load  UC 59 data,0,0,0
comments.json_3930,Log in .,0,0,0
comments.json_3931,Click on  Records  Release  Requests .,0,0,0
comments.json_3932,Tests that patients can choose a designated nutritionist who is the only person able to view their nutritional information.,0,1,1
comments.json_3933,Make sure we get the standard data for each call,0,1,1
comments.json_3934,teardown all of the data,0,0,0
comments.json_3935,Tests that a hcp cannot view a patient 's food diary   the patient (who previously has no designated nutritionist) selects this hcp as his nutritionist  and then the hcp can view his food diary.,0,1,1
comments.json_3936,login as spencer reid,0,0,0
comments.json_3937,search for the patient 's food diary,0,0,0
comments.json_3938,search for patient,0,0,0
comments.json_3939,the button to click should have the text of the  MID,0,0,0
comments.json_3940,should be back at home page with exception,0,0,0
comments.json_3941,driver .find Element ( By .partial Link Text (" Logout ")).click ();,0,0,0
comments.json_3942,now login as random person,0,0,0
comments.json_3943,choose spencer reid as your nutritionist,0,0,0
comments.json_3944,assert that it was logged,0,0,0
comments.json_3945,now logout as random person and log back in as spencer reid,0,0,0
comments.json_3946,driver .find Element ( By .link Text (" Logout ")).click ();,0,0,0
comments.json_3947,search for the patient 's food diary,0,0,0
comments.json_3948,search for patient,0,0,0
comments.json_3949,the button to click should have the text of the  MID,0,0,0
comments.json_3950,Tests that a patient can select none as his designated nutritionist and that an hcp that could view his food diaries no longer can,0,0,0
comments.json_3951,login as spencer reid,0,0,0
comments.json_3952,search for the patient 's food diary,0,0,0
comments.json_3953,search for patient,0,0,0
comments.json_3954,the button to click should have the text of the  MID,0,0,0
comments.json_3955,driver .find Element ( By .partial Link Text (" Logout ")).click ();,0,0,0
comments.json_3956,now login as  Derek  Morgan,0,0,0
comments.json_3957,choose to have no nutritionist,0,0,0
comments.json_3958,assert that it was logged,0,0,0
comments.json_3959,now logout as random person and log back in as spencer reid,0,0,0
comments.json_3960,driver .find Element ( By .link Text (" Logout ")).click ();,0,0,0
comments.json_3961,search for the patient 's food diary,0,0,0
comments.json_3962,search for patient,0,0,0
comments.json_3963,the button to click should have the text of the  MID,0,0,0
comments.json_3964,should be back at home page with exception,0,0,0
comments.json_3965,Change your designated nutritionist to a different hcp,0,0,0
comments.json_3966,login as spencer reid,0,0,0
comments.json_3967,search for the patient 's food diary,0,0,0
comments.json_3968,search for patient,0,0,0
comments.json_3969,the button to click should have the text of the  MID,0,0,0
comments.json_3970,driver .find Element ( By .partial Link Text (" Logout ")).click ();,0,0,0
comments.json_3971,now check that  Ben  Matlock cannot view it,0,0,0
comments.json_3972,search for the patient 's food diary,0,0,0
comments.json_3973,search for patient,0,0,0
comments.json_3974,the button to click should have the text of the  MID,0,0,0
comments.json_3975,should be back at home page with exception,0,0,0
comments.json_3976,now login as  Derek  Morgan,0,0,0
comments.json_3977,choose ben matlock as your nutritionist,0,0,0
comments.json_3978,assert that it was logged,0,0,0
comments.json_3979,now logout as random person and log back in as spencer reid,0,0,0
comments.json_3980,driver .find Element ( By .link Text (" Logout ")).click ();,0,0,0
comments.json_3981,search for the patient 's food diary,0,0,0
comments.json_3982,search for patient,0,0,0
comments.json_3983,the button to click should have the text of the  MID,0,0,0
comments.json_3984,should be back at home page with exception,0,0,0
comments.json_3985,now make sure ben matlock can view the diary,0,1,1
comments.json_3986,search for the patient 's food diary,0,0,0
comments.json_3987,search for patient,0,0,0
comments.json_3988,the button to click should have the text of the  MID,0,0,0
comments.json_3989,Precondition : Sample data is in the database . Create Patient 2 has passed . Login with user 9999999999 and password pw.,0,0,0
comments.json_3990,login as uap and add a patient,0,0,0
comments.json_3991,Tests that you can add new office visits as a  UAP and  HCP,0,0,0
comments.json_3992,set up standard test data,0,0,0
comments.json_3993,Authenticate  UAP MID 8000000009 Password: uappass1 Choose "Document Office Visit" Enter Patient MID 1 Enter Fields: Date: 2005-11-21 Notes: "I like diet-coke",0,0,0
comments.json_3994,login  UAP,0,0,0
comments.json_3995,make sure we are on the home page for  UAP 's,0,1,1
comments.json_3996,select to document an office visit,0,0,0
comments.json_3997,search for patient 1 by  MID,0,0,0
comments.json_3998,the button to click should have the text of the  MID,0,0,0
comments.json_3999,we should now be on the document office visit page,0,0,0
comments.json_4000,click the  Yes   document office visit button,0,0,0
comments.json_4001,get the dropdown options for the appt Type,0,0,0
comments.json_4002,check that the creation was successful,0,0,0
comments.json_4003,Authenticate  HCP MID 9000000000 Password: pw Choose Document Office Visit Enter Patient MID 2 and confirm Choose to document new office visit. Enter Fields: Date: 2005-11-2 Notes: Great patient!,0,0,0
comments.json_4004,login,0,0,0
comments.json_4005,click  Document  Office  Visit,0,0,0
comments.json_4006,search for patient 2 by  MID,0,0,0
comments.json_4007,the button to click should have the text of the  MID,0,0,0
comments.json_4008,click to document an office visit,0,0,0
comments.json_4009,now create an office visit,0,0,0
comments.json_4010,check that the creation was successful,0,0,0
comments.json_4011,Authenticate  HCP MID 9000000000 Password: pw Choose Document Office Visit Enter Patient MID 2 and confirm Choose to document new office vist. Enter Fields: Date: 2005-11-21 Notes: <script>alert('ha ha ha');</script>,0,0,0
comments.json_4012,login,0,0,0
comments.json_4013,click document office visit,0,0,0
comments.json_4014,choose patient 2,0,0,0
comments.json_4015,the button to click should have the text of the  MID,0,0,0
comments.json_4016,click yes   document office visit,0,0,0
comments.json_4017,add a new office visit,0,0,0
comments.json_4018,Tests that the notes section of a new office visit can include a semicolon.,0,0,0
comments.json_4019,login  UAP,0,0,0
comments.json_4020,click document office visit,0,0,0
comments.json_4021,choose patient 1,0,0,0
comments.json_4022,the button to click should have the text of the  MID,0,0,0
comments.json_4023,click yes   document office visit,0,0,0
comments.json_4024,add a new office visit,0,0,0
comments.json_4025,Authenticate  UAP MID 8000000009 Password: uappass1 Choose Document Office Visit Enter Patient MID 1 and confirm Choose to document new office vist. Enter Fields: Date: 2005-11-21,1,0,1
comments.json_4026,login  UAP,0,0,0
comments.json_4027,click document office visit,0,0,0
comments.json_4028,choose patient 1,0,0,0
comments.json_4029,the button to click should have the text of the  MID,0,0,0
comments.json_4030,click yes   document office visit,0,0,0
comments.json_4031,add a new office visit,0,0,0
comments.json_4032,Custom implementation of an  Html Unit Driver that does not report js errors.,0,0,0
comments.json_4033,Construct a new driver and disable script error reporting .,0,0,0
comments.json_4034,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4035,Authenticate admin 90000000001 Choose "Edit ND Codes" Choose "Tetracycline" Choose "Isotretinoin" interaction Click delete,1,0,1
comments.json_4036,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4037,assert True (driver .find Element ( By .css Selector (" BODY ")).get Text ().matches ("^[\s \ S ]* Interaction deleted successfully [\s \ S ]*$"));,0,0,0
comments.json_4038,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4039,Authenticate admin 90000000001 Choose "Edit ND Codes" Choose "Edit Interactions" Choose "Adefovir" as one drug Choose "Aspirin" as the other drug Enter "May increase the risk and severity of nephrotoxicity due to additive effects on the kidney." Click submit,1,0,1
comments.json_4040,new  Select (driver .find Element ( By .name ("drug 1"))).select By Visible Text ("61958-0501 Adefovir ");,0,0,0
comments.json_4041,new  Select (driver .find Element ( By .name ("drug 2"))).select By Visible Text ("08109-6 Aspirin ");,0,0,0
comments.json_4042,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4043,assert True (driver .find Element ( By .css Selector (" BODY ")).get Text ().matches ("^[\s \ S ]* Interaction recorded successfully [\s \ S ]*$"));,0,0,0
comments.json_4044,Authenticate admin 90000000001 Choose "Edit ND Codes" Choose "Edit Interactions" Choose "Adefovir" as both drug1 and drug2 Enter "Mixing this drug with itself will cause the person taking it to implode." Click submit,1,0,1
comments.json_4045,(( Select ) driver .find Element ( By .name ("drug 1"))).select By Visible Text ("61958-0501 Adefovir ");,0,0,0
comments.json_4046,(( Select ) driver .find Element ( By .name ("drug 2"))).select By Visible Text ("61958-0501 Adefovir ");,0,0,0
comments.json_4047,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4048,assert True (driver .find Element ( By .css Selector (" BODY ")).get Text ().matches ("^[\s \ S ]* Interactions can only be recorded between two different drugs [\s \ S ]*$"));,0,0,0
comments.json_4049,Tests that patients can edit and delete entries in their exercise diary.,0,0,0
comments.json_4050,Make sure we get the standard data for each call,0,1,1
comments.json_4051,Test that a user can edit entries in their exercise diary .,0,0,0
comments.json_4052,need to enable javascript,0,0,0
comments.json_4053,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4054,now assert that the totals are correct,0,0,0
comments.json_4055,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4056,update entry (need to re -get the values since they 're now enabled,0,0,0
comments.json_4057,now submit it,0,0,0
comments.json_4058,now assert everything updated   including totals,0,0,0
comments.json_4059,now assert that the totals are correct,0,0,0
comments.json_4060,Tests that a  Patient cannot enter invalid values when editing a Exercise Diary entry.,0,0,0
comments.json_4061,need to enable javascript,0,0,0
comments.json_4062,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4063,now assert that the totals are correct,0,0,0
comments.json_4064,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4065,update entry (need to re -get the values since they 're now enabled,0,0,0
comments.json_4066,now submit it,0,0,0
comments.json_4067,now assert everything updated   including totals,0,0,0
comments.json_4068,now assert that the totals are correct,0,0,0
comments.json_4069,Tests that a user will be presented with a popup before completely deleting an entry.,0,0,0
comments.json_4070,make sure the values are right to begin withnow find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,1,1
comments.json_4071,now assert that the totals are correct,0,0,0
comments.json_4072,now click to delete the first entry,0,0,0
comments.json_4073,htmlunitdriver doesn 't work with confirms well   and this is thebest workaround there is,0,0,0
comments.json_4074,assert entries and totals updated ( Running is now the first entry ),0,0,0
comments.json_4075,now assert that the totals are correct,0,0,0
comments.json_4076,Tests that a user can cancel deletion of an entry and that nothing will happen.,0,0,0
comments.json_4077,make sure the values are right to begin withnow find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,1,1
comments.json_4078,now assert that the totals are correct,0,0,0
comments.json_4079,now click to delete the first entry,0,0,0
comments.json_4080,htmlunitdriver doesn 't work with confirms well   and this is thebest workaround there is,0,0,0
comments.json_4081,assert entries and totals updated ( Running is now the first entry ),0,0,0
comments.json_4082,now assert that the totals are correct,0,0,0
comments.json_4083,Tests that a user cannot enter an invalid date when editing a exercise diary entry.,0,0,0
comments.json_4084,need to enable javascript,0,0,0
comments.json_4085,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4086,now assert that the totals are correct,0,0,0
comments.json_4087,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4088,update entry (need to re -get the values since they 're now enabled,0,0,0
comments.json_4089,now submit it,0,0,0
comments.json_4090,now assert everything updated   including totals,0,0,0
comments.json_4091,now assert that the totals are correct,0,0,0
comments.json_4092,Tests that patients can edit and delete entries in their food diary.,0,0,0
comments.json_4093,Make sure we get the standard data for each call,0,1,1
comments.json_4094,Test that a user can edit entries in their food diary .,0,1,1
comments.json_4095,need to enable javascript,0,0,0
comments.json_4096,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4097,now assert that the totals are correct,0,0,0
comments.json_4098,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4099,update entry (need to reget the values since they 're now enabled,0,0,0
comments.json_4100,now submit it,0,0,0
comments.json_4101,now assert everything updated   including totals,0,0,0
comments.json_4102,now assert that the totals are correct,0,0,0
comments.json_4103,Tests that a  Patient cannot enter invalid values when editing a Food Diary entry.,0,1,1
comments.json_4104,assert that the original values are there,0,1,1
comments.json_4105,second entry,0,0,0
comments.json_4106,now assert that the totals are correct,0,0,0
comments.json_4107,second entry of totals,0,0,0
comments.json_4108,make sure javascript is enabled,0,0,0
comments.json_4109,click to edit the first row,0,0,0
comments.json_4110,now click to submit the edit,0,0,0
comments.json_4111,assert nothing changed,0,0,0
comments.json_4112,second entry,0,0,0
comments.json_4113,now assert that the totals are correct,0,0,0
comments.json_4114,second entry of totals,0,0,0
comments.json_4115,Tests that a user will be presented with a popup before completely deleting an entry.,0,0,0
comments.json_4116,make sure the values are right to begin withnow find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,1,1
comments.json_4117,get the second day 's values,0,0,0
comments.json_4118,now assert that the totals are correct,0,0,0
comments.json_4119,now click to delete the first entry,0,0,0
comments.json_4120,htmlunitdriver doesn 't work with confirms well   and this is thebest workaround there is,0,0,0
comments.json_4121,assert entries and totals updated,0,0,0
comments.json_4122,now assert that the totals are correct,0,0,0
comments.json_4123,Tests that a user can cancel deletion of an entry and that nothing will happen.,0,0,0
comments.json_4124,assert that the original values are there,0,0,0
comments.json_4125,second entry,0,0,0
comments.json_4126,now assert that the totals are correct,0,0,0
comments.json_4127,second entry of totals,0,0,0
comments.json_4128,now click to delete the first entry,0,0,0
comments.json_4129,htmlunitdriver doesn 't work with confirms well   and this is thebest workaround there is,0,0,0
comments.json_4130,assert that nothing changed,0,0,0
comments.json_4131,second entry,0,0,0
comments.json_4132,now assert that the totals are correct,0,0,0
comments.json_4133,second entry of totals,0,0,0
comments.json_4134,Tests that a user cannot enter an invalid date when editing a food diary entry.,0,1,1
comments.json_4135,assert that the original values are there,0,0,0
comments.json_4136,second entry,0,0,0
comments.json_4137,now assert that the totals are correct,0,0,0
comments.json_4138,second entry of totals,0,0,0
comments.json_4139,make sure javascript is enabled,0,0,0
comments.json_4140,click to edit the first row,0,0,0
comments.json_4141,now click to submit the edit,0,0,0
comments.json_4142,assert nothing changed,0,0,0
comments.json_4143,second entry,0,0,0
comments.json_4144,now assert that the totals are correct,0,0,0
comments.json_4145,second entry of totals,0,0,0
comments.json_4146,Tests that patients can edit and delete entries in their sleep diary.,0,0,0
comments.json_4147,Make sure we get the standard data for each call,0,1,1
comments.json_4148,Test that a user can edit entries in their sleep diary .,0,1,1
comments.json_4149,need to enable javascript,0,0,0
comments.json_4150,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4151,now assert that the totals are correct,0,0,0
comments.json_4152,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4153,update entry (need to re -get the values since they 're now enabled,0,0,0
comments.json_4154,now submit it,0,0,0
comments.json_4155,now assert everything updated   including totals,0,0,0
comments.json_4156,now assert that the totals are correct,0,0,0
comments.json_4157,Tests that a  Patient cannot enter invalid values when editing a Sleep Diary entry.,0,1,1
comments.json_4158,need to enable javascript,0,0,0
comments.json_4159,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4160,now assert that the totals are correct,0,0,0
comments.json_4161,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4162,update entry (need to re -get the values since they 're now enabled,0,0,0
comments.json_4163,now submit it,0,0,0
comments.json_4164,now assert everything updated   including totals,0,0,0
comments.json_4165,now assert that the totals are correct,0,0,0
comments.json_4166,Tests that a user will be presented with a popup before completely deleting an entry.,0,0,0
comments.json_4167,make sure the values are right to begin withnow find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4168,now assert that the totals are correct,0,0,0
comments.json_4169,now click to delete the first entry,0,0,0
comments.json_4170,htmlunitdriver doesn 't work with confirms well   and this is thebest workaround there is,0,0,0
comments.json_4171,assert entries and totals updated ( Nightly is now the first entry ),0,0,0
comments.json_4172,now assert that the totals are correct,0,0,0
comments.json_4173,Tests that a user can cancel deletion of an entry and that nothing will happen.,0,0,0
comments.json_4174,make sure the values are right to begin withnow find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,1,1
comments.json_4175,now assert that the totals are correct,0,0,0
comments.json_4176,now click to delete the first entry,0,0,0
comments.json_4177,htmlunitdriver doesn 't work with confirms well   and this is thebest workaround there is,0,0,0
comments.json_4178,assert entries and totals updated ( Nightly is now the first entry ),0,0,0
comments.json_4179,now assert that the totals are correct,0,0,0
comments.json_4180,Tests that a user cannot enter an invalid date when editing a sleep diary entry.,0,1,1
comments.json_4181,need to enable javascript,0,0,0
comments.json_4182,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4183,now assert that the totals are correct,0,0,0
comments.json_4184,click the edit entry button  (each row in table has 14 and edit is 2nd last ),0,0,0
comments.json_4185,update entry (need to re -get the values since they 're now enabled,0,0,0
comments.json_4186,now submit it,0,0,0
comments.json_4187,now assert everything updated   including totals,0,0,0
comments.json_4188,now assert that the totals are correct,0,0,0
comments.json_4189,should be the last one,0,0,0
comments.json_4190,Authenticate  UAP : MID: 8000000009 Password: uappass1 Choose Edit Patient. Select patient 2 and confirm. Change Field: Email address: "" Confirm and approve the selection,1,0,1
comments.json_4191,login uap,0,0,0
comments.json_4192,choose  Edit  Patient,0,0,0
comments.json_4193,choose patient 2,0,0,0
comments.json_4194,update email address to be blank,0,0,0
comments.json_4195,Make sure error was thrown,0,1,1
comments.json_4196,Authenticate  UAP : MID: 8000000009 Password: uappass1 Choose Edit Patient. Select patient 2 and confirm. Change Field: Street address 1: 100 New Address City: New Bern Zip: 28562 Confirm and approve the selection,1,0,1
comments.json_4197,login uap,0,0,0
comments.json_4198,choose  Edit  Patient,0,0,0
comments.json_4199,choose patient 2,0,0,0
comments.json_4200,update street address   city and zip code,0,0,0
comments.json_4201,Authenticate  UAP : MID: 8000000009 Password: uappass1 Choose Edit Patient. Select patient 2 and confirm. Change Field Street address 2 to a blank. Confirm and approve the selection,1,0,1
comments.json_4202,login uap,0,0,0
comments.json_4203,choose  Edit  Patient,0,0,0
comments.json_4204,choose patient 2,0,0,0
comments.json_4205,update email address to be blank,0,0,0
comments.json_4206,Make sure the patient can have a blank address two,0,1,1
comments.json_4207,Authenticate  UAP : MID: 8000000009 Password: uappass1 Choose Edit Patient. Select patient 2 and confirm. Change phone to xxx-xxx-xxxx Confirm and approve the selection,1,0,1
comments.json_4208,login uap,0,0,0
comments.json_4209,choose  Edit  Patient,0,0,0
comments.json_4210,choose patient 2,0,0,0
comments.json_4211,update email address to be blank,0,0,0
comments.json_4212,Make sure that the form was not validated correctly,0,1,1
comments.json_4213,login as  Patient 2,0,0,0
comments.json_4214,choose  My  Demographics,0,0,0
comments.json_4215,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4216,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4217,Warning : assert Text Present may require manual changes,0,0,0
comments.json_4218,Create the explicit wait,0,0,0
comments.json_4219,Import the  LOINC database file,0,0,0
comments.json_4220,Check the  Edit  LOINC page for the updated codes,0,0,0
comments.json_4221,Create the explicit wait,0,0,0
comments.json_4222,Warning : assert Text Not Present may require manual changes,0,0,0
comments.json_4223,Create the explicit wait,0,0,0
comments.json_4224,Create the explicit wait,0,0,0
comments.json_4225,set up for the start location and driver,0,0,0
comments.json_4226,log in processes,0,0,0
comments.json_4227,make sure that it correctly log -in as  HCP,0,1,1
comments.json_4228,Does the search,0,0,0
comments.json_4229,check if it on the page correctly,0,1,1
comments.json_4230,enters a bad date,0,0,0
comments.json_4231,checks for the error message for bad date,0,1,1
comments.json_4232,set up for the start location and driver,0,0,0
comments.json_4233,check if its on the correct page,0,1,1
comments.json_4234,clears and enters a email,0,0,0
comments.json_4235,get the massage that the info has been updated,0,0,0
comments.json_4236,submits,0,0,0
comments.json_4237,checks for new email,0,1,1
comments.json_4238,set up for the start location and driver,0,0,0
comments.json_4239,enters bad info for mothers and fathers  MID,0,0,0
comments.json_4240,gets error message,0,0,0
comments.json_4241,set up for the start location and driver,0,0,0
comments.json_4242,check that its not there,0,1,1
comments.json_4243,set up for the start location and driver,0,0,0
comments.json_4244,log in processes,0,0,0
comments.json_4245,check that the login correctly as  ER,0,1,1
comments.json_4246,check that it goes to correct page,0,1,1
comments.json_4247,does search,0,0,0
comments.json_4248,check page content,0,1,1
comments.json_4249,Tests the functionality of the new  Exercise  Diary portion of i Trust . Tests that you can add new entries  you can view entries  HCPs with the role of trainer can view entries  and error checks that the user enters the appropriate data in the appropriate format.,0,1,1
comments.json_4250,Sets up the standard testing data .,0,0,0
comments.json_4251,Tests that a patient can add an entry to an empty  Exercise  Diary .,0,0,0
comments.json_4252,view my exercise diary so we can add a new entry,0,0,0
comments.json_4253,now fill in all of the info and submit,0,0,0
comments.json_4254,Ensure the entry was added .,0,1,1
comments.json_4255,Tests that a patient can add an entry to a non empty exercise diary .,0,1,1
comments.json_4256,Get the first values .,0,0,0
comments.json_4257,Get the second values .,0,0,0
comments.json_4258,Assert that the totals are correct .,0,0,0
comments.json_4259,Add a new entry .,0,0,0
comments.json_4260,Enter new entry .,0,0,0
comments.json_4261,Make sure the new entry shows up with the old entries .,0,1,1
comments.json_4262,Assert the totals are correct .,0,0,0
comments.json_4263,Tests that  HC Ps can view a patients exercise diary .,0,1,1
comments.json_4264,search for patient,0,0,0
comments.json_4265,the button to click should have the text of the  MID,0,0,0
comments.json_4266,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4267,Tests that  HC Ps can sort a patients exercise diary .,0,1,1
comments.json_4268,search for patient,0,0,0
comments.json_4269,the button to click should have the text of the  MID,0,0,0
comments.json_4270,Only show  May 2013 entries .,0,0,0
comments.json_4271,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4272,Tests that  HC Ps can sort a patients exercise diary .,0,1,1
comments.json_4273,search for patient,0,0,0
comments.json_4274,the button to click should have the text of the  MID,0,0,0
comments.json_4275,Only show  May 2013 entries .,0,0,0
comments.json_4276,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4277,Tests that  HC Ps can sort a patients exercise diary .,0,1,1
comments.json_4278,search for patient,0,0,0
comments.json_4279,the button to click should have the text of the  MID,0,0,0
comments.json_4280,Only show  May 2013 entries .,0,0,0
comments.json_4281,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4282,Tests to ensure that a patient has to enter something for the exercise name.,0,1,1
comments.json_4283,Leave out the exercise name,0,0,0
comments.json_4284,should stay on same page and have error message,0,0,0
comments.json_4285,Tests to ensures users have to enter dates in the correct format (mm/dd/yy).,0,1,1
comments.json_4286,Enter an improper date,0,0,0
comments.json_4287,should stay on same page and have error message,0,0,0
comments.json_4288,Tests to ensure that  HC Ps can view a  Patient 's  Exercise  Diary when it is empty.,0,1,1
comments.json_4289,search for patient,0,0,0
comments.json_4290,the button to click should have the text of the  MID,0,0,0
comments.json_4291,Tests that you are not allowed to set the number of hours to 0.,0,1,1
comments.json_4292,now enter 0 for hours,0,0,0
comments.json_4293,should stay on same page and have error message,0,0,0
comments.json_4294,Tests to ensure that you cannot enter a negative number of calories .,0,1,1
comments.json_4295,now enter negative number for calories,0,0,0
comments.json_4296,should stay on same page and have error message,0,0,0
comments.json_4297,Create the explicit wait,0,0,0
comments.json_4298,Create the explicit wait,0,0,0
comments.json_4299,Create the explicit wait,0,0,0
comments.json_4300,This is the  Selenium equivalent of  Find Expert Test .java,0,0,0
comments.json_4301,Selenium html unit driver .,0,0,0
comments.json_4302,MID of the test user " Random  Person ",0,0,0
comments.json_4303,Default user password .,0,0,0
comments.json_4304,Build the absolute  URL for  Find  Expert off of the base  URL and relative url .,0,0,0
comments.json_4305,Set up for testing by clearing and recreating all standard data  then performing UC47 specific data generation.,0,0,0
comments.json_4306,Remove the  UC 47 specific data and clear all tables .,0,0,0
comments.json_4307,login admin,0,0,0
comments.json_4308,click on  Edit  Personnel,0,0,0
comments.json_4309,find hcp,0,0,0
comments.json_4310,focus,0,0,0
comments.json_4311,submit the form,0,0,0
comments.json_4312,logout admin,0,0,0
comments.json_4313,login patient,0,0,0
comments.json_4314,click on  Find an  Expert,0,0,0
comments.json_4315,Search for surgeon,0,0,0
comments.json_4316,Test the displayed distances when searching for an expert . According to the i Trust  Wiki experts should be displayed by hospital location  not by their personal listed address. EX: A doctor that lives in New York but is a provider for a hospital in Raleigh  NC should be displayed as from Raleigh  NC. When a user from Raleigh  NC searches for an expert  that doctor should be displayed with a distance of zero miles.,0,1,1
comments.json_4317,Login as  Random  User,0,0,0
comments.json_4318,Navigate to the  Find  Expert page,0,0,0
comments.json_4319,Verify  Specialty : All  Doctors   ZIP  Code : 27606  Distance : All   Sort  By : Distance,0,1,1
comments.json_4320,Submit the form,0,0,0
comments.json_4321,Verify display distances for two of the doctors .,0,1,1
comments.json_4322,Kelly  Doctor : Lives in  New  York   NY and practices in  Raleigh   NC .,0,0,0
comments.json_4323,Shelly  Vang : Lives in  Greensboro   NC and practecesin  Greensboro   NC .,0,0,0
comments.json_4324,Get container elements that group doctor information,0,0,0
comments.json_4325,Number of doctors found,0,0,0
comments.json_4326,Search through the list of doctors,0,0,0
comments.json_4327,Get the doctor name,0,0,0
comments.json_4328,Get the doctor 's displayed distance,0,0,0
comments.json_4329,If doctor is  Shelly  Vang   verify display distance is 62 miles,0,1,1
comments.json_4330,If doctor is  Kelly  Doctor   verify display distance is 0 miles .,0,1,1
comments.json_4331,If doctor is  John  Zoidberg   verify distance is unknown (invalid zip ),0,1,1
comments.json_4332,Sanity check and verify that both doctors were found in the list .,0,1,1
comments.json_4333,If neither was found there may be an underlying issue with the feature,0,0,0
comments.json_4334,or the structure of the html page may have changed .,0,0,0
comments.json_4335,Tests the functionality of the new  Food  Diary portion of i Trust . Tests that you can add new entries  you can view entries  HCPs with the role of nutritionist can view entries  and error checks that the user enters the appropriate data in the appropriate format.,0,1,1
comments.json_4336,Sets up the standard testing data .,0,0,0
comments.json_4337,Tests that a patient can add an entry to an empty  Food  Diary .,0,1,1
comments.json_4338,view my food diary so we can add a new entry,0,0,0
comments.json_4339,now fill in all of the info and submit,0,0,0
comments.json_4340,now find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,0,0
comments.json_4341,Tests that a patient can add an entry to a non empty food diary .,0,0,0
comments.json_4342,make sure the values are right to begin withnow find the values individually (name :row #)have to do it by value since they are input fieldsused for editing and deleting,0,1,1
comments.json_4343,get the second day 's values,0,0,0
comments.json_4344,now assert that the totals are correct,0,0,0
comments.json_4345,go to add a new entry,0,0,0
comments.json_4346,enter new entry,0,0,0
comments.json_4347,make sure the new entry shows up with the old entries,0,1,1
comments.json_4348,get the second day 's values,0,0,0
comments.json_4349,get the third day 's values,0,0,0
comments.json_4350,assert the totals are correct  (7 values per unique date ),0,0,0
comments.json_4351,second date,0,0,0
comments.json_4352,Tests that  HC Ps can view a patients food diary .,0,1,1
comments.json_4353,search for patient,0,0,0
comments.json_4354,the button to click should have the text of the  MID,0,0,0
comments.json_4355,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4356,Tests that  HC Ps can sort a patients food diary .,0,1,1
comments.json_4357,search for patient,0,0,0
comments.json_4358,the button to click should have the text of the  MID,0,0,0
comments.json_4359,Only show  May 2013 entries .,0,0,0
comments.json_4360,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4361,Tests that  HC Ps can sort a patients food diary .,0,1,1
comments.json_4362,search for patient,0,0,0
comments.json_4363,the button to click should have the text of the  MID,0,0,0
comments.json_4364,Only show  May 2013 entries .,0,0,0
comments.json_4365,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4366,Tests that  HC Ps can sort a patients food diary .,0,1,1
comments.json_4367,search for patient,0,0,0
comments.json_4368,the button to click should have the text of the  MID,0,0,0
comments.json_4369,Only show  May 2013 entries .,0,0,0
comments.json_4370,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_4371,Tests to ensure that a patient has to enter something for the food name .,0,1,1
comments.json_4372,now leave out a food name,0,0,0
comments.json_4373,should stay on same page and have error message,0,0,0
comments.json_4374,Tests to ensures users have to enter dates in the correct format (mm/dd/yy).,0,1,1
comments.json_4375,now enter improper date,0,0,0
comments.json_4376,should stay on same page and have error message,0,0,0
comments.json_4377,Tests to ensure that  HC Ps can view a  Patient 's  Food  Diary when it is empty.,0,1,1
comments.json_4378,search for patient,0,0,0
comments.json_4379,the button to click should have the text of the  MID,0,0,0
comments.json_4380,Tests that you are not allowed to set the number of servings to 0.,0,0,0
comments.json_4381,now enter 0 for servings,0,0,0
comments.json_4382,should stay on same page and have error message,0,0,0
comments.json_4383,Tests to ensure that you cannot enter a negative number of calories .,0,1,1
comments.json_4384,now enter negative number for calories,0,0,0
comments.json_4385,should stay on same page and have error message,0,0,0
comments.json_4386,Selenium test conversion for  Http Unit  Get Patient ID Test,0,0,0
comments.json_4387,Tests if back -end " Select  Patient " function is connected to front -end  JSP,0,0,0
comments.json_4388,click on the " Select  Patient " button,0,0,0
comments.json_4389,click on the " Select  Patient " button,0,0,0
comments.json_4390,Use  Case 17  Selenium test conversion for  Http Unit  Get Visit Reminders Test,0,0,0
comments.json_4391,Implicitly wait at most 2 seconds for each element to load,0,0,0
comments.json_4392,Test navigation to i Trust - Visit  Reminders page,0,1,1
comments.json_4393,Test access to visit reminders for  Diagnosed  Care  Needers,0,1,1
comments.json_4394,Test access to visit reminders for  Flu  Shot  Needers,0,1,1
comments.json_4395,Test access to visit reminders for  Immunization  Needers,0,1,1
comments.json_4396,Selenium test conversion for  Http Unit  Group Report Test,0,1,1
comments.json_4397,Matches acceptance test scenario,0,1,1
comments.json_4398,Filters by demographic filters,0,0,0
comments.json_4399,Filters by medical filters,0,0,0
comments.json_4400,Filters by personnel filters,0,0,0
comments.json_4401,Test viewing unselected  MID,0,1,1
comments.json_4402,Tests invalid entries for age   solely for code coverage purposes,0,1,1
comments.json_4403,Test function of pressing the "download " button,0,1,1
comments.json_4404,NOTE : After clicking " Download " button   i Trust is redirecting to home page (unexpected ),0,0,0
comments.json_4405,Existing error in  XML download functionality,0,0,0
comments.json_4406,driver .find Element ( By .name ("download ")).submit ();,0,0,0
comments.json_4407,Tests downloading  XML file,0,1,1
comments.json_4408,This is testing an element that currently does not exist on the  JSP,0,1,1
comments.json_4409,in the first place,0,0,0
comments.json_4410,Exception is good,0,0,0
comments.json_4411,try {driver.findElement(By.name("Download XML Report"));} catch(NoSuchElementException e) {return;}fail("Should have thrown NoSuchElementException.");,0,0,0
comments.json_4412,Selenium test conversion for  Http Unit  Health Data Chart Test,0,0,0
comments.json_4413,Test ability to view line chart for patient weight,0,1,1
comments.json_4414,Test if patient  BMI is viewable,0,1,1
comments.json_4415,Test ability to view line chart for patient height,0,1,1
comments.json_4416,Selenium test conversion for  Http Unit  Immunization Report Test,0,0,0
comments.json_4417,Test  Kindergarten -age patient viewing immunization report,0,1,1
comments.json_4418,Test data for sixth -grade patient viewing immunization report,0,1,1
comments.json_4419,Check the eight immunizations received by  Natalie  Portman,0,1,1
comments.json_4420,Check logging,0,1,1
comments.json_4421,Test data for an adult patient viewing his own immunization report,0,1,1
comments.json_4422,Check the three immunizations received by  Will  Smith,0,1,1
comments.json_4423,Check that no immunizations are required,0,1,1
comments.json_4424,Check logging,0,0,0
comments.json_4425,Test data for patient with immunizations needed,0,1,1
comments.json_4426,Check logging,0,0,0
comments.json_4427,Test immunization of patient with previous  Chicken  Pox diagnosis,0,1,1
comments.json_4428,Check that no immunizations are logged as required .,0,1,1
comments.json_4429,Check logging,0,1,1
comments.json_4430,Test for patient over maximum vaccine age,0,1,1
comments.json_4431,Check that no immunizations logged as received,0,1,1
comments.json_4432,Check logging,0,1,1
comments.json_4433,Test  HCP viewing patient immunization records,0,1,1
comments.json_4434,Check that no immunizations logged as received,0,1,1
comments.json_4435,Check logging,0,1,1
comments.json_4436,Use  Cases 9  11 & 17 Selenium conversion for HttpUnit ImmunizationUseCasesTest,0,0,0
comments.json_4437,Test viewing immunizations for  Bowser  Koopa and  Princess  Peach,0,1,1
comments.json_4438,Test viewing immunization records,0,1,1
comments.json_4439,Test viewing immunization records with "no data ",0,1,1
comments.json_4440,HCP views immunization records of  Patient ( MID 6),0,0,0
comments.json_4441,HCP views and updates immunizations of  Patient ( MID 7),0,0,0
comments.json_4442,Selenium conversion test for  Http Unit  Import ND Codes Test,0,0,0
comments.json_4443,Test that drugs can be updated from a list,0,1,1
comments.json_4444,Test that a new list of drugs can update an existing list,0,1,1
comments.json_4445,Test the return button,0,1,1
comments.json_4446,Test file generator 1,0,1,1
comments.json_4447,Test file generator 2,0,1,1
comments.json_4448,The  URL for i Trust   change as needed,0,0,0
comments.json_4449,ADDRESS,0,0,0
comments.json_4450,MI Ds for various people .,0,0,0
comments.json_4451,password for users .,0,0,0
comments.json_4452,turn off htmlunit warnings,0,0,0
comments.json_4453,The  URL for i Trust   change as needed,0,0,0
comments.json_4454,ADDRESS,0,0,0
comments.json_4455,MI Ds for various users .,0,0,0
comments.json_4456,Passwords,0,0,0
comments.json_4457,turn off htmlunit warnings,0,0,0
comments.json_4458,There 's nothing special about this class other than adding a few handy test utility methods and variables. When extending this class  be sure to invoke super.setUp() first.,0,0,0
comments.json_4459,The  URL for i Trust   change as needed,0,0,0
comments.json_4460,ADDRESS,0,0,0
comments.json_4461,gen,0,0,0
comments.json_4462,Default timeout for  Selenium webdriver,0,0,0
comments.json_4463,Name of the value attribute of html tags . Used for getting the value from a form input with .getAttribute("value"). Was previously .getAttribute(VALUE) before being removed by s selenium.,0,0,0
comments.json_4464,Helper method for logging in to i Trust Also creates an explicit WebDriverWait for optional use.,0,0,0
comments.json_4465,begin at the i Trust home page,0,0,0
comments.json_4466,Implicitly wait at most 2 seconds for each element to load,0,0,0
comments.json_4467,log in using the given username and password,0,0,0
comments.json_4468,0assert Logged,0,0,0
comments.json_4469,Selenium on jenkins sometimes has issues finding a log the first time .,0,0,0
comments.json_4470,The proper solution would be to add explicit waits   but it is easier,0,0,0
comments.json_4471,to wait a second and try again .,0,0,0
comments.json_4472,assert Logged,0,0,0
comments.json_4473,assert Not Logged,0,0,0
comments.json_4474,Sets up the standard testing data .,0,0,0
comments.json_4475,Tests a patient can create a new label when there are no other labels,0,1,1
comments.json_4476,go to label management page,0,0,0
comments.json_4477,add a label name   use default label color - white /# FFFFFF,0,0,0
comments.json_4478,table contains text boxes for editting purposes,0,0,0
comments.json_4479,so we need to get the value inside the textbox,0,0,0
comments.json_4480,Tests a patient can edit a label,0,1,1
comments.json_4481,need to enable javascript,0,0,0
comments.json_4482,add a label name   use default label color - white /# FFFFFF,0,0,0
comments.json_4483,edit the label name field and submit,0,0,0
comments.json_4484,table contains text boxes for editting purposes,0,0,0
comments.json_4485,so we need to get the value inside the textbox,0,0,0
comments.json_4486,Tests a patient can delete a label,0,1,1
comments.json_4487,need to enable javascript,0,0,0
comments.json_4488,add a " Test " label,0,0,0
comments.json_4489,add " Test 2" label,0,0,0
comments.json_4490,Tests a patient can apply a label to their food diary,0,1,1
comments.json_4491,need to enable javascript,0,0,0
comments.json_4492,view my food diary so we can add a new entry,0,0,0
comments.json_4493,now fill in all of the info and submit,0,0,0
comments.json_4494,navigate to  My  Labels page,0,0,0
comments.json_4495,add a " Test " label,0,0,0
comments.json_4496,Select food diary   label   start and end dates and apply the label,0,0,0
comments.json_4497,go back to view my food diary,0,0,0
comments.json_4498,make sure the label was applied,0,1,1
comments.json_4499,Tests a patient can apply a label to their exercise diary,0,1,1
comments.json_4500,need to enable javascript,0,0,0
comments.json_4501,navigate to  My  Labels page,0,0,0
comments.json_4502,add a " Test " label,0,0,0
comments.json_4503,Select exercise diary   label   start and end dates and apply the label,0,0,0
comments.json_4504,go to view my exercise diary,0,0,0
comments.json_4505,make sure the label was applied,0,1,1
comments.json_4506,Tests a patient can apply a label to their sleep diary,0,1,1
comments.json_4507,need to enable javascript,0,0,0
comments.json_4508,navigate to  My  Labels page,0,0,0
comments.json_4509,add a " Test " label,0,0,0
comments.json_4510,Select sleep diary   label   start and end dates and apply the label,0,0,0
comments.json_4511,go to view my sleep diary,0,0,0
comments.json_4512,make sure the label was applied,0,1,1
comments.json_4513,The  URL for i Trust   change as needed,0,0,0
comments.json_4514,ADDRESS,0,0,0
comments.json_4515,select Combo Value ("loinc "  "10666-6"  driver );,0,0,0
comments.json_4516,select Combo Value ("lab Proc Priority "  "1"  driver );,0,0,0
comments.json_4517,Test class for logging into i Trust .,0,1,1
comments.json_4518,The  URL for i Trust   change as needed,0,0,0
comments.json_4519,ADDRESS,0,0,0
comments.json_4520,Set up for testing .,0,0,0
comments.json_4521,turn off htmlunit warnings,0,0,0
comments.json_4522,Tear down from testing .,0,0,0
comments.json_4523,Test the behavior expected when a user enters a non numeric string into the username box. iTrust currently excpects to see a NumberFormatException.,0,1,1
comments.json_4524,log in using the given username and password,0,0,0
comments.json_4525,Test the standard login feature . After logging in   a user should end up at the itrust home page  and the login should be logged.,0,1,1
comments.json_4526,Log in as a patient,0,0,0
comments.json_4527,Wait until redirected to page,0,0,0
comments.json_4528,Verify  Logging,0,0,0
comments.json_4529,The  URL for i Trust   change as needed,0,0,0
comments.json_4530,ADDRESS,0,0,0
comments.json_4531,turn off htmlunit warnings,0,0,0
comments.json_4532,The  URL for i Trust   change as needed,0,0,0
comments.json_4533,ADDRESS,0,0,0
comments.json_4534,turn off htmlunit warnings,0,0,0
comments.json_4535,The  URL for i Trust   change as needed,0,0,0
comments.json_4536,ADDRESS,0,0,0
comments.json_4537,turn off htmlunit warnings,0,0,0
comments.json_4538,select Combo Value ("dlhcp "  "9000000003"  driver );,0,0,0
comments.json_4539,The  URL for i Trust   change as needed,0,0,0
comments.json_4540,ADDRESS,0,0,0
comments.json_4541,gen .patient 2();,0,0,0
comments.json_4542,turn off htmlunit warnings,0,0,0
comments.json_4543,The  URL for i Trust   change as needed,0,0,0
comments.json_4544,ADDRESS,0,0,0
comments.json_4545,turn off htmlunit warnings,0,0,0
comments.json_4546,The  URL for i Trust   change as needed,0,0,0
comments.json_4547,ADDRESS,0,0,0
comments.json_4548,turn off htmlunit warnings,0,0,0
comments.json_4549,String tomorrow = formatter .format (new  Date ((new  Date ()).get Time () + 86400000));,0,0,0
comments.json_4550,test adding an initial record for a patient w / no prior pregs,0,0,0
comments.json_4551,login  HCP  Kathryn  Evans,0,0,0
comments.json_4552,find patient,0,0,0
comments.json_4553,click initialize,0,0,0
comments.json_4554,fill form and submit,0,0,0
comments.json_4555,success ?,0,0,0
comments.json_4556,test adding an initial record for a patient w / 2 prior pregs,0,1,1
comments.json_4557,login  HCP  Kathryn  Evans,0,0,0
comments.json_4558,find patient,0,0,0
comments.json_4559,click initialize,0,0,0
comments.json_4560,enter  Data,0,0,0
comments.json_4561,submit,0,0,0
comments.json_4562,check success,0,0,0
comments.json_4563,login  HCP  Kathryn  Evans,0,0,0
comments.json_4564,find patient,0,0,0
comments.json_4565,click initialize,0,0,0
comments.json_4566,enter  Data,0,0,0
comments.json_4567,prior preg form,0,0,0
comments.json_4568,List < Web Element > ops = delivery Type .get Options ();,0,0,0
comments.json_4569,login  HCP  Kathryn  Evans,0,0,0
comments.json_4570,find patient,0,0,0
comments.json_4571,find patient,0,0,0
comments.json_4572,login  HCP  Kathryn  Evans,0,0,0
comments.json_4573,login  HCP  Kathryn  Evans,0,0,0
comments.json_4574,find patient,0,0,0
comments.json_4575,click initialize,0,0,0
comments.json_4576,login  HCP  Harry  Potter,0,0,0
comments.json_4577,find patient,0,0,0
comments.json_4578,login  HCP  Kathryn  Evans,0,0,0
comments.json_4579,find patient,0,0,0
comments.json_4580,login  HCP  Kathryn  Evans,0,0,0
comments.json_4581,find patient,0,0,0
comments.json_4582,login  HCP  Kathryn  Evans,0,0,0
comments.json_4583,find patient,0,0,0
comments.json_4584,enable js and go to add office vist,0,0,0
comments.json_4585,fill in form and create,0,0,0
comments.json_4586,login  HCP  Kathryn  Evans,0,0,0
comments.json_4587,find patient,0,0,0
comments.json_4588,Web Element test = wd .find Element ( By .id ("lmp "));,0,0,0
comments.json_4589,find patient,0,0,0
comments.json_4590,login  HCP  Kathryn  Evans,0,0,0
comments.json_4591,find patient,0,0,0
comments.json_4592,login  HCP  Kathryn  Evans,0,0,0
comments.json_4593,initialize patient Verify twins not set in initial record add office visit without twins checked verify twins not set edit office visit  check twins verify twins set edit office visit  uncheck twins verify twins not set,0,1,1
comments.json_4594,login  HCP  Kathryn  Evans,0,0,0
comments.json_4595,initialize patient verify placenta flag not set add office visit  without placenta checked verify placenta flag not set edit office visit  check placenta verify placenta flag set edit office visit  uncheck placenta verify placenta flag not set,0,1,1
comments.json_4596,login  HCP  Kathryn  Evans,0,0,0
comments.json_4597,login  HCP  Kathryn  Evans,0,0,0
comments.json_4598,login  HCP  Kathryn  Evans,0,0,0
comments.json_4599,login  HCP  Kathryn  Evans,0,0,0
comments.json_4600,initialize patient,0,0,0
comments.json_4601,set boundary value for abnormal fhr,0,0,0
comments.json_4602,make sure abnormal fhr flag not set,0,1,1
comments.json_4603,login  HCP  Kathryn  Evans,0,0,0
comments.json_4604,Web Element we 1 = wd .find Element ( By .id ("description "));,0,0,0
comments.json_4605,login  HCP  Kathryn  Evans,0,0,0
comments.json_4606,Web Element we 1 = wd .find Element ( By .id ("description "));,0,0,0
comments.json_4607,login  HCP  Kathryn  Evans,0,0,0
comments.json_4608,Web Element we 1 = wd .find Element ( By .id ("description "));,0,0,0
comments.json_4609,login  HCP  Kathryn  Evans,0,0,0
comments.json_4610,login  HCP  Kathryn  Evans,0,0,0
comments.json_4611,Web Element we 1 = wd .find Element ( By .id ("description "));,0,0,0
comments.json_4612,@ Before,0,0,0
comments.json_4613,look at my bills,0,0,0
comments.json_4614,fill out the information,0,0,0
comments.json_4615,submit it and assert that it was logged,0,0,0
comments.json_4616,look at my bills,0,0,0
comments.json_4617,fill out the information (it is bad ),0,0,0
comments.json_4618,submit the form and confirm it doesn 't get put through,0,0,0
comments.json_4619,check the first bill,0,0,0
comments.json_4620,check the next one,0,0,0
comments.json_4621,document an office visit,0,0,0
comments.json_4622,search for patient 1 by  MID,0,0,0
comments.json_4623,the button to click should have the text of the  MID,0,0,0
comments.json_4624,now have to say yes document office visit,0,0,0
comments.json_4625,fill out the information,0,0,0
comments.json_4626,logout,0,0,0
comments.json_4627,login as patient 309,0,0,0
comments.json_4628,fill out the info and submit,0,0,0
comments.json_4629,document an office visit for patient 310,0,0,0
comments.json_4630,search for patient 1 by  MID,0,0,0
comments.json_4631,the button to click should have the text of the  MID,0,0,0
comments.json_4632,now have to say yes document office visit,0,0,0
comments.json_4633,logout,0,0,0
comments.json_4634,login as patient 310,0,0,0
comments.json_4635,check that it has the right info,0,0,0
comments.json_4636,check the next one,0,0,0
comments.json_4637,now logout,0,0,0
comments.json_4638,document an office visit patient 310,0,0,0
comments.json_4639,search for patient 1 by  MID,0,0,0
comments.json_4640,the button to click should have the text of the  MID,0,0,0
comments.json_4641,now have to say yes document office visit,0,0,0
comments.json_4642,fill out the info,0,0,0
comments.json_4643,logout,0,0,0
comments.json_4644,login as 310,0,0,0
comments.json_4645,document an office visit for patient 310,0,0,0
comments.json_4646,search for patient 1 by  MID,0,0,0
comments.json_4647,the button to click should have the text of the  MID,0,0,0
comments.json_4648,now have to say yes document office visit,0,0,0
comments.json_4649,now logout,0,0,0
comments.json_4650,login as 310 again,0,0,0
comments.json_4651,Selenium test cases for the  Ophthalmology  Office  Visit feature in  UC 83.,0,0,0
comments.json_4652,Sets up the required base data needed for each test case . This includes two  HCP 's and two patients .,0,0,0
comments.json_4653,Clears the database after each test .,0,0,0
comments.json_4654,Selenium test for  UC 85 Acceptance  Scenario 1. Diagnoses  Cataracts,0,0,0
comments.json_4655,Login as  Brooke  Tran,0,0,0
comments.json_4656,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4657,Select  Brody  Franco as the patient,0,0,0
comments.json_4658,Enable javascript,0,0,0
comments.json_4659,fill in form and create,0,0,0
comments.json_4660,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4661,Verify that the action was logged,0,1,1
comments.json_4662,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4663,Selenium test for  UC 85 Acceptance  Scenario 2  tests patient view of  Scenario 1,0,0,0
comments.json_4664,Set up the outcome of  Scenario 1,0,0,0
comments.json_4665,Login as  Brody  Franco,0,0,0
comments.json_4666,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4667,Click the proper office visit link,0,0,0
comments.json_4668,Verify that the action was logged,0,1,1
comments.json_4669,Verify that the  Office  Visit it shown,0,1,1
comments.json_4670,Selenium test for  UC 85 Acceptance  Scenario 3. Diagnoses  No disease,0,0,0
comments.json_4671,Login as  Brooke  Tran,0,0,0
comments.json_4672,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4673,Select  Brody  Franco as the patient,0,0,0
comments.json_4674,Enable javascript,0,0,0
comments.json_4675,fill in form and create,0,0,0
comments.json_4676,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4677,Verify that the action was logged,0,1,1
comments.json_4678,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4679,Selenium test for  UC 83 Acceptance  Scenario 4. Edits the visit by removing an old disease and adding 2 more .,0,0,0
comments.json_4680,Set up the outcome of  Scenario 2,0,0,0
comments.json_4681,Login as  Brooke  Tran,0,0,0
comments.json_4682,Click the  Ophthalmology  Home link,0,0,0
comments.json_4683,Select  Freya  Chandler as the patient,0,0,0
comments.json_4684,Click the proper office visit link,0,0,0
comments.json_4685,Fill in the correct values and submit the form,0,0,0
comments.json_4686,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4687,Verify that the action was logged,0,1,1
comments.json_4688,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4689,Selenium test for  UC 85 Acceptance  Scenario 5. Tests  HCP view of disease diagnosis by  Oph  HCP,0,1,1
comments.json_4690,Set up the outcome of  Scenario 1,0,0,0
comments.json_4691,Login as  Kelly  Doctor,0,0,0
comments.json_4692,Click the  Ophthalmology  Home link,0,0,0
comments.json_4693,Select  Brody  Franco as the patient,0,0,0
comments.json_4694,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4695,Click the proper office visit link,0,0,0
comments.json_4696,Verify that the action was logged,0,1,1
comments.json_4697,Verify that the  Office  Visit is shown,0,0,0
comments.json_4698,Selenium test cases for the  Ophthalmology  Office  Visit feature in  UC 83.,0,1,1
comments.json_4699,Sets up the required base data needed for each test case . This includes two  HCP 's and two patients .,0,0,0
comments.json_4700,Clears the database after each test .,0,0,0
comments.json_4701,Selenium test for  UC 83 Acceptance  Scenario 1.,0,1,1
comments.json_4702,Login as  Brooke  Tran,0,0,0
comments.json_4703,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4704,Select  Brody  Franco as the patient,0,0,0
comments.json_4705,Enable javascript,0,0,0
comments.json_4706,fill in form and create,0,0,0
comments.json_4707,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4708,Verify that the action was logged,0,1,1
comments.json_4709,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4710,Selenium test for  UC 83 Acceptance  Scenario 2.,0,1,1
comments.json_4711,Login as  Brooke  Tran,0,0,0
comments.json_4712,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4713,Select  Freya  Chandler as the patient,0,0,0
comments.json_4714,Enable javascript,0,0,0
comments.json_4715,fill in form and create,0,0,0
comments.json_4716,Verify that our submission was rejected and we are still on the  Add  Ophthalmology,0,1,1
comments.json_4717,Fill in the correct values and submit the form,0,0,0
comments.json_4718,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4719,Verify that the action was logged,0,1,1
comments.json_4720,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4721,Selenium test for  UC 83 Acceptance  Scenario 3.,0,1,1
comments.json_4722,Set up the outcome of  Scenario 1,0,0,0
comments.json_4723,Login as  Kelly  Doctor,0,0,0
comments.json_4724,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4725,Select  Brody  Franco as the patient,0,0,0
comments.json_4726,Verify that we got redirected to the regular office visit page,0,1,1
comments.json_4727,Click the  Ophthalmology  Home link,0,0,0
comments.json_4728,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4729,Click the proper office visit link,0,0,0
comments.json_4730,Verify that the action was logged,0,1,1
comments.json_4731,Verify that the  Office  Visit is shown,0,1,1
comments.json_4732,Selenium test for  UC 83 Acceptance  Scenario 4.,0,1,1
comments.json_4733,Set up the outcome of  Scenario 2,0,0,0
comments.json_4734,Login as  Brooke  Tran,0,0,0
comments.json_4735,Click the  Ophthalmology  Home link,0,0,0
comments.json_4736,Select  Freya  Chandler as the patient,0,0,0
comments.json_4737,Click the proper office visit link,0,0,0
comments.json_4738,Fill in the correct values and submit the form,0,0,0
comments.json_4739,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4740,Verify that the action was logged,0,1,1
comments.json_4741,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4742,Selenium test for  UC 84 Acceptance  Scenario 1.,0,1,1
comments.json_4743,Set up the outcome of  Scenario 1,0,0,0
comments.json_4744,Login as  Brody  Franco,0,0,0
comments.json_4745,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4746,Click the proper office visit link,0,0,0
comments.json_4747,Verify that the action was logged,0,1,1
comments.json_4748,Verify that the  Office  Visit it shown,0,1,1
comments.json_4749,Selenium test for  UC 84 Acceptance  Scenario 2.,0,1,1
comments.json_4750,Set up the outcome of  Scenario 2,0,0,0
comments.json_4751,Login as  Freya  Chandler,0,0,0
comments.json_4752,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4753,Click the proper office visit link,0,0,0
comments.json_4754,Verify that the action was logged,0,1,1
comments.json_4755,Verify that the  Office  Visit it shown,0,1,1
comments.json_4756,Simulate the change,0,0,0
comments.json_4757,First logout,0,0,0
comments.json_4758,Then basically rerun the code for  UC 83 Acceptance  Test 4,0,0,0
comments.json_4759,Login as  Brooke  Tran,0,0,0
comments.json_4760,Click the  Ophthalmology  Home link,0,0,0
comments.json_4761,Select  Freya  Chandler as the patient,0,0,0
comments.json_4762,Click the proper office visit link,0,0,0
comments.json_4763,Fill in the correct values and submit the form,0,0,0
comments.json_4764,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4765,Verify that the action was logged,0,1,1
comments.json_4766,Then logout,0,0,0
comments.json_4767,Re - Login as  Freya  Chandler,0,0,0
comments.json_4768,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4769,Click the proper office visit link,0,0,0
comments.json_4770,Verify that the action was logged,0,1,1
comments.json_4771,Verify that the  Office  Visit it shown,0,1,1
comments.json_4772,Selenium test for  UC 84 Acceptance  Scenario 3.,0,1,1
comments.json_4773,Make sure that  Brittany  Franco is in the system,0,1,1
comments.json_4774,Set up the outcome of  Scenario 1,0,0,0
comments.json_4775,Login as  Brody  Franco,0,0,0
comments.json_4776,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4777,Select  Brittany as the dependent,0,0,0
comments.json_4778,Click the proper office visit link,0,0,0
comments.json_4779,Verify that the action was logged,0,1,1
comments.json_4780,Verify that the  Office  Visit it shown,0,1,1
comments.json_4781,Tests to make sure that a patient with multiple dependents is able to view the Ophthalmology Office Visits of all their dependents.,0,1,1
comments.json_4782,Make sure that  Brittany  Franco is in the system .,0,1,1
comments.json_4783,Make sure that  James  Franco is in the system .,0,1,1
comments.json_4784,Set up the outcome of  Scenario 1,0,0,0
comments.json_4785,Login as  Brody  Franco,0,0,0
comments.json_4786,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4787,Select  James as the dependent,0,0,0
comments.json_4788,Verify that no  Office  Visits are shown .,0,1,1
comments.json_4789,Tests to make sure that a patient with no dependents is not able to select anything on the "View Dependents Ophthalmology Office Visit" page.,0,1,1
comments.json_4790,Login as  Freya  Chandler,0,0,0
comments.json_4791,Click the  View  Ophthalmology  Office  Visit link,0,0,0
comments.json_4792,Verify that no dependents are shown .,0,1,1
comments.json_4793,Tests the upward boundary of the  SPH parameter,0,1,1
comments.json_4794,Login as  Brooke  Tran,0,0,0
comments.json_4795,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4796,Select  Freya  Chandler as the patient,0,0,0
comments.json_4797,Enable javascript,0,0,0
comments.json_4798,fill in form and create,0,0,0
comments.json_4799,submit form   and wait so that  Jenkin 's doesn 't screw up,0,0,0
comments.json_4800,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4801,Verify that the action was logged,0,1,1
comments.json_4802,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4803,Tests the lower bound of the  SPH parameter,0,1,1
comments.json_4804,Login as  Brooke  Tran,0,0,0
comments.json_4805,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4806,Select  Freya  Chandler as the patient,0,0,0
comments.json_4807,Enable javascript,0,0,0
comments.json_4808,fill in form and create,0,0,0
comments.json_4809,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4810,Verify that the action was logged,0,1,1
comments.json_4811,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4812,Tests what happens when the user puts in a non -number for  SPH .,0,1,1
comments.json_4813,Login as  Brooke  Tran,0,0,0
comments.json_4814,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4815,Select  Freya  Chandler as the patient,0,0,0
comments.json_4816,Enable javascript,0,0,0
comments.json_4817,fill in form and create,0,0,0
comments.json_4818,Verify that our submission was rejected and we are still on the  Add  Ophthalmology,0,1,1
comments.json_4819,Fill in the correct values and submit the form,0,0,0
comments.json_4820,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4821,Verify that the action was logged,0,1,1
comments.json_4822,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4823,Tests what happens when a user puts in a non -integer for the axis .,0,1,1
comments.json_4824,Login as  Brooke  Tran,0,0,0
comments.json_4825,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4826,Select  Freya  Chandler as the patient,0,0,0
comments.json_4827,Enable javascript,0,0,0
comments.json_4828,fill in form and create,0,0,0
comments.json_4829,Verify that our submission was rejected and we are still on the  Add  Ophthalmology,0,1,1
comments.json_4830,fill in form and create,0,0,0
comments.json_4831,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4832,Verify that the action was logged,0,1,1
comments.json_4833,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4834,Tests what happens when a user puts in a cylinder   but no axis (axis is required if a cylinder is listed for that eye ).,0,1,1
comments.json_4835,Login as  Brooke  Tran,0,0,0
comments.json_4836,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4837,Select  Freya  Chandler as the patient,0,0,0
comments.json_4838,Enable javascript,0,0,0
comments.json_4839,fill in form and create,0,0,0
comments.json_4840,Verify that our submission was rejected and we are still on the  Add  Ophthalmology,0,1,1
comments.json_4841,Fill in the correct values and submit the form,0,0,0
comments.json_4842,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4843,Verify that the action was logged,0,1,1
comments.json_4844,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4845,Selenium test cases for the  Ophthalmology  Office  Visit  Request feature in  UC 88.,0,1,1
comments.json_4846,Sets up the required base data needed for each test case . This includes two  HCP 's and two patients .,0,0,0
comments.json_4847,Clears the database after each test .,0,0,0
comments.json_4848,Selenium test for  UC 88 Acceptance  Scenario 1.,0,1,1
comments.json_4849,Login as  Brody  Franco,0,0,0
comments.json_4850,Create the explicit wait,0,0,0
comments.json_4851,Click the  Add  Ophthalmology  Office  Visit  Request link,0,0,0
comments.json_4852,fill form,0,0,0
comments.json_4853,Verify that the form was accepted,0,1,1
comments.json_4854,Click the  View  Scheduled  Ophthalmology  Office  Visits link,0,0,0
comments.json_4855,Verify the info in the table,0,1,1
comments.json_4856,Click the  Read  Comment link,0,0,0
comments.json_4857,Verify the information is present,0,1,1
comments.json_4858,Selenium test for  UC 88 Acceptance  Scenario 2.,0,1,1
comments.json_4859,Set up the outcome of  Scenario 1,0,0,0
comments.json_4860,Login as  Brooke  Tran,0,0,0
comments.json_4861,Create the explicit wait,0,0,0
comments.json_4862,Click the  View  Ophthalmology  Office  Visit  Requests link,0,0,0
comments.json_4863,Verify the information is present,0,1,1
comments.json_4864,Click the  Accept link,0,0,0
comments.json_4865,Click the  View  Scheduled  Ophthalmology  Office  Visits link,0,0,0
comments.json_4866,Verify that the info is in the table,0,1,1
comments.json_4867,Click the  Read  Comment link,0,0,0
comments.json_4868,Verify the information is present,0,1,1
comments.json_4869,Then logout,0,0,0
comments.json_4870,Login as  Brody  Franco,0,0,0
comments.json_4871,Click the  View  Scheduled  Ophthalmology  Office  Visits link,0,0,0
comments.json_4872,Verify the info in the table,0,1,1
comments.json_4873,Click the  Read  Comment link,0,0,0
comments.json_4874,Verify the information is present,0,1,1
comments.json_4875,Selenium test for  UC 88 Acceptance  Scenario 3.,0,1,1
comments.json_4876,Set up the outcome of  Scenario 1,0,0,0
comments.json_4877,Login as  Brooke  Tran,0,0,0
comments.json_4878,Create the explicit wait,0,0,0
comments.json_4879,Click the  View  Ophthalmology  Office  Visit  Requests link,0,0,0
comments.json_4880,Verify the information is present,0,1,1
comments.json_4881,Click the  Reject link,0,0,0
comments.json_4882,Click the  View  Scheduled  Ophthalmology  Office  Visits link,0,0,0
comments.json_4883,Verify that the info is in the table,0,1,1
comments.json_4884,Click the  Read  Comment link,0,0,0
comments.json_4885,Verify the information is present,0,1,1
comments.json_4886,Then logout,0,0,0
comments.json_4887,Login as  Brody  Franco,0,0,0
comments.json_4888,Click the  View  Scheduled  Ophthalmology  Office  Visits link,0,0,0
comments.json_4889,Verify the info in the table,0,1,1
comments.json_4890,Click the  Read  Comment link,0,0,0
comments.json_4891,Verify the information is present,0,1,1
comments.json_4892,Selenium test cases for the  Ophthalmology  Surgery feature in  UC 86.,0,1,1
comments.json_4893,Sets up the required base data needed for each test case . This includes two  HCP 's and two patients .,0,0,0
comments.json_4894,Clears the database after each test .,0,0,0
comments.json_4895,Selenium test for  UC 86 Acceptance  Scenario 1.,0,1,1
comments.json_4896,Login as  Lamar  Bridges,0,0,0
comments.json_4897,Click the  Add  Surgical  Ophthalmology  Office  Visit link,0,0,0
comments.json_4898,Select  Brody  Franco as the patient,0,0,0
comments.json_4899,Wait for the page change,0,0,0
comments.json_4900,Enable javascript,0,0,0
comments.json_4901,fill in form and create,0,0,0
comments.json_4902,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4903,Verify that the action was logged,0,1,1
comments.json_4904,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4905,Selenium test for  UC 86 Acceptance  Scenario 2.,0,1,1
comments.json_4906,Login as  Lamar  Bridges,0,0,0
comments.json_4907,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4908,Select  Freya  Chandler as the patient,0,0,0
comments.json_4909,Wait for the page change,0,0,0
comments.json_4910,Enable javascript,0,0,0
comments.json_4911,fill in form and create,0,0,0
comments.json_4912,Verify that our submission was rejected and we are still on the  Add  Ophthalmology,0,1,1
comments.json_4913,Fill in the correct values and submit the form,0,0,0
comments.json_4914,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4915,Verify that the action was logged,0,1,1
comments.json_4916,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4917,Selenium test for  UC 86 Acceptance  Scenario 3.,0,1,1
comments.json_4918,Set up the outcome of  Scenario 1,0,0,0
comments.json_4919,Login as  Brooke  Tran,0,0,0
comments.json_4920,Click the  Add  Ophthalmology  Office  Visit link,0,0,0
comments.json_4921,Select  Brody  Franco as the patient,0,0,0
comments.json_4922,Verify that we got redirected to the regular oph office visit page,0,1,1
comments.json_4923,Selenium test for  UC 86 Acceptance  Scenario 4.,0,1,1
comments.json_4924,Set up the outcome of  Scenario 2,0,0,0
comments.json_4925,Login as  Lamar  Bridges,0,0,0
comments.json_4926,Click the  Ophthalmology  Home link,0,0,0
comments.json_4927,Select  Freya  Chandler as the patient,0,0,0
comments.json_4928,Fill in the correct values and submit the form,0,0,0
comments.json_4929,Verify that we are returned to the  Ophthalmology  Homepage,0,1,1
comments.json_4930,Verify that the action was logged,0,1,1
comments.json_4931,Verify that the newly created office visit is present in the  Prior  Office  Visits list,0,1,1
comments.json_4932,Office Visit Basic Health Test contains http unit tests for editing a patient 's basic health metrics during an office visit.,0,0,0
comments.json_4933,This is called before each test to set up each one . It clears all the database tables and generates a new set of test data.,0,0,0
comments.json_4934,Create an office visit and enter health metrics for a patient that is 5 months old. This test uses patient Brynn McClain (born May 1  2013).,0,0,0
comments.json_4935,Login as  HCP  Shelly  Vang,0,0,0
comments.json_4936,Click  Document  Office  Visit  Link,0,0,0
comments.json_4937,Search for patient 101,0,0,0
comments.json_4938,Verify  Document  Office  Visit page,0,1,1
comments.json_4939,Click  Yes   Document  Office  Visit,0,0,0
comments.json_4940,Verify  Edit  Office  Visit page,0,1,1
comments.json_4941,Add a new office visit,0,0,0
comments.json_4942,Enter 10/01/2013 for the  Office  Visit  Date,0,0,0
comments.json_4943,Select  Central  Hospital for the hospital,0,0,0
comments.json_4944,Enter " Brynn can start eating rice cereal mixed with breast milk or formula once a day " for  Notes,0,0,0
comments.json_4945,Click the create button,0,0,0
comments.json_4946,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_4947,Enter  Health  Metrics,0,0,0
comments.json_4948,Enter  Weight,0,0,0
comments.json_4949,Enter  Length,0,0,0
comments.json_4950,Enter  Head  Circumference,0,0,0
comments.json_4951,Select household smoking status,0,0,0
comments.json_4952,Click the  Add  Record button,0,0,0
comments.json_4953,Verify " Health information successfully updated ." message,0,1,1
comments.json_4954,Create an office visit and enter health metrics for a patient that is 2 years old. This test uses patient Caldwell Hudson (born September 29  2011). This test also adds a Penicillin prescription and a Streptococcal sore throat diagnosis.,0,1,1
comments.json_4955,Login as  HCP  Shelly  Vang,0,0,0
comments.json_4956,Click  Document  Office  Visit  Link,0,0,0
comments.json_4957,Search for patient 102,0,0,0
comments.json_4958,Verify  Document  Office  Visit page,0,1,1
comments.json_4959,Click  Yes   Document  Office  Visit,0,0,0
comments.json_4960,Verify  Edit  Office  Visit page,0,1,1
comments.json_4961,Add a new office visit,0,0,0
comments.json_4962,Enter the  Office  Visit  Date,0,0,0
comments.json_4963,Select  Central  Hospital for the hospital,0,0,0
comments.json_4964,Enter  Notes,0,0,0
comments.json_4965,Click the create button,0,0,0
comments.json_4966,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_4967,Enter  Health  Metrics,0,0,0
comments.json_4968,Enter  Weight,0,0,0
comments.json_4969,Enter  Length,0,0,0
comments.json_4970,Enter  Head  Circumference,0,0,0
comments.json_4971,Select household smoking status,0,0,0
comments.json_4972,Click the  Add  Record button,0,0,0
comments.json_4973,Verify " Health information successfully updated ." message,0,1,1
comments.json_4974,Enter prescription,0,0,0
comments.json_4975,Select  Penicillin (664662530) for the  Medication,0,0,0
comments.json_4976,Enter 50 mg for the  Dosage,0,0,0
comments.json_4977,Enter 10/28/2013 for the  Start  Date,0,0,0
comments.json_4978,Enter 11/03/2013 for the  End  Date,0,0,0
comments.json_4979,Enter " Take three times a day " for the  Instructions,0,0,0
comments.json_4980,Click the  Add  Prescription button,0,0,0
comments.json_4981,Verify " Prescription information successfully updated ." message,0,1,1
comments.json_4982,Enter  Diagnosis,0,0,0
comments.json_4983,Select '34.00 - Streptococcal sore throat ' for the diagnosis,0,0,0
comments.json_4984,Click the  Add  Diagnosis button,0,0,0
comments.json_4985,Verify " Diagnosis information successfully updated " message,0,1,1
comments.json_4986,Create an office visit and enter health metrics for a patient that is 5 years old. This test uses patient Fulton Gray (born October 10  2008).,0,1,1
comments.json_4987,Login as  HCP  Shelly  Vang,0,0,0
comments.json_4988,Click  Document  Office  Visit  Link,0,0,0
comments.json_4989,Search for patient 103,0,0,0
comments.json_4990,Verify  Document  Office  Visit page,0,1,1
comments.json_4991,Click  Yes   Document  Office  Visit,0,0,0
comments.json_4992,Verify  Edit  Office  Visit page,0,1,1
comments.json_4993,Add a new office visit,0,0,0
comments.json_4994,Enter the  Office  Visit  Date,0,0,0
comments.json_4995,Select  Central  Hospital for the hospital,0,0,0
comments.json_4996,Enter  Notes,0,0,0
comments.json_4997,Click the create button,0,0,0
comments.json_4998,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_4999,Enter  Health  Metrics,0,0,0
comments.json_5000,Enter  Weight,0,0,0
comments.json_5001,Enter  Length,0,0,0
comments.json_5002,Enter  Blood pressure,0,0,0
comments.json_5003,Select household smoking status,0,0,0
comments.json_5004,Click the  Add  Record button,0,0,0
comments.json_5005,Create an office visit and enter health metrics for a patient that is 20 years old. This test uses patient Daria Griffin (born October 25  1993).,0,0,0
comments.json_5006,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5007,Click  Document  Office  Visit  Link,0,0,0
comments.json_5008,Search for patient 104,0,0,0
comments.json_5009,Verify  Document  Office  Visit page,0,1,1
comments.json_5010,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5011,Verify  Edit  Office  Visit page,0,1,1
comments.json_5012,Add a new office visit,0,0,0
comments.json_5013,Enter the  Office  Visit  Date,0,0,0
comments.json_5014,Select  Central  Hospital for the hospital,0,0,0
comments.json_5015,Enter  Notes,0,0,0
comments.json_5016,Click the create button,0,0,0
comments.json_5017,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5018,Enter  Health  Metrics,0,0,0
comments.json_5019,Enter  Weight,0,0,0
comments.json_5020,Enter  Length,0,0,0
comments.json_5021,Enter  Blood pressure,0,0,0
comments.json_5022,Select household smoking status,0,0,0
comments.json_5023,Select  Patient smoking status,0,0,0
comments.json_5024,Enter cholesterol,0,0,0
comments.json_5025,Click the  Add  Record button,0,0,0
comments.json_5026,Verify " Health information successfully updated ." message,0,1,1
comments.json_5027,Create an office visit and enter health metrics for a patient that is 20 years old. This test uses patient Thane Ross (born January 3  1989).,0,1,1
comments.json_5028,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5029,Click  Document  Office  Visit  Link,0,0,0
comments.json_5030,Search for patient 105,0,0,0
comments.json_5031,Verify  Document  Office  Visit page,0,1,1
comments.json_5032,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5033,Verify  Edit  Office  Visit page,0,1,1
comments.json_5034,Add a new office visit,0,0,0
comments.json_5035,Enter the  Office  Visit  Date,0,0,0
comments.json_5036,Select  Central  Hospital for the hospital,0,0,0
comments.json_5037,Enter  Notes,0,0,0
comments.json_5038,Click the create button,0,0,0
comments.json_5039,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5040,Enter  Health  Metrics,0,0,0
comments.json_5041,Enter  Weight,0,0,0
comments.json_5042,Enter  Length,0,0,0
comments.json_5043,Enter  Blood pressure,0,0,0
comments.json_5044,Select household smoking status,0,0,0
comments.json_5045,Select  Patient smoking status,0,0,0
comments.json_5046,Enter cholesterol,0,0,0
comments.json_5047,Click the  Add  Record button,0,0,0
comments.json_5048,Verify " Health information successfully updated ." message,0,1,1
comments.json_5049,Create an office visit and enter health metrics for a patient that is >20 years old. This test uses patient Random Person and no patient smoking status is entered into the Health Metrics. An invalid error message is displayed.,0,1,1
comments.json_5050,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_5051,Click  Document  Office  Visit  Link,0,0,0
comments.json_5052,Search for patient 1,0,0,0
comments.json_5053,Verify  Document  Office  Visit page,0,1,1
comments.json_5054,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5055,Verify  Edit  Office  Visit page,0,1,1
comments.json_5056,Add a new office visit,0,0,0
comments.json_5057,Enter the  Office  Visit  Date,0,0,0
comments.json_5058,Select  Central  Hospital for the hospital,0,0,0
comments.json_5059,Enter  Notes,0,0,0
comments.json_5060,Click the create button,0,0,0
comments.json_5061,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5062,Enter  Health  Metrics,0,0,0
comments.json_5063,Enter  Weight,0,0,0
comments.json_5064,Enter  Length,0,0,0
comments.json_5065,Enter  Blood pressure,0,0,0
comments.json_5066,Select household smoking status,0,0,0
comments.json_5067,Enter cholesterol,0,0,0
comments.json_5068,Click the  Add  Record button,0,0,0
comments.json_5069,Verify " Information not valid " message,0,1,1
comments.json_5070,Verify " Smoker must be an integer in [0 10]" message,0,1,1
comments.json_5071,Create an office visit and enter health metrics for a patient that is >20 years old. This test uses patient Random Person and no patient high blood pressure is entered into the Health Metrics. An invalid error message is displayed.,0,1,1
comments.json_5072,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_5073,Click  Document  Office  Visit  Link,0,0,0
comments.json_5074,Search for patient 1,0,0,0
comments.json_5075,Verify  Document  Office  Visit page,0,1,1
comments.json_5076,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5077,Verify  Edit  Office  Visit page,0,1,1
comments.json_5078,Add a new office visit,0,0,0
comments.json_5079,Enter the  Office  Visit  Date,0,0,0
comments.json_5080,Select  Central  Hospital for the hospital,0,0,0
comments.json_5081,Enter  Notes,0,0,0
comments.json_5082,Click the create button,0,0,0
comments.json_5083,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5084,Enter  Health  Metrics,0,0,0
comments.json_5085,Enter  Weight,0,0,0
comments.json_5086,Enter  Length,0,0,0
comments.json_5087,Enter  Blood pressure,0,0,0
comments.json_5088,Select household smoking status,0,0,0
comments.json_5089,Select  Patient smoking status,0,0,0
comments.json_5090,Enter cholesterol,0,0,0
comments.json_5091,Click the  Add  Record button,0,0,0
comments.json_5092,Verify " Information not valid " message,0,1,1
comments.json_5093,Verify " Systolic blood pressure must be an integer in [0 999]" message,0,1,1
comments.json_5094,Create an office visit and enter health metrics for a patient that is >20 years old. This test uses patient Random Person and invalid characters are entered to measure HDL cholesterol into the Health Metrics. An invalid error message is displayed.,0,1,1
comments.json_5095,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_5096,Click  Document  Office  Visit  Link,0,0,0
comments.json_5097,Search for patient 1,0,0,0
comments.json_5098,Verify  Document  Office  Visit page,0,1,1
comments.json_5099,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5100,Verify  Edit  Office  Visit page,0,1,1
comments.json_5101,Add a new office visit,0,0,0
comments.json_5102,Enter the  Office  Visit  Date,0,0,0
comments.json_5103,Select  Central  Hospital for the hospital,0,0,0
comments.json_5104,Enter  Notes,0,0,0
comments.json_5105,Click the create button,0,0,0
comments.json_5106,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5107,Enter  Health  Metrics,0,0,0
comments.json_5108,Enter  Weight,0,0,0
comments.json_5109,Enter  Length,0,0,0
comments.json_5110,Enter  Blood pressure,0,0,0
comments.json_5111,Select household smoking status,0,0,0
comments.json_5112,Select  Patient smoking status,0,0,0
comments.json_5113,Enter cholesterol,0,0,0
comments.json_5114,Click the  Add  Record button,0,0,0
comments.json_5115,Verify " Information not valid " message,0,1,1
comments.json_5116,Verify " Cholesterol  HDL must be an integer in [0 89]" message,0,1,1
comments.json_5117,Create an office visit for a patient that is >20 years old . This test uses patient Random Person. The date of the Office Visit is set to an invalid date (Leap Day of 2014) and the date is automatically adjusted to account for this.,0,1,1
comments.json_5118,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_5119,Click  Document  Office  Visit  Link,0,0,0
comments.json_5120,Search for patient 1,0,0,0
comments.json_5121,Verify  Document  Office  Visit page,0,1,1
comments.json_5122,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5123,Verify  Edit  Office  Visit page,0,1,1
comments.json_5124,Add a new office visit,0,0,0
comments.json_5125,Enter the  Office  Visit  Date,0,0,0
comments.json_5126,Select  Central  Hospital for the hospital,0,0,0
comments.json_5127,Enter  Notes,0,0,0
comments.json_5128,Click the create button,0,0,0
comments.json_5129,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5130,Verify that date changed for to  March 1st   2014.,0,1,1
comments.json_5131,Create an office visit and enter health metrics for a patient that is under 3 years old. This test uses patient Brynn McClain. No head circumference is entered and an invalid message is displayed.,0,0,0
comments.json_5132,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_5133,Click  Document  Office  Visit  Link,0,0,0
comments.json_5134,Search for patient 101,0,0,0
comments.json_5135,Verify  Document  Office  Visit page,0,1,1
comments.json_5136,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5137,Verify  Edit  Office  Visit page,0,1,1
comments.json_5138,Add a new office visit,0,0,0
comments.json_5139,Enter the  Office  Visit  Date,0,0,0
comments.json_5140,Select  Central  Hospital for the hospital,0,0,0
comments.json_5141,Enter  Notes,0,0,0
comments.json_5142,Click the create button,0,0,0
comments.json_5143,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5144,Enter  Health  Metrics,0,0,0
comments.json_5145,Enter  Weight,0,0,0
comments.json_5146,Enter  Length,0,0,0
comments.json_5147,Enter  Head  Circumference,0,0,0
comments.json_5148,Select household smoking status,0,0,0
comments.json_5149,Click the  Add  Record button,0,0,0
comments.json_5150,Verify " Information not valid " message,0,1,1
comments.json_5151,Verify " Head  Circumference must be greater than 0" message,0,1,1
comments.json_5152,set Up,0,0,0
comments.json_5153,search for patient 1 by  MID .,0,0,0
comments.json_5154,the button to click should have the text of the  MID,0,0,0
comments.json_5155,test Acceptance Scenario 1,0,0,0
comments.json_5156,click  Document  Office  Visit,0,0,0
comments.json_5157,search for patient 1 by  MID .,0,0,0
comments.json_5158,the button to click should have the text of the  MID,0,0,0
comments.json_5159,click  Yes   Document  Office  Visit,0,0,0
comments.json_5160,add a new office visit,0,0,0
comments.json_5161,Check that it was created,0,0,0
comments.json_5162,Add instructions,0,0,0
comments.json_5163,check updated page,0,0,0
comments.json_5164,When a user enters a  URL to a page for patient specific instructions   the system should strip leading whitepsace before validating. This is a convenience for users who may have accidentally copied whitespace along with the URL. Whitespace characters are not considered safe as part of the URL specification.,0,0,0
comments.json_5165,click  Document  Office  Visit,0,0,0
comments.json_5166,search for patient 1 by  MID .,0,0,0
comments.json_5167,the button to click should have the text of the  MID,0,0,0
comments.json_5168,click  Yes   Document  Office  Visit,0,0,0
comments.json_5169,add a new office visit,0,0,0
comments.json_5170,Check that it was created,0,0,0
comments.json_5171,Add instructions,0,0,0
comments.json_5172,check updated page,0,0,0
comments.json_5173,When a user enters a  URL to a page for patient specific instructions   the system should strip trailing whitepsace before validating. This is a convenience for users who may have accidentally copied whitespace along with the URL. Whitespace characters are not considered safe as part of the URL specification.,0,0,0
comments.json_5174,click  Document  Office  Visit,0,0,0
comments.json_5175,search for patient 1 by  MID .,0,0,0
comments.json_5176,the button to click should have the text of the  MID,0,0,0
comments.json_5177,click  Yes   Document  Office  Visit,0,0,0
comments.json_5178,add a new office visit,0,0,0
comments.json_5179,Check that it was created,0,1,1
comments.json_5180,Add instructions,0,0,0
comments.json_5181,check updated page,0,1,1
comments.json_5182,test Acceptance Scenario 2,0,0,0
comments.json_5183,click  Document  Office  Visit,0,0,0
comments.json_5184,select the patient,0,0,0
comments.json_5185,search for patient 1 by  MID .,0,0,0
comments.json_5186,the button to click should have the text of the  MID,0,0,0
comments.json_5187,Select the office visit from yesterday,0,0,0
comments.json_5188,Verify instructions are visible,0,1,1
comments.json_5189,Click the remove link,0,0,0
comments.json_5190,verify the instructions have been deleted,0,1,1
comments.json_5191,test Acceptance Scenario 3,0,0,0
comments.json_5192,click  Document  Office  Visit,0,0,0
comments.json_5193,select the patient,0,0,0
comments.json_5194,search for patient 5 by  MID .,0,0,0
comments.json_5195,the button to click should have the text of the  MID,0,0,0
comments.json_5196,Select the office visit from yesterday,0,0,0
comments.json_5197,check updated page,0,0,0
comments.json_5198,test Acceptance Scenario 4,0,0,0
comments.json_5199,click  Document  Office  Visit,0,0,0
comments.json_5200,select the patient,0,0,0
comments.json_5201,search for patient 1 by  MID .,0,0,0
comments.json_5202,the button to click should have the text of the  MID,0,0,0
comments.json_5203,click  Yes   Document  Office  Visit,0,0,0
comments.json_5204,add a new office visit,0,0,0
comments.json_5205,Check that it was created,0,0,0
comments.json_5206,Add instructions,0,0,0
comments.json_5207,check updated page,0,1,1
comments.json_5208,test Acceptance Scenario 5,0,0,0
comments.json_5209,click  Patient  Specific  Instructions,0,0,0
comments.json_5210,verify information in patient instructions table,0,1,1
comments.json_5211,verify link address,0,1,1
comments.json_5212,test Link To Office Visit,0,0,0
comments.json_5213,click  Patient  Specific instructions,0,0,0
comments.json_5214,Follow link to office visit page,0,0,0
comments.json_5215,test Missing Field,0,0,0
comments.json_5216,click  Document  Office  Visit,0,0,0
comments.json_5217,select the patient,0,0,0
comments.json_5218,search for patient 2 by  MID .,0,0,0
comments.json_5219,the button to click should have the text of the  MID,0,0,0
comments.json_5220,click  Yes   Document  Office  Visit,0,0,0
comments.json_5221,add a new office visit,0,0,0
comments.json_5222,Check that it was created,0,0,0
comments.json_5223,Add instructions   but with a field missing,0,0,0
comments.json_5224,check for error page,0,1,1
comments.json_5225,check that form fields still contain prior values,0,1,1
comments.json_5226,test Too Many Characters,0,0,0
comments.json_5227,click  Document  Office  Visit,0,0,0
comments.json_5228,select the patient,0,0,0
comments.json_5229,search for patient 2 by  MID .,0,0,0
comments.json_5230,the button to click should have the text of the  MID,0,0,0
comments.json_5231,click  Yes   Document  Office  Visit,0,0,0
comments.json_5232,add a new office visit,0,0,0
comments.json_5233,Check that it was created,0,1,1
comments.json_5234,Add instructions   but with the name is too long,0,0,0
comments.json_5235,check for error page,0,1,1
comments.json_5236,check that form fields still contain prior values,0,1,1
comments.json_5237,test Modified Date,0,0,0
comments.json_5238,click  Document  Office  Visit,0,0,0
comments.json_5239,select the patient,0,0,0
comments.json_5240,search for patient 1 by  MID .,0,0,0
comments.json_5241,the button to click should have the text of the  MID,0,0,0
comments.json_5242,Select the office visit from yesterday,0,0,0
comments.json_5243,Verify instructions are visible,0,1,1
comments.json_5244,Click the edit link,0,0,0
comments.json_5245,check that the form now contains the values we 're editing,0,1,1
comments.json_5246,Verify instructions are visible,0,1,1
comments.json_5247,verify the table is the same size as before,0,1,1
comments.json_5248,verify that the comments have changed,0,1,1
comments.json_5249,test Second Entry,0,0,0
comments.json_5250,click  Document  Office  Visit,0,0,0
comments.json_5251,select the patient,0,0,0
comments.json_5252,search for patient 1 by  MID .,0,0,0
comments.json_5253,the button to click should have the text of the  MID,0,0,0
comments.json_5254,Select the office visit from yesterday,0,0,0
comments.json_5255,Verify instructions are visible,0,1,1
comments.json_5256,verify the table has one more row then before,0,1,1
comments.json_5257,Tests potential prescriptions renewals,0,1,1
comments.json_5258,An equivalence class test for a patient who should appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expires in 5 days) The prescriptions were NOT made on the same visit as a special-diagnosis.,0,1,1
comments.json_5259,An equivalence class test for a patient who should  NOT appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expires in 10 days),0,1,1
comments.json_5260,A boundary -value test for a patient who should appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expires in 7 days) Diagnosed with 493.99,0,1,1
comments.json_5261,A boundary -value test for a patient who should  NOT appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expires in 8 days),0,1,1
comments.json_5262,An equivalence class test for a patient who should  NOT appear on the list . (Designated Tester Arehart  NOT special-diagnosis-history  prescription expires in 5 days),0,1,1
comments.json_5263,A boundary -value test for a patient who should appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expires today) Diagnosed with 459.99 (This is the closest possible to 460 because the table uses  decimal(5 2) ),0,1,1
comments.json_5264,A boundary -value test for a patient who should  NOT appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expired yesterday),0,1,1
comments.json_5265,A boundary -value test for a patient who should appear on the list . (Designated Tester Arehart  special-diagnosis-history  prescription expires today),0,1,1
comments.json_5266,A boundary -value test for a patient who should appear on the list . (Designated Tester Gandalf Stormcrow),0,1,1
comments.json_5267,Asserts that the text is on the page,0,0,0
comments.json_5268,Asserts that the text is not on the page . Does not pause for text to appear .,0,0,0
comments.json_5269,Use  Case 42,0,0,0
comments.json_5270,Asserts that the text is on the page,0,0,0
comments.json_5271,Asserts that the text is not on the page . Does not pause for text to appear .,0,0,0
comments.json_5272,Use  Case 10,0,0,0
comments.json_5273,test Edit Patient,0,1,1
comments.json_5274,test Invalid Patient Dates,0,1,1
comments.json_5275,test Invalid Patient Birth Dates,0,1,1
comments.json_5276,test Represent,0,1,1
comments.json_5277,Clicking on a representee 's name takes you to their records,0,0,0
comments.json_5278,test Allergy,0,1,1
comments.json_5279,Add allergy,0,0,0
comments.json_5280,test Allergy 2,0,1,1
comments.json_5281,Add allergy,0,0,0
comments.json_5282,test Edit Smoking Status,0,1,1
comments.json_5283,Login,0,0,0
comments.json_5284,Click  Document  Office  Visit,0,0,0
comments.json_5285,Choose patient 2,0,0,0
comments.json_5286,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5287,Verify  Edit  Office  Visit page,0,1,1
comments.json_5288,Click the create button,0,0,0
comments.json_5289,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5290,Create  Health  Metrics  Record,0,0,0
comments.json_5291,Verify " Health information successfully updated ." message,0,1,1
comments.json_5292,Verify create health metrics log,0,1,1
comments.json_5293,Change the smoking status,0,0,0
comments.json_5294,Verify " Health information successfully updated ." message,0,1,1
comments.json_5295,Verify edit health metrics log,0,1,1
comments.json_5296,test Add Additional Demographics 1,0,1,1
comments.json_5297,test Add Addition Demographicss 2,0,1,1
comments.json_5298,test Add Addition Demographicss 3,0,1,1
comments.json_5299,test Add Dup Allergy,0,1,1
comments.json_5300,Selects  Patient  Trend  Setter,0,0,0
comments.json_5301,Add  Penicillin  Allergy again,0,0,0
comments.json_5302,This is the error that should appear when this allergy is added a,0,0,0
comments.json_5303,second time .,0,0,0
comments.json_5304,test Add Allergy Prev RX,0,1,1
comments.json_5305,Selects  Patient  Trend  Setter,0,0,0
comments.json_5306,Verify  Edit  Office  Visit page,0,1,1
comments.json_5307,Create new  OV on date 01/01/2012,0,0,0
comments.json_5308,Add  Penicillin  RX   60mg   01/01/2012 - 01/31/2012  thrice daily w /,0,0,0
comments.json_5309,food,0,0,0
comments.json_5310,PHR  Info,0,0,0
comments.json_5311,Add  Penicillin  Allergy (will be first Found on today 's date ),0,0,0
comments.json_5312,No error should appear when this allergy is added .,0,0,0
comments.json_5313,test Add Allergy Fut RX,0,1,1
comments.json_5314,Select  Anakin  Skywalker   this seemed to be easier than what the,0,0,0
comments.json_5315,acceptance tests did .,0,0,0
comments.json_5316,Since we don 't worry about preconditions and it takes us straight to the correct page anyway  we can skip a lot of stuff here.,0,0,0
comments.json_5317,Add  M -minene  Allergy (will be first Found on today 's date ),0,0,0
comments.json_5318,This is the error that should appear when this allergy is added .,0,0,0
comments.json_5319,test Add Allergy Exist RX,0,1,1
comments.json_5320,Selects  Patient  Trend  Setter,0,0,0
comments.json_5321,Verify  Edit  Office  Visit page,0,1,1
comments.json_5322,Create new  OV on date 02/01/2012,0,0,0
comments.json_5323,Add  Lantus  RX   100mg   02/01/2012 - 08/01/2012  once daily,0,0,0
comments.json_5324,PHR  Info,0,0,0
comments.json_5325,Add  Lantus  Allergy (will be first Found on today 's date ),0,0,0
comments.json_5326,This is the error that should appear when this allergy is added .,0,0,0
comments.json_5327,Asserts that the text is on the page,0,0,0
comments.json_5328,Asserts that the text is not on the page . Does not pause for text to appear .,0,0,0
comments.json_5329,ADDRESS,0,0,0
comments.json_5330,test View Prescription Records,0,0,0
comments.json_5331,Create a new instance of the html unit driver,0,0,0
comments.json_5332,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5333,not the implementation .,0,0,0
comments.json_5334,And now use this to visit i Trust,0,0,0
comments.json_5335,Find the text input element by its name,0,0,0
comments.json_5336,Check to make sure this is the correct page,0,1,1
comments.json_5337,Click on  All  Patients,0,0,0
comments.json_5338,Click on  Andy  Programmer,0,0,0
comments.json_5339,Go to prescription report page,0,0,0
comments.json_5340,Check fields to make sure they are correct,0,1,1
comments.json_5341,Close the driver,0,0,0
comments.json_5342,ADDRESS,0,0,0
comments.json_5343,test Add ER,0,0,0
comments.json_5344,Create a new instance of the html unit driver,0,0,0
comments.json_5345,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5346,not the implementation .,0,0,0
comments.json_5347,And now use this to visit i Trust,0,0,0
comments.json_5348,driver .manage ().timeouts ().implicitly Wait (30  Time Unit . SECONDS );,0,0,0
comments.json_5349,Find the text input element by its name,0,0,0
comments.json_5350,Check to make sure this is the correct page,0,1,1
comments.json_5351,quit driver,0,0,0
comments.json_5352,Implicitly wait at most 2 seconds for each element to load,0,0,0
comments.json_5353,search for patient 1 by  MID,0,0,0
comments.json_5354,the button to click should have the text of the  MID,0,0,0
comments.json_5355,we should now be on the document office visit page,0,0,0
comments.json_5356,click the  Yes   document office visit button,0,0,0
comments.json_5357,assert Logged ( Transaction Type . CREATE _ BASIC _ HEALTH _ METRICS   9000000000 L   2 L   "");//assert Logged not working here ...,0,0,0
comments.json_5358,ADDRESS,0,0,0
comments.json_5359,Preconditions : Patient 2 is in the system and has authenticated successfully .  HCP 9000000000 is in the system with address 4321 My Road St  PO BOX 2  CityName  NY  12345-1234 and physician type Surgeon.  Patient 2 has had 2 office visits with HCP 9000000000  and no other office visits are in the system.  TakeSatisfactionSurveySuccess and TakeSatisfactionSurveySuccess2 have passed successfully.  1. Patient 2 chooses to view satisfaction survey results.  2. Patient 2 inputs Surgeon for physician type and zip code 12377.  3. Submit.,1,0,1
comments.json_5360,Create a new instance of the html unit driver,0,0,0
comments.json_5361,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5362,not the implementation .,0,0,0
comments.json_5363,And now use this to visit i Trust,0,0,0
comments.json_5364,Find the text input element by its name,0,0,0
comments.json_5365,Check to make sure this is the correct page,0,0,0
comments.json_5366,quit driver,0,0,0
comments.json_5367,Create a new instance of the html unit driver,0,0,0
comments.json_5368,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5369,not the implementation .,0,0,0
comments.json_5370,And now use this to visit i Trust,0,0,0
comments.json_5371,Find the text input element by its name,0,0,0
comments.json_5372,Check to make sure this is the correct page,0,1,1
comments.json_5373,quit driver,0,0,0
comments.json_5374,Create a new instance of the html unit driver,0,0,0
comments.json_5375,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5376,not the implementation .,0,0,0
comments.json_5377,And now use this to visit i Trust,0,0,0
comments.json_5378,Find the text input element by its name,0,0,0
comments.json_5379,Check to make sure this is the correct page,0,1,1
comments.json_5380,quit driver,0,0,0
comments.json_5381,Create a new instance of the html unit driver,0,0,0
comments.json_5382,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5383,not the implementation .,0,0,0
comments.json_5384,And now use this to visit i Trust,0,0,0
comments.json_5385,Find the text input element by its name,0,0,0
comments.json_5386,Check to make sure this is the correct page,0,1,1
comments.json_5387,quit the driver,0,0,0
comments.json_5388,Create a new instance of the html unit driver,0,0,0
comments.json_5389,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5390,not the implementation .,0,0,0
comments.json_5391,And now use this to visit i Trust,0,0,0
comments.json_5392,Find the text input element by its name,0,0,0
comments.json_5393,Check to make sure this is the correct page,0,1,1
comments.json_5394,quit driver,0,0,0
comments.json_5395,Create a new instance of the html unit driver,0,0,0
comments.json_5396,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5397,not the implementation .,0,0,0
comments.json_5398,And now use this to visit i Trust,0,0,0
comments.json_5399,Find the text input element by its name,0,0,0
comments.json_5400,Check to make sure this is the correct page,0,1,1
comments.json_5401,quit driver,0,0,0
comments.json_5402,Create a new instance of the html unit driver,0,0,0
comments.json_5403,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5404,not the implementation .,0,0,0
comments.json_5405,And now use this to visit i Trust,0,0,0
comments.json_5406,Find the text input element by its name,0,0,0
comments.json_5407,Check to make sure this is the correct page,0,0,0
comments.json_5408,quit driver,0,0,0
comments.json_5409,Create a new instance of the html unit driver,0,0,0
comments.json_5410,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5411,not the implementation .,0,0,0
comments.json_5412,And now use this to visit i Trust,0,0,0
comments.json_5413,Find the text input element by its name,0,0,0
comments.json_5414,Check to make sure this is the correct page,0,1,1
comments.json_5415,quit driver,0,0,0
comments.json_5416,Create a new instance of the html unit driver,0,0,0
comments.json_5417,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5418,not the implementation .,0,0,0
comments.json_5419,And now use this to visit i Trust,0,0,0
comments.json_5420,Find the text input element by its name,0,0,0
comments.json_5421,Check to make sure this is the correct page,0,1,1
comments.json_5422,quit driver,0,0,0
comments.json_5423,Create a new instance of the html unit driver,0,0,0
comments.json_5424,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5425,not the implementation .,0,0,0
comments.json_5426,And now use this to visit i Trust,0,0,0
comments.json_5427,Find the text input element by its name,0,0,0
comments.json_5428,Check to make sure this is the correct page,0,1,1
comments.json_5429,quit driver,0,0,0
comments.json_5430,Create a new instance of the html unit driver,0,0,0
comments.json_5431,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5432,not the implementation .,0,0,0
comments.json_5433,And now use this to visit i Trust,0,0,0
comments.json_5434,Find the text input element by its name,0,0,0
comments.json_5435,Check to make sure this is the correct page,0,1,1
comments.json_5436,quit driver,0,0,0
comments.json_5437,ADDRESS,0,0,0
comments.json_5438,testedit OVP Prescription,0,1,1
comments.json_5439,Create a new instance of the html unit driver,0,0,0
comments.json_5440,Notice that the remainder of the code relies on the interface  ,0,0,0
comments.json_5441,not the implementation .,0,0,0
comments.json_5442,And now use this to visit i Trust,0,0,0
comments.json_5443,Find the text input element by its name,0,0,0
comments.json_5444,Check to make sure this is the correct page,0,1,1
comments.json_5445,assert Equals (" Information not valid "  driver .find Element ( By .xpath ("//div [@id ='i Trust Content ']/div [4]/div /h 2")).get Text ());,0,0,0
comments.json_5446,quit driver,0,0,0
comments.json_5448,Create instance of the web driver,0,0,0
comments.json_5449,Navigate to i Trust,0,0,0
comments.json_5450,Login,0,0,0
comments.json_5451,Check if logged in,0,0,0
comments.json_5452,Select  Document  Office  Visit,0,0,0
comments.json_5453,Search for patient 2,0,0,0
comments.json_5454,Select the visit for 06/10/2007,0,0,0
comments.json_5455,Select the prescription for  Tetracycline,0,0,0
comments.json_5456,Check the current table values,0,0,0
comments.json_5457,Update the prescription data,0,0,0
comments.json_5458,Check if the prescription updated,0,1,1
comments.json_5459,Duplicate entry in table   so finding wrong entry,0,0,0
comments.json_5460,assert Equals ("10mg "  driver .find Element ( By .xpath ("//table [@id ='prescriptions Table ']/tbody /tr [3]/td [2]")).get Text ());,0,0,0
comments.json_5461,assert Equals (" Take thrice daily "  driver .find Element ( By .xpath ("//table [@id ='prescriptions Table ']/tbody /tr [3]/td [4]")).get Text ());,0,0,0
comments.json_5462,Close the driver,0,0,0
comments.json_5463,Create instance of the web driver,0,0,0
comments.json_5464,Navigate to i Trust,0,0,0
comments.json_5465,Login,0,0,0
comments.json_5466,Check if logged in,0,1,1
comments.json_5467,Select  Prescription  Records from the menu,0,0,0
comments.json_5468,driver .find Element ( By .xpath ("//div [@id ='i Trust Menu ']/div /div [3]/div /h 2")).click ();,0,0,0
comments.json_5469,View current patient 's records,0,0,0
comments.json_5470,Check for  Prioglitazone in the table and select it,0,1,1
comments.json_5471,Check prescription information,0,1,1
comments.json_5472,Close the driver,0,0,0
comments.json_5473,Create an instance of the html unit driver,0,0,0
comments.json_5474,Visit the i Trust home page,0,0,0
comments.json_5475,Get the page title,0,0,0
comments.json_5476,Login,0,0,0
comments.json_5477,Check if logged in,0,0,0
comments.json_5478,Click on the  My  Diagnoses option,0,0,0
comments.json_5479,Select  Acute  Lycanthropy,0,0,0
comments.json_5480,Close the driver,0,0,0
comments.json_5481,Create instance of the web driver,0,0,0
comments.json_5482,Navigate to i Trust,0,0,0
comments.json_5483,Login,0,0,0
comments.json_5484,Check if logged in,0,1,1
comments.json_5485,Select  My  Expired  Prescription  Reports from the menu,0,0,0
comments.json_5486,Select the  Tetracycline prescription,0,0,0
comments.json_5487,Check the values in the prescription table,0,1,1
comments.json_5488,Close the driver,0,0,0
comments.json_5489,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5490,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5491,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5492,Make sure this didn 't get prescribed,0,1,1
comments.json_5493,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5494,Second assigning,0,0,0
comments.json_5495,From old test .,0,0,0
comments.json_5496,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5497,assert Logged ( Transaction Type . OFFICE _ VISIT _ VIEW   9000000000 L   2 L  ,0,0,0
comments.json_5498," Office visit ");,0,0,0
comments.json_5499,From old test,0,0,0
comments.json_5500,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5501,assert Logged ( Transaction Type . OFFICE _ VISIT _ VIEW   9000000000 L   2 L  ,0,0,0
comments.json_5503,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5504,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5505,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5506,System .out .println (driver .get Title ());,0,0,0
comments.json_5507,System .out .println (" Title : "+driver .get Title ());,0,0,0
comments.json_5508,driver .find Element ( By .link Text (" Remove ")).click ();,0,0,0
comments.json_5509,driver .find Element ( By .link Text (" Logout ")).click (); Ss,0,0,0
comments.json_5510,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5511,Test adding a prescription   no allergy /interaction,0,1,1
comments.json_5512,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5513,assert True (driver .get Page Source ().contains ("information successfully updated "));,0,0,0
comments.json_5514,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5515,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5516,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5517,driver .find Element ( By .link Text (" Logout ")).click ();,0,0,0
comments.json_5518,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5519,driver .find Element ( By .link Text (" HCP 1")).click ();,0,0,0
comments.json_5520,driver .find Element ( By .name ("notes ")).send Keys (,0,0,0
comments.json_5521," Showing signs of dehydration ");,0,0,0
comments.json_5522,Referrals Test,0,0,0
comments.json_5524,Create a new instance of the html unit driver,0,0,0
comments.json_5525,setting up required web driver,0,0,0
comments.json_5526,navigating to i Trust home page,0,0,0
comments.json_5527,testing for creating new referral,0,1,1
comments.json_5528,we should go back to edit page,0,0,0
comments.json_5529,check if it contain the provided comment,0,1,1
comments.json_5530,testing for delete exciting referral,0,1,1
comments.json_5531,checking for edit page,0,1,1
comments.json_5532,going back to referrals page,0,0,0
comments.json_5533,testing for modifying exciting referral,0,1,1
comments.json_5534,we should go back to edit page,0,0,0
comments.json_5535,check if it contain the provided comment,0,1,1
comments.json_5536,testing for viewing sent referral to  HCP,0,0,0
comments.json_5537,// original sort is by time stamp (descending ),0,0,0
comments.json_5538,testing for viewing referral edit by  HCP,0,1,1
comments.json_5539,HCP viewing sent referrals,0,0,0
comments.json_5540,HCP in editing page,0,0,0
comments.json_5541,going back to viewing page,0,0,0
comments.json_5542,testing for viewing referral with details by patient,0,1,1
comments.json_5543,Patient in " My  Referrals ",0,0,0
comments.json_5544,driver .find Element ( By .xpath ("(//a [contains (text () ' View ')])[5]")).click ();,0,0,0
comments.json_5545,checking for record,0,0,0
comments.json_5546,testing sending message to  HCP by patient,0,1,1
comments.json_5547,needs to be finished,0,0,0
comments.json_5548,testing viewing referral list by  HCP,0,1,1
comments.json_5549,checking for records,0,0,0
comments.json_5550,testing viewing referral form by  HCP,0,1,1
comments.json_5551,needs to be finished,0,0,0
comments.json_5552,Test adverse event reporting .,0,1,1
comments.json_5553,driver .get (base Url + "/i Trust /auth /forward User .jsp ");,0,0,0
comments.json_5554,driver .find Element ( By .link Text (" Patient 1")).click ();,0,0,0
comments.json_5555,I have no idea where this link actually is on the page .,0,0,0
comments.json_5556,Request Records Release Test contains http unit tests for requesting and viewing patient records release requests via a patient  HCP  or UAP role.,0,1,1
comments.json_5557,Create a new instance of the html unit driver,0,0,0
comments.json_5558,go to i Trust home page,0,0,0
comments.json_5559,Adding new record using patient 102,0,0,0
comments.json_5560,used for drop down selection,0,0,0
comments.json_5561,testing if the new record successfully added,0,1,1
comments.json_5562,Adding a new record without patient signature,0,0,0
comments.json_5563,testing if a new record not added,0,1,1
comments.json_5564,testing for adding new record without filling the required field,0,1,1
comments.json_5565,testing to view approved request by the patient,0,1,1
comments.json_5566,testing for  HCP approve a request HCP:9000000000,0,1,1
comments.json_5567,testing for  HCP denies a request HCP: 9000000000,0,1,1
comments.json_5568,Testing for  UAP denies a request UAP: 8000000009,0,1,1
comments.json_5569,testing for  UAP viewing approved request UAP: 8000000009,0,1,1
comments.json_5570,testing for invalid input  SQL injection UAP: 8000000009,0,1,1
comments.json_5571,Create the explicit wait,0,0,0
comments.json_5572,assert Equals ("i Trust - Please  Select a  Patient "  driver .get Title ());,0,0,0
comments.json_5573,Tests the functionality of the new  Sleep  Diary portion of i Trust . Tests that you can add new entries  you can view entries  HCPs with the role of trainer can view entries  and error checks that the user enters the appropriate data in the appropriate format.,0,1,1
comments.json_5574,Sets up the standard testing data .,0,0,0
comments.json_5575,Sanity check .,0,1,1
comments.json_5576,Tests that a patient can add an entry to an empty  Sleep  Diary .,0,1,1
comments.json_5577,View my sleep diary so we can add a new entry,0,0,0
comments.json_5578,Fill in all of the info and submit,0,0,0
comments.json_5579,Ensure the entry was added .,0,1,1
comments.json_5580,Tests that a patient can add an entry to a non empty sleep diary .,0,1,1
comments.json_5581,Get the first values .,0,0,0
comments.json_5582,Get the second values .,0,0,0
comments.json_5583,Assert that the totals are correct .,0,0,0
comments.json_5584,Add a new entry .,0,0,0
comments.json_5585,Enter new entry .,0,0,0
comments.json_5586,Make sure the new entry shows up with the old entries .,0,1,1
comments.json_5587,Assert the totals are correct .,0,0,0
comments.json_5588,Tests that  HC Ps can view a patients sleep diary .,0,1,1
comments.json_5589,search for patient,0,0,0
comments.json_5590,the button to click should have the text of the  MID,0,0,0
comments.json_5591,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_5592,Tests that  HC Ps can sort a patients sleep diary .,0,1,1
comments.json_5593,search for patient,0,0,0
comments.json_5594,the button to click should have the text of the  MID,0,0,0
comments.json_5595,Only show  May 2013 entries .,0,0,0
comments.json_5596,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_5597,Tests that  HC Ps can sort a patients sleep diary .,0,1,1
comments.json_5598,search for patient,0,0,0
comments.json_5599,the button to click should have the text of the  MID,0,0,0
comments.json_5600,Only show  May 2013 entries .,0,0,0
comments.json_5601,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_5602,Tests that  HC Ps can sort a patients sleep diary .,0,1,1
comments.json_5603,search for patient,0,0,0
comments.json_5604,the button to click should have the text of the  MID,0,0,0
comments.json_5605,Only show  May 2013 entries .,0,0,0
comments.json_5606,different way of viewing it since viewing it through  HCP,0,0,0
comments.json_5607,Tests to ensures users have to enter dates in the correct format (mm/dd/yy).,0,1,1
comments.json_5608,Enter an improper date,0,0,0
comments.json_5609,should stay on same page and have error message,0,0,0
comments.json_5610,Tests to ensure that  HC Ps can view a  Patient 's  Sleep  Diary when it is empty.,0,1,1
comments.json_5611,search for patient,0,0,0
comments.json_5612,the button to click should have the text of the  MID,0,0,0
comments.json_5613,Tests that you are not allowed to set the number of hours to 0.,0,1,1
comments.json_5614,now enter 0 for hours,0,0,0
comments.json_5615,should stay on same page and have error message,0,0,0
comments.json_5616,Use  Case 24,0,0,0
comments.json_5617,Precondition : Patient 2 and HCP 9000000000 are in the system. Patient 2 had an office visit with HCP 9000000000 on 6/10/2007. Patient 2 has successfully authenticated. Description: Patient 2 chooses to view his records. Patient 2 clicks a link next to his office visit on 6/10/2007 to take satisfaction survey. He inputs the following information and submits: 15 minutes 10 minutes 3 5 Expected Results: The survey answers are stored and the event is logged.,1,0,1
comments.json_5618,make sure survey cannot be taken again,0,1,1
comments.json_5619,Precondition : Patient 2 and HCP 9000000000 are in the system. Patient 2 had an office visit with HCP 9000000000 on 6/10/2007. Patient 2 has successfully authenticated. Description: Patient 2 chooses to view his records. Patient 2 clicks a link next to his office visit on 6/10/2007 to take satisfaction survey. He inputs the following information and submits: [none] 10 minutes 3 [none] Expected Results: The survey answers are stored and the event is logged.,1,0,1
comments.json_5620,make sure survey cannot be taken again,0,1,1
comments.json_5621,Precondition : Patient 2 and HCP 9000000000 are in the system. Patient 2 had an office visit with HCP 9000000000 on 6/10/2007. Patient 2 has successfully authenticated. Description: Patient 2 chooses to view his records. Patient 2 clicks a link next to his office visit on 6/10/2007 to take satisfaction survey. Patient 2 changes his mind and decides to cancel his input.,1,0,1
comments.json_5622,patient changes his mind and cancels his input,0,0,0
comments.json_5623,make sure survey  CAN still be taken .  This will throw an exception if the survey is not available,0,1,1
comments.json_5624,Use  Case 34,0,0,0
comments.json_5625,set Up,0,0,0
comments.json_5626,test Add Patients To Monitor,0,1,1
comments.json_5627,login  HCP,0,0,0
comments.json_5628,Click  Edit  Patient  List,0,0,0
comments.json_5629,Allow  Blood  Pressure   Weight   and  Pedometer,0,0,0
comments.json_5630,test Remove Patients To Monitor,0,1,1
comments.json_5631,Add patient 1 to  HCP 9000000000's monitoring list,0,0,0
comments.json_5632,login  HCP,0,0,0
comments.json_5633,Click  Edit  Patient  List,0,0,0
comments.json_5634,test Report Patient Status,0,1,1
comments.json_5635,Add patient 1 to  HCP 9000000000's monitoring list,0,0,0
comments.json_5636,login  Patient,0,0,0
comments.json_5637,Click  Report  Status,0,0,0
comments.json_5638,test Report Patient Weight And Pedometer,0,1,1
comments.json_5639,Add patient 1 to  HCP 9000000000's monitoring list,0,0,0
comments.json_5640,login  Patient,0,0,0
comments.json_5641,Click  Report  Status,0,0,0
comments.json_5642,test View Monitoring List,0,1,1
comments.json_5643,Sets up all preconditions listed in acceptance test,0,0,0
comments.json_5644,login  HCP,0,0,0
comments.json_5645,Verify all data,0,1,1
comments.json_5646,Highlighting for abnormal data,0,0,0
comments.json_5647,Highlighting for abnormal data,0,0,0
comments.json_5648,test View Weight And Pedometer Reports,0,1,1
comments.json_5649,Sets up all preconditions listed in acceptance test,0,0,0
comments.json_5650,login  HCP,0,0,0
comments.json_5651,Verify all data,0,1,1
comments.json_5652,Highlighting for abnormal data,0,0,0
comments.json_5653,test UAP Report Patient Status,0,1,1
comments.json_5654,test Representative Report Patient Status,0,1,1
comments.json_5655,have to use  JS,0,0,0
comments.json_5656,test Representative Report Weight,0,1,1
comments.json_5657,Add patient 1 to  HCP 9000000000's monitoring list,0,0,0
comments.json_5658,Also add three reports,0,0,0
comments.json_5659,login  Patient,0,0,0
comments.json_5660,Click  Report  Status,0,0,0
comments.json_5661,have to use  JS,0,0,0
comments.json_5662,test UAP Report Patient Pedometer Reading,0,1,1
comments.json_5663,Add patient 1 to  HCP 9000000000's monitoring list,0,0,0
comments.json_5664,Also add three reports,0,0,0
comments.json_5665,login  Patient,0,0,0
comments.json_5666,Click  Report  Status,0,0,0
comments.json_5667,have to use  JS,0,0,0
comments.json_5668,test UAP Add Patient To Monitor Test,0,1,1
comments.json_5669,search patient with mid 2,0,0,0
comments.json_5670,test UAP Add HCP Monitor,0,1,1
comments.json_5671,search patient with mid 2,0,0,0
comments.json_5672,go to reporting page,0,0,0
comments.json_5673,logout,0,0,0
comments.json_5674,log back in,0,0,0
comments.json_5675,test UAP Add Report Delete Cannot Report,0,1,1
comments.json_5676,log in to i Trust,0,0,0
comments.json_5677,add  Patient 2 to reporting list,0,0,0
comments.json_5678,search patient with mid 2,0,0,0
comments.json_5679,go to reporting page,0,0,0
comments.json_5680,remove  Patient 2 from reporting list,0,0,0
comments.json_5681,Test for  UC 34,0,1,1
comments.json_5682,test Weight Highlighting,0,1,1
comments.json_5683,Highlighting for abnormal data,0,0,0
comments.json_5684,Test for  UC 34,0,1,1
comments.json_5685,test Detailed External Data,0,1,1
comments.json_5686,First entry :,0,0,0
comments.json_5687,Second entry :,0,0,0
comments.json_5688,Third entry :,0,0,0
comments.json_5689,Test for  UC 34,0,1,1
comments.json_5690,test Report Patient Height,0,1,1
comments.json_5691,input tag is under the form of import CDC,0,0,0
comments.json_5692,upload the file by its absolute path,0,0,0
comments.json_5693,Current page should contain a message,0,0,0
comments.json_5694,System .out .println (current Page .get Text ());,0,0,0
comments.json_5695,input tag is under the form of import CDC,0,0,0
comments.json_5696,upload the file by its absolute path,0,0,0
comments.json_5697,Current page should contain a message,0,0,0
comments.json_5698,System .out .println (current Page .get Text ());,0,0,0
comments.json_5699,input tag is under the form of import CDC,0,0,0
comments.json_5700,upload the file by its absolute path,0,0,0
comments.json_5701,Current page should contain a message,0,0,0
comments.json_5702,System .out .println (current Page .get Text ());,0,0,0
comments.json_5703,input tag is under the form of import CDC,0,0,0
comments.json_5704,upload the file by its absolute path,0,0,0
comments.json_5705,Current page should contain a message,0,0,0
comments.json_5706,System .out .println (current Page .get Text ());,0,0,0
comments.json_5707,input tag is under the form of import CDC,0,0,0
comments.json_5708,upload the file by its absolute path,0,0,0
comments.json_5709,Current page should contain a message,0,0,0
comments.json_5710,System .out .println (current Page .get Text ());,0,0,0
comments.json_5711,test file for weight,0,1,1
comments.json_5712,test file for height,0,1,1
comments.json_5713,dirty file to test the return on bad file formats .,0,1,1
comments.json_5714,Tests the functionality of the  Upload  Patient  File page in i Trust,0,1,1
comments.json_5715,Not sure what this is for   the  Sel  IDE just made it   might delete,0,0,0
comments.json_5716,Tests the patient file upload with a valid file that should be successful,0,1,1
comments.json_5717,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5718,Make sure we were able to log in,0,1,1
comments.json_5719,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5720,Tests the patient file upload with a file that has a missing email field,0,1,1
comments.json_5721,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5722,Tests the file upload with a file that has an invalid field .,0,1,1
comments.json_5723,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5724,Tests the file upload with a file that has mismatched fields .,0,0,0
comments.json_5725,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5726,Tests the file upload with a file is empty,0,1,1
comments.json_5727,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5728,Tests the file upload with a file that has duplicate fields,0,1,1
comments.json_5729,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5730,Tests the file upload with a file that is a different type and has binary data,0,1,1
comments.json_5731,These testing files already exist in i Trust   so we just need to specify the path to them,0,0,0
comments.json_5732,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5733,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5734,clear operational profile,0,0,0
comments.json_5735,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5736,clear operational profile,0,0,0
comments.json_5737,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5738,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5739,The rest of the original test was commented out,0,0,0
comments.json_5740,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5741,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5742,new  Select (driver .find Element ( By .id ("log MID Select Menu "))).select By Visible Text (" Dare  Devil ");,0,0,0
comments.json_5743,There is no way to read all text on the page through  Selenium,0,0,0
comments.json_5744,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5745,Check the text currently in the drop down box to ensure it is not " Devil 's  Advocate ",0,0,0
comments.json_5746,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5747,now logout,0,0,0
comments.json_5748,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5749,logout,0,0,0
comments.json_5750,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5751,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5752,This logs us into i Trust and returns the  Html Unit Driver for use in this case,0,0,0
comments.json_5753,This logs us into i Trust and returns the  Html Unit Driver for use in,0,0,0
comments.json_5754,this case,0,0,0
comments.json_5755,Make sure we were able to log in,0,1,1
comments.json_5756,Test  Diagnosis  Trends / Epidemics page,0,1,1
comments.json_5757,Sets up the test . Clears the tables then adds necessary data,0,0,0
comments.json_5758,Authenticate  PHA MID 7000000001 Password: pw Choose "Diagnosis Trends" Enter Fields: ICDCode: 72.00 ZipCode: 27695 StartDate: 06/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5759,test View Diagnosis Trends _ PHA View 1,0,1,1
comments.json_5760,assert False (is Element Present ( By .id ("diagnosis Statistics Table ")));,0,0,0
comments.json_5761,assert True (is Element Present ( By .id ("diagnosis Statistics Table ")));,0,0,0
comments.json_5762,I know this is a stupid assert . This is how it was originally,0,0,0
comments.json_5763,Authenticate  PHA MID 7000000001 Password: pw Choose "Epidemics" Enter Fields: Diagnosis: 84.50 Malaria ZipCode: 12345 StartDate: 1/23/12 Threshold: [leave blank],1,0,1
comments.json_5764,test View Diagnosis Trends Epidemic _ Invalid Threshold,0,1,1
comments.json_5765,Authenticate  HCP  MID 9000000008 Password : pw  Choose " Diagnosis  Trends " Enter Fields: ICDCode: 487.00 ZipCode: 27695 StartDate: 08/28/2011  EndDate: 09/28/2011 Document new office visit Add new diagnosis (487.00) Choose "Diagnosis Trends" Enter Fields: ICDCode: 487.00 ZipCode: 27695 StartDate: 08/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5766,test View Diagnosis Trends _ LHCP Observe Increase,0,1,1
comments.json_5767,Click  Diagnosis  Trends,0,0,0
comments.json_5768,View  Trend,0,0,0
comments.json_5769,Click  Document  Office  Visit,0,0,0
comments.json_5770,Search and choose patient 25,0,0,0
comments.json_5771,search for patient 25 by  MID,0,0,0
comments.json_5772,the button to click should have the text of the  MID,0,0,0
comments.json_5773,Click " Yes   Document  Office  Visit ",0,0,0
comments.json_5774,View  Trend again,0,0,0
comments.json_5775,Authenticate  HCP  MID 9000000008 Password : pw  Choose " Diagnosis  Trends " Enter Fields: ICDCode: 487.00 ZipCode: 276 StartDate: 08/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5776,test View Diagnosis Trends _ Invalid Zip,0,1,1
comments.json_5777,Click  Diagnosis  Trends,0,0,0
comments.json_5778,View  Trend,0,0,0
comments.json_5779,Authenticate  HCP MID 9000000008 Password: pw Choose "Diagnosis Trends" Enter Fields: ICDCode: 84.50 ZipCode: 27519 StartDate: 09/28/2011  EndDate: 08/28/2011,1,0,1
comments.json_5780,test View Diagnosis Trends _ Invalid Dates,0,1,1
comments.json_5781,Click  Diagnosis  Trends,0,0,0
comments.json_5782,View  Trend,0,0,0
comments.json_5783,Authenticate  HCP MID 9000000008 Password: pw Choose "Diagnosis Trends" Enter Fields: ICDCode: 487.00 ZipCode: 27695 StartDate: 08/28/2011  EndDate: 09/28/2011 Enter Fields: ICDCode: 487.00 ZipCode: 27606 StartDate: 08/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5784,test View Diagnosis Trends _ Same Region Count,0,1,1
comments.json_5785,Click  Diagnosis  Trends,0,0,0
comments.json_5786,View  Trend,0,0,0
comments.json_5787,Authenticate  HCP MID 9000000000 Password: pw Choose "Diagnosis Trends" Enter Fields: ICDCode: 84.50 ZipCode: 27519 StartDate: 09/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5788,test View Diagnosis Trends _ Same Date Start End,0,1,1
comments.json_5789,Click  Diagnosis  Trends,0,0,0
comments.json_5790,View  Trend,0,0,0
comments.json_5791,Authenticate  HCP MID 9000000008 Password: pw Choose "Diagnosis Trends" Enter Fields: ICDCode: 487.00 ZipCode: 27607 StartDate: 08/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5792,test View Diagnosis Trends _ Region Not Less,0,1,1
comments.json_5793,Click  Diagnosis  Trends,0,0,0
comments.json_5794,View  Trend,0,0,0
comments.json_5795,Authenticate  HCP MID 9000000008 Password: pw Choose "Diagnosis Trends" Enter Fields: ICDCode: "" ZipCode: 27695 StartDate: 08/28/2011  EndDate: 09/28/2011,1,0,1
comments.json_5796,test View Diagnosis Trends _ No Diagnosis Selected,1,0,1
comments.json_5797,Click  Diagnosis  Trends,0,0,0
comments.json_5798,View  Trend,0,0,0
comments.json_5799,view Diagnosis Epidemics _ No Epidemic Records,0,0,0
comments.json_5800,Click  Diagnosis  Trends,0,0,0
comments.json_5801,View  Trend,0,0,0
comments.json_5802,view Diagnosis Epidemics _ Yes Epidemic,0,0,0
comments.json_5803,Click  Diagnosis  Trends,0,0,0
comments.json_5804,View  Trend,0,0,0
comments.json_5805,view Diagnosis Epidemics _ No Epidemic,0,0,0
comments.json_5806,Click  Diagnosis  Trends,0,0,0
comments.json_5807,View  Trend,0,0,0
comments.json_5808,This logs us into i Trust and returns the  Html Unit Driver for use in,0,0,0
comments.json_5809,this case,0,0,0
comments.json_5810,logout,0,0,0
comments.json_5811,click on  My  Expired  Prescription  Reports,0,0,0
comments.json_5812,click on  My  Expired  Prescription  Reports,0,0,0
comments.json_5813,click on  My  Expired  Prescription  Reports,0,0,0
comments.json_5814,Selenium tests for  View Health Records History,0,1,1
comments.json_5815,Sets up the test environment,0,0,0
comments.json_5816,Generate standard data,0,0,0
comments.json_5817,test Office Visit 4 Month Old View Health Metrics,0,1,1
comments.json_5818,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5819,Click  Document  Office  Visit  Link,0,0,0
comments.json_5820,Search for  Brynn  Mc Clain ( MID 101),0,0,0
comments.json_5821,the button to click should have the text of the  MID,0,0,0
comments.json_5822,Verify  Document  Office  Visit page,0,1,1
comments.json_5823,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5824,Verify  Edit  Office  Visit page,0,1,1
comments.json_5825,Add a new office visit,0,0,0
comments.json_5826,Enter 10/01/2013 for the  Office  Visit  Date,0,0,0
comments.json_5827,Select  Central  Hospital for the hospital,0,0,0
comments.json_5828,Enter " Brynn can start eating rice cereal mixed with breast milk or formula once a day " for  Notes,0,0,0
comments.json_5829,Click the create button,0,0,0
comments.json_5830,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5831,Enter  Health  Metrics,0,0,0
comments.json_5832,Enter 22.3 in for  Length,0,0,0
comments.json_5833,Enter 16.5 lbs for  Weight,0,0,0
comments.json_5834,Enter 16.1 in for  Head  Circumference,0,0,0
comments.json_5835,Select '1 - non -smoking household ' for household smoking status,0,0,0
comments.json_5836,Click the  Add  Record button,0,0,0
comments.json_5837,Verify " Health information successfully updated ." message,0,1,1
comments.json_5838,Click  Basic  Health  Information link,0,0,0
comments.json_5839,Verify  Basic  Health  Information page,0,1,1
comments.json_5840,Verify adult health record table displays,0,1,1
comments.json_5841,Verify the table has the provided information : Header   field descriptions   1 row of health records,0,1,1
comments.json_5842,Verify table contents,0,1,1
comments.json_5843,Row 1 values,0,0,0
comments.json_5844,Office visit date,0,0,0
comments.json_5845,Patient length,0,0,0
comments.json_5846,Patient weight,0,0,0
comments.json_5847,Patient head circumference,0,0,0
comments.json_5848,Patient household smoking status,0,0,0
comments.json_5849,test Office Visit 24 Yr Old View Health Metrics,0,1,1
comments.json_5850,Login as  Patient  Thane  Ross ( MID 105),0,0,0
comments.json_5851,Click  View  My  Records link,0,0,0
comments.json_5852,Verify  Basic  Health  Information page,0,1,1
comments.json_5853,Verify adult health record table displays,0,1,1
comments.json_5854,Check that the table has 3 rows,0,1,1
comments.json_5855,Office visit date,0,0,0
comments.json_5856,Patient height,0,0,0
comments.json_5857,Patient weight,0,0,0
comments.json_5858,Patient  BMI,0,0,0
comments.json_5859,Check weight status,0,1,1
comments.json_5860,Patient blood pressure,0,0,0
comments.json_5861,Patient smoking status,0,0,0
comments.json_5862,Patient household smoking status,0,0,0
comments.json_5863,Patient  HDL levels,0,0,0
comments.json_5864,Patient  LDL levels,0,0,0
comments.json_5865,Patient triglycerides,0,0,0
comments.json_5866,test Office Visit 20 Yr Old View Health Metrics,0,1,1
comments.json_5867,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5868,Click  Basic  Health  Information link,0,0,0
comments.json_5869,Search for  Daria  Griffin ( MID 104),0,0,0
comments.json_5870,the button to click should have the text of the  MID,0,0,0
comments.json_5871,Verify  Basic  Health  Information page,0,1,1
comments.json_5872,Verify adult health record table displays,0,1,1
comments.json_5873,Check that the table has 3 rows,0,1,1
comments.json_5874,Verify table contents,0,1,1
comments.json_5875,Row 1 values,0,0,0
comments.json_5876,Office visit date,0,0,0
comments.json_5877,Patient length,0,0,0
comments.json_5878,Patient weight,0,0,0
comments.json_5879,Patient  BMI,0,0,0
comments.json_5880,Weight status,0,0,0
comments.json_5881,Patient blood pressure,0,0,0
comments.json_5882,Patient smoking status,0,0,0
comments.json_5883,Patient household smoking status,0,0,0
comments.json_5884,Patient  HDL levels,0,0,0
comments.json_5885,Patient  LDL levels,0,0,0
comments.json_5886,Patient triglycerides,0,0,0
comments.json_5887,Row 2 values,0,0,0
comments.json_5888,Office visit date,0,0,0
comments.json_5889,Patient length,0,0,0
comments.json_5890,Patient weight,0,0,0
comments.json_5891,Patient  BMI,0,0,0
comments.json_5892,Weight status,0,0,0
comments.json_5893,Patient blood pressure,0,0,0
comments.json_5894,Patient smoking status,0,0,0
comments.json_5895,Patient household smoking status,0,0,0
comments.json_5896,Patient  HDL levels,0,0,0
comments.json_5897,Patient  LDL levels,0,0,0
comments.json_5898,Patient triglycerides,0,0,0
comments.json_5899,Row 3 values,0,0,0
comments.json_5900,Office visit date,0,0,0
comments.json_5901,Patient length,0,0,0
comments.json_5902,Patient weight,0,0,0
comments.json_5903,Patient  BMI,0,0,0
comments.json_5904,Weight status,0,0,0
comments.json_5905,Patient head circumference,0,0,0
comments.json_5906,Patient smoking status,0,0,0
comments.json_5907,Patient household smoking status,0,0,0
comments.json_5908,Patient  HDL levels,0,0,0
comments.json_5909,Patient  LDL levels,0,0,0
comments.json_5910,Patient triglycerides,0,0,0
comments.json_5911,test Deleted Health Record,0,1,1
comments.json_5912,Login as  HCP  Kelly  Doctor,0,0,0
comments.json_5913,Click  Document  Office  Visit  Link,0,0,0
comments.json_5914,Search for  Random  Person ( MID 1),0,0,0
comments.json_5915,the button to click should have the text of the  MID,0,0,0
comments.json_5916,Verify  Document  Office  Visit page,0,1,1
comments.json_5917,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5918,Verify  Edit  Office  Visit page,0,1,1
comments.json_5919,Add a new office visit,0,0,0
comments.json_5920,Enter 10/01/2013 for the  Office  Visit  Date,0,0,0
comments.json_5921,Select  Central  Hospital for the hospital,0,0,0
comments.json_5922,Enter " Random has consumed unknown seed 32912" for  Notes,0,0,0
comments.json_5923,Click the create button,0,0,0
comments.json_5924,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5925,Enter  Health  Metrics,0,0,0
comments.json_5926,Enter 74 in for  Height,0,0,0
comments.json_5927,Enter 165.8 lbs for  Weight,0,0,0
comments.json_5928,Enter 110/75 mm Hg for  Blood  Pressure,0,0,0
comments.json_5929,Select '1 - non -smoking household ' for  Household  Smoking  Status,0,0,0
comments.json_5930,Select '3 - Former smoker ' for  Patient  Smoking  Status,0,0,0
comments.json_5931,Enter 68 for  HDL,0,0,0
comments.json_5932,Enter 107 for  LDL,0,0,0
comments.json_5933,Enter 162 for  Triglycerides,0,0,0
comments.json_5934,Click  Update  Record,0,0,0
comments.json_5935,Verify " Health information successfully updated ." message,0,1,1
comments.json_5936,Remove health record,0,0,0
comments.json_5937,Click  Basic  Health  Information link,0,0,0
comments.json_5938,Verify  Basic  Health  Information page,0,1,1
comments.json_5939,Verify the table has the provided information : Header   field descriptions   1 row of health records,0,1,1
comments.json_5940,Verify table contents,0,1,1
comments.json_5941,Row 1 values,0,0,0
comments.json_5942,Office visit date,0,0,0
comments.json_5943,Patient length,0,0,0
comments.json_5944,Patient weight,0,0,0
comments.json_5945,Patient  BMI,0,0,0
comments.json_5946,Weight status,0,0,0
comments.json_5947,Patient blood pressure,0,0,0
comments.json_5948,Patient smoking status,0,0,0
comments.json_5949,Patient household smoking status,0,0,0
comments.json_5950,Patient  HDL levels,0,0,0
comments.json_5951,Patient  LDL levels,0,0,0
comments.json_5952,Patient triglycerides,0,0,0
comments.json_5953,By personnel  Kelly  Doctor,0,0,0
comments.json_5954,test Office Visit Date Is Birth Date,0,1,1
comments.json_5955,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5956,Click  Document  Office  Visit  Link,0,0,0
comments.json_5957,Search for  Random  Person ( MID 1),0,0,0
comments.json_5958,the button to click should have the text of the  MID,0,0,0
comments.json_5959,Verify  Document  Office  Visit page,0,1,1
comments.json_5960,Click  Yes   Document  Office  Visit,0,0,0
comments.json_5961,Verify  Edit  Office  Visit page,0,1,1
comments.json_5962,Add a new office visit,0,0,0
comments.json_5963,Enter 05/01/2016 for the  Office  Visit  Date,0,0,0
comments.json_5964,Select  Central  Hospital for the hospital,0,0,0
comments.json_5965,Enter " Brynn is growing into a beautiful sunflower " for  Notes,0,0,0
comments.json_5966,Click the create button,0,0,0
comments.json_5967,Verify " Information  Successfully  Updated " message,0,1,1
comments.json_5968,Enter  Health  Metrics,0,0,0
comments.json_5969,Enter 42.8 in for  Height,0,0,0
comments.json_5970,Enter 41.2 lbs for  Weight,0,0,0
comments.json_5971,Enter 123/64 mm Hg for  Blood  Pressure,0,0,0
comments.json_5972,Select '1 - non -smoking household ' for  Household  Smoking  Status,0,0,0
comments.json_5973,Click the  Add  Record button,0,0,0
comments.json_5974,Verify " Health information successfully updated ." message,0,1,1
comments.json_5975,Click  Basic  Health  Information link,0,0,0
comments.json_5976,Verify  Basic  Health  Information page,0,1,1
comments.json_5977,Verify youth health record table displays,0,1,1
comments.json_5978,Verify the table has the provided information : Header   field descriptions   1 row of health records,0,1,1
comments.json_5979,Verify table contents,0,1,1
comments.json_5980,Row 1 youth values,0,0,0
comments.json_5981,Office visit date,0,0,0
comments.json_5982,Patient length,0,0,0
comments.json_5983,Patient weight,0,0,0
comments.json_5984,Patient blood pressure,0,0,0
comments.json_5985,Patient household smoking status,0,0,0
comments.json_5986,test HCP Logging Action,0,1,1
comments.json_5987,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5988,Click  Basic  Health  Information link,0,0,0
comments.json_5989,Search for patient  MID 102,0,0,0
comments.json_5990,the button to click should have the text of the  MID,0,0,0
comments.json_5991,Verify  Basic  Health  Information page,0,1,1
comments.json_5992,Log out as  Shelly  Vang,0,0,0
comments.json_5993,Log in as  MID 102,0,0,0
comments.json_5994,Make sure  HCP action is appears in  Your  Activity  Feed,0,1,1
comments.json_5995,test View Health Metrics By HCP,0,1,1
comments.json_5996,Login as  HCP  Shelly  Vang,0,0,0
comments.json_5997,Click  Basic  Health  Information link,0,0,0
comments.json_5998,Search for  Caldwell  Hudson ( MID 102),0,0,0
comments.json_5999,the button to click should have the text of the  MID,0,1,1
comments.json_6000,Verify  Basic  Health  Information page,0,1,1
comments.json_6001,Verify baby health record table displays,0,1,1
comments.json_6002,Verify the table has the provided information : Header   field descriptions   3 rows of health records,0,1,1
comments.json_6003,Verify table contents,0,1,1
comments.json_6004,Row 1 values,0,0,0
comments.json_6005,Office visit date,0,0,0
comments.json_6006,Patient length,0,0,0
comments.json_6007,Patient weight,0,0,0
comments.json_6008,Patient head circumference,0,0,0
comments.json_6009,Patient household smoking status,0,0,0
comments.json_6010,Row 2 values,0,0,0
comments.json_6011,Office visit date,0,0,0
comments.json_6012,Patient length,0,0,0
comments.json_6013,Patient weight,0,0,0
comments.json_6014,Patient head circumference,0,0,0
comments.json_6015,Patient household smoking status,0,0,0
comments.json_6016,Row 3 values,0,0,0
comments.json_6017,Office visit date,0,0,0
comments.json_6018,Patient length,0,0,0
comments.json_6019,Patient weight,0,0,0
comments.json_6020,Patient head circumference,0,0,0
comments.json_6021,Patient household smoking status,0,0,0
comments.json_6022,Row 4 values,0,0,0
comments.json_6023,Office visit date,0,0,0
comments.json_6024,Patient length,0,0,0
comments.json_6025,Patient weight,0,0,0
comments.json_6026,Patient head circumference,0,0,0
comments.json_6027,Patient household smoking status,0,0,0
comments.json_6028,Row 5 values,0,0,0
comments.json_6029,Office visit date,0,0,0
comments.json_6030,Patient length,0,0,0
comments.json_6031,Patient weight,0,0,0
comments.json_6032,Patient head circumference,0,0,0
comments.json_6033,Patient household smoking status,0,0,0
comments.json_6034,test Office Visit 5 Yr Old View Health Metrics,0,0,0
comments.json_6035,Login as  HCP  Shelly  Vang,0,0,0
comments.json_6036,Click  Basic  Health  Information link,0,0,0
comments.json_6037,Search for  Fulton  Gray ( MID 103),0,0,0
comments.json_6038,the button to click should have the text of the  MID,0,1,1
comments.json_6039,Verify  Basic  Health  Information page,0,1,1
comments.json_6040,Verify youth health record table displays,0,1,1
comments.json_6041,Verify the table has the provided information : Header   field descriptions   3 rows of health records,0,1,1
comments.json_6042,Verify table contents,0,1,1
comments.json_6043,Row 1 youth values,0,0,0
comments.json_6044,Office visit date,0,0,0
comments.json_6045,Patient length,0,0,0
comments.json_6046,Patient weight,0,0,0
comments.json_6047,Patient blood pressure,0,0,0
comments.json_6048,Patient household smoking status,0,0,0
comments.json_6049,Row 2 youth values,0,0,0
comments.json_6050,Office visit date,0,0,0
comments.json_6051,Patient length,0,0,0
comments.json_6052,Patient weight,0,0,0
comments.json_6053,Patient blood pressure,0,0,0
comments.json_6054,Patient household smoking status,0,0,0
comments.json_6055,Row 1 baby values,0,0,0
comments.json_6056,Office visit date,0,0,0
comments.json_6057,Patient length,0,0,0
comments.json_6058,Patient weight,0,0,0
comments.json_6059,Patient head circumference,0,0,0
comments.json_6060,Patient household smoking status,0,0,0
comments.json_6061,test No Health Records Exist By HCP,0,1,1
comments.json_6062,Login as  HCP  Shelly  Vang,0,0,0
comments.json_6063,Click  Basic  Health  Information link,0,0,0
comments.json_6064,Search for  Brynn  Mc Clain ( MID 101),0,0,0
comments.json_6065,the button to click should have the text of the  MID,0,1,1
comments.json_6066,Verify  Basic  Health  Information page,0,1,1
comments.json_6067,Verify that message displays to user,0,1,1
comments.json_6068,test No Health Records Exist By Patient,0,1,1
comments.json_6069,Login as  Patient  Brynn  Mc Clain ( MID 101),0,0,0
comments.json_6070,Click  View  My  Records link,0,0,0
comments.json_6071,Verify  Basic  Health  Information page,0,1,1
comments.json_6072,Verify that message displays to user,0,1,1
comments.json_6073,Test class for the view Visited HC Ps .jsp,0,1,1
comments.json_6074,test View My Providers 1,0,1,1
comments.json_6075,Only  Kelly  Doctor should be listed now .,0,0,0
comments.json_6076,Gandalf  Stormcrow is no longer listed .,0,0,0
comments.json_6077,test View My Providers 2,0,1,1
comments.json_6078,Only  Kelly  Doctor should be listed now .,0,0,0
comments.json_6079,Gandalf  Stormcrow is no longer listed .,0,0,0
comments.json_6080,Table Element a helper class for  Selenium test htmlunitdriver retrieving data from tables.,0,0,0
comments.json_6081,Constructor . This object will help user to get data from each cell of the table.,0,0,0
comments.json_6082,Get data from given row and column cell .,0,0,0
comments.json_6083,Authenticate  Patient MID: 2 Password: pw Choose option View My Records,1,0,1
comments.json_6084,test View Records 3,0,1,1
comments.json_6085,Authenticate  Patient MID: 4 Password: pw Choose option View My Records,1,0,1
comments.json_6086,test View Records 4,0,1,1
comments.json_6087,Authenticate  Patient MID: 2 Password: pw Choose option View My Records Choose to view records for mid 1  the person he represents.,1,0,1
comments.json_6088,test View Records 5,0,1,1
comments.json_6089,check to make sure you are viewing patient 1's records,0,1,1
comments.json_6090,search for patient 2,0,0,0
comments.json_6091,the button to click should have the text of the  MID,0,1,1
comments.json_6092,Table Element a helper class for  Selenium test htmlunitdriver retrieving data from tables.,0,0,0
comments.json_6093,Constructor . This object will help user to get data from each cell of the table.,0,0,0
comments.json_6094,TODO  Auto -generated constructor stub,0,0,0
comments.json_6095,Get data from given row and column cell .,0,0,0
comments.json_6096,Use  Case 28,0,0,0
comments.json_6097,Precondition : LHCP 9000000000 and Patients 1-4 are in the database Office Visits 11  902-911  111  and 1 are in the database. LHCP 9000000000 has authenticated successfully. Description: 1. LHCP clicks on "View All Patients" link. Expected Results: A list of the following should be displayed: Andy Programmer  344 Bob Street Raleigh NC 27607  2007-06-10. Care needs  1247 Noname Dr Suite 106 Raleigh NC 27606  2005-10-10. Random Person  1247 Noname Dr Suite 106 Raleigh NC 27606  2005-10-10.,1,0,1
comments.json_6098,test View LHCP Patients,0,1,1
comments.json_6099,System .out .println (driver .get Page Source ());,0,0,0
comments.json_6100,Table Element a helper class for  Selenium test htmlunitdriver retrieving data from tables.,0,0,0
comments.json_6101,Constructor . This object will help user to get data from each cell of the table.,0,0,0
comments.json_6102,Get data from given row and column cell .,0,0,0
comments.json_6103,Use  Case 9,0,0,0
comments.json_6104,Login,0,0,0
comments.json_6105,Records page contains patient information,0,0,0
comments.json_6106,Login,0,0,0
comments.json_6107,Clicking on a representee 's name takes you to their records,0,0,0
comments.json_6108,Login,0,0,0
comments.json_6109,Precondition : Patient 2 and all his data have been loaded into iTrust Patient 2 has successfully authenticated Description: 1. Patient 2 chooses to view his records 2. Chooses link to office visit "6/10/2007" Expected Result: The following data should be displayed: Office Visit Details Date: 06/10/2007   HCP: Kelly Doctor (9000000000)   Diagnoses   ICD Code	Description   No Diagnoses for this visit   Medications   No Medications on record   Procedures   No Procedures on record,1,0,1
comments.json_6110,Ward Test,0,0,0
comments.json_6111,gen .insertwards ();,0,0,0
comments.json_6112,gen .hcp 0();,0,0,0
comments.json_6113,6. Heart  Doctor will assign 3 patients to the cardiac ward . If  Heart  Doctor tries to assign yet another   an error will be displayed static the ward is full .,0,0,0
comments.json_6114,testhcpaddremovepatient,0,1,1
comments.json_6115,select patient 1,0,0,0
comments.json_6116,the button to click should have the text of the  MID,0,1,1
comments.json_6117,testadminaddremoveward,0,1,1
comments.json_6118,check make sure table is gone,0,1,1
comments.json_6119,5. Admin will assigned " Heart  Doctor ( Heart  Surgeon )" to the cardiac ward and " Baby  Doctor ( Pediatrician )" to the two pediatric wards .,0,0,0
comments.json_6120,If the admin assigns the wrong doctor to the wrong ward   an error will be displayed .,0,0,0
comments.json_6121,changed baby doctor to kelly doctor because testdata is already present,0,0,0
comments.json_6122,testadminassignhcp,0,1,1
comments.json_6123,ERROR : Caught exception [ ERROR : Unsupported command [add Selection | name = HC Pto Add | label = Kelly  Doctor ]],0,0,0
comments.json_6124,ERROR : Caught exception [ ERROR : Unsupported command [add Selection | name = HC Pto Remove | label = Kelly  Doctor ]],0,0,0
comments.json_6125,4. Admin will create a three test wards to  Central  Hospital   and proceed some related operations on it   such as creating testing rooms .,0,0,0
comments.json_6126,testaddwardtohospital,0,1,1
comments.json_6127,ERROR : Caught exception [ ERROR : Unsupported command [add Selection | name = HC Pto Add | label = Shelly  Vang ]],0,0,0
comments.json_6128,ERROR : Caught exception [ ERROR : Unsupported command [add Selection | name = HC Pto Add | label = Shelly  Vang ]],0,0,0
comments.json_6129,Check if all wards have been created and rooms .,0,0,0
comments.json_6130,Verifies that certain transactions from the  DLHCP are hidden in the activity feed per use case 43.,0,1,1
comments.json_6131,Tests  Add Drug List Action for importing  NDC information .,0,1,1
comments.json_6132,Four lines selected from the text download of the fall 2011 version of the  FDA  NDC database,0,0,0
comments.json_6133,Sets up defaults,0,0,0
comments.json_6134,make a patient bean for testing flag functionality,0,0,0
comments.json_6135,make an obstetrics bean (note that these dates don 't have to be correctly calculated ),0,0,0
comments.json_6136,make a bean,0,0,0
comments.json_6137,make a flag bean for testing flag functionality,0,0,0
comments.json_6138,make a health record bean for testing  Abnormal weight change flag,0,0,0
comments.json_6139,add the health record for our patient,0,0,0
comments.json_6140,add the bean  TODO actually set flags before this,0,0,0
comments.json_6141,now do view things,0,0,0
comments.json_6142,first get a single record ( OID = 1),0,0,0
comments.json_6143,then get all records by ( MID = 1),0,0,0
comments.json_6144,now   edit one of the beans,0,0,0
comments.json_6145,and get it again,0,0,0
comments.json_6146,test the update fhr flag function,0,0,0
comments.json_6147,test flag functionality,0,0,0
comments.json_6148,a null obstetrics bean to test exceptions,0,0,0
comments.json_6149,test that trying to add a null bean throws an  I Trust Exception,0,0,0
comments.json_6150,test that trying to add a null bean throws an  I Trust Exception,0,0,0
comments.json_6151,Create a valid bean,0,0,0
comments.json_6152,Create another valid bean,0,0,0
comments.json_6153,Create another valid bean,0,0,0
comments.json_6154,Create another valid bean,0,0,0
comments.json_6155,Create another valid bean,0,0,0
comments.json_6156,Add the beans,0,0,0
comments.json_6157,Now test the view,0,0,0
comments.json_6158,Now test the view for a  Patient viewing their own records,0,1,1
comments.json_6159,Now test the view for a  Patient viewing a  Dependent 's records,0,1,1
comments.json_6160,Won 't happen,0,0,0
comments.json_6161,Won 't happen,0,0,0
comments.json_6162,Won 't happen,0,0,0
comments.json_6163,Won 't happen,0,0,0
comments.json_6164,Won 't happen,0,0,0
comments.json_6165,Add the beans,0,0,0
comments.json_6166,Now test the view,0,1,1
comments.json_6167,Now test the view for a  Patient viewing their own records,0,1,1
comments.json_6168,Now test the view for a  Patient viewing a  Dependent 's records,0,1,1
comments.json_6169,Create a valid bean,0,0,0
comments.json_6170,Create another valid bean,0,0,0
comments.json_6171,Create another valid bean,0,0,0
comments.json_6172,Create another valid bean,0,0,0
comments.json_6173,Surgery and notes aren 't required,0,0,0
comments.json_6174,Create another valid bean,0,0,0
comments.json_6175,Add the beans,0,0,0
comments.json_6176,Now test the view,0,0,0
comments.json_6177,Patients don 't have to be able to view their surgical records   per documentation,0,0,0
comments.json_6178,Tests for  Add Patient Action,0,0,0
comments.json_6179,Sets up defaults,0,0,0
comments.json_6180,Tests adding a new  ER,0,1,1
comments.json_6181,Tests adding exercise entries to the exercise diary,0,1,1
comments.json_6182,Clears all of the tables .,0,0,0
comments.json_6183,Tests that a patient can add a new exercise entry to an empty diary . Log in as the patient Random Person who has no prior exercise entries.,0,1,1
comments.json_6184,Tests that a patient can add a new exercise entry to a diary that already has some entries in it.,0,1,1
comments.json_6185,Tests that dates must be entered in the correct format .,0,1,1
comments.json_6186,Tests that dates in the future cannot be entered in . Eventually this test will fail because I am hardcoding in the date. However  since it is in the future 100 years  I do not expect this to be a problem (I spent about 30 minutes trying to use the Calendar class to add one day to today's date  but I could'nt get it to format correctly).,0,1,1
comments.json_6187,Ensures that only breakfast   lunch   dinner   or snack is allowed as the exercise type,0,1,1
comments.json_6188,Test that the name of the exercise cannot be null or empty,0,1,1
comments.json_6189,Test that the number of hours worked must be a positive number,0,1,1
comments.json_6190,Test that the number of calories cannot be negative .,0,1,1
comments.json_6191,now try to make them negative,0,0,0
comments.json_6192,Test with an evil factory,0,1,1
comments.json_6193,Tests adding food entries to the food diary,0,1,1
comments.json_6194,Clears all of the tables .,0,0,0
comments.json_6195,Tests that a patient can add a new food entry to an empty diary . Log in as the patient Derek Morgan who has no prior food entries.,0,1,1
comments.json_6196,Tests that a patient can add a new food entry to a diary that already has some entries in it.,0,1,1
comments.json_6197,Tests that dates must be entered in the correct format .,0,1,1
comments.json_6198,Tests that dates in the future cannot be entered in . Eventually this test will fail because I am hardcoding in the date. However  since it is in the future 100 years  I do not expect this to be a problem (I spent about 30 minutes trying to use the Calendar class to add one day to today's date  but I could'nt get it to format correctly).,0,1,1
comments.json_6199,Ensures that only breakfast   lunch   dinner   or snack is allowed as the meal type,0,1,1
comments.json_6200,Test that the name of the food cannot be null or empty,0,1,1
comments.json_6201,Test that the number of servings must be a positive number,0,1,1
comments.json_6202,Test that the number of calories cannot be negative .,0,1,1
comments.json_6203,now try to make them negative,0,1,1
comments.json_6204,Tests that the grams of fat per serving cannot be negative,0,1,1
comments.json_6205,now try to make them negative,0,0,0
comments.json_6206,Test that the number of sodium cannot be negative .,0,0,0
comments.json_6207,now try to make them negative,0,0,0
comments.json_6208,Tests that the grams of fat per serving cannot be negative,0,1,1
comments.json_6209,now try to make them negative,0,0,0
comments.json_6210,Test that the number of sugars cannot be negative .,0,1,1
comments.json_6211,now try to make them negative,0,0,0
comments.json_6212,Tests that the grams of fiber per serving cannot be negative,0,1,1
comments.json_6213,now try to make them negative,0,0,0
comments.json_6214,Tests that the grams of protein per serving cannot be negative,0,1,1
comments.json_6215,now try to make them negative,0,0,0
comments.json_6216,Test with an evil factory,0,1,1
comments.json_6217,Tests  Add HCP Action in that the validator is checked and the proper  DA Os are hit . This tests is an example of using Mock Objects. If you haven't covered this in class (yet  or at all)  then disregard this class. If you are trying to learn about unit testing with Mock Objects  this is a great class to start with.,0,1,1
comments.json_6218,Sets up defaults,0,0,0
comments.json_6219,Step 0. Initialize the mocks and other necessary objects .,0,0,0
comments.json_6220,Step 1. Initialize any other classes we need .,0,0,0
comments.json_6221,Tests adding a new  HCP,0,1,1
comments.json_6222,Step 2. For each test   set up the expectations of what will be called (started in init Mocks ),0,0,0
comments.json_6223,Step 3. Exit recording mode   go into playback mode,0,0,0
comments.json_6224,Step 3. Actually run the method under test   checking its return value,0,0,0
comments.json_6225,Step 4. Verify the mocks were hit as you expected,0,1,1
comments.json_6226,Tests  Add HCP Action in that the validator is checked and the proper  DA Os are hit . This tests is an example of using Mock Objects. If you haven't covered this in class (yet  or at all)  then disregard this class. If you are trying to learn about unit testing with Mock Objects  this is a great class to start with.,0,1,1
comments.json_6227,Sets up defaults,0,0,0
comments.json_6228,Step 0. Initialize the mocks and other necessary objects .,0,0,0
comments.json_6229,Step 1. Initialize any other classes we need .,0,0,0
comments.json_6230,Tests adding a new  LT,0,1,1
comments.json_6231,Step 2. For each test   set up the expectations of what will be called (started in init Mocks ),0,0,0
comments.json_6232,Step 3. Exit recording mode   go into playback mode,0,0,0
comments.json_6233,Step 3. Actually run the method under test   checking its return value,0,0,0
comments.json_6234,Step 4. Verify the mocks were hit as you expected,0,1,1
comments.json_6235,Tests for  Add Patient Action,0,1,1
comments.json_6236,Sets up defaults,0,0,0
comments.json_6237,Tests adding a new patient,0,1,1
comments.json_6238,Add a dependent,0,0,0
comments.json_6239,Add a non -dependent,0,0,0
comments.json_6240,Tests adding a patient file,0,1,1
comments.json_6241,Test when you have valid data,0,1,1
comments.json_6242,Tests with invalid data,0,1,1
comments.json_6243,Test adding a duplicate field,0,1,1
comments.json_6244,Tests with an invalid header,0,1,1
comments.json_6245,Tests when you have a required field missing,0,1,1
comments.json_6246,Tests  Add HCP Action in that the validator is checked and the proper  DA Os are hit . This tests is an example of using Mock Objects. If you haven't covered this in class (yet  or at all)  then disregard this class. If you are trying to learn about unit testing with Mock Objects  this is a great class to start with.,0,1,1
comments.json_6247,Sets up defaults,0,0,0
comments.json_6248,Tests adding a new  PHA,0,1,1
comments.json_6249,Add Remote Monitoring Data Action Test,0,0,0
comments.json_6250,test Add Remote M Onitoring Data,0,1,1
comments.json_6251,test Add Remote Monitoring Data UAP,0,1,1
comments.json_6252,test Add Remote Monitoring Data Glucose Only,0,1,1
comments.json_6253,test Add Remote Monitoring Data Glucose Only UAP,0,1,1
comments.json_6254,test Add Remote Monitoring Data Blood Pressure Only,0,1,1
comments.json_6255,test Add Remote Monitoring Data Blood Pressure Only UAP,0,1,1
comments.json_6256,test Add Remote Monitoring Weight Data Only,0,1,1
comments.json_6257,test Add Remote Monitoring Pedometer Reading Data Only,0,1,1
comments.json_6258,test Add Remote Monitoring External Data Only,0,1,1
comments.json_6259,test Add Remote Monitoring Height Weight Data Only,0,1,1
comments.json_6260,test Add Bad Remote Monitoring Data,0,1,1
comments.json_6261,TODO,0,0,0
comments.json_6262,TODO,0,0,0
comments.json_6263,TODO,0,0,0
comments.json_6264,TODO,0,0,0
comments.json_6265,test Add Bad Remote Monitoring Weright Data,0,1,1
comments.json_6266,test Add Bad Remote Monitoring Pedometer Reading Data,0,1,1
comments.json_6267,test Representative Report Status,0,1,1
comments.json_6268,test Add Bad Remote Monitoring Glucose Level Data,0,1,1
comments.json_6269,Tests adding sleep entries to the sleep diary,0,1,1
comments.json_6270,Clears all of the tables .,0,0,0
comments.json_6271,Tests that a patient can add a new sleep entry to an empty diary . Log in as the patient Random Person who has no prior sleep entries.,0,1,1
comments.json_6272,Tests that a patient can add a new sleep entry to a diary that already has some entries in it.,0,1,1
comments.json_6273,Tests that dates must be entered in the correct format .,0,1,1
comments.json_6274,Tests that dates in the future cannot be entered in . Eventually this test will fail because I am hardcoding in the date. However  since it is in the future 100 years  I do not expect this to be a problem (I spent about 30 minutes trying to use the Calendar class to add one day to today's date  but I could'nt get it to format correctly).,0,1,1
comments.json_6275,Ensures that only breakfast   lunch   dinner   or snack is allowed as the sleep type,0,1,1
comments.json_6276,Test that the number of hours worked must be a positive number,0,1,1
comments.json_6277,Test with an evil factory,0,1,1
comments.json_6278,Tests for  Add UAP Action,0,1,1
comments.json_6279,Sets up defaults,0,0,0
comments.json_6280,Tests adding a new  UAP,0,1,1
comments.json_6281,The test for the  Chronic  Disease mediator will assert the rest of these,0,0,0
comments.json_6282,Assert the transaction,0,0,0
comments.json_6283,Assert the transaction,0,0,0
comments.json_6284,Tests that a user can add and delete entries in his exercise diary. Entries are known by their id.,0,1,1
comments.json_6285,Clears all of the tables .,0,0,0
comments.json_6286,Tests that an appropriate message is displayed if a user tries to delete from an empty diary (it will be the same as trying to delete with the wrong id),0,1,1
comments.json_6287,Tests that a user can delete a exercise entry he just added .,0,1,1
comments.json_6288,Tests that a user cannot delete a exercise entry from another user .,0,1,1
comments.json_6289,Tests deleting from an evil database .,0,1,1
comments.json_6290,Tests that a user can add and delete entries in his food diary. Entries are known by their id.,0,1,1
comments.json_6291,gen .uc 68(); //uc 68 is now a part of standard Data,0,0,0
comments.json_6292,Clears all of the tables .,0,0,0
comments.json_6293,Tests that an appropriate message is displayed if a user tries to delete from an empty diary (it will be the same as trying to delete with the wrong id),0,1,1
comments.json_6294,Tests that a user can delete a food entry he just added .,0,1,1
comments.json_6295,Tests that a user cannot delete a food entry from another user .,0,1,1
comments.json_6296,Tests deleting from an evil database .,0,1,1
comments.json_6297,Tests that a user can add and delete entries in his sleep diary. Entries are known by their id.,0,1,1
comments.json_6298,Clears all of the tables .,0,0,0
comments.json_6299,Tests that an appropriate message is displayed if a user tries to delete from an empty diary (it will be the same as trying to delete with the wrong id),0,1,1
comments.json_6300,Tests that a user can delete a sleep entry he just added .,0,1,1
comments.json_6301,Tests that a user cannot delete a sleep entry from another user .,0,1,1
comments.json_6302,Tests deleting from an evil database .,0,1,1
comments.json_6303,Patient  Derek  Morgan has  Spencer  Reid as his designated nutritionist and no entries in food table,0,0,0
comments.json_6304,spencer reid viewaction to make sure she can view it now,0,1,1
comments.json_6305,now has no nutritionist   so reid should not be able to view it,0,0,0
comments.json_6306,Derek  Morgan has  Spencer  Reid as nutritionist and chooses to make her his nutritionist,0,0,0
comments.json_6307,spencer reid viewaction to make sure she can view it now,0,1,1
comments.json_6308,should still be able to view diary,0,1,1
comments.json_6309,login as a patient without a designated nutritionist   and add one,0,0,0
comments.json_6310,spencer reid viewaction to make sure she can view it now,0,0,0
comments.json_6311,Try to add as a nutritionist a non  HCP,0,0,0
comments.json_6312,Try to add as nutritionist an hcp that isn 't a nutritionist,0,0,0
comments.json_6313,Test that it returns the right number of nutritionist specialists .,0,1,1
comments.json_6314,first one,0,0,0
comments.json_6315,second one,0,0,0
comments.json_6316,third one,0,0,0
comments.json_6317,Test switching to a new nutritionist,0,1,1
comments.json_6318,spencer reid viewaction to make sure she can view it now,0,1,1
comments.json_6319,change nutritionist to ben matlock,0,0,0
comments.json_6320,now make sure matlock can see,0,1,1
comments.json_6321,Test with an evil factory,0,1,1
comments.json_6322,Test with an evil factory,0,1,1
comments.json_6323,Test with an evil factory,0,1,1
comments.json_6324,test Delete Interaction,0,1,1
comments.json_6325,test Get Interactions,0,1,1
comments.json_6326,test Get Interactions 2,0,1,1
comments.json_6327,test Report Same Drugs Interaction,0,1,1
comments.json_6328,test Report Already Added,0,1,1
comments.json_6329,test Evil DAO Factory,0,1,1
comments.json_6330,success !,0,0,0
comments.json_6331,success !,0,0,0
comments.json_6332,test Get Name,0,1,1
comments.json_6333,test Edit Appt,0,1,1
comments.json_6334,test Edit Appt Conflict,0,1,1
comments.json_6335,test Evil Factory,0,1,1
comments.json_6336,this should pass if  D Bexception is thrown,0,0,0
comments.json_6337,this should pass if  D Bexception is thrown,0,0,0
comments.json_6338,this should pass if  D Bexception is thrown,0,0,0
comments.json_6339,Exception is good .,0,0,0
comments.json_6340,An  Edit Diagnoses Action without an ov ID returns an empty list .,0,0,0
comments.json_6341,It can also be retrieved for an undefined office visit,0,0,0
comments.json_6342,Tests different abilities for editing a exercise entry .,0,1,1
comments.json_6343,Clears all of the tables .,0,0,0
comments.json_6344,Tests that nothing happens when a user tries to udpate a nonexistent exercise entry. Random Person (1) has no entries.,0,1,1
comments.json_6345,Tests that a user can edit their own exercise entries .,0,1,1
comments.json_6346,Tests that users cannot edit other people exercise entries,0,1,1
comments.json_6347,Test that you can add an entry and then turn around and edit it .,0,1,1
comments.json_6348,Tests that the information included still has to be correct and pass the same validation as adding a new one,0,1,1
comments.json_6349,Test with an evil factory,0,1,1
comments.json_6350,Tests different abilites for editing a food entry .,0,1,1
comments.json_6351,gen .uc 68(); //uc 68 is now a part of standard Data,0,0,0
comments.json_6352,Clears all of the tables .,0,0,0
comments.json_6353,Tests that nothing happens when a user tries to udpate a nonexistent food entry. Derek Morgan (333) has no entries.,0,1,1
comments.json_6354,Tests that a user can edit his own food entries .,0,1,1
comments.json_6355,Tests that users cannot edit other people food entries,0,1,1
comments.json_6356,Test that you can add an entry and then turn around and edit it .,0,1,1
comments.json_6357,Tests that the information included still has to be correct and pass the same validation as adding a new one,0,1,1
comments.json_6358,Test with an evil factory,0,0,0
comments.json_6359,Note that we don 't need to check the returned values here - see the  DAO test   Add PHR Test,0,0,0
comments.json_6360,Correct form data,0,0,0
comments.json_6361,An  Edit Immunizations Action without an ov ID returns an empty list .,0,0,0
comments.json_6362,It can also be retrieved for an undefined office visit,0,0,0
comments.json_6363,Edit Lab Procedures Action Test,0,0,0
comments.json_6364,test Get Lab Procedures,0,1,1
comments.json_6365,An  Edit Lab Procedures Action without an ov ID returns an empty list .,0,0,0
comments.json_6366,test Get Lab Procedure,0,1,1
comments.json_6367,test Add Lab Procedure,0,1,1
comments.json_6368,test Edit Lab Procedure,0,1,1
comments.json_6369,test Delete Lab Procedure,0,1,1
comments.json_6370,test Get Lab Procedure Codes,0,1,1
comments.json_6371,It can also be retrieved for an undefined office visit,0,0,0
comments.json_6372,test Auto Assign Lab Tech,0,1,1
comments.json_6373,setup : assign lab procs to techs,0,0,0
comments.json_6374,the lab tech with the least amount of work should get the assignment,0,0,0
comments.json_6375,test Get Lab Techs,0,1,1
comments.json_6376,test Get Lab Tech Name,0,1,1
comments.json_6377,test Get Lab Tech Queue Size,0,1,1
comments.json_6378,test Get Lab Tech Queue Size By Priority,0,1,1
comments.json_6379,Test all office visit by doctors,0,1,1
comments.json_6380,test OVID,0,1,1
comments.json_6381,test Evil Database,0,1,1
comments.json_6382,test OV Doesnt Exist,0,1,1
comments.json_6383,Test  Hospital location,0,1,1
comments.json_6384,NOTE : may have to fix this ... use different pid and ovid .,0,0,0
comments.json_6385,First comes hospitals associated with the  HCP in alphabetical order .,0,0,0
comments.json_6386,Then comes all other hospitals in alphabetical order .,0,0,0
comments.json_6387,Test patient office visit,0,1,1
comments.json_6388,UC 60,0,0,0
comments.json_6389,test Update Information Empty Form,0,1,1
comments.json_6390,TODO,0,0,0
comments.json_6391,Test if patient information is updated,0,1,1
comments.json_6392,UC 60,0,0,0
comments.json_6393,test Update Information Semicolon,0,1,1
comments.json_6394,test Update Information Octothorpe,0,1,1
comments.json_6395,test Update Information New Office Visit,0,1,1
comments.json_6396,test Make Email App,0,1,1
comments.json_6397,Test actions related to getting  Diagnoses,0,1,1
comments.json_6398,An  Edit Diagnoses Action without an ov ID returns an empty list .,0,0,0
comments.json_6399,test adding various sorts of diagnosis .,0,1,1
comments.json_6400,It can also be retrieved for an undefined office visit,0,0,0
comments.json_6401,test passes   exception should have been thrown,0,1,1
comments.json_6402,test passes   exception should have been thrown,0,1,1
comments.json_6403,Check that patient 2 is not a dependent,0,0,0
comments.json_6404,Change patient 2's dependency status,0,0,0
comments.json_6405,Check that patient 2 is a dependent,0,0,0
comments.json_6406,2 represents 1  but not 4,0,0,0
comments.json_6407,Add patient 4 to be represented by patient 2,0,0,0
comments.json_6408,Ensure the representatives were added correctly,0,0,0
comments.json_6409,Make patient 2 a dependent,0,0,0
comments.json_6410,Assert that no more patients are represented by patient 2,0,0,0
comments.json_6411,Check patient 2's dependency status,0,1,1
comments.json_6412,Make patient 2 not a dependent,0,0,0
comments.json_6413,Check that patient 2 is not a dependent,0,1,1
comments.json_6414,Without an  Office visit  ID   this should return an empty list .,0,0,0
comments.json_6415,test Add Patient Instructions,0,1,1
comments.json_6416,Without an  Office visit  ID   this should throw .,0,0,0
comments.json_6417,Try adding patient specific instructions .,0,0,0
comments.json_6418,test Edit Patient Instructions,0,1,1
comments.json_6419,Without an  Office visit  ID   this should throw .,0,0,0
comments.json_6420,Try editing patient specific instructions .,0,0,0
comments.json_6421,test Delete Patient Instructions,0,1,1
comments.json_6422,Without an  Office visit  ID   this should throw .,0,0,0
comments.json_6423,Try deleting patient specific instructions .,0,0,0
comments.json_6424,test Validate,0,1,1
comments.json_6425,Without an  Office visit  ID   this should throw .,0,0,0
comments.json_6426,Try validating patient specific instructions .,0,1,1
comments.json_6427,I know it 's bad form to have two test in one   but it 's so we don 't have to redo the database,0,0,0
comments.json_6428,Check that the correct call was made - more thorough assertions are in the  DAO tests,0,0,0
comments.json_6430,This test class test EditPHRAction  specifically adding allergies.,0,1,1
comments.json_6431,This method tests that a warning is shown for a future prescription.,0,1,1
comments.json_6432,result = action PHR .update Allergies (100 L   "483012382"); // Adds  M -minene,0,0,0
comments.json_6433,This method tests that no warning is shown.,0,1,1
comments.json_6434,result = action PHR .update Allergies (100 L   "483013420"); // Adds  M -maxene,0,0,0
comments.json_6435,This method tests that a warning is shown when adding a duplicate allergy.,0,1,1
comments.json_6436,action PHR .update Allergies (100 L   "483013420"); // Adds  M -maxene,0,0,0
comments.json_6437,result = action PHR .update Allergies (100 L   "483013420"); // Adds  M -maxene again,0,0,0
comments.json_6438,Test  Prescription actions,0,1,1
comments.json_6439,Test edit prescription,0,1,1
comments.json_6440,Test get Prescription,0,1,1
comments.json_6441,An  Edit Prescription Action without an ov ID returns an empty list .,0,0,0
comments.json_6442,Test if prescription have been added for scenario 1,0,1,1
comments.json_6443,Test prescription for scenario 2,0,1,1
comments.json_6444,Test add prescription for scenario 3,0,1,1
comments.json_6445,Test add prescription for scenario 4,0,1,1
comments.json_6446,Test if prescription has been deleted,0,1,1
comments.json_6447,Test  Medication,0,1,1
comments.json_6448,It can also be retrieved for an undefined office visit,0,0,0
comments.json_6449,test Form To Bean,0,1,1
comments.json_6450,test Add Prescription _ Allergy,0,1,1
comments.json_6451,test Add Prescription _ Allergy Override,0,1,1
comments.json_6452,test Add Prescription _ Allergy Future,0,1,1
comments.json_6453,test Add Prescription _ Intercation,0,1,1
comments.json_6454,Nexium   which interacts with aspirin,0,0,0
comments.json_6455,aspirin   which interacts with nexium,0,0,0
comments.json_6456,Test procedure actions testAddProcedure test Edit Procedure test delete Procedure,0,1,1
comments.json_6457,An  Edit Prescription Action without an ov ID returns an empty list .,0,0,0
comments.json_6458,test Add Procedure,0,1,1
comments.json_6459,test Edit Procedure,0,1,1
comments.json_6460,test Delete Procedure,0,1,1
comments.json_6461,test Get Procedure Codes,0,1,1
comments.json_6462,It can also be retrieved for an undefined office visit,0,0,0
comments.json_6463,An  Edit Prescription Action without an ov ID returns an empty list .,0,0,0
comments.json_6464,Tests that non patients cannot add representatives,0,1,1
comments.json_6465,helper method,0,0,0
comments.json_6466,When adding a referral   it should appear in the database   and,0,0,0
comments.json_6467,messages should be sent to the associated users .,0,0,0
comments.json_6468,Ensure no referral messages exist for any user .,0,0,0
comments.json_6469,construct the referral,0,0,0
comments.json_6470,send the referral,0,0,0
comments.json_6471,get stored referral,0,0,0
comments.json_6472,check the contents of the bean,0,1,1
comments.json_6473,check that messages were sent,0,1,1
comments.json_6474,get existing referral and edit it,0,0,0
comments.json_6475,save modified referral,0,0,0
comments.json_6476,retrieve referral and see that it has been modified,0,0,0
comments.json_6477,get existing referral,0,0,0
comments.json_6478,delete referral,0,0,0
comments.json_6479,trying to retrieve deleted referral should return null,0,0,0
comments.json_6480,part 2: check that messages were sent,0,0,0
comments.json_6481,Tests different abilities for editing a sleep entry .,0,1,1
comments.json_6482,Clears all of the tables .,0,0,0
comments.json_6483,Tests that nothing happens when a user tries to udpate a nonexistent sleep entry. Random Person (1) has no entries.,0,1,1
comments.json_6484,Tests that a user can edit their own sleep entries .,0,1,1
comments.json_6485,Tests that users cannot edit other people sleep entries,0,1,1
comments.json_6486,Test that you can add an entry and then turn around and edit it .,0,1,1
comments.json_6487,Tests that the information included still has to be correct and pass the same validation as adding a new one,0,1,1
comments.json_6488,Test with an evil factory,0,1,1
comments.json_6489,Tests that you can find all of the experts you should be able to,0,1,1
comments.json_6490,Test a single result,0,1,1
comments.json_6491,tests compares two  Personnel Beans from the  Custom Comparator class using the compare method,0,1,1
comments.json_6492,Tests that you can filter out the hospitals,0,1,1
comments.json_6493,Tests that you can find hospitals by their specialty,0,1,1
comments.json_6494,test Get Conflicts,0,1,1
comments.json_6495,test Get Office Visits Table,0,1,1
comments.json_6496,test Get Lab Procedures Table,0,1,1
comments.json_6497,Get Visit Reminders Action Test,0,0,0
comments.json_6498,test Normal Return,0,1,1
comments.json_6499,Test that no exceptions are thrown on method call,0,1,1
comments.json_6500,check valid data returns,0,1,1
comments.json_6501,Login as kelly doctor,0,0,0
comments.json_6502,test Get Visit Reminders _ Alive Patients,0,1,1
comments.json_6503,test Get Visit Reminders _ Dead Patients,0,1,1
comments.json_6504,test Get Visit Reminders _ Diagnosed _ Old And Recent Visit,0,1,1
comments.json_6505,Patient had a visit over a year ago . Make sure that he isn 't given a reminder for this year,0,1,1
comments.json_6506,since he also had a visit 3 months ago .,0,0,0
comments.json_6507,test Get Visit Reminders _ Correct Date Of Recent Visit,0,1,1
comments.json_6508,test No Sub Action,0,1,1
comments.json_6509,Test that standard Data creates an initial 3 visit reminders,0,1,1
comments.json_6510,Login as kelly doctor,0,0,0
comments.json_6511,Returns reminders for  No Records  Has   Bad  Horse   Care  Needs   and  Random  Person,0,0,0
comments.json_6512,test Get Reminder Type,0,1,1
comments.json_6513,Test that  Enum -> String translation works properly,0,1,1
comments.json_6514,Login as kelly doctor,0,0,0
comments.json_6515,test Bad Reminder Type,0,1,1
comments.json_6516,Test that a null  Reminder Type is not allowed,0,1,1
comments.json_6517,Check other failure inputs,0,0,0
comments.json_6518,Login as kelly doctor,0,0,0
comments.json_6519,test Test HPV,0,1,1
comments.json_6520,add boundary tests,0,0,0
comments.json_6521,Login as kelly doctor,0,0,0
comments.json_6522,test Test Hep A,0,1,1
comments.json_6523,add boundary tests,0,0,0
comments.json_6524,Login as kelly doctor,0,0,0
comments.json_6525,test Test Varicella,0,1,1
comments.json_6526,add boundary tests,0,0,0
comments.json_6527,Login as kelly doctor,0,0,0
comments.json_6528,test Test Measles,0,1,1
comments.json_6529,add boundary tests,0,0,0
comments.json_6530,Login as kelly doctor,0,0,0
comments.json_6531,test Test Polio,0,1,1
comments.json_6532,add boundary tests,0,0,0
comments.json_6533,Login as kelly doctor,0,0,0
comments.json_6534,test Test Pneumo,0,1,1
comments.json_6535,add boundary tests,0,0,0
comments.json_6536,Login as kelly doctor,0,0,0
comments.json_6537,test Test Haemo Flu,0,1,1
comments.json_6538,add boundary tests,0,0,0
comments.json_6539,Login as kelly doctor,0,0,0
comments.json_6540,test Test Dip Tet,0,1,1
comments.json_6541,add boundary tests,0,0,0
comments.json_6542,Login as kelly doctor,0,0,0
comments.json_6543,test Test Rota Virus,0,1,1
comments.json_6544,add boundary tests,0,0,0
comments.json_6545,Login as kelly doctor,0,0,0
comments.json_6546,test Test Hep B,0,1,1
comments.json_6547,add boundary tests,0,0,0
comments.json_6548,Login as kelly doctor,0,0,0
comments.json_6549,test Generate Report,0,1,1
comments.json_6550,test Parse Filters,0,1,1
comments.json_6551,Tests adding sleep entries to the sleep diary,0,1,1
comments.json_6552,Clears all of the tables .,0,0,0
comments.json_6553,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6554,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6555,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6556,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6557,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6558,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6559,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6560,Tests that a patient can add a new label . Log in as the patient Random Person who has no prior labels.,0,1,1
comments.json_6561,test Submite Results,0,1,1
comments.json_6562,test Submit Received,0,1,1
comments.json_6563,test Set To Testing,0,1,1
comments.json_6564,test Get Lab Proc,0,1,1
comments.json_6565,test Submite Results Wron ID Number Format,0,1,1
comments.json_6566,test Sudmit Received Wrong ID Nubmer Format,0,1,1
comments.json_6567,test Submit Results Evil Factory,0,1,1
comments.json_6568,Manage Hospital Assignments Action Test,0,0,0
comments.json_6569,test Assign HCP To Hospital,0,1,1
comments.json_6570,test Assign HCP To Hospital Evil,0,1,1
comments.json_6571,test Assign Duplicate,0,1,1
comments.json_6572,test Remove Personnel Assignment To Hospital,0,1,1
comments.json_6573,test Remove Non Assigned,0,1,1
comments.json_6574,test Remove All,0,1,1
comments.json_6575,test Remove All Evil,0,1,1
comments.json_6576,TODO,0,0,0
comments.json_6577,test Remove All Unassigned,0,1,1
comments.json_6578,test Check HCPID Bad MID,0,1,1
comments.json_6579,TODO,0,0,0
comments.json_6580,test Check HCPID,0,1,1
comments.json_6581,test Check HCPID String MID,0,1,1
comments.json_6582,TODO,0,0,0
comments.json_6583,test Check HCPID Evil,0,1,1
comments.json_6584,TODO,0,0,0
comments.json_6585,test Get Available Hospitals,0,1,1
comments.json_6586,test Get Available Hospitals Bad MID,0,1,1
comments.json_6587,TODO,0,0,0
comments.json_6588,test Get Assigned Hospitals Bad MID,0,1,1
comments.json_6589,TODO,0,0,0
comments.json_6590,test Assign HCP To Hospital Bad ID,0,1,1
comments.json_6591,TODO,0,0,0
comments.json_6592,test Remove HC Pto Hospital BADID,0,1,1
comments.json_6593,TODO,0,0,0
comments.json_6594,test Remove HCP Assignments Bad ID,0,1,1
comments.json_6595,TODO,0,0,0
comments.json_6596,New  Method to check and make sure  L Ts only have 1 hospital,0,1,1
comments.json_6597,This method checks to make sure check LT Hospital method can correctly handle and illegal MID.,0,1,1
comments.json_6598,TODO,0,0,0
comments.json_6599,further testing should be done in the patient DAO,0,0,0
comments.json_6601,testassign Patient,0,1,1
comments.json_6602,use the office visit  DAO test to verify that all of the correct info is taken,0,1,1
comments.json_6603,Report Adverse Event Action Test,0,0,0
comments.json_6604,test Send One Mail,0,1,1
comments.json_6605,test Send Two Mailh,0,1,1
comments.json_6606,test Email Avalanche,0,1,1
comments.json_6607,test Bad Event,0,1,1
comments.json_6608,test Worse Event,0,1,1
comments.json_6609,test Add Report,0,1,1
comments.json_6610,TODO,0,0,0
comments.json_6611,Try running the test with a non existent patient,0,0,0
comments.json_6612,Insert a good request,0,0,0
comments.json_6613,Insert a bad request form without a digital signature,0,0,0
comments.json_6614,Insert a bad request form that has not been filled,0,0,0
comments.json_6615,Insert a bad request form completely unfilled except for the digital signature,0,0,0
comments.json_6616,Get the initial amount of release requests for the patient,0,0,0
comments.json_6617,Insert 1 record first,0,0,0
comments.json_6618,Get new list of release requests and check that the size has incremented by 1,0,0,0
comments.json_6619,Insert another record,0,0,0
comments.json_6620,Get new list of release requests and check that the size has incremented by 1,0,0,0
comments.json_6621,Attempt to insert a good request form,0,0,0
comments.json_6622,Attempt to get the patient 's records release requests,0,0,0
comments.json_6623,Attempt to get the patient 's name,0,0,0
comments.json_6624,Attempt to get a hospital 's name,0,0,0
comments.json_6625,Attempt to get all patient hospitals,0,0,0
comments.json_6626,Attempt to get the patient 's list of represented patients,0,0,0
comments.json_6627,Get hospital name for hospital id 1,0,0,0
comments.json_6628,Fail if there is a  DB Exception,0,0,0
comments.json_6629,Test that the name the action method gets is the same,0,1,1
comments.json_6630,Clear the db tables,0,0,0
comments.json_6631,Fail if there is an exception,0,0,0
comments.json_6632,Test that a blank string is returned if there is no hospital with the given id,0,1,1
comments.json_6633,Verify the effectiveness of the  Reviews Action class .,0,1,1
comments.json_6634,constant id 's for testing,0,0,0
comments.json_6635,Set up for the rest of the tests,0,0,0
comments.json_6636,Tests that when a  Reviews Bean is added it truly is valid .,0,1,1
comments.json_6637,Test to make sure that you are able to get a correct  Reviews Bean .,0,1,1
comments.json_6638,check to make sure that the list size is the same,0,1,1
comments.json_6639,Test to make sure that you are able to get a correct  Rating for average rating .,0,1,1
comments.json_6640,Test to ensure you can get a physician,0,1,1
comments.json_6641,Tests that a patient can rate his physician,0,1,1
comments.json_6642,Search Users Action Test,0,0,0
comments.json_6643,test Search For Patienst With Name,0,1,1
comments.json_6644,test Search For Patietns With Name 2,0,1,1
comments.json_6645,test Search For Patients With Name 3,0,1,1
comments.json_6646,test Fuzzy Search For Patient 1,0,1,1
comments.json_6647,test Fuzzy Search For Patient 2,0,1,1
comments.json_6648,test Fuzzy Search For Patient 3,0,1,1
comments.json_6649,test Fuzzy Search For Patient Deactivated Override,0,1,1
comments.json_6650,test Search For Personnel With Name,0,1,1
comments.json_6651,test Search For Personnel With Name 2,0,1,1
comments.json_6652,test Search For Personnel With Name 3,0,1,1
comments.json_6653,test Zero Patients,0,1,1
comments.json_6654,test Fuzzy Search For Expert,0,1,1
comments.json_6655,Update Hospital List Action Test,0,0,0
comments.json_6656,KILLS -- M  FAIL : edu .ncsu .csc .itrust .action . Update Hospital List Action :35: changed return value (areturn ),0,0,0
comments.json_6657,TODO,0,0,0
comments.json_6658,KILLS -- M  FAIL : edu .ncsu .csc .itrust .action . Update Hospital List Action :49: changed return value (areturn ),0,0,0
comments.json_6659,TODO,0,0,0
comments.json_6660,test Add Hospital,0,0,0
comments.json_6661,Kills : M  FAIL : edu .ncsu .csc .itrust .action . Update Hospital List Action :27: CP [64] "added hospital " -> "___jumble___" M FAIL: edu.ncsu.csc.itrust.action.UpdateHospitalListAction:27: 0L -> 1L,0,0,0
comments.json_6662,test Add Duplicate,0,1,1
comments.json_6663,test Updatre ICD Information,0,1,1
comments.json_6664,test Update Non Existent,0,1,1
comments.json_6665,test Add Address,0,1,1
comments.json_6666,test Update Address,0,1,1
comments.json_6667,Update ICD Code List Action Test,0,0,0
comments.json_6668,test Evil Factory,0,1,1
comments.json_6669,TODO,0,0,0
comments.json_6670,TODO,0,0,0
comments.json_6671,test Add ICD Code,0,1,1
comments.json_6672,test Add ICD Code URL,0,1,1
comments.json_6673,test Add Duplicate,0,1,1
comments.json_6674,test Update ICD Information 0,0,1,1
comments.json_6675,test Update Non Existent,0,1,1
comments.json_6676,test Update Non Existent All Codes,0,1,1
comments.json_6677,test Diagnosis Bean String Constructor,0,1,1
comments.json_6678,Update Lab Proc List Action Test,0,0,0
comments.json_6679,test Evil Factory,0,1,1
comments.json_6680,test Add ICD Code,0,1,1
comments.json_6681,test Add Duplicate,0,1,1
comments.json_6682,test Update ICD Information 0,0,1,1
comments.json_6683,test Update Non Existent,0,1,1
comments.json_6684,test Parse LOINC File,0,1,1
comments.json_6685,test Parse LOINC File 2,0,1,1
comments.json_6686,test Parse LOINC File Ignore,0,1,1
comments.json_6687,test Parse LOINC File Replace,0,1,1
comments.json_6688,test Parse Bad LOINC File,0,1,1
comments.json_6689,test Parse Invalid LOINC File,0,1,1
comments.json_6690,test Parse Invalid LOINC File 2,0,1,1
comments.json_6691,Update ND Code List Action Test,0,0,0
comments.json_6692,test Evil Factory,0,1,1
comments.json_6693,TODO,0,0,0
comments.json_6694,TODO,0,0,0
comments.json_6695,TODO,0,0,0
comments.json_6696,test Add ND Code,0,1,1
comments.json_6697,test Add Duplicate,0,1,1
comments.json_6698,test Update ND Information 0,0,1,1
comments.json_6699,test Update Non Existent,0,1,1
comments.json_6700,test Remove ND Code,0,1,1
comments.json_6701,test Remove Non Existent,0,1,1
comments.json_6702,Update ORC List Action Test,0,0,0
comments.json_6703,test Evil Facotry,0,1,1
comments.json_6704,TODO,0,0,0
comments.json_6705,TODO,0,0,0
comments.json_6706,test Add OR Code,0,1,1
comments.json_6707,DO  NOT  REMOVE ! This must be stored in a variable . DO  NO  QUESTION  THE  JAVA !,0,0,0
comments.json_6708,test Add Duplicate,0,1,1
comments.json_6709,test Update ND Information 0,0,1,1
comments.json_6710,test Update Non Existent,0,1,1
comments.json_6711,Update Reason Code List Action Test,0,0,0
comments.json_6712,test Evil Factory,0,1,1
comments.json_6713,TODO,0,0,0
comments.json_6714,TODO,0,0,0
comments.json_6715,test Add ND Code,0,1,1
comments.json_6716,test Add Duplicate,0,1,1
comments.json_6717,test Update ND Information 0,0,1,1
comments.json_6718,test Update Non Existent,0,1,1
comments.json_6719,Upload Reference Tables Action Test,0,0,0
comments.json_6720,set Up,0,0,0
comments.json_6721,test Store Weight Stats,0,1,1
comments.json_6722,If an exception is thrown fail the test,0,0,0
comments.json_6723,Store the weight,0,0,0
comments.json_6724,Check that the stats actually stored,0,1,1
comments.json_6725,test Store Height Stats,0,1,1
comments.json_6726,If an exception is thrown fail the test,0,0,0
comments.json_6727,Store the height,0,0,0
comments.json_6728,Check that the stats actually stored,0,0,0
comments.json_6729,test Store Head Circ Stats,0,1,1
comments.json_6730,If an exception is thrown fail the test,0,0,0
comments.json_6731,Store the head circumference,0,0,0
comments.json_6732,Check that the stats actually stored,0,1,1
comments.json_6733,test Store BMI Stats,0,1,1
comments.json_6734,If an exception is thrown fail the test,0,0,0
comments.json_6735,Store the bmi,0,0,0
comments.json_6736,Check that the stats actually stored,0,1,1
comments.json_6737,test Evil Factory,0,1,1
comments.json_6738,If an exception is thrown fail the test,0,0,0
comments.json_6739,Attempt to store the bmi,0,0,0
comments.json_6740,View Adverse Event Action Test,0,0,0
comments.json_6741,test Get Adverse Event,0,1,1
comments.json_6742,test Get Unremoved Adverse Events By Code,0,1,1
comments.json_6743,test Get Name For Code,0,1,1
comments.json_6744,This should be thrown,0,0,0
comments.json_6745,Tests for viewing a patient 's exercise diary,0,1,1
comments.json_6746,Clears all of the tables   gets the standard data   and includes the data for use cases 68 and 69,0,0,0
comments.json_6747,Clears all of the tables,0,0,0
comments.json_6748,Log in as the  HCP  Duyu  Ivanlyft who does have the specialty of trainer  so she should be able to view exercise entries. View the Exercise Entries for Patient Random Person who has some exercise entries already in their diary.,0,0,0
comments.json_6749,now that we know we have 2 of them   make sure they are the,0,1,1
comments.json_6750,right ones,0,0,0
comments.json_6751,now check the totals,0,1,1
comments.json_6752,Test that  HCP 's that are not specialists in nutrition are unable to view Exercise Diary Entries.,0,1,1
comments.json_6753,log in as  Doctor  Kelly,0,0,0
comments.json_6754,Test that a patient can view their exercise diary .,0,1,1
comments.json_6755,now that we know we have 2 of them  ,0,0,0
comments.json_6756,make sure they are the right ones,0,1,1
comments.json_6757,now check the totals,0,0,0
comments.json_6758,Ensures a patient can still view their exercise diary even when it is empty .,0,1,1
comments.json_6759,Ensures  HC Ps with specialty of trainer can still view a exercise diary even when the exercise diary is empty.,0,1,1
comments.json_6760,Ensure patients can 't view the exercise diary of other patients .,0,1,1
comments.json_6761,Testing that we can get the diary when we are searching for range of dates,0,1,1
comments.json_6762,now that we know we have 1 of them   make sure they are the,0,1,1
comments.json_6763,right ones,0,0,0
comments.json_6764,now check the totals,0,0,0
comments.json_6765,Test bounded diary with bad dates,0,1,1
comments.json_6766,Test with a bad factory,0,1,1
comments.json_6767,Test with a bad factory,0,1,1
comments.json_6768,Test with a bad factory,0,1,1
comments.json_6769,Test with a bad factory,0,1,1
comments.json_6770,Try to get a bounded exercise diary of other patient .,0,0,0
comments.json_6771,Try to get a bounded exercise diary totals of other patient .,0,0,0
comments.json_6772,Enter in start date after end date,0,0,0
comments.json_6773,Enter in start date after end date for the totals,0,0,0
comments.json_6774,Tests for viewing a patient 's food diary,0,1,1
comments.json_6775,Clears all of the tables   gets the standard data   and includes the data for use cases 68 and 69,0,0,0
comments.json_6776,Clears all of the tables,0,0,0
comments.json_6777,Log in as the  HCP  Spencer  Reid who does have the specialty of nutritionist  so she should be able to view food entries. View the Food Entries for Patient Jennifer Jareau who has some food entries already in her diary.,0,0,0
comments.json_6778,now that we know we have 2 of them   make sure they are the,0,1,1
comments.json_6779,right ones,0,0,0
comments.json_6780,now check the totals,0,1,1
comments.json_6781,Test that  HCP 's that are not specialists in nutrition are unable to view Food Diary Entries.,0,1,1
comments.json_6782,log in as  Doctor  Kelly,0,0,0
comments.json_6783,Test that a patient can view his food diary .,0,1,1
comments.json_6784,now that we know we have 2 of them  ,0,0,0
comments.json_6785,make sure they are the right ones,0,1,1
comments.json_6786,now check the totals,0,0,0
comments.json_6787,Ensures a patient can still view his food diary even when it is empty .,0,1,1
comments.json_6788,Ensures  HC Ps with specialty of nutritionist can still view a food diary even when the food diary is empty.,0,1,1
comments.json_6789,Ensure patients can 't view the food diary of other patients .,0,1,1
comments.json_6790,Test getting a bounded food diary,0,1,1
comments.json_6791,aaron has multiple days,0,0,0
comments.json_6792,now get the totals,0,0,0
comments.json_6793,Test start date after end date,0,1,1
comments.json_6794,Test start date after end date,0,1,1
comments.json_6795,Ensure patients can 't view the bounded food diary of other patients .,0,1,1
comments.json_6796,Ensure patients can 't view the bounded food diary of other patients .,0,1,1
comments.json_6797,Test bounded diary with bad dates,0,1,1
comments.json_6798,Test bounded diary totals with bad dates,0,1,1
comments.json_6799,Try to view it as a nutritionist that isn 't designated,0,0,0
comments.json_6800,Try to view it as a nutritionist that isn 't designated,0,0,0
comments.json_6801,Try to view it as a nutritionist that isn 't designated,0,0,0
comments.json_6802,Try to view it as a nutritionist that isn 't designated,0,0,0
comments.json_6803,Test with evil factory,0,1,1
comments.json_6804,Test with evil factory,0,1,1
comments.json_6805,Test with evil factory,0,1,1
comments.json_6806,Test with evil factory,0,1,1
comments.json_6807,Check all values contained in the normal bean,0,1,1
comments.json_6808,Get the weight associated with the health record and convert into kg,0,0,0
comments.json_6809,Get the patient 's gender,0,0,0
comments.json_6810,Get the patient 's age,0,0,0
comments.json_6811,If the patient 's birthdate equals the office visit date  ,0,0,0
comments.json_6812,the patient 's age is 0 months,0,0,0
comments.json_6813,Otherwise add 0.5 to the patient 's age in months,0,0,0
comments.json_6814,Get the  L   M   and  S values,0,0,0
comments.json_6815,Calculate the z score,0,0,0
comments.json_6816,If  L is 0 then calculate the z score differently,0,0,0
comments.json_6817,Get the height associated with the health record and convert into cm,0,0,0
comments.json_6818,Get the patient 's gender,0,0,0
comments.json_6819,Get the patient 's age,0,0,0
comments.json_6820,If the patient 's birthdate equals the office visit date  ,0,0,0
comments.json_6821,the patient 's age is 0 months,0,0,0
comments.json_6822,Otherwise add 0.5 to the patient 's age in months,0,0,0
comments.json_6823,Get the  L   M   and  S values,0,0,0
comments.json_6824,Calculate the z score,0,0,0
comments.json_6825,If  L is 0 then calculate the z score differently,0,0,0
comments.json_6826,Get the head circumference associated with the health record and convert into cm,0,0,0
comments.json_6827,Get the patient 's gender,0,0,0
comments.json_6828,Get the patient 's age,0,0,0
comments.json_6829,If the patient 's birthdate equals the office visit date  ,0,0,0
comments.json_6830,the patient 's age is 0 months,0,0,0
comments.json_6831,Otherwise add 0.5 to the patient 's age in months,0,0,0
comments.json_6832,Get the  L   M   and  S values,0,0,0
comments.json_6833,Calculate the z score,0,0,0
comments.json_6834,If  L is 0 then calculate the z score differently,0,0,0
comments.json_6835,Get the bmi associated with the health record,0,0,0
comments.json_6836,Get the patient 's gender,0,0,0
comments.json_6837,Get the patient 's age,0,0,0
comments.json_6838,If the patient 's birthdate equals the office visit date  ,0,0,0
comments.json_6839,the patient 's age is 0 months,0,0,0
comments.json_6840,Otherwise add 0.5 to the patient 's age in months,0,0,0
comments.json_6841,Get the  L   M   and  S values,0,0,0
comments.json_6842,Calculate the z score,0,0,0
comments.json_6843,If  L is 0 then calculate the z score differently,0,0,0
comments.json_6844,Adam  Sandler - all required immunizations plus some,0,0,0
comments.json_6845,Adam  Sandler - kindergarten immunizations,0,0,0
comments.json_6846,Charlie  Chaplin - adult immunizations,0,0,0
comments.json_6847,Adam  Sandler - No immunizations needed,0,0,0
comments.json_6848,Christina  Aguillera - Prior diagnosis,0,0,0
comments.json_6849,Charlie  Chaplin - Age limit,0,0,0
comments.json_6850,Kelly  Doctor ( MID 9000000000),0,0,0
comments.json_6851,Shelly  Vang ( MID 8000000001),0,0,0
comments.json_6852,Nonexistent  HCP ( MID 2020202020),0,0,0
comments.json_6853,Tests for viewing a patient 's food diary,0,1,1
comments.json_6854,Clears all of the tables   gets the standard data   and includes the data for use cases 68 and 69,0,0,0
comments.json_6855,Clears all of the tables,0,0,0
comments.json_6856,note : the actual bounding is not done here   see the  DAO test,0,0,0
comments.json_6857,Verifies that none of the transactions returned in the access log are the patient 's  DLHCP per use case 8,0,1,1
comments.json_6858,View My Messages Action Test,0,1,1
comments.json_6859,test Get All My Messages,0,1,1
comments.json_6860,Should send a message and recheck later .,0,0,0
comments.json_6861,test Get Patient Name,0,1,1
comments.json_6862,test Get Personnel Name,0,1,1
comments.json_6863,test Get All My Messages Time Ascending,0,1,1
comments.json_6864,test Get All My Messages Name Ascending,0,1,1
comments.json_6865,TODO,0,0,0
comments.json_6866,test Get All My Messages Name Descending,0,1,1
comments.json_6867,TODO,0,0,0
comments.json_6868,test Get All My Sent Messages,0,1,1
comments.json_6869,test Get All My Messages From Time Ascending,0,1,1
comments.json_6870,test Get All My Messages From Name Ascending,0,1,1
comments.json_6871,TODO,0,0,0
comments.json_6872,test Get All My Messages From Name Descending,0,1,1
comments.json_6873,TODO,0,0,0
comments.json_6874,test Update Read,0,1,1
comments.json_6875,test Add Message,0,1,1
comments.json_6876,test Filter Messages,0,1,1
comments.json_6877,test Get Unread Count,0,1,1
comments.json_6878,test Linked To Referral,0,1,1
comments.json_6879,test Get C Cd Messages,0,1,1
comments.json_6880,test Throws Exceptions,0,1,1
comments.json_6881,Test 9/30/2013. Patient 's birthday is 5/01/13,0,1,1
comments.json_6882,Change test date to a year after the patient 's birthdate,0,0,0
comments.json_6883,View My Remote Monitoring List Action Test,0,1,1
comments.json_6884,test Get Patient Data,0,1,1
comments.json_6885,test Get Patient Data By Date,0,1,1
comments.json_6886,test Get Patient Data By Type,0,1,1
comments.json_6887,test Illegal Get Patient Data By Date 1,0,1,1
comments.json_6888,Here to remove warning about data not being read,0,0,0
comments.json_6889,TODO,0,0,0
comments.json_6890,test Get Patient Name,0,1,1
comments.json_6891,Test  All doctor office visit,0,1,1
comments.json_6892,Test view office visit,0,1,1
comments.json_6893,TODO,0,0,0
comments.json_6894,View Patient Office Visit History Action Test,0,0,0
comments.json_6895,test Get Personnel,0,1,1
comments.json_6896,test Get Patients,0,1,1
comments.json_6898,View Patient Referrals Action Test,0,1,1
comments.json_6900,illegal sort direction   expecting an error,0,0,0
comments.json_6906,View Receiving Referrals Action Test,0,0,0
comments.json_6912,Get the current amount of release requests for the hospital,0,0,0
comments.json_6913,Add a  Records Release Bean,0,0,0
comments.json_6914,There should be no  DB Exception,0,0,0
comments.json_6915,Assert that one more records release bean is returned,0,0,0
comments.json_6916,Add a record release request from a different hospital,0,0,0
comments.json_6917,There should be no  DB Exception,0,0,0
comments.json_6918,Assert that the same amount of records release beans are returned,0,0,0
comments.json_6919,Attempt to get the release requests as an uap,0,0,0
comments.json_6920,Attempt to get the release requests as a non hcp or uap user,0,0,0
comments.json_6921,Add a  Records Release Bean,0,0,0
comments.json_6922,Get a records release bean for patient 102,0,0,0
comments.json_6923,There should be no  DB Exception,0,0,0
comments.json_6924,Get the request id,0,0,0
comments.json_6925,Approve the records release,0,0,0
comments.json_6926,Make sure that the records release status is properly updated,0,1,1
comments.json_6927,There should be no  DB Exception,0,0,0
comments.json_6928,Attempt to approve a request that is not in pending status,0,0,0
comments.json_6929,Add a  Records Release Bean,0,0,0
comments.json_6930,Get a records release bean for patient 102,0,0,0
comments.json_6931,There should be no  DB Exception,0,0,0
comments.json_6932,Get the request id,0,0,0
comments.json_6933,Deny the records release,0,0,0
comments.json_6934,Make sure that the records release status is properly updated,0,1,1
comments.json_6935,There should be no  DB Exception,0,0,0
comments.json_6936,Attempt to deny a request that is not in pending status,0,0,0
comments.json_6937,Create and add a new  Records Release Bean to test with,0,0,0
comments.json_6938,Get a records release bean for patient 102,0,0,0
comments.json_6939,There should be no  DB Exception,0,0,0
comments.json_6940,Attempt to approve and deny a release request,0,0,0
comments.json_6941,Attempt to get all hospitals and ensure an empty list is returned,0,0,0
comments.json_6942,Attempt to get a patient name with a dirty factory,0,0,0
comments.json_6943,Attempt to get a hospital name with a dirty factory,0,0,0
comments.json_6944,Attempt to get a list of requested health records with a dirty factory,0,0,0
comments.json_6945,Attempt to get a doctor 's name with a dirty factory,0,0,0
comments.json_6946,Try running the test with a non existent patient,0,0,0
comments.json_6947,Get hospital name for hospital id 1,0,0,0
comments.json_6948,Fail if there is a  DB Exception,0,1,1
comments.json_6949,Test that the name the action method gets is the same,0,1,1
comments.json_6950,Clear the db tables,0,0,0
comments.json_6951,Fail if there is an exception,0,1,1
comments.json_6952,Test that a blank string is returned if there is no hospital with the given id,0,1,1
comments.json_6953,Create a list of requests,0,0,0
comments.json_6954,Add a non pending release,0,0,0
comments.json_6955,Add a  Records Release Bean,0,0,0
comments.json_6956,Assert that the method returns a list with at least one hospital,0,0,0
comments.json_6957,Check that the all the health records are from hospital 1,0,0,0
comments.json_6958,If a  DB Exception occurs fail,0,0,0
comments.json_6959,Get  Kelly  Doctor 's name,0,0,0
comments.json_6960,Get  Shelly  Vang 's name,0,0,0
comments.json_6961,Tests for viewing a patient 's sleep diary,0,1,1
comments.json_6962,Clears all of the tables   gets the standard data   and includes the data for use cases 68 and 69,0,0,0
comments.json_6963,Clears all of the tables,0,0,0
comments.json_6964,Log in as the  HCP  Duyu  Ivanlyft who does have the specialty of trainer  so she should be able to view sleep entries. View the Sleep Entries for Patient Random Person who has some sleep entries already in their diary.,0,0,0
comments.json_6965,now that we know we have 2 of them   make sure they are the,0,1,1
comments.json_6966,right ones,0,0,0
comments.json_6967,now check the totals,0,0,0
comments.json_6968,Test that a patient can view their sleep diary .,0,1,1
comments.json_6969,now that we know we have 2 of them  ,0,0,0
comments.json_6970,make sure they are the right ones,0,1,1
comments.json_6971,now check the totals,0,0,0
comments.json_6972,Ensures a patient can still view their sleep diary even when it is empty .,0,1,1
comments.json_6973,Ensures  HC Ps with specialty of trainer can still view a sleep diary even when the sleep diary is empty.,0,1,1
comments.json_6974,Ensure patients can 't view the sleep diary of other patients .,0,1,1
comments.json_6975,Testing that we can get the diary when we are searching for range of dates,0,1,1
comments.json_6976,now that we know we have 1 of them   make sure they are the,0,1,1
comments.json_6977,right ones,0,0,0
comments.json_6978,now check the totals,0,0,0
comments.json_6979,Test bounded diary with bad dates,0,1,1
comments.json_6980,Test with a bad factory,0,1,1
comments.json_6981,Test with a bad factory,0,1,1
comments.json_6982,Test with a bad factory,0,1,1
comments.json_6983,Test with a bad factory,0,1,1
comments.json_6984,Try to get a bounded exercise diary of other patient .,0,0,0
comments.json_6985,Try to get a bounded exercise diary totals of other patient .,0,0,0
comments.json_6986,Enter in start date after end date,0,0,0
comments.json_6987,Enter in start date after end date for the totals,0,0,0
comments.json_6988,difference,0,0,0
comments.json_6989,difference,0,0,0
comments.json_6990,Test class for the  View Visited HC Ps Action class .,0,1,1
comments.json_6991,Get all visited  HC Ps without any filtering .,0,0,0
comments.json_6992,Get all visited  HC Ps without any filtering .,0,0,0
comments.json_6993,Get all visited  HC Ps without any filtering . ( The empty strings are,0,0,0
comments.json_6994,ignored .),0,0,0
comments.json_6995,Get all visited  HC Ps without any filtering . ( The nulls are ignored .),0,0,0
comments.json_6996,Filter on last name and specialty .,0,0,0
comments.json_6997,Filter on last name only .,0,0,0
comments.json_6998,Filter on specialty only .,0,0,0
comments.json_6999,Filter on zip only .,0,0,0
comments.json_7000,this just sets the value for a method call (kinda hard coding  I assume ),0,0,0
comments.json_7001,TODO,0,0,0
comments.json_7002,Test comparing the distances,0,1,1
comments.json_7003,Gets all of the standard data and initializes 2 zipcode actions,0,0,0
comments.json_7004,Tests comparing two things,0,1,1
comments.json_7005,TODO  Auto -generated catch block,0,0,0
comments.json_7006,Tests when we have an evil factory we get an exception,0,1,1
comments.json_7007,TODO  Auto -generated catch block,0,0,0
comments.json_7008,Tests that we get an error when we drop the tables and try to compare stuff,0,1,1
comments.json_7009,Test of the  Reviews Bean Loader   for creating /building a  Reviews Bean,0,1,1
comments.json_7010,unused currently,0,0,0
comments.json_7011,Test the  Reviews Bean Loader 's load List () method,0,1,1
comments.json_7012,Test the  Reviews Bean Loader load Single () method .,0,1,1
comments.json_7013,set -up the  Result Set,0,0,0
comments.json_7014,load the bean,0,0,0
comments.json_7015,check all fields in bean are loaded properly,0,1,1
comments.json_7016,Tests the  Reviews Bean Loader load Parameter () method .,0,1,1
comments.json_7017,The order of the following statements is important .,0,0,0
comments.json_7019,test Hospital Bean,0,1,1
comments.json_7020,test Full Constrcutor,0,1,1
comments.json_7021,Test for  Label Bean,0,1,1
comments.json_7022,Test for a bean .,0,1,1
comments.json_7023,this just sets the value for a method call (kinda hard coding  I assume ),0,0,0
comments.json_7024,TODO,0,0,0
comments.json_7025,In order to set the  LP as viewed by patient   the status must be completed .,0,0,0
comments.json_7026,test Get Numerical Result Unit,0,1,1
comments.json_7027,test Get Numerical Result As Double,0,1,1
comments.json_7028,test Get Upper Bound As Double,0,1,1
comments.json_7029,test Get Lower Bound As Double,0,1,1
comments.json_7030,now   check that if  I change one the comparison fails,0,0,0
comments.json_7031,make a bean with improperly formatted dates,0,0,0
comments.json_7032,make a bean with null dates,0,0,0
comments.json_7033,Allowed value for the difference of two 'equivalent ' doubles .,0,0,0
comments.json_7034,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7035,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7036,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7037,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7038,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7039,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7040,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7041,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7042,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7043,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7044,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7045,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7046,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7047,Make a bean with an invalid date,0,0,0
comments.json_7048,Won 't happen,0,0,0
comments.json_7049,Won 't happen,0,0,0
comments.json_7050,Won 't happen,0,0,0
comments.json_7051,Won 't happen,0,0,0
comments.json_7052,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7053,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7054,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7055,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7056,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7057,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7058,Allowed value for the difference of two 'equivalent ' doubles .,0,0,0
comments.json_7059,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7060,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7061,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7062,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7063,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7064,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7065,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7066,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7067,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7068,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7069,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7070,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7071,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7072,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7073,assert False (bean 1.hash Code () == (bean 2.hash Code ()));,0,0,0
comments.json_7074,Make a bean with an invalid date,0,0,0
comments.json_7076,test Age Zero,0,1,1
comments.json_7077,test Age 10,0,1,1
comments.json_7078,test Bean,0,1,1
comments.json_7079,test Get Change Date,0,1,1
comments.json_7081,set UP,0,0,0
comments.json_7082,test OV Date,0,1,1
comments.json_7083,test Patient Name,0,1,1
comments.json_7084,test Address,0,1,1
comments.json_7085,test Patient,0,1,1
comments.json_7087,test Prescription Equals,0,1,1
comments.json_7089,test Procedure Bean,0,1,1
comments.json_7090,Tests the comparator for ratings,0,1,1
comments.json_7091,Gets the standard data and initializes a review action,0,0,0
comments.json_7092,Tests the comparator of two things,0,1,1
comments.json_7093,TODO  Auto -generated catch block,0,0,0
comments.json_7094,Test pending status,0,1,1
comments.json_7095,Test approved status,0,1,1
comments.json_7096,Test denied status,0,1,1
comments.json_7097,Test invalid status number,0,1,1
comments.json_7098,test setters,0,1,1
comments.json_7099,confirm with getters,0,0,0
comments.json_7100,Test that the cpt Code is properly set and gotten,0,1,1
comments.json_7101,Test that the description is properly set and gotten,0,1,1
comments.json_7102,Test that the age group is properly set and gotten,0,1,1
comments.json_7103,Test that the attribute is properly set and gotten,0,1,1
comments.json_7104,Test that the age group is properly set and gotten,0,1,1
comments.json_7105,Test of the  Reviews Bean Loader   for creating /building a  Reviews Bean,0,1,1
comments.json_7106,unused currently,0,0,0
comments.json_7107,Test the  Reviews Bean Loader 's load List () method,0,1,1
comments.json_7108,Test the  Reviews Bean Loader load Single () method .,0,1,1
comments.json_7109,set -up the  Result Set,0,0,0
comments.json_7110,load the bean,0,0,0
comments.json_7111,check all fields in bean are loaded properly,0,0,0
comments.json_7112,Tests the  Reviews Bean Loader load Parameter () method .,0,1,1
comments.json_7113,test setters,0,1,1
comments.json_7114,confirm with getters,0,0,0
comments.json_7116,build a bean and stuff in some data,0,0,0
comments.json_7117,now test the getters,0,1,1
comments.json_7118,Ward Bean Loader Test,0,1,1
comments.json_7119,set Up,0,0,0
comments.json_7120,test Load List,0,1,1
comments.json_7121,TODO,0,0,0
comments.json_7122,testload Single,0,1,1
comments.json_7123,TODO,0,0,0
comments.json_7124,test Load Parameters,0,1,1
comments.json_7125,TODO,0,0,0
comments.json_7126,TODO,0,0,0
comments.json_7127,Ward Bean Test,0,0,0
comments.json_7128,set Up,0,0,0
comments.json_7129,test Ward ID,0,1,1
comments.json_7130,test Specialty,0,1,1
comments.json_7131,test In Hospital,0,1,1
comments.json_7132,test Equals,0,1,1
comments.json_7133,Ward Room Bean Loader,0,0,0
comments.json_7134,set Up,0,0,0
comments.json_7135,test Load List,0,1,1
comments.json_7136,TODO,0,0,0
comments.json_7137,testload Single,0,1,1
comments.json_7138,TODO,0,0,0
comments.json_7139,test Load Parameters,0,1,1
comments.json_7140,TODO,0,0,0
comments.json_7141,Ward Room Bean Test,0,1,1
comments.json_7142,set Up,0,0,0
comments.json_7143,test Room ID,0,1,1
comments.json_7144,test Occupied By,0,1,1
comments.json_7145,test In Ward,0,1,1
comments.json_7146,test Room Name,0,1,1
comments.json_7147,test Room Status,0,1,1
comments.json_7148,test Equals,0,1,1
comments.json_7149,Test for  Zip Code Bean,0,1,1
comments.json_7150,Test for a bean .,0,1,1
comments.json_7151,this just sets the value for a method call (kinda hard coding  I assume ),0,0,0
comments.json_7152,TODO,0,0,0
comments.json_7153,just testing the building process - test the bean validation elsewhere !,0,1,1
comments.json_7155,test Produce Dataset,0,1,1
comments.json_7156,test Produce Dataset 2,0,1,1
comments.json_7157,CSV Format Exception is good here,0,0,0
comments.json_7158,Other exceptions are bad,0,0,0
comments.json_7160,test Change Timeout,0,1,1
comments.json_7161,test Update Bad Timeout,0,1,1
comments.json_7162,Test privacy level Test privacy level with access and without no access,0,1,1
comments.json_7163,updated to reflect the new way add Allergy updates allergy DAO .,0,0,0
comments.json_7164,updated to reflect the new way add Allergy updates allergy DAO .,0,0,0
comments.json_7165,Success !,0,0,0
comments.json_7166,Success !,0,0,0
comments.json_7167,Success !,0,0,0
comments.json_7168,Success !,0,0,0
comments.json_7169,Success !,0,0,0
comments.json_7170,Success !,0,0,0
comments.json_7171,Success !,0,0,0
comments.json_7172,Success !,0,0,0
comments.json_7173,Ensure that the password returned is the one given to the method,0,1,1
comments.json_7174,Ensure that the password returned is the one given to the method,0,1,1
comments.json_7175,no need to do it *exactly * if we have -10s and +10s ; we don 't need that level of accuracy,0,0,0
comments.json_7176,also doing  BVA - make it 10s less than the timeout time,0,0,0
comments.json_7177,for  BVA here   make it 10s greater than the timeout time,0,0,0
comments.json_7178,Reset Password Test,0,0,0
comments.json_7179,test Reset Password,0,1,1
comments.json_7180,assert Equals ( Digest Utils .sha 256 Hex ("pw ")  get Password (2 L ));authDAO.resetPassword(2L  "password");assertEquals(DigestUtils.sha256Hex("password")  getPassword(2L));,0,0,0
comments.json_7181,sanity check of the current user password,0,0,0
comments.json_7182,reset the password,0,0,0
comments.json_7183,check that the password is truly reset,0,1,1
comments.json_7184,test Reset Password Non Existent,0,1,1
comments.json_7185,Still runs with no exception - that 's the expected behavior,0,0,0
comments.json_7186,test Reset Security Question Answer,0,1,1
comments.json_7187,test Get No Security Answer,0,1,1
comments.json_7188,test Get No Security Question,0,1,1
comments.json_7189,Auto Increment Test,0,1,1
comments.json_7190,test No Icrement Collision,0,1,1
comments.json_7191,See ? It 's on a per -connection basis . Nothing to worry about .,0,0,0
comments.json_7192,TODO,0,0,0
comments.json_7199,Tests that you get the correct number of unpaid bills .,0,1,1
comments.json_7205,if these fail then the gets do not work   and neither do the sets ! : D,0,0,0
comments.json_7206,Success !,0,0,0
comments.json_7207,SUCCESS !,0,0,0
comments.json_7208,if these fail then the gets do not work   and neither do the sets ! : D,0,0,0
comments.json_7209,Success !,0,0,0
comments.json_7210,SUCCESS !,0,0,0
comments.json_7211,if these fail then the gets do not work   and neither do the sets ! : D,0,0,0
comments.json_7212,Success !,0,0,0
comments.json_7213,SUCCESS !,0,0,0
comments.json_7214,if these fail then the gets do not work   and neither do the sets ! : D,0,0,0
comments.json_7215,Success !,0,0,0
comments.json_7216,SUCCESS !,0,0,0
comments.json_7217,Show that the production driver can 't be access during a unit test,0,0,0
comments.json_7218,Should never be able to do this because  J Unit is not running under  Tomcat,0,0,0
comments.json_7219,The following test uses an advanced concept not taught in  CSC 326 at  NCSU called  Mock  Objects .,0,0,0
comments.json_7220,Feel free to take a look at how this works   but know that you will not need to know mock objects,0,0,0
comments.json_7221,to do nearly everything in i Trust . Unless your assignment mentions mock objects somewhere   you should,0,0,0
comments.json_7222,not need them .,0,0,0
comments.json_7224,But   if you are interested in a cool unit testing concept   feel free to look at this code as an,0,0,0
comments.json_7225,example .,0,0,0
comments.json_7227,This class uses the  Easy Mock library to manage the mock objects . http ://easymock .org /,0,0,0
comments.json_7228,Good job   it works,0,0,0
comments.json_7229,Good job   it works,0,0,0
comments.json_7230,Tests that the dao throws exceptions when created with bad factory,0,1,1
comments.json_7231,Clears all of the tables   sets the standard data and includes the data for use cases 68 and 69,0,0,0
comments.json_7232,Clears all of the tables,0,0,0
comments.json_7233,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7234,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7235,Note that you don 't get  Patient 9,0,0,0
comments.json_7236,make a bean,0,0,0
comments.json_7237,add the bean,0,0,0
comments.json_7238,set the flag to true,0,0,0
comments.json_7239,assert it exists by  OID,0,0,0
comments.json_7240,Tests that the dao throws exceptions when created with bad factory,0,1,1
comments.json_7241,Clears all of the tables   sets the standard data and includes the data for use cases 68 and 69,0,0,0
comments.json_7242,gen .uc 68(); //uc 68 is now a part of standard Data,0,0,0
comments.json_7243,Clears all of the tables,0,0,0
comments.json_7244,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7245,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7246,Test  Hostipal  DAO,0,1,1
comments.json_7247,Test  All hospital test Get HospitalFromEmptyTable test GetHospital test AddDupe testUpdateName,0,1,1
comments.json_7248,All hospitals in alphabetical order .,0,0,0
comments.json_7249,Generate the standard data set,0,0,0
comments.json_7250,Fail if there 's an exception,0,0,0
comments.json_7251,Test that the get All Patient Hospitals () method returns a nonempty list for,0,1,1
comments.json_7252,patient 102,0,0,0
comments.json_7253,Fail if there 's a  DB Exception,0,0,0
comments.json_7254,Test the method with a dirty factory,0,1,1
comments.json_7255,Fail if no excepion is thrown,0,0,0
comments.json_7256,Test passed,0,1,1
comments.json_7257,Tests that the dao throws exceptions when created with bad factory,0,1,1
comments.json_7258,Clears all of the tables   sets the standard data and includes the data for use cases 68 and 69,0,0,0
comments.json_7259,Clears all of the tables,0,0,0
comments.json_7260,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7261,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7262,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7263,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7264,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7266,test Get All Lab Procedures,0,1,1
comments.json_7267,test Fail Get Lab Procedures,0,1,1
comments.json_7268,test Get All Lab Procedures LOINIC,0,1,1
comments.json_7269,first procedure,0,0,0
comments.json_7270,first procedure,0,0,0
comments.json_7271,test Get All Lab Procedures LOINC 2,0,1,1
comments.json_7272,test Update Rights,0,1,1
comments.json_7273,test Remove Lab Procedure,0,1,1
comments.json_7274,test Get Lab Procedures In Tranist For Lab Tech,0,1,1
comments.json_7275,test Get Lab Procedures Received For Lab Tech,0,1,1
comments.json_7276,test Get Lan Procedures Testing For Lab Tech,0,1,1
comments.json_7277,test Submite Test Results,0,1,1
comments.json_7278,test Submit Received LP,0,1,1
comments.json_7279,test Set LP To Testing,0,1,1
comments.json_7282,Tests that the dao throws exceptions when created with bad factory,0,1,1
comments.json_7283,Clears all of the tables   sets the standard data and includes the data for use cases 68 and 69,0,0,0
comments.json_7284,Clears all of the tables,0,0,0
comments.json_7285,test Normal,0,1,1
comments.json_7286,this means our getters or setters are failing if they fail   which is silly if they are .,0,0,0
comments.json_7287,testevil Normal,0,1,1
comments.json_7288,this means our getters or setters are failing if they fail   which is silly if they are .,0,0,0
comments.json_7289,WOOOOOOOO,0,0,0
comments.json_7290,make a bean,0,0,0
comments.json_7291,add the bean,0,0,0
comments.json_7292,edit the bean,0,0,0
comments.json_7293,assert it exists by  OID,0,0,0
comments.json_7294,also assert it exists if gathered by  MID,0,0,0
comments.json_7295,get a single record,0,0,0
comments.json_7296,get all obstetrics records,0,0,0
comments.json_7297,get a record by  MID and preg Id,0,0,0
comments.json_7298,Test the validate function,0,1,1
comments.json_7299,Add some preexisting conditions,0,0,0
comments.json_7300,Get the preexisting conditions we added,0,0,0
comments.json_7301,TODO,0,0,0
comments.json_7302,Test  Edit  Prescription,0,1,1
comments.json_7303,Test all office visit,0,1,1
comments.json_7304,Note that that "all office visits " doesn 't return the procedures   etc . since it 's not needed (yet ),0,0,0
comments.json_7305,Now check the order,0,0,0
comments.json_7306,Test  prescriptions,0,1,1
comments.json_7307,test Get Prescriptions,0,1,1
comments.json_7308,test Get With Not Right PID,0,1,1
comments.json_7309,Test office visit with exception  DAO,0,1,1
comments.json_7310,private  Diagnoses DAO evil DAO = Evil DAO Factory .get Evil Instance ().get Diagnoses DAO ();,0,0,0
comments.json_7311,wrong patient,0,0,0
comments.json_7312,Test client diagnoses,0,1,1
comments.json_7313,test Add Remove One OV Diagnosis,0,1,1
comments.json_7314,test Add Bad Diagnosis,0,1,1
comments.json_7315,TODO,0,0,0
comments.json_7316,test Edit Bad Diagnosis,0,1,1
comments.json_7317,TODO,0,0,0
comments.json_7318,test Get Statistics Valid,0,1,1
comments.json_7319,test Get Weekly Statistics Valid,0,1,1
comments.json_7320,If previous test fails   this test may fail,0,0,0
comments.json_7321,test Malaria,0,1,1
comments.json_7322,Test client  OV medications,0,1,1
comments.json_7323,test Add Remove One OV Prescription,0,1,1
comments.json_7324,test Override Prescription,0,1,1
comments.json_7325,test Add Bad Prescription,0,1,1
comments.json_7326,TODO,0,0,0
comments.json_7327,test Add Multiple Remove Single,0,1,1
comments.json_7328,test Remove Non Existant,0,1,1
comments.json_7329,Test client  OV procedure,0,1,1
comments.json_7330,test Add Remove One OV Procedure,0,1,1
comments.json_7331,test Add Bad Procedure,0,1,1
comments.json_7332,TODO,0,0,0
comments.json_7333,test Edit Bad Procedure,0,1,1
comments.json_7334,TODO,0,0,0
comments.json_7335,Adam  Sandler   MID 300,0,0,0
comments.json_7336,Will  Smith   MID 302,0,0,0
comments.json_7337,Adam  Sandler   MID 300,0,0,0
comments.json_7338,Charlie  Chaplin   MID 308,0,0,0
comments.json_7339,Adam  Sandler   MID 300,0,0,0
comments.json_7340,Charlie  Chaplin   MID 308,0,0,0
comments.json_7341,Test update office visit,0,1,1
comments.json_7342,test Update New Office Visit,0,1,1
comments.json_7343,TODO,0,0,0
comments.json_7344,Make the test bean,0,0,0
comments.json_7345,edit the bean,0,0,0
comments.json_7346,get a single record,0,0,0
comments.json_7347,get all ophthalmology records,0,0,0
comments.json_7348,Make the test bean,0,0,0
comments.json_7349,Won 't happen,0,0,0
comments.json_7350,edit the bean,0,0,0
comments.json_7351,get a single record,0,0,0
comments.json_7352,get all ophthalmology records by doctor,0,0,0
comments.json_7353,get all ophthalmology records by patient,0,0,0
comments.json_7354,Make the test bean,0,0,0
comments.json_7355,edit the bean,0,0,0
comments.json_7356,get a single record,0,0,0
comments.json_7357,get all obstetrics records,0,0,0
comments.json_7358,2 represents 1  but not 4,0,0,0
comments.json_7359,Add patient 4 to be represented by patient 2,0,0,0
comments.json_7360,Ensure the representatives were added correctly,0,1,1
comments.json_7361,Remove all patient 's from being represented by patient 2,0,0,0
comments.json_7362,Assert that no more patients are represented by patient 2,0,0,0
comments.json_7363,Test with an evil factory,0,1,1
comments.json_7364,Successful test,0,1,1
comments.json_7365,2 represents 1 but 1 is not a dependent,0,0,0
comments.json_7366,so the size should be zero,0,0,0
comments.json_7367,We wanted to test get Dependents when a users is Dependent field is 1,0,1,1
comments.json_7368,but the current test generator does not have any patients with this,0,0,0
comments.json_7369,attribute .,0,0,0
comments.json_7370,empty database,0,0,0
comments.json_7371,load one patient instructions record,0,0,0
comments.json_7372,should still return none when there are no records with the given id,0,0,0
comments.json_7373,empty database,0,0,0
comments.json_7374,empty database,0,0,0
comments.json_7375,Editing a non existent record doesn 't do anything .,0,0,0
comments.json_7376,load one patient instructions record,0,0,0
comments.json_7377,Empty database .,0,0,0
comments.json_7378,Patient 5 has one office visit with instructions .,0,0,0
comments.json_7379,Ensure it only returns the one office visit with patient,0,1,1
comments.json_7380,instructions assigned to patient 5.,0,0,0
comments.json_7381,Patient 5 has two office visits   one with instructions .,0,0,0
comments.json_7382,Patient 5 has two office visits   both with instructions,0,0,0
comments.json_7383,Ensure it returns both offices visit with patient instructions,0,1,1
comments.json_7384,assigned to patient 5.,0,0,0
comments.json_7385,Patient 7 has an office visit   but no patient instructions .,0,0,0
comments.json_7386,Check that empty list is returned with bad id even when items are in  DB .,0,1,1
comments.json_7388,test Get Personnel 2,0,1,1
comments.json_7389,test Edit Personnel 2,0,1,1
comments.json_7390,test Get Non Existent Personnel,0,1,1
comments.json_7391,test Edit Personall Zip Code,0,1,1
comments.json_7392,test Edit Personnel Speciality,0,1,1
comments.json_7393,test Get Personnel,0,1,1
comments.json_7394,Already checked the loader   now check that it got the right second,0,1,1
comments.json_7395,record,0,0,0
comments.json_7396,Records Release DAO Test,0,0,0
comments.json_7397,test Add Records Release,0,1,1
comments.json_7398,test Update Records Release,0,1,1
comments.json_7399,test Get Records Release By ID,0,1,1
comments.json_7400,test Get All Health Records By Hospital,0,1,1
comments.json_7401,test Get All Health Records By Pid,0,1,1
comments.json_7402,test DB Exception,0,1,1
comments.json_7403,Fail if exception isn 't caught,0,0,0
comments.json_7404,TODO,0,0,0
comments.json_7405,Fail if exception isn 't caught,0,0,0
comments.json_7406,TODO,0,0,0
comments.json_7407,Fail if exception isn 't caught,0,0,0
comments.json_7408,TODO,0,0,0
comments.json_7409,Fail if exception isn 't caught,0,0,0
comments.json_7410,TODO,0,0,0
comments.json_7411,Fail if exception isn 't caught,0,0,0
comments.json_7412,TODO,0,0,0
comments.json_7414,test Store Retrieve Patient Normal Data,0,1,1
comments.json_7415,test Get Monitoring HC Ps,0,1,1
comments.json_7416,test Bad Store Retrieve Patient Normal Data Bad,0,1,1
comments.json_7417,test Bad Store Retrieve Patient Glucose Only Data Bad,0,1,1
comments.json_7418,test Bad Store Retrieve Patient BP Only Data Bad,0,1,1
comments.json_7419,test Get Telemadicine Bean,0,1,1
comments.json_7420,test Validate PR,0,1,1
comments.json_7421,test Validate PR Error,0,1,1
comments.json_7422,test Remove Patient From List Bad,0,1,1
comments.json_7424,Reviews DAO instance for testing,0,0,0
comments.json_7425,test instance of beans for testing,0,1,1
comments.json_7426,Provide setup for the rest of the tests ; initialize all globals .,0,0,0
comments.json_7427,Tests adding a review to the reviews Table by comparing sizes of lists. Pre-condition: assuming the ReviewsDAO.getAllReviews() works AND setup is run between ea test.,0,1,1
comments.json_7428,sanity check for the initial size of the entries in the reviews table,0,1,1
comments.json_7429,try adding a valid bean,0,0,0
comments.json_7430,check the number of reviews table entries went up by 1,0,1,1
comments.json_7431,Tests getting reviews from a current database for a given HCP.,0,1,1
comments.json_7432,test getting reviews for  Kelly  Doctor,0,1,1
comments.json_7433,test getting reviews for  Gandolf  Stormcloud,0,1,1
comments.json_7434,Tests that  ALL in table reviews are retrieved when called .,0,1,1
comments.json_7435,Tests that overall rating averages are returned for ea HCP.,0,1,1
comments.json_7436,expected average rating for  Kelly  Doctor,0,0,0
comments.json_7437,expected average rating for  Gandolf  Stomcloud,0,0,0
comments.json_7438,Tests that a  Patient can  ONLY review a  Physician they have previously seen .,0,1,1
comments.json_7439,Tests when it should not work  ,0,1,1
comments.json_7440,for  Patient  Tom  Nook and  HCP  Gandolf  Stormcloud,0,0,0
comments.json_7441,Tests when it should be added  ,0,1,1
comments.json_7442,for  Patient  Tom  Nook and  HCP  Kelly  Doctor,0,0,0
comments.json_7443,Tests adding an invalid review,0,1,1
comments.json_7444,Tests getting reviews with invalid dao,0,1,1
comments.json_7445,Tests getting all of the reviews with invalid dao,0,1,1
comments.json_7446,Tests getting the total average rating with invalid dao,0,1,1
comments.json_7447,Tests that the dao throws exceptions when created with bad factory,0,1,1
comments.json_7448,Clears all of the tables   sets the standard data and includes the data for use cases 68 and 69,0,0,0
comments.json_7449,Clears all of the tables,0,0,0
comments.json_7450,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7451,Testing when you are using an evil dao . looking for it to throw exceptions,0,1,1
comments.json_7452,order by code asc but field isn 't numerical   so codes will  NOT be,0,0,0
comments.json_7453,in  NUMERICAL ascending order ...,0,0,0
comments.json_7454,(unless codes are switched to fixed width ),0,0,0
comments.json_7455,success,0,0,0
comments.json_7456,order by code asc but field isn 't numerical   so codes will  NOT be,0,0,0
comments.json_7457,in  NUMERICAL ascending order ...,0,0,0
comments.json_7458,(unless codes are switched to fixed width ),0,0,0
comments.json_7459,Tests that a survey was added correctly by adding it to the database and then retrieving the information .,0,1,1
comments.json_7460,all this data would generally be set in the  JSP,0,0,0
comments.json_7461,all this data would generally be set in the  JSP,0,0,0
comments.json_7462,Daniel  Rice adding for 80% statement coverage,0,0,0
comments.json_7464,note - testing the actual loader is done elsewhere . Just check that we 're getting the right,0,1,1
comments.json_7465,ones here,0,0,0
comments.json_7466,that last one inserted should be last because it was backdated,0,0,0
comments.json_7467,Tests to see if the right  MID number shows up in the secondary MID column in the transaction Log .,0,1,1
comments.json_7468,Operational Profile Test,0,0,0
comments.json_7469,test Get Operational Profile,0,1,1
comments.json_7470,test Operation Profile Exception,0,1,1
comments.json_7471,Currently only tests missed -last -year 's -flu -shot half of flu shot methods (only includes static data ) Testing for month decision is in DateUtil tests,0,1,1
comments.json_7472,We need to account for "today " changing . Note that tests should  NOT normally have if -statements in them.,0,0,0
comments.json_7473,otherwise we are in [ Jan   Aug ],0,0,0
comments.json_7474,otherwise we are in [ Jan   Aug ],0,0,0
comments.json_7475,Ward DAO Test,0,0,0
comments.json_7476,set Up,0,0,0
comments.json_7477,testget All Wards By Hospital ID,0,1,1
comments.json_7478,TODO,0,0,0
comments.json_7479,TODO,0,0,0
comments.json_7480,test Add Ward,0,1,1
comments.json_7481,TODO,0,0,0
comments.json_7482,TODO,0,0,0
comments.json_7483,TODO,0,0,0
comments.json_7484,test Update Ward,0,1,1
comments.json_7485,TODO,0,0,0
comments.json_7486,TODO,0,0,0
comments.json_7487,test Remove Ward,0,1,1
comments.json_7488,TODO,0,0,0
comments.json_7489,TODO,0,0,0
comments.json_7490,testget All Ward Rooms By Ward ID,0,1,1
comments.json_7491,TODO,0,0,0
comments.json_7492,TODO,0,0,0
comments.json_7493,test Add Ward Room,0,1,1
comments.json_7494,TODO,0,0,0
comments.json_7495,TODO,0,0,0
comments.json_7496,TODO,0,0,0
comments.json_7497,test Update Ward Room,0,1,1
comments.json_7498,TODO,0,0,0
comments.json_7499,TODO,0,0,0
comments.json_7500,test Remove Ward Room,0,1,1
comments.json_7501,TODO,0,0,0
comments.json_7502,TODO,0,0,0
comments.json_7503,testget All Wards By HCP,0,1,1
comments.json_7504,TODO,0,0,0
comments.json_7505,TODO,0,0,0
comments.json_7506,testget All HC Ps Assigned To Ward,0,1,1
comments.json_7507,TODO,0,0,0
comments.json_7508,TODO,0,0,0
comments.json_7509,test Assign HCP To Ward,0,1,1
comments.json_7510,TODO,0,0,0
comments.json_7511,TODO,0,0,0
comments.json_7512,TODO,0,0,0
comments.json_7513,test Remove Ward 2,0,1,1
comments.json_7514,TODO,0,0,0
comments.json_7515,TODO,0,0,0
comments.json_7516,test Update Ward Room Occupant,0,0,0
comments.json_7517,TODO,0,0,0
comments.json_7518,TODO,0,0,0
comments.json_7519,test Get Ward Rooms By Status,0,1,1
comments.json_7520,TODO,0,0,0
comments.json_7521,TODO,0,0,0
comments.json_7522,test Get Ward Room,0,1,1
comments.json_7523,TODO,0,0,0
comments.json_7524,TODO,0,0,0
comments.json_7525,test Get Hospital By Ward,0,1,1
comments.json_7526,TODO,0,0,0
comments.json_7527,TODO,0,0,0
comments.json_7528,This  Test Data Generator class is in charge of centralizing all of the test data calls. Most of the SQL is in the sql/something.sql files. A few design conventions: <ul> <li>Any time you're using this class  be sure to run the "clearAllTables" first. This is not a very slow method (it's actually quite fast) but it clears all of the tables so that no data from a previous test can affect your current test.</li> <li>We do not recommend having one test method call another test method (except "standardData" or other intentionally "meta" methods). For example  loincs() should not call patient1() first. Instead  put BOTH patient1() and loincs() in your test case. If we keep this convention  then every time you call a method  you know that ONLY your sql file is called and nothing else. The alternative is a lot of unexpected  extraneous calls to some test methods like patient1().</li> </ul>,0,0,0
comments.json_7529,Adds  HCP  Curious  George for testing purposes .,0,1,1
comments.json_7530,Adds  HCP  John  Zoidberg for testing purposes .,0,0,0
comments.json_7531,Adds  HCP  Brooke  Tran with  Specialty  Optometrist .,0,0,0
comments.json_7532,Adds  HCP  Lamar  Bridges with  Specialty  Ophthalmologist .,0,0,0
comments.json_7533,Adds drugs  Midichlominene and  Midichlomaxene for  UC 10 and  UC 37 testing purposes.,0,0,0
comments.json_7534,Set up the outcome of  Acceptance  Scenario 1 of  UC 83  which results in the creation of an  Ophthalmology office visit for  Brody  Franco .,0,0,0
comments.json_7535,Set up the outcome of  Acceptance  Scenario 2 of  UC 83  which results in the creation of an  Ophthalmology office visit for  Freya  Chandler .,0,0,0
comments.json_7536,Set up the preconditions for  Acceptance  Scenario 3 of  UC 84  which results in the creation of an  Ophthalmology office visit for dependent  Brittany  Franco .,0,0,0
comments.json_7537,Set up the preconditions for  Acceptance  Scenario 2 of  UC 88  which results in the creation of an  Ophthalmology  Office  Visit  Request for  Brody  Franco .,0,0,0
comments.json_7538,Adds patient  Dare  Devil for testing purposes .,0,0,0
comments.json_7539,Adds patient  Devils  Advocate for testing purposes .,0,0,0
comments.json_7540,Adds patient  Trend  Setter for testing purposes .,0,0,0
comments.json_7541,Adds patient  Philip  Fry for testing purposes .,0,0,0
comments.json_7542,Adds patient  Brody  Franco   used in the testing of  UC 83.,0,0,0
comments.json_7543,Adds patient  Freya  Chandler   used in the testing of  UC 83.,0,0,0
comments.json_7544,Adds patient  Brittany  Franco   used in the testing of  UC 84.,0,0,0
comments.json_7545,Adds patient  James  Franco   used in the testing of  UC 84.,0,0,0
comments.json_7546,Adds patient  Anakin  Skywalker for  UC 10 and  UC 37 testing purposes .,0,0,0
comments.json_7547,create patients  Dare  Devil and  Devils  Advocate,0,0,0
comments.json_7548,Devils  Advocate is  Dare  Devil 's  Personal  Representative,0,0,0
comments.json_7549,Adds additional  DLHC Ps to certain patients . MID DLHCPs --- ------ 1 9000000000  9000000003,0,0,0
comments.json_7550,Generate test data for uc 51 acceptance scenarios,0,0,0
comments.json_7551,Generate test data for uc 52 acceptance scenarios,0,0,0
comments.json_7552,Generate test data for cdc health statistics,0,0,0
comments.json_7553,Added so that the black box test plans for  Use  Case 32 can be run immediately after running  Test Data Generator,0,0,0
comments.json_7554,Added for  UC 83,0,0,0
comments.json_7555,Added for  UC 86,0,0,0
comments.json_7556,Generate records release data for uc56 acceptance scenarios Includes recordsrelease table data and UAP-HCP relations,0,0,0
comments.json_7557,Generate dependency data for uc 58 acceptance . Create a dependent user   a representative user  and establish representative relationship between the two.,0,0,0
comments.json_7558,Generate dependency data for uc 59 acceptance . Create a dependent user and a representative user,0,0,0
comments.json_7559,Generate dependency data for uc 60 acceptance . Create a  Patient and a  HCP to bill the patient. Create a billed office visit the patient can view.,0,0,0
comments.json_7560,Generate dependency data for uc 63 acceptance . Create two  HC Ps who are OB/GYNs Create seven new patients Give one patient a past pregnancy,0,0,0
comments.json_7561,Generate dependency data for uc 68 and uc 69 acceptance . Create 3 patients and one hcp nutrionist. Patient Derek Morgan has no prior food diary entries. Patient Jennifer Jareau has 2 prior food diary entries. Patient Aaron Hotchner as 2 prior food diary entries. HCP Spencer Reid is a nutrition specialist. Give 2 of the 3 patients food diary information,0,0,0
comments.json_7562,Inserts the user  Emily  Prentiss into the system and gives her one food diary entry.,0,0,0
comments.json_7563,Inserts the user  Emily  Prentiss into the system and gives her one food diary entry.,0,0,0
comments.json_7564,Generate dependency data for uc 63 acceptance . NOTE : also executes the above method because the patients created above are also required for this use case. Give three patients initial obstetrics records.,0,0,0
comments.json_7565,Generate a list of reviews for 2 HCP 's by 3 diff patients .,0,0,0
comments.json_7566,generate the dependency of  Baby  Programmer on  Andy  Programmer,0,0,0
comments.json_7567,generate the dependency of  Baby  Programmer on  Andy  Programmer,0,0,0
comments.json_7568,Generates extra hcps with specialty of nutritionist,0,0,0
comments.json_7569,Inserts some food entries for  Random  Person into the system .,0,0,0
comments.json_7570,Inserts some sleep entries for  Random  Person into the system .,0,0,0
comments.json_7571,Inserts a fitness  HCP ( Duyu  Ivanlyft ) and some exercise entries for Random Person into the system.,0,0,0
comments.json_7572,Inserts a optometrist Visit into the system,0,0,0
comments.json_7573,Do we have zipcodes ?,0,0,0
comments.json_7574,This test is intended to test the logic of the conversion java .util . Date to the java .sql . Date,0,1,1
comments.json_7575,Along with the intent of "years ago ".,0,0,0
comments.json_7576,This test no longer tests the arithmetic of adding /subtracting years   we assume  Java got that right,0,1,1
comments.json_7577,Make sure that the actual database can be rebuilt,0,1,1
comments.json_7578,This is run twice so that we check the "drop tables " script,0,0,0
comments.json_7579,Drops and rebuilds the entire database . Also provides some utility methods . DO  NOT  PUT  TEST  DATA  HERE !!!,0,0,0
comments.json_7580,Note : this test can be deleted once you switch to a "real " email util,0,0,0
comments.json_7581,test add if not null,0,1,1
comments.json_7582,test iterator too,0,1,1
comments.json_7583,exception is good .,0,0,0
comments.json_7584,exception is good .,0,0,0
comments.json_7585,exception is good,0,0,0
comments.json_7586,exception is good,0,0,0
comments.json_7587,May not make sense here   but this shows what the method does .,0,0,0
comments.json_7588,Smoking Factor Test,0,0,0
comments.json_7589,test Has History,0,1,1
comments.json_7590,test Has No History,0,1,1
comments.json_7591,test DB Exception,0,1,1
comments.json_7592,Rationale : can 't say they have the risk factor if the info is missing,0,0,0
comments.json_7593,Note : patient 2 does  NOT qualify for the disease   see the next test,0,0,0
comments.json_7595,This class uses an advanced concept not taught in  CSC 326 at  NCSU called  Mock  Objects .,0,0,0
comments.json_7596,Feel free to take a look at how this works   but know that you will not need to know mock objects,0,0,0
comments.json_7597,to do nearly everything in i Trust . Unless your assignment mentions mock objects somewhere   you should,0,0,0
comments.json_7598,not need them .,0,0,0
comments.json_7600,But   if you are interested in a cool unit testing concept   feel free to look at this code as an,0,0,0
comments.json_7601,example .,0,0,0
comments.json_7603,This class uses the  Easy Mock library to manage the mock objects . http ://easymock .org /,0,0,0
comments.json_7604,we 're okay with any strings written here - normally you want to be more specific,0,0,0
comments.json_7605,we 're okay with any strings written here - normally you want to be more specific,0,0,0
comments.json_7606,we 're okay with any strings written here - normally you want to be more specific,0,0,0
comments.json_7607,we 're okay with any strings written here - normally you want to be more specific,0,0,0
comments.json_7608,we 're okay with any strings written here - normally you want to be more specific,0,0,0
comments.json_7609,we 're okay with any strings written here - normally you want to be more specific,0,0,0
comments.json_7610,Method to establish mock objects   database tables   and establish mock settings,0,0,0
comments.json_7611,when (response .get Content Type ()).then Return ("text /xml ");,0,0,0
comments.json_7612,assert True (response .get Content Type ().equals ("text /xml "));,0,0,0
comments.json_7613,Servlet instance of larger servlet class for testing purposes,0,0,0
comments.json_7615,This class uses an advanced concept not taught in  CSC 326 at  NCSU called  Mock  Objects .,0,0,0
comments.json_7616,Feel free to take a look at how this works   but know that you will not need to know mock objects,0,0,0
comments.json_7617,to do nearly everything in i Trust . Unless your assignment mentions mock objects somewhere   you should,0,0,0
comments.json_7618,not need them .,0,0,0
comments.json_7620,But   if you are interested in a cool unit testing concept   feel free to look at this code as an,0,0,0
comments.json_7621,example .,0,0,0
comments.json_7623,This class uses the  Easy Mock library to manage the mock objects . http ://easymock .org /,0,0,0
comments.json_7625,Method to establish mock objects   database tables   and establish mock settings,0,0,0
comments.json_7626,test Records Release Post,0,1,1
comments.json_7627,test Records Release Post Fail,0,1,1
comments.json_7628,Servlet instance of larger servlet class for testing purposes,0,0,0
comments.json_7629,This uses a rudimentary mock object system - where we create these objects that are,0,0,0
comments.json_7630,essentially stubs   except for keeping track of info passed to them .,0,0,0
comments.json_7632,This class is used to create some of the basic mock objects for i Trust . This keeps one control for all unit tests  then resets it for each usage. To use this class: <ol> <li>Extend this class instead of TestCase</li> <li>Run initMocks in the setUp method</li> <li>Use the mock objects as you wish. You don't need to worry about factory.getDAO-type methods - those are set up to be expected a call any number of times</li> </ol> By default  control is set up to a "nice" control. Yes  everything in this class is protected static - which is not typically desirable. However  this is a special test utility that takes advantage of re-using mocks. Mock objects are created once and then reset every time initMocks is used. This has a HUGE performance advantage as creating all of these new Mocks takes 500ms  but resetting them takes 5ms.   Meneely,0,0,0
comments.json_7633,To make the coverage work ...,0,0,0
comments.json_7634,This class is an "evil " (or  Diabolical ) test connection driver that will not give you a connection   but instead will throw a special SQLException every time. Unit tests need to test this catch block and assert the SQLException message. <br /> <br /> It's implemented as a singleton to make unit tests easier (just a pointer comparison),0,0,0
comments.json_7635,Here 's how this behavior works : you can set  Evil DAO Factory to count down to 0  giving correct,0,0,0
comments.json_7636,connections the whole way . Then   when you want it to   it starts throwing exceptions,0,0,0
comments.json_7637,Empty class isn 't used at all - this is just used as a test hook into testing  Bean Validator .,0,0,0
comments.json_7638,This class pulls the  JDBC driver information from  Tomcat 's context .xml file in WebRoot/META-INF/context.xml. This is done only for convenience - so that you only have to pull your JDBC info from one place (context.xml)<br /> <br /> The tangled mess you see here is SAX  the XML-parser and XPath  an XML querying language. Note that this class is only ever constructed once since DAOFactory only constructs up to 2 instances of itself.<br /> <br /> Also  you'll notice that we're using a "BasicDataSource" to obtain connections instead of the usual DriverManager. That's because we're using Tomcat's built-in database pooling mechanism. It's purely for performance in this case.,0,0,0
comments.json_7639,Test office visit validator,0,1,1
comments.json_7640,test errors made on patients,0,1,1
comments.json_7641,good,0,0,0
comments.json_7642,good,0,0,0
comments.json_7643,good,0,0,0
comments.json_7644,good,0,0,0
comments.json_7645,good,0,0,0
comments.json_7646,good,0,0,0
comments.json_7647,Lab Procedure Validator Test,0,0,0
comments.json_7648,test Lab Procedure All Correct,0,1,1
comments.json_7649,test Lab Procedure All Errors,0,1,1
comments.json_7650,test Valid Numerical Results,0,1,1
comments.json_7651,test Invalid Numerical Results,0,1,1
comments.json_7652,do nothing   we made it,0,0,0
comments.json_7653,Won 't happen,0,0,0
comments.json_7654,do nothing   we made it,0,0,0
comments.json_7655,do nothing   we made it,0,0,0
comments.json_7656,do nothing   we made it,0,0,0
comments.json_7657,Notice that no cylinder is given,0,0,0
comments.json_7658,Notice that no axis is given,0,0,0
comments.json_7659,do nothing   this bean is supposed to be invalid,0,0,0
comments.json_7660,do nothing   this bean should fail,0,0,0
comments.json_7661,do nothing   we made it,0,0,0
comments.json_7662,Notice that no cylinder is given,0,0,0
comments.json_7663,Notice that no axis is given,0,0,0
comments.json_7664,do nothing   this bean is supposed to be invalid,0,0,0
comments.json_7665,do nothing   this bean should fail,0,0,0
comments.json_7666,Initialize a bean to valid values .,0,0,0
comments.json_7667,Ensure the bean used throughout this test case really is valid .,0,1,1
comments.json_7668,passed .,0,0,0
comments.json_7669,passed .,0,0,0
comments.json_7670,passed .,0,0,0
comments.json_7671,passed .,0,0,0
comments.json_7672,passed .,0,0,0
comments.json_7673,passed .,0,0,0
comments.json_7674,passed .,0,0,0
comments.json_7675,passed .,0,0,0
comments.json_7676,passed .,0,0,0
comments.json_7677,passed .,0,0,0
comments.json_7678,passed .,0,0,0
comments.json_7679,passed .,0,0,0
comments.json_7680,Patient Validator Test,0,0,0
comments.json_7681,test Patient All Correct,0,1,1
comments.json_7682,test Patient All Errors,0,1,1
comments.json_7683,test Future Birth Error,0,1,1
comments.json_7684,test Cause Of Death Validation,0,1,1
comments.json_7685,J Unit test for bug #2 on the bug list,0,1,1
comments.json_7686,test Patient Topical Note With Q Uotation Mark,0,1,1
comments.json_7687,Test for threat model - Last name too long .,0,1,1
comments.json_7688,test Patient With Long Last Name,0,1,1
comments.json_7689,test Patient With Valid Card Numbers,0,1,1
comments.json_7690,test Patient With Bad Card Numbers,0,1,1
comments.json_7691,TODO,0,0,0
comments.json_7692,TODO,0,0,0
comments.json_7693,TODO,0,0,0
comments.json_7694,TODO,0,0,0
comments.json_7695,test MF With Personnel MID,0,1,1
comments.json_7696,good,0,0,0
comments.json_7697,good,0,0,0
comments.json_7698,good,0,0,0
comments.json_7699,good,0,0,0
comments.json_7700,good,0,0,0
comments.json_7701,good,0,0,0
comments.json_7702,good,0,0,0
comments.json_7703,Initialize a bean to valid values .,0,0,0
comments.json_7704,Ensure the bean used throughout this test case really is valid .,0,1,1
comments.json_7705,a -z A - Z 0-9\s '\'?!:;\-. _ ()\\/,0,0,0
comments.json_7706,passed .,0,0,0
comments.json_7707,passed .,0,0,0
comments.json_7708,passed .,0,0,0
comments.json_7709,passed .,0,0,0
comments.json_7710,Test method to see if colon is accepted in notes .,0,1,1
comments.json_7711,Now legal according to http ://tools .ietf .org /html /rfc 2822,0,0,0
comments.json_7712,This is now legal should validate see above link,0,1,1
comments.json_7713,Hospital Name Validator,0,0,0
comments.json_7714,test Hospital Name Good,0,1,1
comments.json_7715,test Hospital Name Too Long,0,1,1
comments.json_7716,test Hospital Name Bad Chars,0,1,1
comments.json_7717,test Hospital Name Too Short,0,1,1
comments.json_7718,Notes Validator Test,0,1,1
comments.json_7719,test Notes Good,0,1,1
comments.json_7720,test Notes Too Long,0,1,1
comments.json_7721,Xml Generator Test,0,1,1
comments.json_7722,test Xml Empty,0,1,1
comments.json_7723,testtwo Patient,0,1,1
comments.json_7724,set up test headers,0,0,0
comments.json_7725,set up test patient,0,0,0